

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Sat Sep 28 23:17:00 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F45K50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    25                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    26                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    27   000000                     
    28                           ; Generated 12/10/2023 GMT
    29                           ; 
    30                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution. Publication is not required when
    44                           ;        this file is used in an embedded application.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC18F45K50 Definitions
    60                           ; 
    61                           ; SFR Addresses
    62   000000                     _RCREG	set	4014
    63   000000                     _TXREG1	set	4013
    64   000000                     _SPBRG	set	4015
    65   000000                     _SPBRGH	set	4016
    66   000000                     _BRG161	set	32195
    67   000000                     _RCREG1	set	4014
    68   000000                     _TXSTAbits	set	4012
    69   000000                     _RCSTAbits	set	4011
    70   000000                     _BAUDCON1bits	set	4024
    71   000000                     _TXSTA1bits	set	4012
    72   000000                     _TRMT	set	32097
    73   000000                     _TRISC7	set	31911
    74   000000                     _CREN	set	32092
    75   000000                     _TXEN1	set	32101
    76   000000                     _BRGH1	set	32098
    77   000000                     _TRISC6	set	31910
    78   000000                     _SPEN	set	32095
    79   000000                     _SYNC1	set	32100
    80   000000                     _OSCCON2bits	set	4050
    81   000000                     _OSCTUNEbits	set	3995
    82   000000                     _RC1IF	set	31989
    83   000000                     _OSCCONbits	set	4051
    84                           
    85                           	psect	smallconst
    86   000800                     __psmallconst:
    87                           	callstack 0
    88   000800  00                 	db	0
    89   000801                     STR_22:
    90   000801  45                 	db	69	;'E'
    91   000802  52                 	db	82	;'R'
    92   000803  52                 	db	82	;'R'
    93   000804  4F                 	db	79	;'O'
    94   000805  52                 	db	82	;'R'
    95   000806  5F                 	db	95	;'_'
    96   000807  43                 	db	67	;'C'
    97   000808  4F                 	db	79	;'O'
    98   000809  44                 	db	68	;'D'
    99   00080A  45                 	db	69	;'E'
   100   00080B  5F                 	db	95	;'_'
   101   00080C  55                 	db	85	;'U'
   102   00080D  41                 	db	65	;'A'
   103   00080E  52                 	db	82	;'R'
   104   00080F  54                 	db	84	;'T'
   105   000810  5F                 	db	95	;'_'
   106   000811  43                 	db	67	;'C'
   107   000812  4F                 	db	79	;'O'
   108   000813  4E                 	db	78	;'N'
   109   000814  46                 	db	70	;'F'
   110   000815  49                 	db	73	;'I'
   111   000816  47                 	db	71	;'G'
   112   000817  20                 	db	32
   113   000818  0D                 	db	13
   114   000819  0A                 	db	10
   115   00081A  00                 	db	0
   116   00081B                     STR_20:
   117   00081B  45                 	db	69	;'E'
   118   00081C  52                 	db	82	;'R'
   119   00081D  52                 	db	82	;'R'
   120   00081E  4F                 	db	79	;'O'
   121   00081F  52                 	db	82	;'R'
   122   000820  5F                 	db	95	;'_'
   123   000821  43                 	db	67	;'C'
   124   000822  4F                 	db	79	;'O'
   125   000823  44                 	db	68	;'D'
   126   000824  45                 	db	69	;'E'
   127   000825  5F                 	db	95	;'_'
   128   000826  55                 	db	85	;'U'
   129   000827  41                 	db	65	;'A'
   130   000828  52                 	db	82	;'R'
   131   000829  54                 	db	84	;'T'
   132   00082A  5F                 	db	95	;'_'
   133   00082B  4F                 	db	79	;'O'
   134   00082C  56                 	db	86	;'V'
   135   00082D  45                 	db	69	;'E'
   136   00082E  52                 	db	82	;'R'
   137   00082F  46                 	db	70	;'F'
   138   000830  4C                 	db	76	;'L'
   139   000831  4F                 	db	79	;'O'
   140   000832  57                 	db	87	;'W'
   141   000833  00                 	db	0
   142   000834                     STR_21:
   143   000834  45                 	db	69	;'E'
   144   000835  52                 	db	82	;'R'
   145   000836  52                 	db	82	;'R'
   146   000837  4F                 	db	79	;'O'
   147   000838  52                 	db	82	;'R'
   148   000839  5F                 	db	95	;'_'
   149   00083A  43                 	db	67	;'C'
   150   00083B  4F                 	db	79	;'O'
   151   00083C  44                 	db	68	;'D'
   152   00083D  45                 	db	69	;'E'
   153   00083E  5F                 	db	95	;'_'
   154   00083F  55                 	db	85	;'U'
   155   000840  41                 	db	65	;'A'
   156   000841  52                 	db	82	;'R'
   157   000842  54                 	db	84	;'T'
   158   000843  5F                 	db	95	;'_'
   159   000844  46                 	db	70	;'F'
   160   000845  52                 	db	82	;'R'
   161   000846  41                 	db	65	;'A'
   162   000847  4D                 	db	77	;'M'
   163   000848  49                 	db	73	;'I'
   164   000849  4E                 	db	78	;'N'
   165   00084A  47                 	db	71	;'G'
   166   00084B  00                 	db	0
   167   00084C                     STR_5:
   168   00084C  62                 	db	98	;'b'
   169   00084D  61                 	db	97	;'a'
   170   00084E  6A                 	db	106	;'j'
   171   00084F  61                 	db	97	;'a'
   172   000850  20                 	db	32
   173   000851  76                 	db	118	;'v'
   174   000852  65                 	db	101	;'e'
   175   000853  6C                 	db	108	;'l'
   176   000854  6F                 	db	111	;'o'
   177   000855  63                 	db	99	;'c'
   178   000856  69                 	db	105	;'i'
   179   000857  64                 	db	100	;'d'
   180   000858  61                 	db	97	;'a'
   181   000859  64                 	db	100	;'d'
   182   00085A  20                 	db	32
   183   00085B  0D                 	db	13
   184   00085C  0A                 	db	10
   185   00085D  00                 	db	0
   186   00085E                     STR_4:
   187   00085E  61                 	db	97	;'a'
   188   00085F  6C                 	db	108	;'l'
   189   000860  74                 	db	116	;'t'
   190   000861  61                 	db	97	;'a'
   191   000862  20                 	db	32
   192   000863  76                 	db	118	;'v'
   193   000864  65                 	db	101	;'e'
   194   000865  6C                 	db	108	;'l'
   195   000866  6F                 	db	111	;'o'
   196   000867  63                 	db	99	;'c'
   197   000868  69                 	db	105	;'i'
   198   000869  64                 	db	100	;'d'
   199   00086A  61                 	db	97	;'a'
   200   00086B  64                 	db	100	;'d'
   201   00086C  20                 	db	32
   202   00086D  0D                 	db	13
   203   00086E  0A                 	db	10
   204   00086F  00                 	db	0
   205   000870                     STR_12:
   206   000870  44                 	db	68	;'D'
   207   000871  65                 	db	101	;'e'
   208   000872  73                 	db	115	;'s'
   209   000873  68                 	db	104	;'h'
   210   000874  61                 	db	97	;'a'
   211   000875  62                 	db	98	;'b'
   212   000876  69                 	db	105	;'i'
   213   000877  6C                 	db	108	;'l'
   214   000878  69                 	db	105	;'i'
   215   000879  74                 	db	116	;'t'
   216   00087A  61                 	db	97	;'a'
   217   00087B  64                 	db	100	;'d'
   218   00087C  6F                 	db	111	;'o'
   219   00087D  20                 	db	32
   220   00087E  0D                 	db	13
   221   00087F  0A                 	db	10
   222   000880  00                 	db	0
   223   000881                     STR_11:
   224   000881  48                 	db	72	;'H'
   225   000882  61                 	db	97	;'a'
   226   000883  62                 	db	98	;'b'
   227   000884  69                 	db	105	;'i'
   228   000885  6C                 	db	108	;'l'
   229   000886  69                 	db	105	;'i'
   230   000887  74                 	db	116	;'t'
   231   000888  61                 	db	97	;'a'
   232   000889  64                 	db	100	;'d'
   233   00088A  6F                 	db	111	;'o'
   234   00088B  20                 	db	32
   235   00088C  0D                 	db	13
   236   00088D  0A                 	db	10
   237   00088E  00                 	db	0
   238   00088F                     STR_9:
   239   00088F  78                 	db	120	;'x'
   240   000890  20                 	db	32
   241   000891  62                 	db	98	;'b'
   242   000892  61                 	db	97	;'a'
   243   000893  75                 	db	117	;'u'
   244   000894  64                 	db	100	;'d'
   245   000895  69                 	db	105	;'i'
   246   000896  6F                 	db	111	;'o'
   247   000897  73                 	db	115	;'s'
   248   000898  20                 	db	32
   249   000899  0D                 	db	13
   250   00089A  0A                 	db	10
   251   00089B  00                 	db	0
   252   00089C                     STR_6:
   253   00089C  42                 	db	66	;'B'
   254   00089D  61                 	db	97	;'a'
   255   00089E  75                 	db	117	;'u'
   256   00089F  64                 	db	100	;'d'
   257   0008A0  72                 	db	114	;'r'
   258   0008A1  61                 	db	97	;'a'
   259   0008A2  74                 	db	116	;'t'
   260   0008A3  65                 	db	101	;'e'
   261   0008A4  3A                 	db	58	;':'
   262   0008A5  20                 	db	32
   263   0008A6  00                 	db	0
   264   0008A7                     STR_16:
   265   0008A7  52                 	db	82	;'R'
   266   0008A8  65                 	db	101	;'e'
   267   0008A9  63                 	db	99	;'c'
   268   0008AA  65                 	db	101	;'e'
   269   0008AB  70                 	db	112	;'p'
   270   0008AC  74                 	db	116	;'t'
   271   0008AD  6F                 	db	111	;'o'
   272   0008AE  72                 	db	114	;'r'
   273   0008AF  3A                 	db	58	;':'
   274   0008B0  20                 	db	32
   275   0008B1  00                 	db	0
   276   0008B2                     STR_3:
   277   0008B2  41                 	db	65	;'A'
   278   0008B3  73                 	db	115	;'s'
   279   0008B4  69                 	db	105	;'i'
   280   0008B5  6E                 	db	110	;'n'
   281   0008B6  63                 	db	99	;'c'
   282   0008B7  72                 	db	114	;'r'
   283   0008B8  6F                 	db	111	;'o'
   284   0008B9  6E                 	db	110	;'n'
   285   0008BA  6F                 	db	111	;'o'
   286   0008BB  20                 	db	32
   287   0008BC  00                 	db	0
   288   0008BD                     STR_13:
   289   0008BD  54                 	db	84	;'T'
   290   0008BE  72                 	db	114	;'r'
   291   0008BF  61                 	db	97	;'a'
   292   0008C0  6E                 	db	110	;'n'
   293   0008C1  73                 	db	115	;'s'
   294   0008C2  6F                 	db	111	;'o'
   295   0008C3  72                 	db	114	;'r'
   296   0008C4  3A                 	db	58	;':'
   297   0008C5  20                 	db	32
   298   0008C6  00                 	db	0
   299   0008C7                     STR_2:
   300   0008C7  53                 	db	83	;'S'
   301   0008C8  69                 	db	105	;'i'
   302   0008C9  6E                 	db	110	;'n'
   303   0008CA  63                 	db	99	;'c'
   304   0008CB  72                 	db	114	;'r'
   305   0008CC  6F                 	db	111	;'o'
   306   0008CD  6E                 	db	110	;'n'
   307   0008CE  6F                 	db	111	;'o'
   308   0008CF  20                 	db	32
   309   0008D0  00                 	db	0
   310   0008D1                     STR_10:
   311   0008D1  50                 	db	80	;'P'
   312   0008D2  75                 	db	117	;'u'
   313   0008D3  65                 	db	101	;'e'
   314   0008D4  72                 	db	114	;'r'
   315   0008D5  74                 	db	116	;'t'
   316   0008D6  6F                 	db	111	;'o'
   317   0008D7  3A                 	db	58	;':'
   318   0008D8  20                 	db	32
   319   0008D9  00                 	db	0
   320   0008DA                     STR_7:
   321   0008DA  31                 	db	49	;'1'
   322   0008DB  36                 	db	54	;'6'
   323   0008DC  20                 	db	32
   324   0008DD  62                 	db	98	;'b'
   325   0008DE  69                 	db	105	;'i'
   326   0008DF  74                 	db	116	;'t'
   327   0008E0  73                 	db	115	;'s'
   328   0008E1  20                 	db	32
   329   0008E2  00                 	db	0
   330   0008E3                     STR_19:
   331   0008E3  45                 	db	69	;'E'
   332   0008E4  72                 	db	114	;'r'
   333   0008E5  72                 	db	114	;'r'
   334   0008E6  6F                 	db	111	;'o'
   335   0008E7  72                 	db	114	;'r'
   336   0008E8  3A                 	db	58	;':'
   337   0008E9  20                 	db	32
   338   0008EA  00                 	db	0
   339   0008EB                     STR_8:
   340   0008EB  38                 	db	56	;'8'
   341   0008EC  20                 	db	32
   342   0008ED  62                 	db	98	;'b'
   343   0008EE  69                 	db	105	;'i'
   344   0008EF  74                 	db	116	;'t'
   345   0008F0  73                 	db	115	;'s'
   346   0008F1  20                 	db	32
   347   0008F2  00                 	db	0
   348   0008F3                     STR_1:
   349   0008F3  4D                 	db	77	;'M'
   350   0008F4  6F                 	db	111	;'o'
   351   0008F5  64                 	db	100	;'d'
   352   0008F6  6F                 	db	111	;'o'
   353   0008F7  3A                 	db	58	;':'
   354   0008F8  20                 	db	32
   355   0008F9  00                 	db	0
   356   0008FA  00                 	db	0	; dummy byte at the end
   357   000000                     
   358                           ; #config settings
   359                           
   360                           	psect	cinit
   361   001002                     __pcinit:
   362                           	callstack 0
   363   001002                     start_initialization:
   364                           	callstack 0
   365   001002                     __initialization:
   366                           	callstack 0
   367                           
   368                           ; Clear objects allocated to COMRAM (37 bytes)
   369   001002  EE00  F001         	lfsr	0,__pbssCOMRAM
   370   001006  0E25               	movlw	37
   371   001008                     clear_0:
   372   001008  6AEE               	clrf	postinc0,c
   373   00100A  06E8               	decf	wreg,f,c
   374   00100C  E1FD               	bnz	clear_0
   375   00100E                     end_of_initialization:
   376                           	callstack 0
   377   00100E                     __end_of__initialization:
   378                           	callstack 0
   379   00100E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   380   001010  6EF8               	movwf	tblptru,c
   381   001012  0100               	movlb	0
   382   001014  EF81  F007         	goto	_main	;jump to C main() function
   383                           
   384                           	psect	bssCOMRAM
   385   000001                     __pbssCOMRAM:
   386                           	callstack 0
   387   000001                     	ds	32
   388   000021                     _width:
   389                           	callstack 0
   390   000021                     	ds	2
   391   000023                     _prec:
   392                           	callstack 0
   393   000023                     	ds	2
   394   000025                     _flags:
   395                           	callstack 0
   396   000025                     	ds	1
   397                           
   398                           	psect	cstackCOMRAM
   399   000026                     __pcstackCOMRAM:
   400                           	callstack 0
   401   000026                     UART_Tx@dato:
   402                           	callstack 0
   403   000026                     Clock_Init@s16Timeout:
   404                           	callstack 0
   405   000026                     UART_select_baud@baudrate:
   406                           	callstack 0
   407                           
   408                           ; 4 bytes @ 0x0
   409   000026                     	ds	1
   410   000027                     putch@data:
   411                           	callstack 0
   412                           
   413                           ; 1 bytes @ 0x1
   414   000027                     	ds	1
   415   000028                     Clock_Init@bStatus:
   416                           	callstack 0
   417   000028                     fputc@c:
   418                           	callstack 0
   419                           
   420                           ; 2 bytes @ 0x2
   421   000028                     	ds	1
   422   000029                     Clock_Init@bStatus_548:
   423                           	callstack 0
   424                           
   425                           ; 1 bytes @ 0x3
   426   000029                     	ds	1
   427   00002A                     ??_UART_select_baud:
   428   00002A                     Clock_Init@bStatus_549:
   429                           	callstack 0
   430   00002A                     fputc@fp:
   431                           	callstack 0
   432                           
   433                           ; 2 bytes @ 0x4
   434   00002A                     	ds	1
   435   00002B                     Clock_Init@bStatus_552:
   436                           	callstack 0
   437                           
   438                           ; 1 bytes @ 0x5
   439   00002B                     	ds	1
   440   00002C                     ??_fputc:
   441   00002C                     Clock_Init@bItTimeEn:
   442                           	callstack 0
   443                           
   444                           ; 1 bytes @ 0x6
   445   00002C                     	ds	1
   446   00002D                     Clock_Init@returnCode:
   447                           	callstack 0
   448                           
   449                           ; 1 bytes @ 0x7
   450   00002D                     	ds	4
   451   000031                     vfpfcnvrt@fp:
   452                           	callstack 0
   453                           
   454                           ; 2 bytes @ 0xB
   455   000031                     	ds	2
   456   000033                     vfpfcnvrt@fmt:
   457                           	callstack 0
   458                           
   459                           ; 1 bytes @ 0xD
   460   000033                     	ds	1
   461   000034                     vfpfcnvrt@ap:
   462                           	callstack 0
   463                           
   464                           ; 1 bytes @ 0xE
   465   000034                     	ds	1
   466   000035                     ?_vfprintf:
   467                           	callstack 0
   468   000035                     vfprintf@fp:
   469                           	callstack 0
   470                           
   471                           ; 2 bytes @ 0xF
   472   000035                     	ds	2
   473   000037                     vfprintf@fmt:
   474                           	callstack 0
   475                           
   476                           ; 1 bytes @ 0x11
   477   000037                     	ds	1
   478   000038                     vfprintf@ap:
   479                           	callstack 0
   480                           
   481                           ; 1 bytes @ 0x12
   482   000038                     	ds	1
   483   000039                     vfprintf@cfmt:
   484                           	callstack 0
   485                           
   486                           ; 1 bytes @ 0x13
   487   000039                     	ds	1
   488   00003A                     ?_printf:
   489                           	callstack 0
   490   00003A                     printf@fmt:
   491                           	callstack 0
   492                           
   493                           ; 1 bytes @ 0x14
   494   00003A                     	ds	1
   495   00003B                     printf@ap:
   496                           	callstack 0
   497                           
   498                           ; 1 bytes @ 0x15
   499   00003B                     	ds	1
   500   00003C                     ??_UART_ErrorHandler:
   501   00003C                     UART_Init@baudrate:
   502                           	callstack 0
   503                           
   504                           ; 4 bytes @ 0x16
   505   00003C                     	ds	2
   506   00003E                     UART_ErrorHandler@errorCode:
   507                           	callstack 0
   508                           
   509                           ; 1 bytes @ 0x18
   510   00003E                     	ds	1
   511   00003F                     
   512                           ; 1 bytes @ 0x19
   513   00003F                     	ds	1
   514   000040                     main@x:
   515                           	callstack 0
   516                           
   517                           ; 1 bytes @ 0x1A
   518   000040                     	ds	1
   519                           
   520 ;;
   521 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   522 ;;
   523 ;; *************** function _main *****************
   524 ;; Defined at:
   525 ;;		line 14 in file "main.c"
   526 ;; Parameters:    Size  Location     Type
   527 ;;		None
   528 ;; Auto vars:     Size  Location     Type
   529 ;;  x               1   26[COMRAM] unsigned char 
   530 ;; Return value:  Size  Location     Type
   531 ;;                  1    wreg      void 
   532 ;; Registers used:
   533 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   534 ;; Tracked objects:
   535 ;;		On entry : 0/0
   536 ;;		On exit  : 0/0
   537 ;;		Unchanged: 0/0
   538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK4   BANK5   BANK6   BANK3   BANK7
   539 ;;      Params:         0       0       0       0       0       0       0       0       0
   540 ;;      Locals:         1       0       0       0       0       0       0       0       0
   541 ;;      Temps:          0       0       0       0       0       0       0       0       0
   542 ;;      Totals:         1       0       0       0       0       0       0       0       0
   543 ;;Total ram usage:        1 bytes
   544 ;; Hardware stack levels required when called: 8
   545 ;; This function calls:
   546 ;;		_Clock_Init
   547 ;;		_UART_Init
   548 ;;		_UART_Rx
   549 ;;		_UART_Tx
   550 ;; This function is called by:
   551 ;;		Startup code after reset
   552 ;; This function uses a non-reentrant model
   553 ;;
   554                           
   555                           	psect	text0
   556   000F02                     __ptext0:
   557                           	callstack 0
   558   000F02                     _main:
   559                           	callstack 23
   560   000F02                     
   561                           ;main.c: 15:     Clock_Init(16000);
   562   000F02  0E3E               	movlw	62
   563   000F04  6E27               	movwf	(Clock_Init@s16Timeout+1)^0,c
   564   000F06  0E80               	movlw	128
   565   000F08  6E26               	movwf	Clock_Init@s16Timeout^0,c
   566   000F0A  EC7E  F004         	call	_Clock_Init	;wreg free
   567   000F0E                     
   568                           ;main.c: 16:     UART_Init(9600);
   569   000F0E  0E80               	movlw	128
   570   000F10  6E3C               	movwf	UART_Init@baudrate^0,c
   571   000F12  0E25               	movlw	37
   572   000F14  6E3D               	movwf	(UART_Init@baudrate+1)^0,c
   573   000F16  0E00               	movlw	0
   574   000F18  6E3E               	movwf	(UART_Init@baudrate+2)^0,c
   575   000F1A  0E00               	movlw	0
   576   000F1C  6E3F               	movwf	(UART_Init@baudrate+3)^0,c
   577   000F1E  ECC4  F007         	call	_UART_Init	;wreg free
   578   000F22                     l1532:
   579                           
   580                           ;main.c: 18:         char x = UART_Rx();
   581   000F22  EC17  F008         	call	_UART_Rx	;wreg free
   582   000F26  6E40               	movwf	main@x^0,c
   583   000F28                     
   584                           ;main.c: 19:         if(x){
   585   000F28  5040               	movf	main@x^0,w,c
   586   000F2A  B4D8               	btfsc	status,2,c
   587   000F2C  EF9A  F007         	goto	u851
   588   000F30  EF9C  F007         	goto	u850
   589   000F34                     u851:
   590   000F34  EF91  F007         	goto	l1532
   591   000F38                     u850:
   592   000F38                     
   593                           ;main.c: 20:             UART_Tx(x);
   594   000F38  5040               	movf	main@x^0,w,c
   595   000F3A  EC0C  F008         	call	_UART_Tx
   596   000F3E  EF91  F007         	goto	l1532
   597   000F42  EF01  F000         	goto	start
   598   000F46                     __end_of_main:
   599                           	callstack 0
   600                           
   601 ;; *************** function _UART_Rx *****************
   602 ;; Defined at:
   603 ;;		line 96 in file "librerias/UART.c"
   604 ;; Parameters:    Size  Location     Type
   605 ;;		None
   606 ;; Auto vars:     Size  Location     Type
   607 ;;		None
   608 ;; Return value:  Size  Location     Type
   609 ;;                  1    wreg      unsigned char 
   610 ;; Registers used:
   611 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   612 ;; Tracked objects:
   613 ;;		On entry : 0/0
   614 ;;		On exit  : 0/0
   615 ;;		Unchanged: 0/0
   616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK4   BANK5   BANK6   BANK3   BANK7
   617 ;;      Params:         0       0       0       0       0       0       0       0       0
   618 ;;      Locals:         0       0       0       0       0       0       0       0       0
   619 ;;      Temps:          0       0       0       0       0       0       0       0       0
   620 ;;      Totals:         0       0       0       0       0       0       0       0       0
   621 ;;Total ram usage:        0 bytes
   622 ;; Hardware stack levels used: 1
   623 ;; Hardware stack levels required when called: 7
   624 ;; This function calls:
   625 ;;		_UART_ErrorHandler
   626 ;;		_UART_Rx_FRAMING
   627 ;;		_UART_Rx_OVERFLOW
   628 ;; This function is called by:
   629 ;;		_main
   630 ;; This function uses a non-reentrant model
   631 ;;
   632                           
   633                           	psect	text1
   634   00102E                     __ptext1:
   635                           	callstack 0
   636   00102E                     _UART_Rx:
   637                           	callstack 23
   638   00102E                     
   639                           ;librerias/UART.c: 97:     UART_ErrorHandler(UART_Rx_OVERFLOW());
   640   00102E  ECD9  F007         	call	_UART_Rx_OVERFLOW	;wreg free
   641   001032  EC0D  F007         	call	_UART_ErrorHandler
   642                           
   643                           ;librerias/UART.c: 98:     UART_ErrorHandler(UART_Rx_FRAMING());
   644   001036  ECE7  F007         	call	_UART_Rx_FRAMING	;wreg free
   645   00103A  EC0D  F007         	call	_UART_ErrorHandler
   646   00103E                     
   647                           ;librerias/UART.c: 99:     return RCREG1;
   648   00103E  50AE               	movf	174,w,c	;volatile
   649   001040  0012               	return		;funcret
   650   001042                     __end_of_UART_Rx:
   651                           	callstack 0
   652                           
   653 ;; *************** function _UART_Rx_OVERFLOW *****************
   654 ;; Defined at:
   655 ;;		line 79 in file "librerias/UART.c"
   656 ;; Parameters:    Size  Location     Type
   657 ;;		None
   658 ;; Auto vars:     Size  Location     Type
   659 ;;		None
   660 ;; Return value:  Size  Location     Type
   661 ;;                  1    wreg      enum E5188
   662 ;; Registers used:
   663 ;;		wreg
   664 ;; Tracked objects:
   665 ;;		On entry : 0/0
   666 ;;		On exit  : 0/0
   667 ;;		Unchanged: 0/0
   668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK4   BANK5   BANK6   BANK3   BANK7
   669 ;;      Params:         0       0       0       0       0       0       0       0       0
   670 ;;      Locals:         0       0       0       0       0       0       0       0       0
   671 ;;      Temps:          0       0       0       0       0       0       0       0       0
   672 ;;      Totals:         0       0       0       0       0       0       0       0       0
   673 ;;Total ram usage:        0 bytes
   674 ;; Hardware stack levels used: 1
   675 ;; This function calls:
   676 ;;		Nothing
   677 ;; This function is called by:
   678 ;;		_UART_Rx
   679 ;; This function uses a non-reentrant model
   680 ;;
   681                           
   682                           	psect	text2
   683   000FB2                     __ptext2:
   684                           	callstack 0
   685   000FB2                     _UART_Rx_OVERFLOW:
   686                           	callstack 29
   687   000FB2                     
   688                           ;librerias/UART.c: 80:     if (RCSTAbits.OERR) {
   689   000FB2  A2AB               	btfss	171,1,c	;volatile
   690   000FB4  EFDE  F007         	goto	u141
   691   000FB8  EFE0  F007         	goto	u140
   692   000FBC                     u141:
   693   000FBC  EFE5  F007         	goto	l1070
   694   000FC0                     u140:
   695   000FC0                     
   696                           ;librerias/UART.c: 81:         RCSTAbits.CREN = 0;
   697   000FC0  98AB               	bcf	171,4,c	;volatile
   698                           
   699                           ;librerias/UART.c: 82:         RCSTAbits.CREN = 1;
   700   000FC2  88AB               	bsf	171,4,c	;volatile
   701   000FC4                     
   702                           ;librerias/UART.c: 83:         return ERROR_CODE_UART_OVERFLOW;
   703   000FC4  0E01               	movlw	1
   704   000FC6  EFE6  F007         	goto	l117
   705   000FCA                     l1070:
   706                           
   707                           ;librerias/UART.c: 85:     return ERROR_CODE_UART_OK;
   708   000FCA  0E00               	movlw	0
   709   000FCC                     l117:
   710   000FCC  0012               	return		;funcret
   711   000FCE                     __end_of_UART_Rx_OVERFLOW:
   712                           	callstack 0
   713                           
   714 ;; *************** function _UART_Rx_FRAMING *****************
   715 ;; Defined at:
   716 ;;		line 88 in file "librerias/UART.c"
   717 ;; Parameters:    Size  Location     Type
   718 ;;		None
   719 ;; Auto vars:     Size  Location     Type
   720 ;;  dummy           1    0        unsigned char 
   721 ;; Return value:  Size  Location     Type
   722 ;;                  1    wreg      enum E5188
   723 ;; Registers used:
   724 ;;		wreg
   725 ;; Tracked objects:
   726 ;;		On entry : 0/0
   727 ;;		On exit  : 0/0
   728 ;;		Unchanged: 0/0
   729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK4   BANK5   BANK6   BANK3   BANK7
   730 ;;      Params:         0       0       0       0       0       0       0       0       0
   731 ;;      Locals:         0       0       0       0       0       0       0       0       0
   732 ;;      Temps:          0       0       0       0       0       0       0       0       0
   733 ;;      Totals:         0       0       0       0       0       0       0       0       0
   734 ;;Total ram usage:        0 bytes
   735 ;; Hardware stack levels used: 1
   736 ;; This function calls:
   737 ;;		Nothing
   738 ;; This function is called by:
   739 ;;		_UART_Rx
   740 ;; This function uses a non-reentrant model
   741 ;;
   742                           
   743                           	psect	text3
   744   000FCE                     __ptext3:
   745                           	callstack 0
   746   000FCE                     _UART_Rx_FRAMING:
   747                           	callstack 29
   748   000FCE                     
   749                           ;librerias/UART.c: 89:     if (RCSTAbits.FERR) {
   750   000FCE  A4AB               	btfss	171,2,c	;volatile
   751   000FD0  EFEC  F007         	goto	u151
   752   000FD4  EFEE  F007         	goto	u150
   753   000FD8                     u151:
   754   000FD8  EFF2  F007         	goto	l1082
   755   000FDC                     u150:
   756   000FDC  50AE               	movf	174,w,c	;volatile
   757   000FDE                     
   758                           ;librerias/UART.c: 91:         return ERROR_CODE_UART_FRAMING;
   759   000FDE  0E02               	movlw	2
   760   000FE0  EFF3  F007         	goto	l121
   761   000FE4                     l1082:
   762                           
   763                           ;librerias/UART.c: 93:     return ERROR_CODE_UART_OK;
   764   000FE4  0E00               	movlw	0
   765   000FE6                     l121:
   766   000FE6  0012               	return		;funcret
   767   000FE8                     __end_of_UART_Rx_FRAMING:
   768                           	callstack 0
   769                           
   770 ;; *************** function _UART_ErrorHandler *****************
   771 ;; Defined at:
   772 ;;		line 5 in file "librerias/UART_variables.c"
   773 ;; Parameters:    Size  Location     Type
   774 ;;  errorCode       1    wreg     enum E5188
   775 ;; Auto vars:     Size  Location     Type
   776 ;;  errorCode       1   24[COMRAM] enum E5188
   777 ;; Return value:  Size  Location     Type
   778 ;;                  1    wreg      void 
   779 ;; Registers used:
   780 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   781 ;; Tracked objects:
   782 ;;		On entry : 0/0
   783 ;;		On exit  : 0/0
   784 ;;		Unchanged: 0/0
   785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK4   BANK5   BANK6   BANK3   BANK7
   786 ;;      Params:         0       0       0       0       0       0       0       0       0
   787 ;;      Locals:         1       0       0       0       0       0       0       0       0
   788 ;;      Temps:          2       0       0       0       0       0       0       0       0
   789 ;;      Totals:         3       0       0       0       0       0       0       0       0
   790 ;;Total ram usage:        3 bytes
   791 ;; Hardware stack levels used: 1
   792 ;; Hardware stack levels required when called: 6
   793 ;; This function calls:
   794 ;;		_printf
   795 ;; This function is called by:
   796 ;;		_UART_Rx
   797 ;;		_UART_Available
   798 ;; This function uses a non-reentrant model
   799 ;;
   800                           
   801                           	psect	text4
   802   000E1A                     __ptext4:
   803                           	callstack 0
   804   000E1A                     _UART_ErrorHandler:
   805                           	callstack 23
   806                           
   807                           ;incstack = 0
   808                           ;UART_ErrorHandler@errorCode stored from wreg
   809   000E1A  6E3E               	movwf	UART_ErrorHandler@errorCode^0,c
   810   000E1C                     
   811                           ;librerias/UART_variables.c: 6:     if(errorCode == ERROR_CODE_UART_OK) return;
   812   000E1C  503E               	movf	UART_ErrorHandler@errorCode^0,w,c
   813   000E1E  A4D8               	btfss	status,2,c
   814   000E20  EF14  F007         	goto	u581
   815   000E24  EF16  F007         	goto	u580
   816   000E28                     u581:
   817   000E28  EF18  F007         	goto	l1418
   818   000E2C                     u580:
   819   000E2C  EF49  F007         	goto	l171
   820   000E30                     l1418:
   821                           
   822                           ;librerias/UART_variables.c: 7:     printf("Error: ");
   823   000E30  0EE3               	movlw	low STR_19
   824   000E32  6E3A               	movwf	printf@fmt^0,c
   825   000E34  ECF4  F007         	call	_printf	;wreg free
   826                           
   827                           ;librerias/UART_variables.c: 8:     switch(errorCode){
   828   000E38  EF30  F007         	goto	l1428
   829   000E3C                     l1420:
   830                           
   831                           ;librerias/UART_variables.c: 10:             printf("ERROR_CODE_UART_OVERFLOW");
   832   000E3C  0E1B               	movlw	low STR_20
   833   000E3E  6E3A               	movwf	printf@fmt^0,c
   834   000E40  ECF4  F007         	call	_printf	;wreg free
   835                           
   836                           ;librerias/UART_variables.c: 11:         break;
   837   000E44  EF49  F007         	goto	l171
   838   000E48                     l1422:
   839                           
   840                           ;librerias/UART_variables.c: 13:             printf("ERROR_CODE_UART_FRAMING");
   841   000E48  0E34               	movlw	low STR_21
   842   000E4A  6E3A               	movwf	printf@fmt^0,c
   843   000E4C  ECF4  F007         	call	_printf	;wreg free
   844                           
   845                           ;librerias/UART_variables.c: 14:         break;
   846   000E50  EF49  F007         	goto	l171
   847   000E54                     l1424:
   848                           
   849                           ;librerias/UART_variables.c: 16:             printf("ERROR_CODE_UART_CONFIG \r\n");
   850   000E54  0E01               	movlw	low STR_22
   851   000E56  6E3A               	movwf	printf@fmt^0,c
   852   000E58  ECF4  F007         	call	_printf	;wreg free
   853                           
   854                           ;librerias/UART_variables.c: 17:         break;
   855   000E5C  EF49  F007         	goto	l171
   856   000E60                     l1428:
   857   000E60  503E               	movf	UART_ErrorHandler@errorCode^0,w,c
   858   000E62  6E3C               	movwf	??_UART_ErrorHandler^0,c
   859   000E64  6A3D               	clrf	(??_UART_ErrorHandler+1)^0,c
   860                           
   861                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   862                           ; Switch size 1, requested type "simple"
   863                           ; Number of cases is 1, Range of values is 0 to 0
   864                           ; switch strategies available:
   865                           ; Name         Instructions Cycles
   866                           ; simple_byte            4     3 (average)
   867                           ;	Chosen strategy is simple_byte
   868   000E66  503D               	movf	(??_UART_ErrorHandler+1)^0,w,c
   869   000E68  0A00               	xorlw	0	; case 0
   870   000E6A  B4D8               	btfsc	status,2,c
   871   000E6C  EF3A  F007         	goto	l1594
   872   000E70  EF49  F007         	goto	l171
   873   000E74                     l1594:
   874                           
   875                           ; Switch size 1, requested type "simple"
   876                           ; Number of cases is 3, Range of values is 1 to 3
   877                           ; switch strategies available:
   878                           ; Name         Instructions Cycles
   879                           ; simple_byte           10     6 (average)
   880                           ;	Chosen strategy is simple_byte
   881   000E74  503C               	movf	??_UART_ErrorHandler^0,w,c
   882   000E76  0A01               	xorlw	1	; case 1
   883   000E78  B4D8               	btfsc	status,2,c
   884   000E7A  EF1E  F007         	goto	l1420
   885   000E7E  0A03               	xorlw	3	; case 2
   886   000E80  B4D8               	btfsc	status,2,c
   887   000E82  EF24  F007         	goto	l1422
   888   000E86  0A01               	xorlw	1	; case 3
   889   000E88  B4D8               	btfsc	status,2,c
   890   000E8A  EF2A  F007         	goto	l1424
   891   000E8E  EF49  F007         	goto	l171
   892   000E92                     l171:
   893   000E92  0012               	return		;funcret
   894   000E94                     __end_of_UART_ErrorHandler:
   895                           	callstack 0
   896                           
   897 ;; *************** function _UART_Init *****************
   898 ;; Defined at:
   899 ;;		line 20 in file "librerias/UART.c"
   900 ;; Parameters:    Size  Location     Type
   901 ;;  baudrate        4   22[COMRAM] unsigned long 
   902 ;; Auto vars:     Size  Location     Type
   903 ;;		None
   904 ;; Return value:  Size  Location     Type
   905 ;;                  1    wreg      void 
   906 ;; Registers used:
   907 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   908 ;; Tracked objects:
   909 ;;		On entry : 0/0
   910 ;;		On exit  : 0/0
   911 ;;		Unchanged: 0/0
   912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK4   BANK5   BANK6   BANK3   BANK7
   913 ;;      Params:         4       0       0       0       0       0       0       0       0
   914 ;;      Locals:         0       0       0       0       0       0       0       0       0
   915 ;;      Temps:          0       0       0       0       0       0       0       0       0
   916 ;;      Totals:         4       0       0       0       0       0       0       0       0
   917 ;;Total ram usage:        4 bytes
   918 ;; Hardware stack levels used: 1
   919 ;; Hardware stack levels required when called: 7
   920 ;; This function calls:
   921 ;;		_UART_config_show
   922 ;;		_UART_select_baud
   923 ;; This function is called by:
   924 ;;		_main
   925 ;; This function uses a non-reentrant model
   926 ;;
   927                           
   928                           	psect	text5
   929   000F88                     __ptext5:
   930                           	callstack 0
   931   000F88                     _UART_Init:
   932                           	callstack 23
   933   000F88                     
   934                           ;librerias/UART.c: 21:     TXSTA1bits.SYNC1 = 0;
   935   000F88  98AC               	bcf	172,4,c	;volatile
   936                           
   937                           ;librerias/UART.c: 22:     TXSTA1bits.BRGH1 = 1;
   938   000F8A  84AC               	bsf	172,2,c	;volatile
   939                           
   940                           ;librerias/UART.c: 23:     BAUDCON1bits.BRG161 = 1;
   941   000F8C  86B8               	bsf	184,3,c	;volatile
   942   000F8E                     
   943                           ;librerias/UART.c: 24:     UART_select_baud(baudrate);
   944   000F8E  C03C  F026         	movff	UART_Init@baudrate,UART_select_baud@baudrate
   945   000F92  C03D  F027         	movff	UART_Init@baudrate+1,UART_select_baud@baudrate+1
   946   000F96  C03E  F028         	movff	UART_Init@baudrate+2,UART_select_baud@baudrate+2
   947   000F9A  C03F  F029         	movff	UART_Init@baudrate+3,UART_select_baud@baudrate+3
   948   000F9E  EC89  F005         	call	_UART_select_baud	;wreg free
   949   000FA2                     
   950                           ;librerias/UART.c: 25:     TRISC6 = 1;
   951   000FA2  8C94               	bsf	3988,6,c	;volatile
   952   000FA4                     
   953                           ;librerias/UART.c: 26:     TRISC7 = 1;
   954   000FA4  8E94               	bsf	3988,7,c	;volatile
   955   000FA6                     
   956                           ;librerias/UART.c: 27:     RCSTAbits.SPEN = 1;
   957   000FA6  8EAB               	bsf	171,7,c	;volatile
   958   000FA8                     
   959                           ;librerias/UART.c: 28:     TXSTAbits.TXEN1 = 1;
   960   000FA8  8AAC               	bsf	172,5,c	;volatile
   961   000FAA                     
   962                           ;librerias/UART.c: 29:     RCSTAbits.CREN = 1;
   963   000FAA  88AB               	bsf	171,4,c	;volatile
   964   000FAC                     
   965                           ;librerias/UART.c: 30:     UART_config_show();
   966   000FAC  EC29  F006         	call	_UART_config_show	;wreg free
   967   000FB0  0012               	return		;funcret
   968   000FB2                     __end_of_UART_Init:
   969                           	callstack 0
   970                           
   971 ;; *************** function _UART_select_baud *****************
   972 ;; Defined at:
   973 ;;		line 33 in file "librerias/UART.c"
   974 ;; Parameters:    Size  Location     Type
   975 ;;  baudrate        4    0[COMRAM] unsigned long 
   976 ;; Auto vars:     Size  Location     Type
   977 ;;		None
   978 ;; Return value:  Size  Location     Type
   979 ;;                  1    wreg      void 
   980 ;; Registers used:
   981 ;;		wreg, status,2, status,0
   982 ;; Tracked objects:
   983 ;;		On entry : 0/0
   984 ;;		On exit  : 0/0
   985 ;;		Unchanged: 0/0
   986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK4   BANK5   BANK6   BANK3   BANK7
   987 ;;      Params:         4       0       0       0       0       0       0       0       0
   988 ;;      Locals:         0       0       0       0       0       0       0       0       0
   989 ;;      Temps:          4       0       0       0       0       0       0       0       0
   990 ;;      Totals:         8       0       0       0       0       0       0       0       0
   991 ;;Total ram usage:        8 bytes
   992 ;; Hardware stack levels used: 1
   993 ;; This function calls:
   994 ;;		Nothing
   995 ;; This function is called by:
   996 ;;		_UART_Init
   997 ;; This function uses a non-reentrant model
   998 ;;
   999                           
  1000                           	psect	text6
  1001   000B12                     __ptext6:
  1002                           	callstack 0
  1003   000B12                     _UART_select_baud:
  1004                           	callstack 29
  1005   000B12                     
  1006                           ;librerias/UART.c: 34:     switch (baudrate){
  1007   000B12  EFBB  F005         	goto	l1372
  1008   000B16                     l1354:
  1009                           
  1010                           ;librerias/UART.c: 36:             SPBRGH = 0x9C;
  1011   000B16  0E9C               	movlw	156
  1012   000B18  6EB0               	movwf	176,c	;volatile
  1013                           
  1014                           ;librerias/UART.c: 37:             SPBRG = 0x3F;
  1015   000B1A  0E3F               	movlw	63
  1016   000B1C  6EAF               	movwf	175,c	;volatile
  1017                           
  1018                           ;librerias/UART.c: 38:             break;
  1019   000B1E  EF28  F006         	goto	l104
  1020   000B22                     l1356:
  1021                           
  1022                           ;librerias/UART.c: 40:             SPBRGH = 0x27;
  1023   000B22  0E27               	movlw	39
  1024   000B24  6EB0               	movwf	176,c	;volatile
  1025                           
  1026                           ;librerias/UART.c: 41:             SPBRG = 0x0F;
  1027   000B26  0E0F               	movlw	15
  1028   000B28  6EAF               	movwf	175,c	;volatile
  1029                           
  1030                           ;librerias/UART.c: 42:             break;
  1031   000B2A  EF28  F006         	goto	l104
  1032   000B2E                     l1358:
  1033                           
  1034                           ;librerias/UART.c: 44:             SPBRGH = 0x13;
  1035   000B2E  0E13               	movlw	19
  1036   000B30  6EB0               	movwf	176,c	;volatile
  1037                           
  1038                           ;librerias/UART.c: 45:             SPBRG = 0x87;
  1039   000B32  0E87               	movlw	135
  1040   000B34  6EAF               	movwf	175,c	;volatile
  1041                           
  1042                           ;librerias/UART.c: 46:             break;
  1043   000B36  EF28  F006         	goto	l104
  1044   000B3A                     l1360:
  1045                           
  1046                           ;librerias/UART.c: 48:             SPBRGH = 0x04;
  1047   000B3A  0E04               	movlw	4
  1048   000B3C  6EB0               	movwf	176,c	;volatile
  1049                           
  1050                           ;librerias/UART.c: 49:             SPBRG = 0x7F;
  1051   000B3E  0E7F               	movlw	127
  1052   000B40  6EAF               	movwf	175,c	;volatile
  1053                           
  1054                           ;librerias/UART.c: 50:             break;
  1055   000B42  EF28  F006         	goto	l104
  1056   000B46                     l1362:
  1057                           
  1058                           ;librerias/UART.c: 52:             SPBRGH = 0x02;
  1059   000B46  0E02               	movlw	2
  1060   000B48  6EB0               	movwf	176,c	;volatile
  1061                           
  1062                           ;librerias/UART.c: 53:             SPBRG = 0x70;
  1063   000B4A  0E70               	movlw	112
  1064   000B4C  6EAF               	movwf	175,c	;volatile
  1065                           
  1066                           ;librerias/UART.c: 54:             break;
  1067   000B4E  EF28  F006         	goto	l104
  1068   000B52                     l1364:
  1069                           
  1070                           ;librerias/UART.c: 56:             SPBRGH = 0x00;
  1071   000B52  0E00               	movlw	0
  1072   000B54  6EB0               	movwf	176,c	;volatile
  1073                           
  1074                           ;librerias/UART.c: 57:             SPBRG = 0xCF;
  1075   000B56  0ECF               	movlw	207
  1076   000B58  6EAF               	movwf	175,c	;volatile
  1077                           
  1078                           ;librerias/UART.c: 58:             break;
  1079   000B5A  EF28  F006         	goto	l104
  1080   000B5E                     l1366:
  1081                           
  1082                           ;librerias/UART.c: 60:             SPBRGH = 0x00;
  1083   000B5E  0E00               	movlw	0
  1084   000B60  6EB0               	movwf	176,c	;volatile
  1085                           
  1086                           ;librerias/UART.c: 61:             SPBRG = 0x67;
  1087   000B62  0E67               	movlw	103
  1088   000B64  6EAF               	movwf	175,c	;volatile
  1089                           
  1090                           ;librerias/UART.c: 62:             break;
  1091   000B66  EF28  F006         	goto	l104
  1092   000B6A                     l1368:
  1093                           
  1094                           ;librerias/UART.c: 64:             SPBRGH = 0x04;
  1095   000B6A  0E04               	movlw	4
  1096   000B6C  6EB0               	movwf	176,c	;volatile
  1097                           
  1098                           ;librerias/UART.c: 65:             SPBRG = 0xE1;
  1099   000B6E  0EE1               	movlw	225
  1100   000B70  6EAF               	movwf	175,c	;volatile
  1101                           
  1102                           ;librerias/UART.c: 66:             break;
  1103   000B72  EF28  F006         	goto	l104
  1104   000B76                     l1372:
  1105   000B76  C026  F02A         	movff	UART_select_baud@baudrate,??_UART_select_baud
  1106   000B7A  C027  F02B         	movff	UART_select_baud@baudrate+1,??_UART_select_baud+1
  1107   000B7E  C028  F02C         	movff	UART_select_baud@baudrate+2,??_UART_select_baud+2
  1108   000B82  C029  F02D         	movff	UART_select_baud@baudrate+3,??_UART_select_baud+3
  1109                           
  1110                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 3 sub-sw
      +                          itches
  1111                           ; Switch size 1, requested type "simple"
  1112                           ; Number of cases is 1, Range of values is 0 to 0
  1113                           ; switch strategies available:
  1114                           ; Name         Instructions Cycles
  1115                           ; simple_byte            4     3 (average)
  1116                           ;	Chosen strategy is simple_byte
  1117   000B86  502D               	movf	(??_UART_select_baud+3)^0,w,c
  1118   000B88  0A00               	xorlw	0	; case 0
  1119   000B8A  B4D8               	btfsc	status,2,c
  1120   000B8C  EF1D  F006         	goto	l1600
  1121   000B90  EFB5  F005         	goto	l1368
  1122   000B94                     l1596:
  1123                           
  1124                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 6 sub-sw
      +                          itches
  1125                           ; Switch size 1, requested type "simple"
  1126                           ; Number of cases is 6, Range of values is 1 to 225
  1127                           ; switch strategies available:
  1128                           ; Name         Instructions Cycles
  1129                           ; simple_byte           19    10 (average)
  1130                           ;	Chosen strategy is simple_byte
  1131   000B94  502B               	movf	(??_UART_select_baud+1)^0,w,c
  1132   000B96  0A01               	xorlw	1	; case 1
  1133   000B98  B4D8               	btfsc	status,2,c
  1134   000B9A  EFE5  F005         	goto	l1602
  1135   000B9E  0A05               	xorlw	5	; case 4
  1136   000BA0  B4D8               	btfsc	status,2,c
  1137   000BA2  EFEC  F005         	goto	l1604
  1138   000BA6  0A0D               	xorlw	13	; case 9
  1139   000BA8  B4D8               	btfsc	status,2,c
  1140   000BAA  EFF3  F005         	goto	l1606
  1141   000BAE  0A21               	xorlw	33	; case 40
  1142   000BB0  B4D8               	btfsc	status,2,c
  1143   000BB2  EFFA  F005         	goto	l1608
  1144   000BB6  0A63               	xorlw	99	; case 75
  1145   000BB8  B4D8               	btfsc	status,2,c
  1146   000BBA  EF01  F006         	goto	l1610
  1147   000BBE  0AAA               	xorlw	170	; case 225
  1148   000BC0  B4D8               	btfsc	status,2,c
  1149   000BC2  EF08  F006         	goto	l1612
  1150   000BC6  EFB5  F005         	goto	l1368
  1151   000BCA                     l1602:
  1152                           
  1153                           ; Switch size 1, requested type "simple"
  1154                           ; Number of cases is 1, Range of values is 44 to 44
  1155                           ; switch strategies available:
  1156                           ; Name         Instructions Cycles
  1157                           ; simple_byte            4     3 (average)
  1158                           ;	Chosen strategy is simple_byte
  1159   000BCA  502A               	movf	??_UART_select_baud^0,w,c
  1160   000BCC  0A2C               	xorlw	44	; case 44
  1161   000BCE  B4D8               	btfsc	status,2,c
  1162   000BD0  EF8B  F005         	goto	l1354
  1163   000BD4  EFB5  F005         	goto	l1368
  1164   000BD8                     l1604:
  1165                           
  1166                           ; Switch size 1, requested type "simple"
  1167                           ; Number of cases is 1, Range of values is 176 to 176
  1168                           ; switch strategies available:
  1169                           ; Name         Instructions Cycles
  1170                           ; simple_byte            4     3 (average)
  1171                           ;	Chosen strategy is simple_byte
  1172   000BD8  502A               	movf	??_UART_select_baud^0,w,c
  1173   000BDA  0AB0               	xorlw	176	; case 176
  1174   000BDC  B4D8               	btfsc	status,2,c
  1175   000BDE  EF91  F005         	goto	l1356
  1176   000BE2  EFB5  F005         	goto	l1368
  1177   000BE6                     l1606:
  1178                           
  1179                           ; Switch size 1, requested type "simple"
  1180                           ; Number of cases is 1, Range of values is 96 to 96
  1181                           ; switch strategies available:
  1182                           ; Name         Instructions Cycles
  1183                           ; simple_byte            4     3 (average)
  1184                           ;	Chosen strategy is simple_byte
  1185   000BE6  502A               	movf	??_UART_select_baud^0,w,c
  1186   000BE8  0A60               	xorlw	96	; case 96
  1187   000BEA  B4D8               	btfsc	status,2,c
  1188   000BEC  EF97  F005         	goto	l1358
  1189   000BF0  EFB5  F005         	goto	l1368
  1190   000BF4                     l1608:
  1191                           
  1192                           ; Switch size 1, requested type "simple"
  1193                           ; Number of cases is 1, Range of values is 177 to 177
  1194                           ; switch strategies available:
  1195                           ; Name         Instructions Cycles
  1196                           ; simple_byte            4     3 (average)
  1197                           ;	Chosen strategy is simple_byte
  1198   000BF4  502A               	movf	??_UART_select_baud^0,w,c
  1199   000BF6  0AB1               	xorlw	177	; case 177
  1200   000BF8  B4D8               	btfsc	status,2,c
  1201   000BFA  EF9D  F005         	goto	l1360
  1202   000BFE  EFB5  F005         	goto	l1368
  1203   000C02                     l1610:
  1204                           
  1205                           ; Switch size 1, requested type "simple"
  1206                           ; Number of cases is 1, Range of values is 0 to 0
  1207                           ; switch strategies available:
  1208                           ; Name         Instructions Cycles
  1209                           ; simple_byte            4     3 (average)
  1210                           ;	Chosen strategy is simple_byte
  1211   000C02  502A               	movf	??_UART_select_baud^0,w,c
  1212   000C04  0A00               	xorlw	0	; case 0
  1213   000C06  B4D8               	btfsc	status,2,c
  1214   000C08  EFA3  F005         	goto	l1362
  1215   000C0C  EFB5  F005         	goto	l1368
  1216   000C10                     l1612:
  1217                           
  1218                           ; Switch size 1, requested type "simple"
  1219                           ; Number of cases is 1, Range of values is 0 to 0
  1220                           ; switch strategies available:
  1221                           ; Name         Instructions Cycles
  1222                           ; simple_byte            4     3 (average)
  1223                           ;	Chosen strategy is simple_byte
  1224   000C10  502A               	movf	??_UART_select_baud^0,w,c
  1225   000C12  0A00               	xorlw	0	; case 0
  1226   000C14  B4D8               	btfsc	status,2,c
  1227   000C16  EFA9  F005         	goto	l1364
  1228   000C1A  EFB5  F005         	goto	l1368
  1229   000C1E                     l1598:
  1230                           
  1231                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1232                           ; Switch size 1, requested type "simple"
  1233                           ; Number of cases is 1, Range of values is 194 to 194
  1234                           ; switch strategies available:
  1235                           ; Name         Instructions Cycles
  1236                           ; simple_byte            4     3 (average)
  1237                           ;	Chosen strategy is simple_byte
  1238   000C1E  502B               	movf	(??_UART_select_baud+1)^0,w,c
  1239   000C20  0AC2               	xorlw	194	; case 194
  1240   000C22  B4D8               	btfsc	status,2,c
  1241   000C24  EF16  F006         	goto	l1614
  1242   000C28  EFB5  F005         	goto	l1368
  1243   000C2C                     l1614:
  1244                           
  1245                           ; Switch size 1, requested type "simple"
  1246                           ; Number of cases is 1, Range of values is 0 to 0
  1247                           ; switch strategies available:
  1248                           ; Name         Instructions Cycles
  1249                           ; simple_byte            4     3 (average)
  1250                           ;	Chosen strategy is simple_byte
  1251   000C2C  502A               	movf	??_UART_select_baud^0,w,c
  1252   000C2E  0A00               	xorlw	0	; case 0
  1253   000C30  B4D8               	btfsc	status,2,c
  1254   000C32  EFAF  F005         	goto	l1366
  1255   000C36  EFB5  F005         	goto	l1368
  1256   000C3A                     l1600:
  1257                           
  1258                           ; Switch size 1, requested type "simple"
  1259                           ; Number of cases is 2, Range of values is 0 to 1
  1260                           ; switch strategies available:
  1261                           ; Name         Instructions Cycles
  1262                           ; simple_byte            7     4 (average)
  1263                           ;	Chosen strategy is simple_byte
  1264   000C3A  502C               	movf	(??_UART_select_baud+2)^0,w,c
  1265   000C3C  0A00               	xorlw	0	; case 0
  1266   000C3E  B4D8               	btfsc	status,2,c
  1267   000C40  EFCA  F005         	goto	l1596
  1268   000C44  0A01               	xorlw	1	; case 1
  1269   000C46  B4D8               	btfsc	status,2,c
  1270   000C48  EF0F  F006         	goto	l1598
  1271   000C4C  EFB5  F005         	goto	l1368
  1272   000C50                     l104:
  1273   000C50  0012               	return		;funcret
  1274   000C52                     __end_of_UART_select_baud:
  1275                           	callstack 0
  1276                           
  1277 ;; *************** function _UART_config_show *****************
  1278 ;; Defined at:
  1279 ;;		line 5 in file "librerias/UART.c"
  1280 ;; Parameters:    Size  Location     Type
  1281 ;;		None
  1282 ;; Auto vars:     Size  Location     Type
  1283 ;;		None
  1284 ;; Return value:  Size  Location     Type
  1285 ;;                  1    wreg      void 
  1286 ;; Registers used:
  1287 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1288 ;; Tracked objects:
  1289 ;;		On entry : 0/0
  1290 ;;		On exit  : 0/0
  1291 ;;		Unchanged: 0/0
  1292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK4   BANK5   BANK6   BANK3   BANK7
  1293 ;;      Params:         0       0       0       0       0       0       0       0       0
  1294 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1295 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1296 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1297 ;;Total ram usage:        0 bytes
  1298 ;; Hardware stack levels used: 1
  1299 ;; Hardware stack levels required when called: 6
  1300 ;; This function calls:
  1301 ;;		_printf
  1302 ;; This function is called by:
  1303 ;;		_UART_Init
  1304 ;; This function uses a non-reentrant model
  1305 ;;
  1306                           
  1307                           	psect	text7
  1308   000C52                     __ptext7:
  1309                           	callstack 0
  1310   000C52                     _UART_config_show:
  1311                           	callstack 23
  1312   000C52                     
  1313                           ;librerias/UART.c: 6:     printf("Modo: ");
  1314   000C52  0EF3               	movlw	low STR_1
  1315   000C54  6E3A               	movwf	printf@fmt^0,c
  1316   000C56  ECF4  F007         	call	_printf	;wreg free
  1317   000C5A                     
  1318                           ;librerias/UART.c: 7:     (SYNC1) ? printf("Sincrono "):printf("Asincrono ");
  1319   000C5A  A8AC               	btfss	4012,4,c	;volatile
  1320   000C5C  EF32  F006         	goto	u521
  1321   000C60  EF34  F006         	goto	u520
  1322   000C64                     u521:
  1323   000C64  EF3A  F006         	goto	l1320
  1324   000C68                     u520:
  1325   000C68  0EC7               	movlw	low STR_2
  1326   000C6A  6E3A               	movwf	printf@fmt^0,c
  1327   000C6C  ECF4  F007         	call	_printf	;wreg free
  1328   000C70  EF3E  F006         	goto	l1322
  1329   000C74                     l1320:
  1330   000C74  0EB2               	movlw	low STR_3
  1331   000C76  6E3A               	movwf	printf@fmt^0,c
  1332   000C78  ECF4  F007         	call	_printf	;wreg free
  1333   000C7C                     l1322:
  1334                           
  1335                           ;librerias/UART.c: 8:     (BRGH1) ? printf("alta velocidad \r\n"):printf("baja velocidad
      +                           \r\n");
  1336   000C7C  A4AC               	btfss	4012,2,c	;volatile
  1337   000C7E  EF43  F006         	goto	u531
  1338   000C82  EF45  F006         	goto	u530
  1339   000C86                     u531:
  1340   000C86  EF4B  F006         	goto	l1326
  1341   000C8A                     u530:
  1342   000C8A  0E5E               	movlw	low STR_4
  1343   000C8C  6E3A               	movwf	printf@fmt^0,c
  1344   000C8E  ECF4  F007         	call	_printf	;wreg free
  1345   000C92  EF4F  F006         	goto	l71
  1346   000C96                     l1326:
  1347   000C96  0E4C               	movlw	low STR_5
  1348   000C98  6E3A               	movwf	printf@fmt^0,c
  1349   000C9A  ECF4  F007         	call	_printf	;wreg free
  1350   000C9E                     l71:
  1351                           
  1352                           ;librerias/UART.c: 9:     printf("Baudrate: ");
  1353   000C9E  0E9C               	movlw	low STR_6
  1354   000CA0  6E3A               	movwf	printf@fmt^0,c
  1355   000CA2  ECF4  F007         	call	_printf	;wreg free
  1356   000CA6                     
  1357                           ;librerias/UART.c: 10:     (BRG161) ? printf("16 bits "):printf("8 bits ");
  1358   000CA6  A6B8               	btfss	4024,3,c	;volatile
  1359   000CA8  EF58  F006         	goto	u541
  1360   000CAC  EF5A  F006         	goto	u540
  1361   000CB0                     u541:
  1362   000CB0  EF60  F006         	goto	l1332
  1363   000CB4                     u540:
  1364   000CB4  0EDA               	movlw	low STR_7
  1365   000CB6  6E3A               	movwf	printf@fmt^0,c
  1366   000CB8  ECF4  F007         	call	_printf	;wreg free
  1367   000CBC  EF64  F006         	goto	l75
  1368   000CC0                     l1332:
  1369   000CC0  0EEB               	movlw	low STR_8
  1370   000CC2  6E3A               	movwf	printf@fmt^0,c
  1371   000CC4  ECF4  F007         	call	_printf	;wreg free
  1372   000CC8                     l75:
  1373                           
  1374                           ;librerias/UART.c: 11:     printf("x baudios \r\n");
  1375   000CC8  0E8F               	movlw	low STR_9
  1376   000CCA  6E3A               	movwf	printf@fmt^0,c
  1377   000CCC  ECF4  F007         	call	_printf	;wreg free
  1378                           
  1379                           ;librerias/UART.c: 12:     printf("Puerto: ");
  1380   000CD0  0ED1               	movlw	low STR_10
  1381   000CD2  6E3A               	movwf	printf@fmt^0,c
  1382   000CD4  ECF4  F007         	call	_printf	;wreg free
  1383   000CD8                     
  1384                           ;librerias/UART.c: 13:     (SPEN) ? printf("Habilitado \r\n"):printf("Deshabilitado \r\n
      +                          ");
  1385   000CD8  AEAB               	btfss	4011,7,c	;volatile
  1386   000CDA  EF71  F006         	goto	u551
  1387   000CDE  EF73  F006         	goto	u550
  1388   000CE2                     u551:
  1389   000CE2  EF79  F006         	goto	l1338
  1390   000CE6                     u550:
  1391   000CE6  0E81               	movlw	low STR_11
  1392   000CE8  6E3A               	movwf	printf@fmt^0,c
  1393   000CEA  ECF4  F007         	call	_printf	;wreg free
  1394   000CEE  EF7D  F006         	goto	l79
  1395   000CF2                     l1338:
  1396   000CF2  0E70               	movlw	low STR_12
  1397   000CF4  6E3A               	movwf	printf@fmt^0,c
  1398   000CF6  ECF4  F007         	call	_printf	;wreg free
  1399   000CFA                     l79:
  1400                           
  1401                           ;librerias/UART.c: 14:     printf("Transor: ");
  1402   000CFA  0EBD               	movlw	low STR_13
  1403   000CFC  6E3A               	movwf	printf@fmt^0,c
  1404   000CFE  ECF4  F007         	call	_printf	;wreg free
  1405   000D02                     
  1406                           ;librerias/UART.c: 15:     (TXEN1) ? printf("Habilitado \r\n"):printf("Deshabilitado \r\
      +                          n");
  1407   000D02  AAAC               	btfss	4012,5,c	;volatile
  1408   000D04  EF86  F006         	goto	u561
  1409   000D08  EF88  F006         	goto	u560
  1410   000D0C                     u561:
  1411   000D0C  EF8E  F006         	goto	l1344
  1412   000D10                     u560:
  1413   000D10  0E81               	movlw	low STR_11
  1414   000D12  6E3A               	movwf	printf@fmt^0,c
  1415   000D14  ECF4  F007         	call	_printf	;wreg free
  1416   000D18  EF92  F006         	goto	l83
  1417   000D1C                     l1344:
  1418   000D1C  0E70               	movlw	low STR_12
  1419   000D1E  6E3A               	movwf	printf@fmt^0,c
  1420   000D20  ECF4  F007         	call	_printf	;wreg free
  1421   000D24                     l83:
  1422                           
  1423                           ;librerias/UART.c: 16:     printf("Receptor: ");
  1424   000D24  0EA7               	movlw	low STR_16
  1425   000D26  6E3A               	movwf	printf@fmt^0,c
  1426   000D28  ECF4  F007         	call	_printf	;wreg free
  1427   000D2C                     
  1428                           ;librerias/UART.c: 17:     (CREN) ? printf("Habilitado \r\n"):printf("Deshabilitado \r\n
      +                          ");
  1429   000D2C  A8AB               	btfss	4011,4,c	;volatile
  1430   000D2E  EF9B  F006         	goto	u571
  1431   000D32  EF9D  F006         	goto	u570
  1432   000D36                     u571:
  1433   000D36  EFA3  F006         	goto	l1350
  1434   000D3A                     u570:
  1435   000D3A  0E81               	movlw	low STR_11
  1436   000D3C  6E3A               	movwf	printf@fmt^0,c
  1437   000D3E  ECF4  F007         	call	_printf	;wreg free
  1438   000D42  EFA7  F006         	goto	l88
  1439   000D46                     l1350:
  1440   000D46  0E70               	movlw	low STR_12
  1441   000D48  6E3A               	movwf	printf@fmt^0,c
  1442   000D4A  ECF4  F007         	call	_printf	;wreg free
  1443   000D4E                     l88:
  1444   000D4E  0012               	return		;funcret
  1445   000D50                     __end_of_UART_config_show:
  1446                           	callstack 0
  1447                           
  1448 ;; *************** function _printf *****************
  1449 ;; Defined at:
  1450 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\printf.c"
  1451 ;; Parameters:    Size  Location     Type
  1452 ;;  fmt             1   20[COMRAM] PTR const unsigned char 
  1453 ;;		 -> STR_22(26), STR_21(24), STR_20(25), STR_19(8), 
  1454 ;;		 -> STR_18(17), STR_17(14), STR_16(11), STR_15(17), 
  1455 ;;		 -> STR_14(14), STR_13(10), STR_12(17), STR_11(14), 
  1456 ;;		 -> STR_10(9), STR_9(13), STR_8(8), STR_7(9), 
  1457 ;;		 -> STR_6(11), STR_5(18), STR_4(18), STR_3(11), 
  1458 ;;		 -> STR_2(10), STR_1(7), 
  1459 ;; Auto vars:     Size  Location     Type
  1460 ;;  ret             2    0        int 
  1461 ;;  ap              1   21[COMRAM] PTR void [1]
  1462 ;;		 -> ?_printf(2), 
  1463 ;; Return value:  Size  Location     Type
  1464 ;;                  2   20[COMRAM] int 
  1465 ;; Registers used:
  1466 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1467 ;; Tracked objects:
  1468 ;;		On entry : 0/0
  1469 ;;		On exit  : 0/0
  1470 ;;		Unchanged: 0/0
  1471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK4   BANK5   BANK6   BANK3   BANK7
  1472 ;;      Params:         1       0       0       0       0       0       0       0       0
  1473 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1474 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1475 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1476 ;;Total ram usage:        2 bytes
  1477 ;; Hardware stack levels used: 1
  1478 ;; Hardware stack levels required when called: 5
  1479 ;; This function calls:
  1480 ;;		_vfprintf
  1481 ;; This function is called by:
  1482 ;;		_UART_config_show
  1483 ;;		_UART_ErrorHandler
  1484 ;; This function uses a non-reentrant model
  1485 ;;
  1486                           
  1487                           	psect	text8
  1488   000FE8                     __ptext8:
  1489                           	callstack 0
  1490   000FE8                     _printf:
  1491                           	callstack 23
  1492   000FE8  0E3B               	movlw	low (?_printf+1)
  1493   000FEA  6E3B               	movwf	printf@ap^0,c
  1494   000FEC  0E00               	movlw	0
  1495   000FEE  6E35               	movwf	vfprintf@fp^0,c
  1496   000FF0  0E00               	movlw	0
  1497   000FF2  6E36               	movwf	(vfprintf@fp+1)^0,c
  1498   000FF4  C03A  F037         	movff	printf@fmt,vfprintf@fmt
  1499   000FF8  0E3B               	movlw	low printf@ap
  1500   000FFA  6E38               	movwf	vfprintf@ap^0,c
  1501   000FFC  ECA3  F007         	call	_vfprintf	;wreg free
  1502   001000  0012               	return		;funcret
  1503   001002                     __end_of_printf:
  1504                           	callstack 0
  1505                           
  1506 ;; *************** function _vfprintf *****************
  1507 ;; Defined at:
  1508 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  1509 ;; Parameters:    Size  Location     Type
  1510 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
  1511 ;;		 -> NULL(0), 
  1512 ;;  fmt             1   17[COMRAM] PTR const unsigned char 
  1513 ;;		 -> STR_22(26), STR_21(24), STR_20(25), STR_19(8), 
  1514 ;;		 -> STR_18(17), STR_17(14), STR_16(11), STR_15(17), 
  1515 ;;		 -> STR_14(14), STR_13(10), STR_12(17), STR_11(14), 
  1516 ;;		 -> STR_10(9), STR_9(13), STR_8(8), STR_7(9), 
  1517 ;;		 -> STR_6(11), STR_5(18), STR_4(18), STR_3(11), 
  1518 ;;		 -> STR_2(10), STR_1(7), 
  1519 ;;  ap              1   18[COMRAM] PTR PTR void 
  1520 ;;		 -> printf@ap(1), 
  1521 ;; Auto vars:     Size  Location     Type
  1522 ;;  cfmt            1   19[COMRAM] PTR unsigned char 
  1523 ;;		 -> STR_22(26), STR_21(24), STR_20(25), STR_19(8), 
  1524 ;;		 -> STR_18(17), STR_17(14), STR_16(11), STR_15(17), 
  1525 ;;		 -> STR_14(14), STR_13(10), STR_12(17), STR_11(14), 
  1526 ;;		 -> STR_10(9), STR_9(13), STR_8(8), STR_7(9), 
  1527 ;;		 -> STR_6(11), STR_5(18), STR_4(18), STR_3(11), 
  1528 ;;		 -> STR_2(10), STR_1(7), 
  1529 ;; Return value:  Size  Location     Type
  1530 ;;                  2   15[COMRAM] int 
  1531 ;; Registers used:
  1532 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1533 ;; Tracked objects:
  1534 ;;		On entry : 0/0
  1535 ;;		On exit  : 0/0
  1536 ;;		Unchanged: 0/0
  1537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK4   BANK5   BANK6   BANK3   BANK7
  1538 ;;      Params:         4       0       0       0       0       0       0       0       0
  1539 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1540 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1541 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1542 ;;Total ram usage:        5 bytes
  1543 ;; Hardware stack levels used: 1
  1544 ;; Hardware stack levels required when called: 4
  1545 ;; This function calls:
  1546 ;;		_vfpfcnvrt
  1547 ;; This function is called by:
  1548 ;;		_printf
  1549 ;; This function uses a non-reentrant model
  1550 ;;
  1551                           
  1552                           	psect	text9
  1553   000F46                     __ptext9:
  1554                           	callstack 0
  1555   000F46                     _vfprintf:
  1556                           	callstack 23
  1557   000F46                     
  1558                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  1559   000F46  C037  F039         	movff	vfprintf@fmt,vfprintf@cfmt
  1560                           
  1561                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1562   000F4A  EFB1  F007         	goto	l1302
  1563   000F4E                     l1300:
  1564                           
  1565                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1566   000F4E  C035  F031         	movff	vfprintf@fp,vfpfcnvrt@fp
  1567   000F52  C036  F032         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1568   000F56  0E39               	movlw	low vfprintf@cfmt
  1569   000F58  6E33               	movwf	vfpfcnvrt@fmt^0,c
  1570   000F5A  C038  F034         	movff	vfprintf@ap,vfpfcnvrt@ap
  1571   000F5E  EC4A  F007         	call	_vfpfcnvrt	;wreg free
  1572   000F62                     l1302:
  1573                           
  1574                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1575   000F62  C039  FFF6         	movff	vfprintf@cfmt,tblptrl
  1576   000F66                     	if	1	;There is more than 1 active tblptr byte
  1577   000F66  0E08               	movlw	high __smallconst
  1578   000F68  6EF7               	movwf	tblptrh,c
  1579   000F6A                     	endif
  1580   000F6A                     	if	0	;tblptru may be non-zero
  1581   000F6A                     	endif
  1582   000F6A                     	if	0	;tblptru may be non-zero
  1583   000F6A                     	endif
  1584   000F6A  0008               	tblrd		*
  1585   000F6C  50F5               	movf	tablat,w,c
  1586   000F6E  0900               	iorlw	0
  1587   000F70  A4D8               	btfss	status,2,c
  1588   000F72  EFBD  F007         	goto	u511
  1589   000F76  EFBF  F007         	goto	u510
  1590   000F7A                     u511:
  1591   000F7A  EFA7  F007         	goto	l1300
  1592   000F7E                     u510:
  1593   000F7E                     
  1594                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  1595   000F7E  0E00               	movlw	0
  1596   000F80  6E36               	movwf	(?_vfprintf+1)^0,c
  1597   000F82  0E00               	movlw	0
  1598   000F84  6E35               	movwf	?_vfprintf^0,c
  1599   000F86  0012               	return		;funcret
  1600   000F88                     __end_of_vfprintf:
  1601                           	callstack 0
  1602                           
  1603 ;; *************** function _vfpfcnvrt *****************
  1604 ;; Defined at:
  1605 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  1606 ;; Parameters:    Size  Location     Type
  1607 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  1608 ;;		 -> NULL(0), 
  1609 ;;  fmt             1   13[COMRAM] PTR PTR unsigned char 
  1610 ;;		 -> vfprintf@cfmt(1), 
  1611 ;;  ap              1   14[COMRAM] PTR PTR void 
  1612 ;;		 -> printf@ap(1), 
  1613 ;; Auto vars:     Size  Location     Type
  1614 ;;  cp              3    0        PTR unsigned char 
  1615 ;;  done            1    0        _Bool 
  1616 ;;  c               1    0        unsigned char 
  1617 ;; Return value:  Size  Location     Type
  1618 ;;                  1    wreg      void 
  1619 ;; Registers used:
  1620 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1621 ;; Tracked objects:
  1622 ;;		On entry : 0/0
  1623 ;;		On exit  : 0/0
  1624 ;;		Unchanged: 0/0
  1625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK4   BANK5   BANK6   BANK3   BANK7
  1626 ;;      Params:         4       0       0       0       0       0       0       0       0
  1627 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1628 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1629 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1630 ;;Total ram usage:        4 bytes
  1631 ;; Hardware stack levels used: 1
  1632 ;; Hardware stack levels required when called: 3
  1633 ;; This function calls:
  1634 ;;		_fputc
  1635 ;; This function is called by:
  1636 ;;		_vfprintf
  1637 ;; This function uses a non-reentrant model
  1638 ;;
  1639                           
  1640                           	psect	text10
  1641   000E94                     __ptext10:
  1642                           	callstack 0
  1643   000E94                     _vfpfcnvrt:
  1644                           	callstack 23
  1645   000E94                     
  1646                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  1647   000E94  5033               	movf	vfpfcnvrt@fmt^0,w,c
  1648   000E96  6ED9               	movwf	fsr2l,c
  1649   000E98  6ADA               	clrf	fsr2h,c
  1650   000E9A  CFDF FFF6          	movff	indf2,tblptrl
  1651   000E9E                     	if	1	;There is more than 1 active tblptr byte
  1652   000E9E  0E08               	movlw	high __smallconst
  1653   000EA0  6EF7               	movwf	tblptrh,c
  1654   000EA2                     	endif
  1655   000EA2                     	if	0	;tblptru may be non-zero
  1656   000EA2                     	endif
  1657   000EA2                     	if	0	;tblptru may be non-zero
  1658   000EA2                     	endif
  1659   000EA2  0008               	tblrd		*
  1660   000EA4  50F5               	movf	tablat,w,c
  1661   000EA6  0A25               	xorlw	37
  1662   000EA8  A4D8               	btfss	status,2,c
  1663   000EAA  EF59  F007         	goto	u501
  1664   000EAE  EF5B  F007         	goto	u500
  1665   000EB2                     u501:
  1666   000EB2  EF6D  F007         	goto	l1292
  1667   000EB6                     u500:
  1668   000EB6                     
  1669                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  1670   000EB6  5033               	movf	vfpfcnvrt@fmt^0,w,c
  1671   000EB8  6ED9               	movwf	fsr2l,c
  1672   000EBA  6ADA               	clrf	fsr2h,c
  1673   000EBC  2ADF               	incf	indf2,f,c
  1674   000EBE                     
  1675                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  1676   000EBE  0E00               	movlw	0
  1677   000EC0  6E22               	movwf	(_width+1)^0,c
  1678   000EC2  0E00               	movlw	0
  1679   000EC4  6E21               	movwf	_width^0,c
  1680   000EC6  C021  F025         	movff	_width,_flags
  1681   000ECA                     
  1682                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  1683   000ECA  6823               	setf	_prec^0,c
  1684   000ECC  6824               	setf	(_prec+1)^0,c
  1685   000ECE                     l1288:
  1686                           
  1687                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  1688   000ECE  5033               	movf	vfpfcnvrt@fmt^0,w,c
  1689   000ED0  6ED9               	movwf	fsr2l,c
  1690   000ED2  6ADA               	clrf	fsr2h,c
  1691   000ED4  2ADF               	incf	indf2,f,c
  1692   000ED6  EF80  F007         	goto	l880
  1693   000EDA                     l1292:
  1694                           
  1695                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  1696   000EDA  5033               	movf	vfpfcnvrt@fmt^0,w,c
  1697   000EDC  6ED9               	movwf	fsr2l,c
  1698   000EDE  6ADA               	clrf	fsr2h,c
  1699   000EE0  CFDF FFF6          	movff	indf2,tblptrl
  1700   000EE4                     	if	1	;There is more than 1 active tblptr byte
  1701   000EE4  0E08               	movlw	high __smallconst
  1702   000EE6  6EF7               	movwf	tblptrh,c
  1703   000EE8                     	endif
  1704   000EE8                     	if	0	;tblptru may be non-zero
  1705   000EE8                     	endif
  1706   000EE8                     	if	0	;tblptru may be non-zero
  1707   000EE8                     	endif
  1708   000EE8  0008               	tblrd		*
  1709   000EEA  50F5               	movf	tablat,w,c
  1710   000EEC  6E28               	movwf	fputc@c^0,c
  1711   000EEE  6A29               	clrf	(fputc@c+1)^0,c
  1712   000EF0  C031  F02A         	movff	vfpfcnvrt@fp,fputc@fp
  1713   000EF4  C032  F02B         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1714   000EF8  ECA8  F006         	call	_fputc	;wreg free
  1715   000EFC  EF67  F007         	goto	l1288
  1716   000F00                     l880:
  1717   000F00  0012               	return		;funcret
  1718   000F02                     __end_of_vfpfcnvrt:
  1719                           	callstack 0
  1720                           
  1721 ;; *************** function _fputc *****************
  1722 ;; Defined at:
  1723 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_fputc.c"
  1724 ;; Parameters:    Size  Location     Type
  1725 ;;  c               2    2[COMRAM] int 
  1726 ;;  fp              2    4[COMRAM] PTR struct _IO_FILE
  1727 ;;		 -> NULL(0), 
  1728 ;; Auto vars:     Size  Location     Type
  1729 ;;		None
  1730 ;; Return value:  Size  Location     Type
  1731 ;;                  2    2[COMRAM] int 
  1732 ;; Registers used:
  1733 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1734 ;; Tracked objects:
  1735 ;;		On entry : 0/0
  1736 ;;		On exit  : 0/0
  1737 ;;		Unchanged: 0/0
  1738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK4   BANK5   BANK6   BANK3   BANK7
  1739 ;;      Params:         4       0       0       0       0       0       0       0       0
  1740 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1741 ;;      Temps:          5       0       0       0       0       0       0       0       0
  1742 ;;      Totals:         9       0       0       0       0       0       0       0       0
  1743 ;;Total ram usage:        9 bytes
  1744 ;; Hardware stack levels used: 1
  1745 ;; Hardware stack levels required when called: 2
  1746 ;; This function calls:
  1747 ;;		_putch
  1748 ;; This function is called by:
  1749 ;;		_vfpfcnvrt
  1750 ;; This function uses a non-reentrant model
  1751 ;;
  1752                           
  1753                           	psect	text11
  1754   000D50                     __ptext11:
  1755                           	callstack 0
  1756   000D50                     _fputc:
  1757                           	callstack 23
  1758   000D50  502A               	movf	fputc@fp^0,w,c
  1759   000D52  102B               	iorwf	(fputc@fp+1)^0,w,c
  1760   000D54  B4D8               	btfsc	status,2,c
  1761   000D56  EFAF  F006         	goto	u461
  1762   000D5A  EFB1  F006         	goto	u460
  1763   000D5E                     u461:
  1764   000D5E  EFBA  F006         	goto	l1270
  1765   000D62                     u460:
  1766   000D62  502A               	movf	fputc@fp^0,w,c
  1767   000D64  102B               	iorwf	(fputc@fp+1)^0,w,c
  1768   000D66  A4D8               	btfss	status,2,c
  1769   000D68  EFB8  F006         	goto	u471
  1770   000D6C  EFBA  F006         	goto	u470
  1771   000D70                     u471:
  1772   000D70  EFBF  F006         	goto	l1272
  1773   000D74                     u470:
  1774   000D74                     l1270:
  1775   000D74  5028               	movf	fputc@c^0,w,c
  1776   000D76  EC21  F008         	call	_putch
  1777   000D7A  EF0C  F007         	goto	l898
  1778   000D7E                     l1272:
  1779   000D7E  EE20 F00A          	lfsr	2,10
  1780   000D82  502A               	movf	fputc@fp^0,w,c
  1781   000D84  26D9               	addwf	fsr2l,f,c
  1782   000D86  502B               	movf	(fputc@fp+1)^0,w,c
  1783   000D88  22DA               	addwfc	fsr2h,f,c
  1784   000D8A  50DE               	movf	postinc2,w,c
  1785   000D8C  10DE               	iorwf	postinc2,w,c
  1786   000D8E  B4D8               	btfsc	status,2,c
  1787   000D90  EFCC  F006         	goto	u481
  1788   000D94  EFCE  F006         	goto	u480
  1789   000D98                     u481:
  1790   000D98  EFE9  F006         	goto	l1276
  1791   000D9C                     u480:
  1792   000D9C  EE20 F00A          	lfsr	2,10
  1793   000DA0  502A               	movf	fputc@fp^0,w,c
  1794   000DA2  26D9               	addwf	fsr2l,f,c
  1795   000DA4  502B               	movf	(fputc@fp+1)^0,w,c
  1796   000DA6  22DA               	addwfc	fsr2h,f,c
  1797   000DA8  EE10 F003          	lfsr	1,3
  1798   000DAC  502A               	movf	fputc@fp^0,w,c
  1799   000DAE  26E1               	addwf	fsr1l,f,c
  1800   000DB0  502B               	movf	(fputc@fp+1)^0,w,c
  1801   000DB2  22E2               	addwfc	fsr1h,f,c
  1802   000DB4  50DE               	movf	postinc2,w,c
  1803   000DB6  5CE6               	subwf	postinc1,w,c
  1804   000DB8  50E6               	movf	postinc1,w,c
  1805   000DBA  0A80               	xorlw	128
  1806   000DBC  6E30               	movwf	(??_fputc+4)^0,c
  1807   000DBE  50DE               	movf	postinc2,w,c
  1808   000DC0  0A80               	xorlw	128
  1809   000DC2  5830               	subwfb	(??_fputc+4)^0,w,c
  1810   000DC4  B0D8               	btfsc	status,0,c
  1811   000DC6  EFE7  F006         	goto	u491
  1812   000DCA  EFE9  F006         	goto	u490
  1813   000DCE                     u491:
  1814   000DCE  EF0C  F007         	goto	l898
  1815   000DD2                     u490:
  1816   000DD2                     l1276:
  1817   000DD2  EE20 F003          	lfsr	2,3
  1818   000DD6  502A               	movf	fputc@fp^0,w,c
  1819   000DD8  26D9               	addwf	fsr2l,f,c
  1820   000DDA  502B               	movf	(fputc@fp+1)^0,w,c
  1821   000DDC  22DA               	addwfc	fsr2h,f,c
  1822   000DDE  CFDE F02C          	movff	postinc2,??_fputc
  1823   000DE2  CFDD F02D          	movff	postdec2,??_fputc+1
  1824   000DE6  C02A  FFD9         	movff	fputc@fp,fsr2l
  1825   000DEA  C02B  FFDA         	movff	fputc@fp+1,fsr2h
  1826   000DEE  CFDE F02E          	movff	postinc2,??_fputc+2
  1827   000DF2  CFDD F02F          	movff	postdec2,??_fputc+3
  1828   000DF6  502C               	movf	??_fputc^0,w,c
  1829   000DF8  242E               	addwf	(??_fputc+2)^0,w,c
  1830   000DFA  6ED9               	movwf	fsr2l,c
  1831   000DFC  502D               	movf	(??_fputc+1)^0,w,c
  1832   000DFE  202F               	addwfc	(??_fputc+3)^0,w,c
  1833   000E00  6EDA               	movwf	fsr2h,c
  1834   000E02  C028  FFDF         	movff	fputc@c,indf2
  1835   000E06  EE20 F003          	lfsr	2,3
  1836   000E0A  502A               	movf	fputc@fp^0,w,c
  1837   000E0C  26D9               	addwf	fsr2l,f,c
  1838   000E0E  502B               	movf	(fputc@fp+1)^0,w,c
  1839   000E10  22DA               	addwfc	fsr2h,f,c
  1840   000E12  2ADE               	incf	postinc2,f,c
  1841   000E14  0E00               	movlw	0
  1842   000E16  22DD               	addwfc	postdec2,f,c
  1843   000E18                     l898:
  1844   000E18  0012               	return		;funcret
  1845   000E1A                     __end_of_fputc:
  1846                           	callstack 0
  1847                           
  1848 ;; *************** function _putch *****************
  1849 ;; Defined at:
  1850 ;;		line 75 in file "librerias/UART.c"
  1851 ;; Parameters:    Size  Location     Type
  1852 ;;  data            1    wreg     unsigned char 
  1853 ;; Auto vars:     Size  Location     Type
  1854 ;;  data            1    1[COMRAM] unsigned char 
  1855 ;; Return value:  Size  Location     Type
  1856 ;;                  1    wreg      void 
  1857 ;; Registers used:
  1858 ;;		wreg, status,2, cstack
  1859 ;; Tracked objects:
  1860 ;;		On entry : 0/0
  1861 ;;		On exit  : 0/0
  1862 ;;		Unchanged: 0/0
  1863 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK4   BANK5   BANK6   BANK3   BANK7
  1864 ;;      Params:         0       0       0       0       0       0       0       0       0
  1865 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1866 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1867 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1868 ;;Total ram usage:        1 bytes
  1869 ;; Hardware stack levels used: 1
  1870 ;; Hardware stack levels required when called: 1
  1871 ;; This function calls:
  1872 ;;		_UART_Tx
  1873 ;; This function is called by:
  1874 ;;		_fputc
  1875 ;; This function uses a non-reentrant model
  1876 ;;
  1877                           
  1878                           	psect	text12
  1879   001042                     __ptext12:
  1880                           	callstack 0
  1881   001042                     _putch:
  1882                           	callstack 23
  1883                           
  1884                           ;incstack = 0
  1885                           ;putch@data stored from wreg
  1886   001042  6E27               	movwf	putch@data^0,c
  1887   001044                     
  1888                           ;librerias/UART.c: 76:     UART_Tx(data);
  1889   001044  5027               	movf	putch@data^0,w,c
  1890   001046  EC0C  F008         	call	_UART_Tx
  1891   00104A  0012               	return		;funcret
  1892   00104C                     __end_of_putch:
  1893                           	callstack 0
  1894                           
  1895 ;; *************** function _UART_Tx *****************
  1896 ;; Defined at:
  1897 ;;		line 70 in file "librerias/UART.c"
  1898 ;; Parameters:    Size  Location     Type
  1899 ;;  dato            1    wreg     unsigned char 
  1900 ;; Auto vars:     Size  Location     Type
  1901 ;;  dato            1    0[COMRAM] unsigned char 
  1902 ;; Return value:  Size  Location     Type
  1903 ;;                  1    wreg      void 
  1904 ;; Registers used:
  1905 ;;		wreg
  1906 ;; Tracked objects:
  1907 ;;		On entry : 0/0
  1908 ;;		On exit  : 0/0
  1909 ;;		Unchanged: 0/0
  1910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK4   BANK5   BANK6   BANK3   BANK7
  1911 ;;      Params:         0       0       0       0       0       0       0       0       0
  1912 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1913 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1914 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1915 ;;Total ram usage:        1 bytes
  1916 ;; Hardware stack levels used: 1
  1917 ;; This function calls:
  1918 ;;		Nothing
  1919 ;; This function is called by:
  1920 ;;		_main
  1921 ;;		_putch
  1922 ;; This function uses a non-reentrant model
  1923 ;;
  1924                           
  1925                           	psect	text13
  1926   001018                     __ptext13:
  1927                           	callstack 0
  1928   001018                     _UART_Tx:
  1929                           	callstack 30
  1930                           
  1931                           ;incstack = 0
  1932                           ;UART_Tx@dato stored from wreg
  1933   001018  6E26               	movwf	UART_Tx@dato^0,c
  1934   00101A                     l107:
  1935   00101A  A2AC               	btfss	4012,1,c	;volatile
  1936   00101C  EF12  F008         	goto	u11
  1937   001020  EF14  F008         	goto	u10
  1938   001024                     u11:
  1939   001024  EF0D  F008         	goto	l107
  1940   001028                     u10:
  1941   001028                     
  1942                           ;librerias/UART.c: 72:     TXREG1 = dato;
  1943   001028  C026  FFAD         	movff	UART_Tx@dato,4013	;volatile
  1944   00102C  0012               	return		;funcret
  1945   00102E                     __end_of_UART_Tx:
  1946                           	callstack 0
  1947                           
  1948 ;; *************** function _Clock_Init *****************
  1949 ;; Defined at:
  1950 ;;		line 3 in file "librerias/clock.c"
  1951 ;; Parameters:    Size  Location     Type
  1952 ;;  s16Timeout      2    0[COMRAM] short 
  1953 ;; Auto vars:     Size  Location     Type
  1954 ;;  bStatus         1    5[COMRAM] _Bool 
  1955 ;;  bStatus         1    4[COMRAM] _Bool 
  1956 ;;  bStatus         1    3[COMRAM] _Bool 
  1957 ;;  bStatus         1    2[COMRAM] _Bool 
  1958 ;;  returnCode      1    7[COMRAM] enum E5188
  1959 ;;  bItTimeEn       1    6[COMRAM] _Bool 
  1960 ;; Return value:  Size  Location     Type
  1961 ;;                  1    wreg      enum E5188
  1962 ;; Registers used:
  1963 ;;		wreg, status,2, status,0
  1964 ;; Tracked objects:
  1965 ;;		On entry : 0/0
  1966 ;;		On exit  : 0/0
  1967 ;;		Unchanged: 0/0
  1968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK4   BANK5   BANK6   BANK3   BANK7
  1969 ;;      Params:         2       0       0       0       0       0       0       0       0
  1970 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1971 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1972 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1973 ;;Total ram usage:        8 bytes
  1974 ;; Hardware stack levels used: 1
  1975 ;; This function calls:
  1976 ;;		Nothing
  1977 ;; This function is called by:
  1978 ;;		_main
  1979 ;; This function uses a non-reentrant model
  1980 ;;
  1981                           
  1982                           	psect	text14
  1983   0008FC                     __ptext14:
  1984                           	callstack 0
  1985   0008FC                     _Clock_Init:
  1986                           	callstack 30
  1987   0008FC                     
  1988                           ;librerias/clock.c: 4:     CLK_ERROR_CODE returnCode = ERROR_CODE_OK;
  1989   0008FC  0E00               	movlw	0
  1990   0008FE  6E2D               	movwf	Clock_Init@returnCode^0,c
  1991   000900                     
  1992                           ;librerias/clock.c: 5:     _Bool bItTimeEn = (0 >= s16Timeout) ? 0 : 1;
  1993   000900  BE27               	btfsc	(Clock_Init@s16Timeout+1)^0,7,c
  1994   000902  EF8E  F004         	goto	u590
  1995   000906  5027               	movf	(Clock_Init@s16Timeout+1)^0,w,c
  1996   000908  E106               	bnz	u591
  1997   00090A  0426               	decf	Clock_Init@s16Timeout^0,w,c
  1998   00090C  B0D8               	btfsc	status,0,c
  1999   00090E  EF8B  F004         	goto	u591
  2000   000912  EF8E  F004         	goto	u590
  2001   000916                     u591:
  2002   000916  0E01               	movlw	1
  2003   000918  EF8F  F004         	goto	u600
  2004   00091C                     u590:
  2005   00091C  0E00               	movlw	0
  2006   00091E                     u600:
  2007   00091E  6E2C               	movwf	Clock_Init@bItTimeEn^0,c
  2008   000920                     l141:
  2009                           
  2010                           ;librerias/clock.c: 10:             bStatus = OSCCON2bits.HFIOFR;
  2011   000920  B2D2               	btfsc	210,1,c	;volatile
  2012   000922  EF95  F004         	goto	u611
  2013   000926  EF98  F004         	goto	u610
  2014   00092A                     u611:
  2015   00092A  0E01               	movlw	1
  2016   00092C  EF99  F004         	goto	u616
  2017   000930                     u610:
  2018   000930  0E00               	movlw	0
  2019   000932                     u616:
  2020   000932  6E28               	movwf	Clock_Init@bStatus^0,c
  2021   000934                     
  2022                           ;librerias/clock.c: 11:             s16Timeout--;
  2023   000934  0626               	decf	Clock_Init@s16Timeout^0,f,c
  2024   000936  A0D8               	btfss	status,0,c
  2025   000938  0627               	decf	(Clock_Init@s16Timeout+1)^0,f,c
  2026   00093A                     
  2027                           ;librerias/clock.c: 12:         }while((0 == bStatus) && ((0 < s16Timeout) || (0 == bItT
      +                          imeEn)));
  2028   00093A  5028               	movf	Clock_Init@bStatus^0,w,c
  2029   00093C  A4D8               	btfss	status,2,c
  2030   00093E  EFA3  F004         	goto	u621
  2031   000942  EFA5  F004         	goto	u620
  2032   000946                     u621:
  2033   000946  EFBA  F004         	goto	l1450
  2034   00094A                     u620:
  2035   00094A  BE27               	btfsc	(Clock_Init@s16Timeout+1)^0,7,c
  2036   00094C  EFB2  F004         	goto	u630
  2037   000950  5027               	movf	(Clock_Init@s16Timeout+1)^0,w,c
  2038   000952  E106               	bnz	u631
  2039   000954  0426               	decf	Clock_Init@s16Timeout^0,w,c
  2040   000956  B0D8               	btfsc	status,0,c
  2041   000958  EFB0  F004         	goto	u631
  2042   00095C  EFB2  F004         	goto	u630
  2043   000960                     u631:
  2044   000960  EF90  F004         	goto	l141
  2045   000964                     u630:
  2046   000964  502C               	movf	Clock_Init@bItTimeEn^0,w,c
  2047   000966  B4D8               	btfsc	status,2,c
  2048   000968  EFB8  F004         	goto	u641
  2049   00096C  EFBA  F004         	goto	u640
  2050   000970                     u641:
  2051   000970  EF90  F004         	goto	l141
  2052   000974                     u640:
  2053   000974                     l1450:
  2054                           
  2055                           ;librerias/clock.c: 13:         if (0 == bStatus){
  2056   000974  5028               	movf	Clock_Init@bStatus^0,w,c
  2057   000976  A4D8               	btfss	status,2,c
  2058   000978  EFC0  F004         	goto	u651
  2059   00097C  EFC2  F004         	goto	u650
  2060   000980                     u651:
  2061   000980  EFC4  F004         	goto	l140
  2062   000984                     u650:
  2063   000984                     
  2064                           ;librerias/clock.c: 14:             returnCode = ERROR_CODE_TIMEOUT;
  2065   000984  0E01               	movlw	1
  2066   000986  6E2D               	movwf	Clock_Init@returnCode^0,c
  2067   000988                     l140:
  2068                           
  2069                           ;librerias/clock.c: 18:     if(ERROR_CODE_OK == returnCode){
  2070   000988  502D               	movf	Clock_Init@returnCode^0,w,c
  2071   00098A  A4D8               	btfss	status,2,c
  2072   00098C  EFCA  F004         	goto	u661
  2073   000990  EFCC  F004         	goto	u660
  2074   000994                     u661:
  2075   000994  EF03  F005         	goto	l146
  2076   000998                     u660:
  2077   000998                     
  2078                           ;librerias/clock.c: 19:         OSCCON2bits.INTSRC = 1;
  2079   000998  8AD2               	bsf	210,5,c	;volatile
  2080   00099A                     
  2081                           ;librerias/clock.c: 20:         OSCCONbits.IRCF = 7;
  2082   00099A  0E70               	movlw	112
  2083   00099C  12D3               	iorwf	211,f,c	;volatile
  2084   00099E                     l147:
  2085                           
  2086                           ;librerias/clock.c: 24:             bStatus = OSCCONbits.HFIOFS;
  2087   00099E  B4D3               	btfsc	211,2,c	;volatile
  2088   0009A0  EFD4  F004         	goto	u671
  2089   0009A4  EFD7  F004         	goto	u670
  2090   0009A8                     u671:
  2091   0009A8  0E01               	movlw	1
  2092   0009AA  EFD8  F004         	goto	u676
  2093   0009AE                     u670:
  2094   0009AE  0E00               	movlw	0
  2095   0009B0                     u676:
  2096   0009B0  6E29               	movwf	Clock_Init@bStatus_548^0,c
  2097   0009B2                     
  2098                           ;librerias/clock.c: 25:             s16Timeout--;
  2099   0009B2  0626               	decf	Clock_Init@s16Timeout^0,f,c
  2100   0009B4  A0D8               	btfss	status,0,c
  2101   0009B6  0627               	decf	(Clock_Init@s16Timeout+1)^0,f,c
  2102   0009B8                     
  2103                           ;librerias/clock.c: 26:         }while((0 == bStatus) && ((0 < s16Timeout) || (0 == bItT
      +                          imeEn)));
  2104   0009B8  5029               	movf	Clock_Init@bStatus_548^0,w,c
  2105   0009BA  A4D8               	btfss	status,2,c
  2106   0009BC  EFE2  F004         	goto	u681
  2107   0009C0  EFE4  F004         	goto	u680
  2108   0009C4                     u681:
  2109   0009C4  EFF9  F004         	goto	l1466
  2110   0009C8                     u680:
  2111   0009C8  BE27               	btfsc	(Clock_Init@s16Timeout+1)^0,7,c
  2112   0009CA  EFF1  F004         	goto	u690
  2113   0009CE  5027               	movf	(Clock_Init@s16Timeout+1)^0,w,c
  2114   0009D0  E106               	bnz	u691
  2115   0009D2  0426               	decf	Clock_Init@s16Timeout^0,w,c
  2116   0009D4  B0D8               	btfsc	status,0,c
  2117   0009D6  EFEF  F004         	goto	u691
  2118   0009DA  EFF1  F004         	goto	u690
  2119   0009DE                     u691:
  2120   0009DE  EFCF  F004         	goto	l147
  2121   0009E2                     u690:
  2122   0009E2  502C               	movf	Clock_Init@bItTimeEn^0,w,c
  2123   0009E4  B4D8               	btfsc	status,2,c
  2124   0009E6  EFF7  F004         	goto	u701
  2125   0009EA  EFF9  F004         	goto	u700
  2126   0009EE                     u701:
  2127   0009EE  EFCF  F004         	goto	l147
  2128   0009F2                     u700:
  2129   0009F2                     l1466:
  2130                           
  2131                           ;librerias/clock.c: 27:         if (0 == bStatus){
  2132   0009F2  5029               	movf	Clock_Init@bStatus_548^0,w,c
  2133   0009F4  A4D8               	btfss	status,2,c
  2134   0009F6  EFFF  F004         	goto	u711
  2135   0009FA  EF01  F005         	goto	u710
  2136   0009FE                     u711:
  2137   0009FE  EF03  F005         	goto	l146
  2138   000A02                     u710:
  2139   000A02                     
  2140                           ;librerias/clock.c: 28:             returnCode = ERROR_CODE_TIMEOUT;
  2141   000A02  0E01               	movlw	1
  2142   000A04  6E2D               	movwf	Clock_Init@returnCode^0,c
  2143   000A06                     l146:
  2144                           
  2145                           ;librerias/clock.c: 32:     if(ERROR_CODE_OK == returnCode){
  2146   000A06  502D               	movf	Clock_Init@returnCode^0,w,c
  2147   000A08  A4D8               	btfss	status,2,c
  2148   000A0A  EF09  F005         	goto	u721
  2149   000A0E  EF0B  F005         	goto	u720
  2150   000A12                     u721:
  2151   000A12  EF3F  F005         	goto	l152
  2152   000A16                     u720:
  2153   000A16                     l153:
  2154                           
  2155                           ;librerias/clock.c: 35:             bStatus = OSCCONbits.OSTS;
  2156   000A16  B6D3               	btfsc	211,3,c	;volatile
  2157   000A18  EF10  F005         	goto	u731
  2158   000A1C  EF13  F005         	goto	u730
  2159   000A20                     u731:
  2160   000A20  0E01               	movlw	1
  2161   000A22  EF14  F005         	goto	u736
  2162   000A26                     u730:
  2163   000A26  0E00               	movlw	0
  2164   000A28                     u736:
  2165   000A28  6E2A               	movwf	Clock_Init@bStatus_549^0,c
  2166   000A2A                     
  2167                           ;librerias/clock.c: 36:             s16Timeout--;
  2168   000A2A  0626               	decf	Clock_Init@s16Timeout^0,f,c
  2169   000A2C  A0D8               	btfss	status,0,c
  2170   000A2E  0627               	decf	(Clock_Init@s16Timeout+1)^0,f,c
  2171   000A30                     
  2172                           ;librerias/clock.c: 37:         }while((0 == bStatus) && ((0 < s16Timeout) || (0 == bItT
      +                          imeEn)));
  2173   000A30  502A               	movf	Clock_Init@bStatus_549^0,w,c
  2174   000A32  A4D8               	btfss	status,2,c
  2175   000A34  EF1E  F005         	goto	u741
  2176   000A38  EF20  F005         	goto	u740
  2177   000A3C                     u741:
  2178   000A3C  EF35  F005         	goto	l1480
  2179   000A40                     u740:
  2180   000A40  BE27               	btfsc	(Clock_Init@s16Timeout+1)^0,7,c
  2181   000A42  EF2D  F005         	goto	u750
  2182   000A46  5027               	movf	(Clock_Init@s16Timeout+1)^0,w,c
  2183   000A48  E106               	bnz	u751
  2184   000A4A  0426               	decf	Clock_Init@s16Timeout^0,w,c
  2185   000A4C  B0D8               	btfsc	status,0,c
  2186   000A4E  EF2B  F005         	goto	u751
  2187   000A52  EF2D  F005         	goto	u750
  2188   000A56                     u751:
  2189   000A56  EF0B  F005         	goto	l153
  2190   000A5A                     u750:
  2191   000A5A  502C               	movf	Clock_Init@bItTimeEn^0,w,c
  2192   000A5C  B4D8               	btfsc	status,2,c
  2193   000A5E  EF33  F005         	goto	u761
  2194   000A62  EF35  F005         	goto	u760
  2195   000A66                     u761:
  2196   000A66  EF0B  F005         	goto	l153
  2197   000A6A                     u760:
  2198   000A6A                     l1480:
  2199                           
  2200                           ;librerias/clock.c: 38:         if (0 == bStatus){
  2201   000A6A  502A               	movf	Clock_Init@bStatus_549^0,w,c
  2202   000A6C  A4D8               	btfss	status,2,c
  2203   000A6E  EF3B  F005         	goto	u771
  2204   000A72  EF3D  F005         	goto	u770
  2205   000A76                     u771:
  2206   000A76  EF3F  F005         	goto	l152
  2207   000A7A                     u770:
  2208   000A7A                     
  2209                           ;librerias/clock.c: 39:             returnCode = ERROR_CODE_TIMEOUT;
  2210   000A7A  0E01               	movlw	1
  2211   000A7C  6E2D               	movwf	Clock_Init@returnCode^0,c
  2212   000A7E                     l152:
  2213                           
  2214                           ;librerias/clock.c: 42:         if(ERROR_CODE_OK == returnCode){
  2215   000A7E  502D               	movf	Clock_Init@returnCode^0,w,c
  2216   000A80  A4D8               	btfss	status,2,c
  2217   000A82  EF45  F005         	goto	u781
  2218   000A86  EF47  F005         	goto	u780
  2219   000A8A                     u781:
  2220   000A8A  EF7D  F005         	goto	l158
  2221   000A8E                     u780:
  2222   000A8E                     
  2223                           ;librerias/clock.c: 43:         OSCTUNEbits.SPLLMULT = 1;
  2224   000A8E  8E9B               	bsf	155,7,c	;volatile
  2225                           
  2226                           ;librerias/clock.c: 44:         OSCCON2bits.PLLEN = 1;
  2227   000A90  88D2               	bsf	210,4,c	;volatile
  2228   000A92                     l159:
  2229                           
  2230                           ;librerias/clock.c: 47:             bStatus = OSCCON2bits.PLLRDY;
  2231   000A92  BED2               	btfsc	210,7,c	;volatile
  2232   000A94  EF4E  F005         	goto	u791
  2233   000A98  EF51  F005         	goto	u790
  2234   000A9C                     u791:
  2235   000A9C  0E01               	movlw	1
  2236   000A9E  EF52  F005         	goto	u796
  2237   000AA2                     u790:
  2238   000AA2  0E00               	movlw	0
  2239   000AA4                     u796:
  2240   000AA4  6E2B               	movwf	Clock_Init@bStatus_552^0,c
  2241   000AA6                     
  2242                           ;librerias/clock.c: 48:             s16Timeout--;
  2243   000AA6  0626               	decf	Clock_Init@s16Timeout^0,f,c
  2244   000AA8  A0D8               	btfss	status,0,c
  2245   000AAA  0627               	decf	(Clock_Init@s16Timeout+1)^0,f,c
  2246   000AAC                     
  2247                           ;librerias/clock.c: 49:         }while((0 == bStatus) && ((0 < s16Timeout) || (0 == bItT
      +                          imeEn)));
  2248   000AAC  502B               	movf	Clock_Init@bStatus_552^0,w,c
  2249   000AAE  A4D8               	btfss	status,2,c
  2250   000AB0  EF5C  F005         	goto	u801
  2251   000AB4  EF5E  F005         	goto	u800
  2252   000AB8                     u801:
  2253   000AB8  EF73  F005         	goto	l1496
  2254   000ABC                     u800:
  2255   000ABC  BE27               	btfsc	(Clock_Init@s16Timeout+1)^0,7,c
  2256   000ABE  EF6B  F005         	goto	u810
  2257   000AC2  5027               	movf	(Clock_Init@s16Timeout+1)^0,w,c
  2258   000AC4  E106               	bnz	u811
  2259   000AC6  0426               	decf	Clock_Init@s16Timeout^0,w,c
  2260   000AC8  B0D8               	btfsc	status,0,c
  2261   000ACA  EF69  F005         	goto	u811
  2262   000ACE  EF6B  F005         	goto	u810
  2263   000AD2                     u811:
  2264   000AD2  EF49  F005         	goto	l159
  2265   000AD6                     u810:
  2266   000AD6  502C               	movf	Clock_Init@bItTimeEn^0,w,c
  2267   000AD8  B4D8               	btfsc	status,2,c
  2268   000ADA  EF71  F005         	goto	u821
  2269   000ADE  EF73  F005         	goto	u820
  2270   000AE2                     u821:
  2271   000AE2  EF49  F005         	goto	l159
  2272   000AE6                     u820:
  2273   000AE6                     l1496:
  2274                           
  2275                           ;librerias/clock.c: 50:         if (0 == bStatus){
  2276   000AE6  502B               	movf	Clock_Init@bStatus_552^0,w,c
  2277   000AE8  A4D8               	btfss	status,2,c
  2278   000AEA  EF79  F005         	goto	u831
  2279   000AEE  EF7B  F005         	goto	u830
  2280   000AF2                     u831:
  2281   000AF2  EF7D  F005         	goto	l158
  2282   000AF6                     u830:
  2283   000AF6                     
  2284                           ;librerias/clock.c: 51:             returnCode = ERROR_CODE_TIMEOUT;
  2285   000AF6  0E01               	movlw	1
  2286   000AF8  6E2D               	movwf	Clock_Init@returnCode^0,c
  2287   000AFA                     l158:
  2288                           
  2289                           ;librerias/clock.c: 56:     if(ERROR_CODE_OK == returnCode){
  2290   000AFA  502D               	movf	Clock_Init@returnCode^0,w,c
  2291   000AFC  A4D8               	btfss	status,2,c
  2292   000AFE  EF83  F005         	goto	u841
  2293   000B02  EF85  F005         	goto	u840
  2294   000B06                     u841:
  2295   000B06  EF88  F005         	goto	l165
  2296   000B0A                     u840:
  2297   000B0A                     
  2298                           ;librerias/clock.c: 57:         OSCCON2bits.PRISD = 0;
  2299   000B0A  94D2               	bcf	210,2,c	;volatile
  2300   000B0C                     
  2301                           ;librerias/clock.c: 58:         OSCCONbits.SCS = 0;
  2302   000B0C  0EFC               	movlw	-4
  2303   000B0E  16D3               	andwf	211,f,c	;volatile
  2304   000B10                     l165:
  2305   000B10  0012               	return		;funcret
  2306   000B12                     __end_of_Clock_Init:
  2307                           	callstack 0
  2308                           
  2309                           	psect	rparam
  2310   000000                     
  2311                           	psect	config
  2312                           
  2313                           ;Config register CONFIG1L @ 0x300000
  2314                           ;	PLL Selection
  2315                           ;	PLLSEL = PLL3X, 3x clock multiplier
  2316                           ;	PLL Enable Configuration bit
  2317                           ;	CFGPLLEN = ON, PLL Enabled
  2318                           ;	CPU System Clock Postscaler
  2319                           ;	CPUDIV = NOCLKDIV, CPU uses system clock (no divide)
  2320                           ;	Low Speed USB mode with 48 MHz system clock
  2321                           ;	LS48MHZ = SYS48X8, System clock at 48 MHz, USB clock divider is set to 8
  2322   300000                     	org	3145728
  2323   300000  23                 	db	35
  2324                           
  2325                           ;Config register CONFIG1H @ 0x300001
  2326                           ;	Oscillator Selection
  2327                           ;	FOSC = INTOSCCLKO, Internal oscillator, clock output on OSC2
  2328                           ;	Primary Oscillator Shutdown
  2329                           ;	PCLKEN = OFF, Primary oscillator shutdown firmware controlled
  2330                           ;	Fail-Safe Clock Monitor
  2331                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2332                           ;	Internal/External Oscillator Switchover
  2333                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2334   300001                     	org	3145729
  2335   300001  09                 	db	9
  2336                           
  2337                           ;Config register CONFIG2L @ 0x300002
  2338                           ;	Power-up Timer Enable
  2339                           ;	nPWRTEN = OFF, Power up timer disabled
  2340                           ;	Brown-out Reset Enable
  2341                           ;	BOREN = SBORDIS, BOR enabled in hardware (SBOREN is ignored)
  2342                           ;	Brown-out Reset Voltage
  2343                           ;	BORV = 190, BOR set to 1.9V nominal
  2344                           ;	Low-Power Brown-out Reset
  2345                           ;	nLPBOR = OFF, Low-Power Brown-out Reset disabled
  2346   300002                     	org	3145730
  2347   300002  5F                 	db	95
  2348                           
  2349                           ;Config register CONFIG2H @ 0x300003
  2350                           ;	Watchdog Timer Enable bits
  2351                           ;	WDTEN = OFF, WDT disabled in hardware (SWDTEN ignored)
  2352                           ;	Watchdog Timer Postscaler
  2353                           ;	WDTPS = 32768, 1:32768
  2354   300003                     	org	3145731
  2355   300003  3C                 	db	60
  2356                           
  2357                           ; Padding undefined space
  2358   300004                     	org	3145732
  2359   300004  FF                 	db	255
  2360                           
  2361                           ;Config register CONFIG3H @ 0x300005
  2362                           ;	CCP2 MUX bit
  2363                           ;	CCP2MX = RC1, CCP2 input/output is multiplexed with RC1
  2364                           ;	PORTB A/D Enable bit
  2365                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  2366                           ;	Timer3 Clock Input MUX bit
  2367                           ;	T3CMX = RC0, T3CKI function is on RC0
  2368                           ;	SDO Output MUX bit
  2369                           ;	SDOMX = RB3, SDO function is on RB3
  2370                           ;	Master Clear Reset Pin Enable
  2371                           ;	MCLRE = ON, MCLR pin enabled; RE3 input disabled
  2372   300005                     	org	3145733
  2373   300005  D3                 	db	211
  2374                           
  2375                           ;Config register CONFIG4L @ 0x300006
  2376                           ;	Stack Full/Underflow Reset
  2377                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2378                           ;	Single-Supply ICSP Enable bit
  2379                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
  2380                           ;	Dedicated In-Circuit Debug/Programming Port Enable
  2381                           ;	ICPRT = OFF, ICPORT disabled
  2382                           ;	Extended Instruction Set Enable bit
  2383                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled
  2384                           ;	Background Debugger Enable bit
  2385                           ;	DEBUG = 0x1, unprogrammed default
  2386   300006                     	org	3145734
  2387   300006  85                 	db	133
  2388                           
  2389                           ; Padding undefined space
  2390   300007                     	org	3145735
  2391   300007  FF                 	db	255
  2392                           
  2393                           ;Config register CONFIG5L @ 0x300008
  2394                           ;	Block 0 Code Protect
  2395                           ;	CP0 = OFF, Block 0 is not code-protected
  2396                           ;	Block 1 Code Protect
  2397                           ;	CP1 = OFF, Block 1 is not code-protected
  2398                           ;	Block 2 Code Protect
  2399                           ;	CP2 = OFF, Block 2 is not code-protected
  2400                           ;	Block 3 Code Protect
  2401                           ;	CP3 = OFF, Block 3 is not code-protected
  2402   300008                     	org	3145736
  2403   300008  0F                 	db	15
  2404                           
  2405                           ;Config register CONFIG5H @ 0x300009
  2406                           ;	Boot Block Code Protect
  2407                           ;	CPB = OFF, Boot block is not code-protected
  2408                           ;	Data EEPROM Code Protect
  2409                           ;	CPD = OFF, Data EEPROM is not code-protected
  2410   300009                     	org	3145737
  2411   300009  C0                 	db	192
  2412                           
  2413                           ;Config register CONFIG6L @ 0x30000A
  2414                           ;	Block 0 Write Protect
  2415                           ;	WRT0 = OFF, Block 0 (0800-1FFFh) is not write-protected
  2416                           ;	Block 1 Write Protect
  2417                           ;	WRT1 = OFF, Block 1 (2000-3FFFh) is not write-protected
  2418                           ;	Block 2 Write Protect
  2419                           ;	WRT2 = OFF, Block 2 (04000-5FFFh) is not write-protected
  2420                           ;	Block 3 Write Protect
  2421                           ;	WRT3 = OFF, Block 3 (06000-7FFFh) is not write-protected
  2422   30000A                     	org	3145738
  2423   30000A  0F                 	db	15
  2424                           
  2425                           ;Config register CONFIG6H @ 0x30000B
  2426                           ;	Configuration Registers Write Protect
  2427                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  2428                           ;	Boot Block Write Protect
  2429                           ;	WRTB = OFF, Boot block (0000-7FFh) is not write-protected
  2430                           ;	Data EEPROM Write Protect
  2431                           ;	WRTD = OFF, Data EEPROM is not write-protected
  2432   30000B                     	org	3145739
  2433   30000B  E0                 	db	224
  2434                           
  2435                           ;Config register CONFIG7L @ 0x30000C
  2436                           ;	Block 0 Table Read Protect
  2437                           ;	EBTR0 = OFF, Block 0 is not protected from table reads executed in other blocks
  2438                           ;	Block 1 Table Read Protect
  2439                           ;	EBTR1 = OFF, Block 1 is not protected from table reads executed in other blocks
  2440                           ;	Block 2 Table Read Protect
  2441                           ;	EBTR2 = OFF, Block 2 is not protected from table reads executed in other blocks
  2442                           ;	Block 3 Table Read Protect
  2443                           ;	EBTR3 = OFF, Block 3 is not protected from table reads executed in other blocks
  2444   30000C                     	org	3145740
  2445   30000C  0F                 	db	15
  2446                           
  2447                           ;Config register CONFIG7H @ 0x30000D
  2448                           ;	Boot Block Table Read Protect
  2449                           ;	EBTRB = OFF, Boot block is not protected from table reads executed in other blocks
  2450   30000D                     	org	3145741
  2451   30000D  40                 	db	64
  2452                           tosu	equ	0xFFF
  2453                           tosh	equ	0xFFE
  2454                           tosl	equ	0xFFD
  2455                           stkptr	equ	0xFFC
  2456                           pclatu	equ	0xFFB
  2457                           pclath	equ	0xFFA
  2458                           pcl	equ	0xFF9
  2459                           tblptru	equ	0xFF8
  2460                           tblptrh	equ	0xFF7
  2461                           tblptrl	equ	0xFF6
  2462                           tablat	equ	0xFF5
  2463                           prodh	equ	0xFF4
  2464                           prodl	equ	0xFF3
  2465                           indf0	equ	0xFEF
  2466                           postinc0	equ	0xFEE
  2467                           postdec0	equ	0xFED
  2468                           preinc0	equ	0xFEC
  2469                           plusw0	equ	0xFEB
  2470                           fsr0h	equ	0xFEA
  2471                           fsr0l	equ	0xFE9
  2472                           wreg	equ	0xFE8
  2473                           indf1	equ	0xFE7
  2474                           postinc1	equ	0xFE6
  2475                           postdec1	equ	0xFE5
  2476                           preinc1	equ	0xFE4
  2477                           plusw1	equ	0xFE3
  2478                           fsr1h	equ	0xFE2
  2479                           fsr1l	equ	0xFE1
  2480                           bsr	equ	0xFE0
  2481                           indf2	equ	0xFDF
  2482                           postinc2	equ	0xFDE
  2483                           postdec2	equ	0xFDD
  2484                           preinc2	equ	0xFDC
  2485                           plusw2	equ	0xFDB
  2486                           fsr2h	equ	0xFDA
  2487                           fsr2l	equ	0xFD9
  2488                           status	equ	0xFD8

Data Sizes:
    Strings     249
    Constant    0
    Data        0
    BSS         37
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     27      64
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK3           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    printf@fmt	PTR const unsigned char  size(1) Largest target is 26
		 -> STR_1(CODE[7]), STR_10(CODE[9]), STR_11(CODE[14]), STR_12(CODE[17]), 
		 -> STR_13(CODE[10]), STR_14(CODE[14]), STR_15(CODE[17]), STR_16(CODE[11]), 
		 -> STR_17(CODE[14]), STR_18(CODE[17]), STR_19(CODE[8]), STR_2(CODE[10]), 
		 -> STR_20(CODE[25]), STR_21(CODE[24]), STR_22(CODE[26]), STR_3(CODE[11]), 
		 -> STR_4(CODE[18]), STR_5(CODE[18]), STR_6(CODE[11]), STR_7(CODE[9]), 
		 -> STR_8(CODE[8]), STR_9(CODE[13]), 

    S1006$buffer	PTR unsigned char  size(2) Largest target is 0

    S1006$source	PTR const unsigned char  size(2) Largest target is 0

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(COMRAM[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 26
		 -> STR_1(CODE[7]), STR_10(CODE[9]), STR_11(CODE[14]), STR_12(CODE[17]), 
		 -> STR_13(CODE[10]), STR_14(CODE[14]), STR_15(CODE[17]), STR_16(CODE[11]), 
		 -> STR_17(CODE[14]), STR_18(CODE[17]), STR_19(CODE[8]), STR_2(CODE[10]), 
		 -> STR_20(CODE[25]), STR_21(CODE[24]), STR_22(CODE[26]), STR_3(CODE[11]), 
		 -> STR_4(CODE[18]), STR_5(CODE[18]), STR_6(CODE[11]), STR_7(CODE[9]), 
		 -> STR_8(CODE[8]), STR_9(CODE[13]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 26
		 -> STR_1(CODE[7]), STR_10(CODE[9]), STR_11(CODE[14]), STR_12(CODE[17]), 
		 -> STR_13(CODE[10]), STR_14(CODE[14]), STR_15(CODE[17]), STR_16(CODE[11]), 
		 -> STR_17(CODE[14]), STR_18(CODE[17]), STR_19(CODE[8]), STR_2(CODE[10]), 
		 -> STR_20(CODE[25]), STR_21(CODE[24]), STR_22(CODE[26]), STR_3(CODE[11]), 
		 -> STR_4(CODE[18]), STR_5(CODE[18]), STR_6(CODE[11]), STR_7(CODE[9]), 
		 -> STR_8(CODE[8]), STR_9(CODE[13]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _main->_UART_Init
    _UART_Rx->_UART_ErrorHandler
    _UART_ErrorHandler->_printf
    _UART_config_show->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_fputc
    _fputc->_putch
    _putch->_UART_Tx

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    7067
                                             26 COMRAM     1     1      0
                         _Clock_Init
                          _UART_Init
                            _UART_Rx
                            _UART_Tx
 ---------------------------------------------------------------------------------
 (1) _UART_Rx                                              0     0      0    3135
                  _UART_ErrorHandler
                    _UART_Rx_FRAMING
                   _UART_Rx_OVERFLOW
 ---------------------------------------------------------------------------------
 (2) _UART_Rx_OVERFLOW                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UART_Rx_FRAMING                                      1     1      0       0
 ---------------------------------------------------------------------------------
 (2) _UART_ErrorHandler                                    3     3      0    3135
                                             22 COMRAM     3     3      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            4     0      4    3287
                                             22 COMRAM     4     0      4
                   _UART_config_show
                   _UART_select_baud
 ---------------------------------------------------------------------------------
 (2) _UART_select_baud                                     8     4      4      98
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _UART_config_show                                     0     0      0    3091
                             _printf
 ---------------------------------------------------------------------------------
 (3) _printf                                               4     3      1    3091
                                             20 COMRAM     2     1      1
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             5     1      4    1367
                                             15 COMRAM     5     1      4
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                            9     5      4    1020
                                             11 COMRAM     4     0      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4     660
                                              2 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0      30
                                              1 COMRAM     1     1      0
                            _UART_Tx
 ---------------------------------------------------------------------------------
 (1) _UART_Tx                                              1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Clock_Init                                           8     6      2     584
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Clock_Init
   _UART_Init
     _UART_config_show
       _printf
         _vfprintf
           _vfpfcnvrt
             _fputc
               _putch
                 _UART_Tx
     _UART_select_baud
   _UART_Rx
     _UART_ErrorHandler
       _printf
     _UART_Rx_FRAMING
     _UART_Rx_OVERFLOW
   _UART_Tx

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      28        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      12        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      11        0.0%
BITBANK4           100      0       0      15        0.0%
BANK4              100      0       0      10        0.0%
BITBANK3           100      0       0      13        0.0%
BANK3              100      0       0      14        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     1B      40       1       67.4%
BITBIGSFRll         41      0       0      26        0.0%
BITBIGSFRhhh        29      0       0      20        0.0%
BITBIGSFRhhl        19      0       0      21        0.0%
BITBIGSFRlhh         C      0       0      23        0.0%
BITBIGSFRhlh         7      0       0      22        0.0%
BITBIGSFRlhll        6      0       0      25        0.0%
BITBIGSFRlhlh        2      0       0      24        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      40      27        0.0%
DATA                 0      0      40       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Sat Sep 28 23:17:00 2024

                        l71 0C9E                          l83 0D24                          l75 0CC8  
                        l91 0FB0                          l79 0CFA                          l88 0D4E  
                        u10 1028                          u11 1024  UART_ErrorHandler@errorCode 003E  
                       l110 102C                         l104 0C50                         l113 104A  
                       l121 0FE6                         l107 101A                         l140 0988  
                       l124 1040                         l141 0920                         l117 0FCC  
                       l152 0A7E                         l153 0A16                         l146 0A06  
                       l147 099E                         l171 0E92                         l165 0B10  
                       l158 0AFA                         l159 0A92                         l910 1028  
                       l912 1044                         l908 101A                         l880 0F00  
                       l857 1000                         l886 0F86                         l898 0E18  
                       u140 0FC0                         u141 0FBC                         u150 0FDC  
                       u151 0FD8                         u500 0EB6                         u501 0EB2  
                       u510 0F7E                         u511 0F7A                         u600 091E  
                       u520 0C68                         u521 0C64                         u610 0930  
                       u530 0C8A                         u611 092A                         u531 0C86  
                       u700 09F2                         u620 094A                         u460 0D62  
                       u540 0CB4                         u701 09EE                         u621 0946  
                       u461 0D5E                         u541 0CB0                         u710 0A02  
                       u630 0964                         u470 0D74                         u550 0CE6  
                       u711 09FE                         u631 0960                         u471 0D70  
                       u551 0CE2                         u800 0ABC                         u720 0A16  
                       u640 0974                         u616 0932                         u480 0D9C  
                       u560 0D10                         u801 0AB8                         u721 0A12  
                       u641 0970                         u481 0D98                         u561 0D0C  
                       u810 0AD6                         u730 0A26                         u650 0984  
                       u490 0DD2                         u570 0D3A                         u811 0AD2  
                       u731 0A20                         u651 0980                         u491 0DCE  
                       u571 0D36                         u820 0AE6                         u740 0A40  
                       u660 0998                         u580 0E2C                         u821 0AE2  
                       u741 0A3C                         u661 0994                         u581 0E28  
                       u830 0AF6                         u750 0A5A                         u670 09AE  
                       u590 091C                         u831 0AF2                         u751 0A56  
                       u671 09A8                         u591 0916                         u840 0B0A  
                       u760 0A6A                         u736 0A28                         u680 09C8  
                       u841 0B06                         u761 0A66                         u681 09C4  
                       u770 0A7A                         u690 09E2                         u850 0F38  
                       u771 0A76                         u691 09DE                         u851 0F34  
                       u780 0A8E                         u676 09B0                         u781 0A8A  
                       u790 0AA2                         u791 0A9C                         u796 0AA4  
                       wreg 0FE8                  _TXSTA1bits 0FAC                        l1300 0F4E  
                      l1302 0F62                        l1310 0FEC                        l1070 0FCA  
                      l1062 0FB2                        l1304 0F7E                        l1320 0C74  
                      l1064 0FC0                        l1330 0CB4                        l1322 0C7C  
                      l1314 0C52                        l1082 0FE4                        l1074 0FCE  
                      l1066 0FC4                        l1500 0B0A                        l1308 0FE8  
                      l1340 0D02                        l1332 0CC0                        l1324 0C8A  
                      l1316 0C5A                        l1420 0E3C                        l1076 0FDC  
                      l1502 0B0C                        l1270 0D74                        l1350 0D46  
                      l1342 0D10                        l1334 0CD8                        l1326 0C96  
                      l1318 0C68                        l1510 0FA2                        l1422 0E48  
                      l1414 0E1C                        l1078 0FDE                        l1440 0920  
                      l1272 0D7E                        l1280 0E94                        l1344 0D1C  
                      l1336 0CE6                        l1328 0CA6                        l1600 0C3A  
                      l1360 0B3A                        l1352 0B12                        l1520 0FAC  
                      l1512 0FA4                        l1424 0E54                        l1450 0974  
                      l1442 0934                        l1434 08FC                        l1274 0D9C  
                      l1266 0D50                        l1282 0EB6                        l1346 0D2C  
                      l1338 0CF2                        l1610 0C02                        l1602 0BCA  
                      l1362 0B46                        l1354 0B16                        l1514 0FA6  
                      l1506 0F88                        l1418 0E30                        l1522 102E  
                      l1530 0F0E                        l1460 09B8                        l1452 0984  
                      l1444 093A                        l1436 0900                        l1276 0DD2  
                      l1268 0D62                        l1284 0EBE                        l1292 0EDA  
                      l1348 0D3A                        l1612 0C10                        l1604 0BD8  
                      l1364 0B52                        l1356 0B22                        l1372 0B76  
                      l1516 0FA8                        l1508 0F8E                        l1428 0E60  
                      l1524 103E                        l1532 0F22                        l1470 0A16  
                      l1462 09C8                        l1454 0998                        l1446 094A  
                      l1438 0920                        l1286 0ECA                        l1614 0C2C  
                      l1606 0BE6                        l1366 0B5E                        l1358 0B2E  
                      l1518 0FAA                        l1534 0F28                        l1480 0A6A  
                      l1472 0A2A                        l1464 09E2                        l1456 099A  
                      l1448 0964                        l1288 0ECE                        l1608 0BF4  
                      l1368 0B6A                        l1536 0F38                        l1528 0F02  
                      l1490 0AAC                        l1482 0A7A                        l1474 0A30  
                      l1466 09F2                        l1458 09B2                        l1298 0F46  
                      l1538 0F3E                        l1492 0ABC                        l1484 0A8E  
                      l1476 0A40                        l1468 0A02                        l1494 0AD6  
                      l1486 0A92                        l1478 0A5A                        l1496 0AE6  
                      l1488 0AA6                        l1498 0AF6                        l1594 0E74  
                      l1596 0B94                        l1598 0C1E                        STR_1 08F3  
                      STR_2 08C7                        STR_3 08B2                        STR_4 085E  
                      STR_5 084C                        STR_6 089C                        STR_7 08DA  
                      STR_8 08EB                        STR_9 088F                        _CREN 7D5C  
                      _SPEN 7D5F                        _TRMT 7D61             __end_of_UART_Rx 1042  
           __end_of_UART_Tx 102E                        _dbuf 0001                        _main 0F02  
                      _prec 0023                        fsr1h 0FE2                        fsr2h 0FDA  
                      indf2 0FDF                        fsr1l 0FE1                        fsr2l 0FD9  
                      start 0002                ___param_bank 0000    UART_select_baud@baudrate 0026  
                _Clock_Init 08FC                _BAUDCON1bits 0FB8                       ?_main 0026  
                     STR_10 08D1                       STR_11 0881                       STR_12 0870  
                     STR_20 081B                       STR_13 08BD                       STR_21 0834  
                     STR_14 0881                       STR_22 0801                       STR_15 0870  
                     STR_16 08A7                       STR_17 0881                       STR_18 0870  
                     STR_19 08E3                       _BRGH1 7D62                       _RC1IF 7CF5  
                     _RCREG 0FAE           Clock_Init@bStatus 0028                vfpfcnvrt@fmt 0033  
          _UART_config_show 0C52                       _SPBRG 0FAF                       _TXEN1 7D65  
                     _SYNC1 7D64            ?_UART_Rx_FRAMING 0026                       _flags 0025  
                     _fputc 0D50                       _width 0021                       _putch 1042  
                     main@x 0040                       tablat 0FF5                       status 0FD8  
           __initialization 1002                __end_of_main 0F46                      ??_main 0040  
             __activetblptr 0002                   ??_UART_Rx 003F                   ??_UART_Tx 0026  
                    ?_fputc 0028                      _BRG161 7DC3                      ?_putch 0026  
                    _RCREG1 0FAE                      _SPBRGH 0FB0                      _TRISC6 7CA6  
                    _TRISC7 7CA7                      _TXREG1 0FAD                vfprintf@cfmt 0039  
         __end_of_UART_Init 0FB2                 ?_Clock_Init 0026                      clear_0 1008  
                    isa$std 0001                      _printf 0FE8           ?_UART_Rx_OVERFLOW 0026  
                    fputc@c 0028          ??_UART_Rx_OVERFLOW 0026                __mediumconst 0000  
                    tblptrh 0FF7                      tblptrl 0FF6                      tblptru 0FF8  
          __end_of_vfprintf 0F88                  __accesstop 0060     __end_of__initialization 100E  
             ___rparam_used 0001            _UART_select_baud 0B12              __pcstackCOMRAM 0026  
             __end_of_fputc 0E1A           _UART_ErrorHandler 0E1A               __end_of_putch 104C  
        ?_UART_ErrorHandler 0026         ??_UART_ErrorHandler 003C                     ??_fputc 002C  
                   ??_putch 0027    __end_of_UART_config_show 0D50         Clock_Init@bItTimeEn 002C  
 __end_of_UART_ErrorHandler 0E94                     ?_printf 003A                     _UART_Rx 102E  
                   _UART_Tx 1018                     __Hparam 0000                     __Lparam 0000  
                 ?_vfprintf 0035                __psmallconst 0800                     __pcinit 1002  
                   __ramtop 0800                     __ptext0 0F02                     __ptext1 102E  
                   __ptext2 0FB2                     __ptext3 0FCE                     __ptext4 0E1A  
                   __ptext5 0F88                     __ptext6 0B12                     __ptext7 0C52  
                   __ptext8 0FE8                     __ptext9 0F46                 UART_Tx@dato 0026  
      end_of_initialization 100E                     fputc@fp 002A               __Lmediumconst 0000  
     Clock_Init@bStatus_552 002B       Clock_Init@bStatus_548 0029       Clock_Init@bStatus_549 002A  
         __end_of_vfpfcnvrt 0F02                   _RCSTAbits 0FAB                     postdec2 0FDD  
                   postinc0 0FEE                     postinc1 0FE6                     postinc2 0FDE  
              ??_Clock_Init 0028                  ??_vfprintf 0039                   _UART_Init 0F88  
  __end_of_UART_select_baud 0C52          __end_of_Clock_Init 0B12                   _TXSTAbits 0FAC  
               vfpfcnvrt@ap 0034                 vfpfcnvrt@fp 0031                  ?_UART_Init 003C  
            __end_of_printf 1002         start_initialization 1002        Clock_Init@s16Timeout 0026  
         ?_UART_config_show 0026                 vfprintf@fmt 0037           ??_UART_Rx_FRAMING 0026  
        ??_UART_config_show 003C                    ??_printf 003B                 __pbssCOMRAM 0001  
                  ?_UART_Rx 0026                    ?_UART_Tx 0026                 ??_UART_Init 0040  
               __smallconst 0800            _UART_Rx_OVERFLOW 0FB2                   _vfpfcnvrt 0E94  
         UART_Init@baudrate 003C           ?_UART_select_baud 0026          ??_UART_select_baud 002A  
                  __Hrparam 0000                  vfprintf@ap 0038                    __Lrparam 0000  
                vfprintf@fp 0035                  ?_vfpfcnvrt 0031                    __ptext10 0E94  
                  __ptext11 0D50                    __ptext12 1042                    __ptext13 1018  
                  __ptext14 08FC             _UART_Rx_FRAMING 0FCE                 _OSCCON2bits 0FD2  
                  isa$xinst 0000                    _vfprintf 0F46                   printf@fmt 003A  
                 putch@data 0027                 _OSCTUNEbits 0F9B                  _OSCCONbits 0FD3  
                  printf@ap 003B                 ??_vfpfcnvrt 0035    __end_of_UART_Rx_OVERFLOW 0FCE  
      Clock_Init@returnCode 002D     __end_of_UART_Rx_FRAMING 0FE8  
