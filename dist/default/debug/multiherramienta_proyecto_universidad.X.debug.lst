

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Fri Oct 11 19:47:58 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F45K50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    43                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    44                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    45   000000                     
    46                           ; Generated 12/10/2023 GMT
    47                           ; 
    48                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    49                           ; All rights reserved.
    50                           ; 
    51                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    52                           ; 
    53                           ; Redistribution and use in source and binary forms, with or without modification, are
    54                           ; permitted provided that the following conditions are met:
    55                           ; 
    56                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    57                           ;        conditions and the following disclaimer.
    58                           ; 
    59                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    60                           ;        of conditions and the following disclaimer in the documentation and/or other
    61                           ;        materials provided with the distribution. Publication is not required when
    62                           ;        this file is used in an embedded application.
    63                           ; 
    64                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    65                           ;        software without specific prior written permission.
    66                           ; 
    67                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    68                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    69                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    70                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    71                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    72                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    73                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    74                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    75                           ; 
    76                           ; 
    77                           ; Code-generator required, PIC18F45K50 Definitions
    78                           ; 
    79                           ; SFR Addresses
    80   000000                     
    81                           	psect	idataCOMRAM
    82   006B1A                     __pidataCOMRAM:
    83                           	callstack 0
    84                           
    85                           ;initializer for _comandos
    86   006B1A  B1                 	db	low STR_24
    87   006B1B  7F                 	db	high STR_24
    88   006B1C  BA                 	db	low STR_25
    89   006B1D  7F                 	db	high STR_25
    90   006B1E  C3                 	db	low STR_26
    91   006B1F  7F                 	db	high STR_26
    92                           
    93                           	psect	mediumconst
    94   007D48                     __pmediumconst:
    95                           	callstack 0
    96   007D48  00                 	db	0
    97   007D49                     _cantParams:
    98                           	callstack 0
    99   007D49  01                 	db	1
   100   007D4A  02                 	db	2
   101   007D4B  03                 	db	3
   102   007D4C                     __end_of_cantParams:
   103                           	callstack 0
   104   007D4C  0A                 	db	10
   105   007D4D                     __end_of_charStop:
   106                           	callstack 0
   107   000000                     _RCREG	set	4014
   108   000000                     _TXREG1	set	4013
   109   000000                     _SPBRG	set	4015
   110   000000                     _SPBRGH	set	4016
   111   000000                     _BRG161	set	32195
   112   000000                     _RCREG1	set	4014
   113   000000                     _TXSTAbits	set	4012
   114   000000                     _RCSTAbits	set	4011
   115   000000                     _BAUDCON1	set	4024
   116   000000                     _TXSTA1bits	set	4012
   117   000000                     _TRMT	set	32097
   118   000000                     _TRISC7	set	31911
   119   000000                     _CREN	set	32092
   120   000000                     _TXEN1	set	32101
   121   000000                     _BRGH1	set	32098
   122   000000                     _ANSELC	set	3933
   123   000000                     _TRISC6	set	31910
   124   000000                     _SPEN	set	32095
   125   000000                     _SYNC1	set	32100
   126   000000                     _OSCCON2bits	set	4050
   127   000000                     _OSCTUNEbits	set	3995
   128   000000                     _RC1IF	set	31989
   129   000000                     _OSCCONbits	set	4051
   130   007D4D                     STR_32:
   131   007D4D  5B                 	db	91	;'['
   132   007D4E  45                 	db	69	;'E'
   133   007D4F  73                 	db	115	;'s'
   134   007D50  63                 	db	99	;'c'
   135   007D51  61                 	db	97	;'a'
   136   007D52  70                 	db	112	;'p'
   137   007D53  65                 	db	101	;'e'
   138   007D54  5D                 	db	93	;']'
   139   007D55  20                 	db	32
   140   007D56  20                 	db	32
   141   007D57  20                 	db	32
   142   007D58  20                 	db	32
   143   007D59  43                 	db	67	;'C'
   144   007D5A  61                 	db	97	;'a'
   145   007D5B  6E                 	db	110	;'n'
   146   007D5C  63                 	db	99	;'c'
   147   007D5D  65                 	db	101	;'e'
   148   007D5E  6C                 	db	108	;'l'
   149   007D5F  61                 	db	97	;'a'
   150   007D60  72                 	db	114	;'r'
   151   007D61  20                 	db	32
   152   007D62  6C                 	db	108	;'l'
   153   007D63  61                 	db	97	;'a'
   154   007D64  20                 	db	32
   155   007D65  65                 	db	101	;'e'
   156   007D66  73                 	db	115	;'s'
   157   007D67  63                 	db	99	;'c'
   158   007D68  72                 	db	114	;'r'
   159   007D69  69                 	db	105	;'i'
   160   007D6A  74                 	db	116	;'t'
   161   007D6B  75                 	db	117	;'u'
   162   007D6C  72                 	db	114	;'r'
   163   007D6D  61                 	db	97	;'a'
   164   007D6E  20                 	db	32
   165   007D6F  64                 	db	100	;'d'
   166   007D70  65                 	db	101	;'e'
   167   007D71  20                 	db	32
   168   007D72  75                 	db	117	;'u'
   169   007D73  6E                 	db	110	;'n'
   170   007D74  20                 	db	32
   171   007D75  63                 	db	99	;'c'
   172   007D76  6F                 	db	111	;'o'
   173   007D77  6D                 	db	109	;'m'
   174   007D78  61                 	db	97	;'a'
   175   007D79  6E                 	db	110	;'n'
   176   007D7A  64                 	db	100	;'d'
   177   007D7B  6F                 	db	111	;'o'
   178   007D7C  0D                 	db	13
   179   007D7D  0A                 	db	10
   180   007D7E  00                 	db	0
   181   007D7F                     STR_29:
   182   007D7F  3C                 	db	60	;'<'
   183   007D80  63                 	db	99	;'c'
   184   007D81  6F                 	db	111	;'o'
   185   007D82  6D                 	db	109	;'m'
   186   007D83  61                 	db	97	;'a'
   187   007D84  6E                 	db	110	;'n'
   188   007D85  64                 	db	100	;'d'
   189   007D86  6F                 	db	111	;'o'
   190   007D87  3E                 	db	62	;'>'
   191   007D88  20                 	db	32
   192   007D89  3C                 	db	60	;'<'
   193   007D8A  70                 	db	112	;'p'
   194   007D8B  61                 	db	97	;'a'
   195   007D8C  72                 	db	114	;'r'
   196   007D8D  61                 	db	97	;'a'
   197   007D8E  6D                 	db	109	;'m'
   198   007D8F  65                 	db	101	;'e'
   199   007D90  74                 	db	116	;'t'
   200   007D91  72                 	db	114	;'r'
   201   007D92  6F                 	db	111	;'o'
   202   007D93  31                 	db	49	;'1'
   203   007D94  3E                 	db	62	;'>'
   204   007D95  20                 	db	32
   205   007D96  3C                 	db	60	;'<'
   206   007D97  70                 	db	112	;'p'
   207   007D98  61                 	db	97	;'a'
   208   007D99  72                 	db	114	;'r'
   209   007D9A  61                 	db	97	;'a'
   210   007D9B  6D                 	db	109	;'m'
   211   007D9C  65                 	db	101	;'e'
   212   007D9D  74                 	db	116	;'t'
   213   007D9E  72                 	db	114	;'r'
   214   007D9F  6F                 	db	111	;'o'
   215   007DA0  4E                 	db	78	;'N'
   216   007DA1  3E                 	db	62	;'>'
   217   007DA2  0D                 	db	13
   218   007DA3  0A                 	db	10
   219   007DA4  00                 	db	0
   220   007DA5                     STR_31:
   221   007DA5  5B                 	db	91	;'['
   222   007DA6  42                 	db	66	;'B'
   223   007DA7  61                 	db	97	;'a'
   224   007DA8  63                 	db	99	;'c'
   225   007DA9  6B                 	db	107	;'k'
   226   007DAA  73                 	db	115	;'s'
   227   007DAB  70                 	db	112	;'p'
   228   007DAC  61                 	db	97	;'a'
   229   007DAD  63                 	db	99	;'c'
   230   007DAE  65                 	db	101	;'e'
   231   007DAF  5D                 	db	93	;']'
   232   007DB0  20                 	db	32
   233   007DB1  50                 	db	80	;'P'
   234   007DB2  61                 	db	97	;'a'
   235   007DB3  72                 	db	114	;'r'
   236   007DB4  61                 	db	97	;'a'
   237   007DB5  20                 	db	32
   238   007DB6  62                 	db	98	;'b'
   239   007DB7  6F                 	db	111	;'o'
   240   007DB8  72                 	db	114	;'r'
   241   007DB9  72                 	db	114	;'r'
   242   007DBA  61                 	db	97	;'a'
   243   007DBB  72                 	db	114	;'r'
   244   007DBC  20                 	db	32
   245   007DBD  75                 	db	117	;'u'
   246   007DBE  6E                 	db	110	;'n'
   247   007DBF  20                 	db	32
   248   007DC0  63                 	db	99	;'c'
   249   007DC1  61                 	db	97	;'a'
   250   007DC2  72                 	db	114	;'r'
   251   007DC3  61                 	db	97	;'a'
   252   007DC4  63                 	db	99	;'c'
   253   007DC5  74                 	db	116	;'t'
   254   007DC6  65                 	db	101	;'e'
   255   007DC7  72                 	db	114	;'r'
   256   007DC8  0D                 	db	13
   257   007DC9  0A                 	db	10
   258   007DCA  00                 	db	0
   259   007DCB                     STR_30:
   260   007DCB  5B                 	db	91	;'['
   261   007DCC  45                 	db	69	;'E'
   262   007DCD  6E                 	db	110	;'n'
   263   007DCE  74                 	db	116	;'t'
   264   007DCF  65                 	db	101	;'e'
   265   007DD0  72                 	db	114	;'r'
   266   007DD1  5D                 	db	93	;']'
   267   007DD2  20                 	db	32
   268   007DD3  20                 	db	32
   269   007DD4  20                 	db	32
   270   007DD5  20                 	db	32
   271   007DD6  20                 	db	32
   272   007DD7  50                 	db	80	;'P'
   273   007DD8  61                 	db	97	;'a'
   274   007DD9  72                 	db	114	;'r'
   275   007DDA  61                 	db	97	;'a'
   276   007DDB  20                 	db	32
   277   007DDC  65                 	db	101	;'e'
   278   007DDD  6E                 	db	110	;'n'
   279   007DDE  76                 	db	118	;'v'
   280   007DDF  69                 	db	105	;'i'
   281   007DE0  61                 	db	97	;'a'
   282   007DE1  72                 	db	114	;'r'
   283   007DE2  20                 	db	32
   284   007DE3  65                 	db	101	;'e'
   285   007DE4  6C                 	db	108	;'l'
   286   007DE5  20                 	db	32
   287   007DE6  63                 	db	99	;'c'
   288   007DE7  6F                 	db	111	;'o'
   289   007DE8  6D                 	db	109	;'m'
   290   007DE9  61                 	db	97	;'a'
   291   007DEA  6E                 	db	110	;'n'
   292   007DEB  64                 	db	100	;'d'
   293   007DEC  6F                 	db	111	;'o'
   294   007DED  0D                 	db	13
   295   007DEE  0A                 	db	10
   296   007DEF  00                 	db	0
   297   007DF0                     STR_34:
   298   007DF0  0D                 	db	13
   299   007DF1  0A                 	db	10
   300   007DF2  4C                 	db	76	;'L'
   301   007DF3  69                 	db	105	;'i'
   302   007DF4  6E                 	db	110	;'n'
   303   007DF5  65                 	db	101	;'e'
   304   007DF6  61                 	db	97	;'a'
   305   007DF7  20                 	db	32
   306   007DF8  64                 	db	100	;'d'
   307   007DF9  65                 	db	101	;'e'
   308   007DFA  20                 	db	32
   309   007DFB  63                 	db	99	;'c'
   310   007DFC  6F                 	db	111	;'o'
   311   007DFD  6D                 	db	109	;'m'
   312   007DFE  61                 	db	97	;'a'
   313   007DFF  6E                 	db	110	;'n'
   314   007E00  64                 	db	100	;'d'
   315   007E01  6F                 	db	111	;'o'
   316   007E02  73                 	db	115	;'s'
   317   007E03  20                 	db	32
   318   007E04  64                 	db	100	;'d'
   319   007E05  65                 	db	101	;'e'
   320   007E06  73                 	db	115	;'s'
   321   007E07  61                 	db	97	;'a'
   322   007E08  63                 	db	99	;'c'
   323   007E09  74                 	db	116	;'t'
   324   007E0A  69                 	db	105	;'i'
   325   007E0B  76                 	db	118	;'v'
   326   007E0C  61                 	db	97	;'a'
   327   007E0D  64                 	db	100	;'d'
   328   007E0E  61                 	db	97	;'a'
   329   007E0F  0D                 	db	13
   330   007E10  0A                 	db	10
   331   007E11  0D                 	db	13
   332   007E12  0A                 	db	10
   333   007E13  00                 	db	0
   334   007E14                     STR_27:
   335   007E14  4C                 	db	76	;'L'
   336   007E15  69                 	db	105	;'i'
   337   007E16  6E                 	db	110	;'n'
   338   007E17  65                 	db	101	;'e'
   339   007E18  61                 	db	97	;'a'
   340   007E19  20                 	db	32
   341   007E1A  64                 	db	100	;'d'
   342   007E1B  65                 	db	101	;'e'
   343   007E1C  20                 	db	32
   344   007E1D  63                 	db	99	;'c'
   345   007E1E  6F                 	db	111	;'o'
   346   007E1F  6D                 	db	109	;'m'
   347   007E20  61                 	db	97	;'a'
   348   007E21  6E                 	db	110	;'n'
   349   007E22  64                 	db	100	;'d'
   350   007E23  6F                 	db	111	;'o'
   351   007E24  73                 	db	115	;'s'
   352   007E25  20                 	db	32
   353   007E26  69                 	db	105	;'i'
   354   007E27  6E                 	db	110	;'n'
   355   007E28  69                 	db	105	;'i'
   356   007E29  63                 	db	99	;'c'
   357   007E2A  69                 	db	105	;'i'
   358   007E2B  61                 	db	97	;'a'
   359   007E2C  64                 	db	100	;'d'
   360   007E2D  61                 	db	97	;'a'
   361   007E2E  0D                 	db	13
   362   007E2F  0A                 	db	10
   363   007E30  00                 	db	0
   364   007E31                     STR_21:
   365   007E31  45                 	db	69	;'E'
   366   007E32  52                 	db	82	;'R'
   367   007E33  52                 	db	82	;'R'
   368   007E34  4F                 	db	79	;'O'
   369   007E35  52                 	db	82	;'R'
   370   007E36  5F                 	db	95	;'_'
   371   007E37  43                 	db	67	;'C'
   372   007E38  4F                 	db	79	;'O'
   373   007E39  44                 	db	68	;'D'
   374   007E3A  45                 	db	69	;'E'
   375   007E3B  5F                 	db	95	;'_'
   376   007E3C  55                 	db	85	;'U'
   377   007E3D  41                 	db	65	;'A'
   378   007E3E  52                 	db	82	;'R'
   379   007E3F  54                 	db	84	;'T'
   380   007E40  5F                 	db	95	;'_'
   381   007E41  4F                 	db	79	;'O'
   382   007E42  56                 	db	86	;'V'
   383   007E43  45                 	db	69	;'E'
   384   007E44  52                 	db	82	;'R'
   385   007E45  46                 	db	70	;'F'
   386   007E46  4C                 	db	76	;'L'
   387   007E47  4F                 	db	79	;'O'
   388   007E48  57                 	db	87	;'W'
   389   007E49  0D                 	db	13
   390   007E4A  0A                 	db	10
   391   007E4B  00                 	db	0
   392   007E4C                     STR_23:
   393   007E4C  45                 	db	69	;'E'
   394   007E4D  52                 	db	82	;'R'
   395   007E4E  52                 	db	82	;'R'
   396   007E4F  4F                 	db	79	;'O'
   397   007E50  52                 	db	82	;'R'
   398   007E51  5F                 	db	95	;'_'
   399   007E52  43                 	db	67	;'C'
   400   007E53  4F                 	db	79	;'O'
   401   007E54  44                 	db	68	;'D'
   402   007E55  45                 	db	69	;'E'
   403   007E56  5F                 	db	95	;'_'
   404   007E57  55                 	db	85	;'U'
   405   007E58  41                 	db	65	;'A'
   406   007E59  52                 	db	82	;'R'
   407   007E5A  54                 	db	84	;'T'
   408   007E5B  5F                 	db	95	;'_'
   409   007E5C  43                 	db	67	;'C'
   410   007E5D  4F                 	db	79	;'O'
   411   007E5E  4E                 	db	78	;'N'
   412   007E5F  46                 	db	70	;'F'
   413   007E60  49                 	db	73	;'I'
   414   007E61  47                 	db	71	;'G'
   415   007E62  20                 	db	32
   416   007E63  0D                 	db	13
   417   007E64  0A                 	db	10
   418   007E65  00                 	db	0
   419   007E66                     STR_22:
   420   007E66  45                 	db	69	;'E'
   421   007E67  52                 	db	82	;'R'
   422   007E68  52                 	db	82	;'R'
   423   007E69  4F                 	db	79	;'O'
   424   007E6A  52                 	db	82	;'R'
   425   007E6B  5F                 	db	95	;'_'
   426   007E6C  43                 	db	67	;'C'
   427   007E6D  4F                 	db	79	;'O'
   428   007E6E  44                 	db	68	;'D'
   429   007E6F  45                 	db	69	;'E'
   430   007E70  5F                 	db	95	;'_'
   431   007E71  55                 	db	85	;'U'
   432   007E72  41                 	db	65	;'A'
   433   007E73  52                 	db	82	;'R'
   434   007E74  54                 	db	84	;'T'
   435   007E75  5F                 	db	95	;'_'
   436   007E76  46                 	db	70	;'F'
   437   007E77  52                 	db	82	;'R'
   438   007E78  41                 	db	65	;'A'
   439   007E79  4D                 	db	77	;'M'
   440   007E7A  49                 	db	73	;'I'
   441   007E7B  4E                 	db	78	;'N'
   442   007E7C  47                 	db	71	;'G'
   443   007E7D  0D                 	db	13
   444   007E7E  0A                 	db	10
   445   007E7F  00                 	db	0
   446   007E80                     STR_44:
   447   007E80  0D                 	db	13
   448   007E81  0A                 	db	10
   449   007E82  45                 	db	69	;'E'
   450   007E83  43                 	db	67	;'C'
   451   007E84  5F                 	db	95	;'_'
   452   007E85  43                 	db	67	;'C'
   453   007E86  4C                 	db	76	;'L'
   454   007E87  5F                 	db	95	;'_'
   455   007E88  57                 	db	87	;'W'
   456   007E89  52                 	db	82	;'R'
   457   007E8A  4F                 	db	79	;'O'
   458   007E8B  4E                 	db	78	;'N'
   459   007E8C  47                 	db	71	;'G'
   460   007E8D  4E                 	db	78	;'N'
   461   007E8E  55                 	db	85	;'U'
   462   007E8F  4D                 	db	77	;'M'
   463   007E90  50                 	db	80	;'P'
   464   007E91  41                 	db	65	;'A'
   465   007E92  52                 	db	82	;'R'
   466   007E93  41                 	db	65	;'A'
   467   007E94  4D                 	db	77	;'M'
   468   007E95  53                 	db	83	;'S'
   469   007E96  0D                 	db	13
   470   007E97  0A                 	db	10
   471   007E98  00                 	db	0
   472   007E99                     STR_45:
   473   007E99  0D                 	db	13
   474   007E9A  0A                 	db	10
   475   007E9B  45                 	db	69	;'E'
   476   007E9C  43                 	db	67	;'C'
   477   007E9D  5F                 	db	95	;'_'
   478   007E9E  43                 	db	67	;'C'
   479   007E9F  4C                 	db	76	;'L'
   480   007EA0  5F                 	db	95	;'_'
   481   007EA1  57                 	db	87	;'W'
   482   007EA2  52                 	db	82	;'R'
   483   007EA3  4F                 	db	79	;'O'
   484   007EA4  4E                 	db	78	;'N'
   485   007EA5  47                 	db	71	;'G'
   486   007EA6  43                 	db	67	;'C'
   487   007EA7  4F                 	db	79	;'O'
   488   007EA8  4D                 	db	77	;'M'
   489   007EA9  4D                 	db	77	;'M'
   490   007EAA  41                 	db	65	;'A'
   491   007EAB  4E                 	db	78	;'N'
   492   007EAC  44                 	db	68	;'D'
   493   007EAD  0D                 	db	13
   494   007EAE  0A                 	db	10
   495   007EAF  00                 	db	0
   496   007EB0                     STR_43:
   497   007EB0  0D                 	db	13
   498   007EB1  0A                 	db	10
   499   007EB2  45                 	db	69	;'E'
   500   007EB3  43                 	db	67	;'C'
   501   007EB4  5F                 	db	95	;'_'
   502   007EB5  43                 	db	67	;'C'
   503   007EB6  4C                 	db	76	;'L'
   504   007EB7  5F                 	db	95	;'_'
   505   007EB8  4D                 	db	77	;'M'
   506   007EB9  41                 	db	65	;'A'
   507   007EBA  58                 	db	88	;'X'
   508   007EBB  4E                 	db	78	;'N'
   509   007EBC  55                 	db	85	;'U'
   510   007EBD  4D                 	db	77	;'M'
   511   007EBE  50                 	db	80	;'P'
   512   007EBF  41                 	db	65	;'A'
   513   007EC0  52                 	db	82	;'R'
   514   007EC1  41                 	db	65	;'A'
   515   007EC2  4D                 	db	77	;'M'
   516   007EC3  53                 	db	83	;'S'
   517   007EC4  0D                 	db	13
   518   007EC5  0A                 	db	10
   519   007EC6  00                 	db	0
   520   007EC7                     STR_42:
   521   007EC7  0D                 	db	13
   522   007EC8  0A                 	db	10
   523   007EC9  45                 	db	69	;'E'
   524   007ECA  43                 	db	67	;'C'
   525   007ECB  5F                 	db	95	;'_'
   526   007ECC  43                 	db	67	;'C'
   527   007ECD  4C                 	db	76	;'L'
   528   007ECE  5F                 	db	95	;'_'
   529   007ECF  57                 	db	87	;'W'
   530   007ED0  4F                 	db	79	;'O'
   531   007ED1  52                 	db	82	;'R'
   532   007ED2  44                 	db	68	;'D'
   533   007ED3  4F                 	db	79	;'O'
   534   007ED4  56                 	db	86	;'V'
   535   007ED5  45                 	db	69	;'E'
   536   007ED6  52                 	db	82	;'R'
   537   007ED7  0D                 	db	13
   538   007ED8  0A                 	db	10
   539   007ED9  00                 	db	0
   540   007EDA                     STR_40:
   541   007EDA  0D                 	db	13
   542   007EDB  0A                 	db	10
   543   007EDC  45                 	db	69	;'E'
   544   007EDD  43                 	db	67	;'C'
   545   007EDE  5F                 	db	95	;'_'
   546   007EDF  43                 	db	67	;'C'
   547   007EE0  4C                 	db	76	;'L'
   548   007EE1  5F                 	db	95	;'_'
   549   007EE2  42                 	db	66	;'B'
   550   007EE3  55                 	db	85	;'U'
   551   007EE4  46                 	db	70	;'F'
   552   007EE5  46                 	db	70	;'F'
   553   007EE6  4F                 	db	79	;'O'
   554   007EE7  56                 	db	86	;'V'
   555   007EE8  45                 	db	69	;'E'
   556   007EE9  52                 	db	82	;'R'
   557   007EEA  0D                 	db	13
   558   007EEB  0A                 	db	10
   559   007EEC  00                 	db	0
   560   007EED                     STR_39:
   561   007EED  50                 	db	80	;'P'
   562   007EEE  61                 	db	97	;'a'
   563   007EEF  72                 	db	114	;'r'
   564   007EF0  61                 	db	97	;'a'
   565   007EF1  6D                 	db	109	;'m'
   566   007EF2  65                 	db	101	;'e'
   567   007EF3  74                 	db	116	;'t'
   568   007EF4  72                 	db	114	;'r'
   569   007EF5  6F                 	db	111	;'o'
   570   007EF6  20                 	db	32
   571   007EF7  25                 	db	37
   572   007EF8  64                 	db	100	;'d'
   573   007EF9  3A                 	db	58	;':'
   574   007EFA  20                 	db	32
   575   007EFB  25                 	db	37
   576   007EFC  73                 	db	115	;'s'
   577   007EFD  0D                 	db	13
   578   007EFE  0A                 	db	10
   579   007EFF  00                 	db	0
   580   007F00                     STR_41:
   581   007F00  0D                 	db	13
   582   007F01  0A                 	db	10
   583   007F02  45                 	db	69	;'E'
   584   007F03  43                 	db	67	;'C'
   585   007F04  5F                 	db	95	;'_'
   586   007F05  43                 	db	67	;'C'
   587   007F06  4C                 	db	76	;'L'
   588   007F07  5F                 	db	95	;'_'
   589   007F08  4E                 	db	78	;'N'
   590   007F09  4F                 	db	79	;'O'
   591   007F0A  57                 	db	87	;'W'
   592   007F0B  4F                 	db	79	;'O'
   593   007F0C  52                 	db	82	;'R'
   594   007F0D  44                 	db	68	;'D'
   595   007F0E  53                 	db	83	;'S'
   596   007F0F  0D                 	db	13
   597   007F10  0A                 	db	10
   598   007F11  00                 	db	0
   599   007F12                     STR_5:
   600   007F12  62                 	db	98	;'b'
   601   007F13  61                 	db	97	;'a'
   602   007F14  6A                 	db	106	;'j'
   603   007F15  61                 	db	97	;'a'
   604   007F16  20                 	db	32
   605   007F17  76                 	db	118	;'v'
   606   007F18  65                 	db	101	;'e'
   607   007F19  6C                 	db	108	;'l'
   608   007F1A  6F                 	db	111	;'o'
   609   007F1B  63                 	db	99	;'c'
   610   007F1C  69                 	db	105	;'i'
   611   007F1D  64                 	db	100	;'d'
   612   007F1E  61                 	db	97	;'a'
   613   007F1F  64                 	db	100	;'d'
   614   007F20  20                 	db	32
   615   007F21  0D                 	db	13
   616   007F22  0A                 	db	10
   617   007F23  00                 	db	0
   618   007F24                     STR_4:
   619   007F24  61                 	db	97	;'a'
   620   007F25  6C                 	db	108	;'l'
   621   007F26  74                 	db	116	;'t'
   622   007F27  61                 	db	97	;'a'
   623   007F28  20                 	db	32
   624   007F29  76                 	db	118	;'v'
   625   007F2A  65                 	db	101	;'e'
   626   007F2B  6C                 	db	108	;'l'
   627   007F2C  6F                 	db	111	;'o'
   628   007F2D  63                 	db	99	;'c'
   629   007F2E  69                 	db	105	;'i'
   630   007F2F  64                 	db	100	;'d'
   631   007F30  61                 	db	97	;'a'
   632   007F31  64                 	db	100	;'d'
   633   007F32  20                 	db	32
   634   007F33  0D                 	db	13
   635   007F34  0A                 	db	10
   636   007F35  00                 	db	0
   637   007F36                     STR_12:
   638   007F36  44                 	db	68	;'D'
   639   007F37  65                 	db	101	;'e'
   640   007F38  73                 	db	115	;'s'
   641   007F39  68                 	db	104	;'h'
   642   007F3A  61                 	db	97	;'a'
   643   007F3B  62                 	db	98	;'b'
   644   007F3C  69                 	db	105	;'i'
   645   007F3D  6C                 	db	108	;'l'
   646   007F3E  69                 	db	105	;'i'
   647   007F3F  74                 	db	116	;'t'
   648   007F40  61                 	db	97	;'a'
   649   007F41  64                 	db	100	;'d'
   650   007F42  6F                 	db	111	;'o'
   651   007F43  20                 	db	32
   652   007F44  0D                 	db	13
   653   007F45  0A                 	db	10
   654   007F46  00                 	db	0
   655   007F47                     STR_38:
   656   007F47  43                 	db	67	;'C'
   657   007F48  6F                 	db	111	;'o'
   658   007F49  6D                 	db	109	;'m'
   659   007F4A  61                 	db	97	;'a'
   660   007F4B  6E                 	db	110	;'n'
   661   007F4C  64                 	db	100	;'d'
   662   007F4D  6F                 	db	111	;'o'
   663   007F4E  3A                 	db	58	;':'
   664   007F4F  20                 	db	32
   665   007F50  25                 	db	37
   666   007F51  73                 	db	115	;'s'
   667   007F52  0D                 	db	13
   668   007F53  0A                 	db	10
   669   007F54  00                 	db	0
   670   007F55                     STR_11:
   671   007F55  48                 	db	72	;'H'
   672   007F56  61                 	db	97	;'a'
   673   007F57  62                 	db	98	;'b'
   674   007F58  69                 	db	105	;'i'
   675   007F59  6C                 	db	108	;'l'
   676   007F5A  69                 	db	105	;'i'
   677   007F5B  74                 	db	116	;'t'
   678   007F5C  61                 	db	97	;'a'
   679   007F5D  64                 	db	100	;'d'
   680   007F5E  6F                 	db	111	;'o'
   681   007F5F  20                 	db	32
   682   007F60  0D                 	db	13
   683   007F61  0A                 	db	10
   684   007F62  00                 	db	0
   685   007F63                     STR_9:
   686   007F63  78                 	db	120	;'x'
   687   007F64  20                 	db	32
   688   007F65  62                 	db	98	;'b'
   689   007F66  61                 	db	97	;'a'
   690   007F67  75                 	db	117	;'u'
   691   007F68  64                 	db	100	;'d'
   692   007F69  69                 	db	105	;'i'
   693   007F6A  6F                 	db	111	;'o'
   694   007F6B  73                 	db	115	;'s'
   695   007F6C  20                 	db	32
   696   007F6D  0D                 	db	13
   697   007F6E  0A                 	db	10
   698   007F6F  00                 	db	0
   699   007F70                     STR_28:
   700   007F70  53                 	db	83	;'S'
   701   007F71  69                 	db	105	;'i'
   702   007F72  6E                 	db	110	;'n'
   703   007F73  74                 	db	116	;'t'
   704   007F74  61                 	db	97	;'a'
   705   007F75  78                 	db	120	;'x'
   706   007F76  69                 	db	105	;'i'
   707   007F77  73                 	db	115	;'s'
   708   007F78  3A                 	db	58	;':'
   709   007F79  0D                 	db	13
   710   007F7A  0A                 	db	10
   711   007F7B  00                 	db	0
   712   007F7C                     STR_6:
   713   007F7C  42                 	db	66	;'B'
   714   007F7D  61                 	db	97	;'a'
   715   007F7E  75                 	db	117	;'u'
   716   007F7F  64                 	db	100	;'d'
   717   007F80  72                 	db	114	;'r'
   718   007F81  61                 	db	97	;'a'
   719   007F82  74                 	db	116	;'t'
   720   007F83  65                 	db	101	;'e'
   721   007F84  3A                 	db	58	;':'
   722   007F85  20                 	db	32
   723   007F86  00                 	db	0
   724   007F87                     STR_16:
   725   007F87  52                 	db	82	;'R'
   726   007F88  65                 	db	101	;'e'
   727   007F89  63                 	db	99	;'c'
   728   007F8A  65                 	db	101	;'e'
   729   007F8B  70                 	db	112	;'p'
   730   007F8C  74                 	db	116	;'t'
   731   007F8D  6F                 	db	111	;'o'
   732   007F8E  72                 	db	114	;'r'
   733   007F8F  3A                 	db	58	;':'
   734   007F90  20                 	db	32
   735   007F91  00                 	db	0
   736   007F92                     STR_3:
   737   007F92  41                 	db	65	;'A'
   738   007F93  73                 	db	115	;'s'
   739   007F94  69                 	db	105	;'i'
   740   007F95  6E                 	db	110	;'n'
   741   007F96  63                 	db	99	;'c'
   742   007F97  72                 	db	114	;'r'
   743   007F98  6F                 	db	111	;'o'
   744   007F99  6E                 	db	110	;'n'
   745   007F9A  6F                 	db	111	;'o'
   746   007F9B  20                 	db	32
   747   007F9C  00                 	db	0
   748   007F9D                     STR_13:
   749   007F9D  54                 	db	84	;'T'
   750   007F9E  72                 	db	114	;'r'
   751   007F9F  61                 	db	97	;'a'
   752   007FA0  6E                 	db	110	;'n'
   753   007FA1  73                 	db	115	;'s'
   754   007FA2  6F                 	db	111	;'o'
   755   007FA3  72                 	db	114	;'r'
   756   007FA4  3A                 	db	58	;':'
   757   007FA5  20                 	db	32
   758   007FA6  00                 	db	0
   759   007FA7                     STR_2:
   760   007FA7  53                 	db	83	;'S'
   761   007FA8  69                 	db	105	;'i'
   762   007FA9  6E                 	db	110	;'n'
   763   007FAA  63                 	db	99	;'c'
   764   007FAB  72                 	db	114	;'r'
   765   007FAC  6F                 	db	111	;'o'
   766   007FAD  6E                 	db	110	;'n'
   767   007FAE  6F                 	db	111	;'o'
   768   007FAF  20                 	db	32
   769   007FB0  00                 	db	0
   770   007FB1                     STR_24:
   771   007FB1  63                 	db	99	;'c'
   772   007FB2  6F                 	db	111	;'o'
   773   007FB3  6D                 	db	109	;'m'
   774   007FB4  61                 	db	97	;'a'
   775   007FB5  6E                 	db	110	;'n'
   776   007FB6  64                 	db	100	;'d'
   777   007FB7  6F                 	db	111	;'o'
   778   007FB8  31                 	db	49	;'1'
   779   007FB9  00                 	db	0
   780   007FBA                     STR_25:
   781   007FBA  63                 	db	99	;'c'
   782   007FBB  6F                 	db	111	;'o'
   783   007FBC  6D                 	db	109	;'m'
   784   007FBD  61                 	db	97	;'a'
   785   007FBE  6E                 	db	110	;'n'
   786   007FBF  64                 	db	100	;'d'
   787   007FC0  6F                 	db	111	;'o'
   788   007FC1  32                 	db	50	;'2'
   789   007FC2  00                 	db	0
   790   007FC3                     STR_26:
   791   007FC3  63                 	db	99	;'c'
   792   007FC4  6F                 	db	111	;'o'
   793   007FC5  6D                 	db	109	;'m'
   794   007FC6  61                 	db	97	;'a'
   795   007FC7  6E                 	db	110	;'n'
   796   007FC8  64                 	db	100	;'d'
   797   007FC9  6F                 	db	111	;'o'
   798   007FCA  33                 	db	51	;'3'
   799   007FCB  00                 	db	0
   800   007FCC                     STR_10:
   801   007FCC  50                 	db	80	;'P'
   802   007FCD  75                 	db	117	;'u'
   803   007FCE  65                 	db	101	;'e'
   804   007FCF  72                 	db	114	;'r'
   805   007FD0  74                 	db	116	;'t'
   806   007FD1  6F                 	db	111	;'o'
   807   007FD2  3A                 	db	58	;':'
   808   007FD3  20                 	db	32
   809   007FD4  00                 	db	0
   810   007FD5                     STR_7:
   811   007FD5  31                 	db	49	;'1'
   812   007FD6  36                 	db	54	;'6'
   813   007FD7  20                 	db	32
   814   007FD8  62                 	db	98	;'b'
   815   007FD9  69                 	db	105	;'i'
   816   007FDA  74                 	db	116	;'t'
   817   007FDB  73                 	db	115	;'s'
   818   007FDC  20                 	db	32
   819   007FDD  00                 	db	0
   820   007FDE                     STR_20:
   821   007FDE  45                 	db	69	;'E'
   822   007FDF  72                 	db	114	;'r'
   823   007FE0  72                 	db	114	;'r'
   824   007FE1  6F                 	db	111	;'o'
   825   007FE2  72                 	db	114	;'r'
   826   007FE3  3A                 	db	58	;':'
   827   007FE4  20                 	db	32
   828   007FE5  00                 	db	0
   829   007FE6                     STR_8:
   830   007FE6  38                 	db	56	;'8'
   831   007FE7  20                 	db	32
   832   007FE8  62                 	db	98	;'b'
   833   007FE9  69                 	db	105	;'i'
   834   007FEA  74                 	db	116	;'t'
   835   007FEB  73                 	db	115	;'s'
   836   007FEC  20                 	db	32
   837   007FED  00                 	db	0
   838   007FEE                     STR_1:
   839   007FEE  4D                 	db	77	;'M'
   840   007FEF  6F                 	db	111	;'o'
   841   007FF0  64                 	db	100	;'d'
   842   007FF1  6F                 	db	111	;'o'
   843   007FF2  3A                 	db	58	;':'
   844   007FF3  20                 	db	32
   845   007FF4  00                 	db	0
   846   007FF5                     STR_33:
   847   007FF5  0D                 	db	13
   848   007FF6  0A                 	db	10
   849   007FF7  3E                 	db	62	;'>'
   850   007FF8  20                 	db	32
   851   007FF9  00                 	db	0
   852   007FFA                     STR_37:
   853   007FFA  08                 	db	8
   854   007FFB  20                 	db	32
   855   007FFC  08                 	db	8
   856   007FFD  00                 	db	0
   857   007FFE  00                 	db	0	; dummy byte at the end
   858   000000                     
   859                           ; #config settings
   860                           
   861                           	psect	cinit
   862   006D2E                     __pcinit:
   863                           	callstack 0
   864   006D2E                     start_initialization:
   865                           	callstack 0
   866   006D2E                     __initialization:
   867                           	callstack 0
   868                           
   869                           ; Initialize objects allocated to COMRAM (6 bytes)
   870                           ; load TBLPTR registers with __pidataCOMRAM
   871   006D2E  0E1A               	movlw	low __pidataCOMRAM
   872   006D30  6EF6               	movwf	tblptrl,c
   873   006D32  0E6B               	movlw	high __pidataCOMRAM
   874   006D34  6EF7               	movwf	tblptrh,c
   875   006D36  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   876   006D38  6EF8               	movwf	tblptru,c
   877   006D3A  EE00  F04A         	lfsr	0,__pdataCOMRAM
   878   006D3E  EE10 F006          	lfsr	1,6
   879   006D42                     copy_data0:
   880   006D42  0009               	tblrd		*+
   881   006D44  CFF5 FFEE          	movff	tablat,postinc0
   882   006D48  50E5               	movf	postdec1,w,c
   883   006D4A  50E1               	movf	fsr1l,w,c
   884   006D4C  E1FA               	bnz	copy_data0
   885                           
   886                           ; Clear objects allocated to BANK1 (80 bytes)
   887   006D4E  EE01  F000         	lfsr	0,__pbssBANK1
   888   006D52  0E50               	movlw	80
   889   006D54                     clear_0:
   890   006D54  6AEE               	clrf	postinc0,c
   891   006D56  06E8               	decf	wreg,f,c
   892   006D58  E1FD               	bnz	clear_0
   893                           
   894                           ; Clear objects allocated to BANK0 (132 bytes)
   895   006D5A  EE00  F060         	lfsr	0,__pbssBANK0
   896   006D5E  0E84               	movlw	132
   897   006D60                     clear_1:
   898   006D60  6AEE               	clrf	postinc0,c
   899   006D62  06E8               	decf	wreg,f,c
   900   006D64  E1FD               	bnz	clear_1
   901                           
   902                           ; Clear objects allocated to COMRAM (24 bytes)
   903   006D66  EE00  F032         	lfsr	0,__pbssCOMRAM
   904   006D6A  0E18               	movlw	24
   905   006D6C                     clear_2:
   906   006D6C  6AEE               	clrf	postinc0,c
   907   006D6E  06E8               	decf	wreg,f,c
   908   006D70  E1FD               	bnz	clear_2
   909   006D72                     end_of_initialization:
   910                           	callstack 0
   911   006D72                     __end_of__initialization:
   912                           	callstack 0
   913   006D72  0E00               	movlw	low (__Lmediumconst shr (0+16))
   914   006D74  6EF8               	movwf	tblptru,c
   915   006D76  0100               	movlb	0
   916   006D78  EFBE  F036         	goto	_main	;jump to C main() function
   917                           
   918                           	psect	bssCOMRAM
   919   000032                     __pbssCOMRAM:
   920                           	callstack 0
   921   000032                     _width:
   922                           	callstack 0
   923   000032                     	ds	2
   924   000034                     _prec:
   925                           	callstack 0
   926   000034                     	ds	2
   927   000036                     _flags:
   928                           	callstack 0
   929   000036                     	ds	1
   930   000037                     _flagCommandReady:
   931                           	callstack 0
   932   000037                     	ds	1
   933   000038                     _commandLineEnable:
   934                           	callstack 0
   935   000038                     	ds	1
   936   000039                     _buffCount:
   937                           	callstack 0
   938   000039                     	ds	1
   939   00003A                     _command:
   940                           	callstack 0
   941   00003A                     	ds	16
   942                           
   943                           	psect	dataCOMRAM
   944   00004A                     __pdataCOMRAM:
   945                           	callstack 0
   946   00004A                     _comandos:
   947                           	callstack 0
   948   00004A                     	ds	6
   949                           
   950                           	psect	bssBANK0
   951   000060                     __pbssBANK0:
   952                           	callstack 0
   953   000060                     _charBuff:
   954                           	callstack 0
   955   000060                     	ds	100
   956   0000C4                     _dbuf:
   957                           	callstack 0
   958   0000C4                     	ds	32
   959                           
   960                           	psect	bssBANK1
   961   000100                     __pbssBANK1:
   962                           	callstack 0
   963   000100                     _param:
   964                           	callstack 0
   965   000100                     	ds	80
   966                           
   967                           	psect	cstackCOMRAM
   968   000001                     __pcstackCOMRAM:
   969                           	callstack 0
   970   000001                     ?___awdiv:
   971                           	callstack 0
   972   000001                     ?___awmod:
   973                           	callstack 0
   974   000001                     UART_Tx@dato:
   975                           	callstack 0
   976   000001                     clearBuff@i:
   977                           	callstack 0
   978   000001                     countWords@numWords:
   979                           	callstack 0
   980   000001                     Clock_Init@s16Timeout:
   981                           	callstack 0
   982   000001                     clearArray@array:
   983                           	callstack 0
   984   000001                     getWord@pWord:
   985                           	callstack 0
   986   000001                     ___awdiv@dividend:
   987                           	callstack 0
   988   000001                     ___awmod@dividend:
   989                           	callstack 0
   990   000001                     UART_select_baud@baudrate:
   991                           	callstack 0
   992                           
   993                           ; 4 bytes @ 0x0
   994   000001                     	ds	1
   995   000002                     putch@data:
   996                           	callstack 0
   997   000002                     countWords@i:
   998                           	callstack 0
   999                           
  1000                           ; 1 bytes @ 0x1
  1001   000002                     	ds	1
  1002   000003                     Clock_Init@bStatus:
  1003                           	callstack 0
  1004   000003                     clearArray@len:
  1005                           	callstack 0
  1006   000003                     countWords@currChar:
  1007                           	callstack 0
  1008   000003                     ___awdiv@divisor:
  1009                           	callstack 0
  1010   000003                     ___awmod@divisor:
  1011                           	callstack 0
  1012   000003                     fputc@c:
  1013                           	callstack 0
  1014                           
  1015                           ; 2 bytes @ 0x2
  1016   000003                     	ds	1
  1017   000004                     Clock_Init@bStatus_497:
  1018                           	callstack 0
  1019   000004                     clearArray@i:
  1020                           	callstack 0
  1021   000004                     getWord@tmpWord:
  1022                           	callstack 0
  1023                           
  1024                           ; 16 bytes @ 0x3
  1025   000004                     	ds	1
  1026   000005                     ??_UART_select_baud:
  1027   000005                     Clock_Init@bStatus_498:
  1028                           	callstack 0
  1029   000005                     ___awdiv@counter:
  1030                           	callstack 0
  1031   000005                     ___awmod@counter:
  1032                           	callstack 0
  1033   000005                     fputc@fp:
  1034                           	callstack 0
  1035                           
  1036                           ; 2 bytes @ 0x4
  1037   000005                     	ds	1
  1038   000006                     Clock_Init@bStatus_501:
  1039                           	callstack 0
  1040   000006                     ___awdiv@sign:
  1041                           	callstack 0
  1042   000006                     ___awmod@sign:
  1043                           	callstack 0
  1044                           
  1045                           ; 1 bytes @ 0x5
  1046   000006                     	ds	1
  1047   000007                     ??_fputc:
  1048   000007                     ?_abs:
  1049                           	callstack 0
  1050   000007                     Clock_Init@bItTimeEn:
  1051                           	callstack 0
  1052   000007                     ___awdiv@quotient:
  1053                           	callstack 0
  1054   000007                     abs@a:
  1055                           	callstack 0
  1056                           
  1057                           ; 2 bytes @ 0x6
  1058   000007                     	ds	1
  1059   000008                     Clock_Init@returnCode:
  1060                           	callstack 0
  1061                           
  1062                           ; 1 bytes @ 0x7
  1063   000008                     	ds	1
  1064   000009                     ??_abs:
  1065                           
  1066                           ; 1 bytes @ 0x8
  1067   000009                     	ds	3
  1068   00000C                     vfpfcnvrt@fp:
  1069                           	callstack 0
  1070                           
  1071                           ; 2 bytes @ 0xB
  1072   00000C                     	ds	2
  1073   00000E                     vfpfcnvrt@fmt:
  1074                           	callstack 0
  1075                           
  1076                           ; 1 bytes @ 0xD
  1077   00000E                     	ds	1
  1078   00000F                     vfpfcnvrt@ap:
  1079                           	callstack 0
  1080                           
  1081                           ; 1 bytes @ 0xE
  1082   00000F                     	ds	1
  1083   000010                     ??_vfpfcnvrt:
  1084                           
  1085                           ; 1 bytes @ 0xF
  1086   000010                     	ds	2
  1087   000012                     vfpfcnvrt@cp_1116:
  1088                           	callstack 0
  1089                           
  1090                           ; 2 bytes @ 0x11
  1091   000012                     	ds	2
  1092   000014                     getWord@delimitCount:
  1093                           	callstack 0
  1094   000014                     vfpfcnvrt@cp:
  1095                           	callstack 0
  1096                           
  1097                           ; 2 bytes @ 0x13
  1098   000014                     	ds	1
  1099   000015                     getWord@wordNum:
  1100                           	callstack 0
  1101                           
  1102                           ; 1 bytes @ 0x14
  1103   000015                     	ds	1
  1104   000016                     getWord@wordId:
  1105                           	callstack 0
  1106   000016                     vfpfcnvrt@done:
  1107                           	callstack 0
  1108                           
  1109                           ; 1 bytes @ 0x15
  1110   000016                     	ds	1
  1111   000017                     getWord@active:
  1112                           	callstack 0
  1113   000017                     vfpfcnvrt@convarg:
  1114                           	callstack 0
  1115                           
  1116                           ; 4 bytes @ 0x16
  1117   000017                     	ds	1
  1118   000018                     getWord@i:
  1119                           	callstack 0
  1120                           
  1121                           ; 2 bytes @ 0x17
  1122   000018                     	ds	2
  1123   00001A                     getWord@buffId:
  1124                           	callstack 0
  1125                           
  1126                           ; 1 bytes @ 0x19
  1127   00001A                     	ds	1
  1128   00001B                     vfpfcnvrt@c:
  1129                           	callstack 0
  1130                           
  1131                           ; 1 bytes @ 0x1A
  1132   00001B                     	ds	1
  1133   00001C                     ?_vfprintf:
  1134                           	callstack 0
  1135   00001C                     vfprintf@fp:
  1136                           	callstack 0
  1137                           
  1138                           ; 2 bytes @ 0x1B
  1139   00001C                     	ds	2
  1140   00001E                     vfprintf@fmt:
  1141                           	callstack 0
  1142                           
  1143                           ; 2 bytes @ 0x1D
  1144   00001E                     	ds	2
  1145   000020                     vfprintf@ap:
  1146                           	callstack 0
  1147                           
  1148                           ; 1 bytes @ 0x1F
  1149   000020                     	ds	1
  1150   000021                     vfprintf@cfmt:
  1151                           	callstack 0
  1152                           
  1153                           ; 2 bytes @ 0x20
  1154   000021                     	ds	2
  1155   000023                     ?_printf:
  1156                           	callstack 0
  1157   000023                     printf@fmt:
  1158                           	callstack 0
  1159                           
  1160                           ; 2 bytes @ 0x22
  1161   000023                     	ds	6
  1162   000029                     printf@ap:
  1163                           	callstack 0
  1164                           
  1165                           ; 1 bytes @ 0x28
  1166   000029                     	ds	1
  1167   00002A                     ??_CL_ErrorHandler:
  1168   00002A                     ??_commandProcess:
  1169   00002A                     ??_UART_ErrorHandler:
  1170   00002A                     UART_Init@baudrate:
  1171                           	callstack 0
  1172                           
  1173                           ; 4 bytes @ 0x29
  1174   00002A                     	ds	2
  1175   00002C                     UART_ErrorHandler@errorCode:
  1176                           	callstack 0
  1177   00002C                     CL_ErrorHandler@errorCode:
  1178                           	callstack 0
  1179                           
  1180                           ; 1 bytes @ 0x2B
  1181   00002C                     	ds	1
  1182   00002D                     addToBuffer@newchar:
  1183                           	callstack 0
  1184                           
  1185                           ; 1 bytes @ 0x2C
  1186   00002D                     	ds	1
  1187   00002E                     
  1188                           ; 1 bytes @ 0x2D
  1189   00002E                     	ds	1
  1190   00002F                     commandProcess@nWords:
  1191                           	callstack 0
  1192                           
  1193                           ; 1 bytes @ 0x2E
  1194   00002F                     	ds	1
  1195   000030                     commandProcess@i:
  1196                           	callstack 0
  1197                           
  1198                           ; 1 bytes @ 0x2F
  1199   000030                     	ds	1
  1200   000031                     commandProcess@status:
  1201                           	callstack 0
  1202                           
  1203                           ; 1 bytes @ 0x30
  1204   000031                     	ds	1
  1205   000032                     
  1206                           ; 1 bytes @ 0x31
  1207 ;;
  1208 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1209 ;;
  1210 ;; *************** function _main *****************
  1211 ;; Defined at:
  1212 ;;		line 17 in file "src/main.c"
  1213 ;; Parameters:    Size  Location     Type
  1214 ;;		None
  1215 ;; Auto vars:     Size  Location     Type
  1216 ;;		None
  1217 ;; Return value:  Size  Location     Type
  1218 ;;                  2   34[None  ] int 
  1219 ;; Registers used:
  1220 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, bsr, status,2, status,0, pcl, pclath, pclatu, btemp, b
      +temp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, 
      +btemp+14, btemp+15, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, 
      +btemp+26, btemp+27, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, cs
      +tack
  1221 ;; Tracked objects:
  1222 ;;		On entry : 0/0
  1223 ;;		On exit  : 0/0
  1224 ;;		Unchanged: 0/0
  1225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK7   BANK6
  1226 ;;      Params:         0       0       0       0       0       0       0       0       0
  1227 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1228 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1229 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1230 ;;Total ram usage:        0 bytes
  1231 ;; Hardware stack levels required when called: 9
  1232 ;; This function calls:
  1233 ;;		_CL_ErrorHandler
  1234 ;;		_Clock_Init
  1235 ;;		_UART_Init
  1236 ;;		_UART_Rx
  1237 ;;		_UART_RxAvailable
  1238 ;;		_addToBuffer
  1239 ;;		_commandLineInit
  1240 ;;		_commandProcess
  1241 ;; This function is called by:
  1242 ;;		Startup code after reset
  1243 ;; This function uses a non-reentrant model
  1244 ;;
  1245                           
  1246                           	psect	text0
  1247   006D7C                     __ptext0:
  1248                           	callstack 0
  1249   006D7C                     _main:
  1250                           	callstack 22
  1251   006D7C                     
  1252                           ;src/main.c: 19:     Clock_Init(16000);
  1253   006D7C  0E3E               	movlw	62
  1254   006D7E  6E02               	movwf	(Clock_Init@s16Timeout+1)^0,c
  1255   006D80  0E80               	movlw	128
  1256   006D82  6E01               	movwf	Clock_Init@s16Timeout^0,c
  1257   006D84  EC0D  F03C         	call	_Clock_Init	;wreg free
  1258   006D88                     
  1259                           ;src/main.c: 20:     UART_Init(9600);
  1260   006D88  0E80               	movlw	128
  1261   006D8A  6E2A               	movwf	UART_Init@baudrate^0,c
  1262   006D8C  0E25               	movlw	37
  1263   006D8E  6E2B               	movwf	(UART_Init@baudrate+1)^0,c
  1264   006D90  0E00               	movlw	0
  1265   006D92  6E2C               	movwf	(UART_Init@baudrate+2)^0,c
  1266   006D94  0E00               	movlw	0
  1267   006D96  6E2D               	movwf	(UART_Init@baudrate+3)^0,c
  1268   006D98  EC22  F036         	call	_UART_Init	;wreg free
  1269   006D9C                     
  1270                           ;src/main.c: 21:     commandLineInit();
  1271   006D9C  ECE6  F036         	call	_commandLineInit	;wreg free
  1272   006DA0                     l3127:
  1273                           
  1274                           ;src/main.c: 24:     {;src/main.c: 25:         if(UART_RxAvailable()){
  1275   006DA0  EC55  F036         	call	_UART_RxAvailable	;wreg free
  1276   006DA4  0900               	iorlw	0
  1277   006DA6  B4D8               	btfsc	status,2,c
  1278   006DA8  EFD8  F036         	goto	u2351
  1279   006DAC  EFDA  F036         	goto	u2350
  1280   006DB0                     u2351:
  1281   006DB0  EFDE  F036         	goto	l3131
  1282   006DB4                     u2350:
  1283   006DB4                     
  1284                           ;src/main.c: 26:             addToBuffer(UART_Rx());
  1285   006DB4  EC95  F035         	call	_UART_Rx	;wreg free
  1286   006DB8  EC48  F038         	call	_addToBuffer
  1287   006DBC                     l3131:
  1288                           
  1289                           ;src/main.c: 28:         CL_ErrorHandler(commandProcess());
  1290   006DBC  EC5C  F03B         	call	_commandProcess	;wreg free
  1291   006DC0  EC11  F039         	call	_CL_ErrorHandler
  1292   006DC4  EFD0  F036         	goto	l3127
  1293   006DC8  EF01  F000         	goto	start
  1294   006DCC                     __end_of_main:
  1295                           	callstack 0
  1296                           
  1297 ;; *************** function _commandProcess *****************
  1298 ;; Defined at:
  1299 ;;		line 86 in file "src/librerias/commandLine.c"
  1300 ;; Parameters:    Size  Location     Type
  1301 ;;		None
  1302 ;; Auto vars:     Size  Location     Type
  1303 ;;  i               1   47[COMRAM] unsigned char 
  1304 ;;  status          1   48[COMRAM] enum E5215
  1305 ;;  nWords          1   46[COMRAM] unsigned char 
  1306 ;; Return value:  Size  Location     Type
  1307 ;;                  1    wreg      enum E5221
  1308 ;; Registers used:
  1309 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, bsr, status,2, status,0, pcl, pclath, pclatu, btemp, b
      +temp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, 
      +btemp+14, btemp+15, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, 
      +btemp+26, btemp+27, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, cs
      +tack
  1310 ;; Tracked objects:
  1311 ;;		On entry : 0/0
  1312 ;;		On exit  : 0/0
  1313 ;;		Unchanged: 0/0
  1314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK7   BANK6
  1315 ;;      Params:         0       0       0       0       0       0       0       0       0
  1316 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1317 ;;      Temps:          5       0       0       0       0       0       0       0       0
  1318 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1319 ;;Total ram usage:        8 bytes
  1320 ;; Hardware stack levels used: 1
  1321 ;; Hardware stack levels required when called: 7
  1322 ;; This function calls:
  1323 ;;		_CL_CommandHandler
  1324 ;;		_commandLineReset
  1325 ;;		_countWords
  1326 ;;		_getWord
  1327 ;;		_printf
  1328 ;; This function is called by:
  1329 ;;		_main
  1330 ;; This function uses a non-reentrant model
  1331 ;;
  1332                           
  1333                           	psect	text1
  1334   0076B8                     __ptext1:
  1335                           	callstack 0
  1336   0076B8                     _commandProcess:
  1337                           	callstack 23
  1338   0076B8                     
  1339                           ;src/librerias/commandLine.c: 87:     if(!flagCommandReady) return EC_CL_OK;
  1340   0076B8  5037               	movf	_flagCommandReady^0,w,c
  1341   0076BA  A4D8               	btfss	status,2,c
  1342   0076BC  EF62  F03B         	goto	u2251
  1343   0076C0  EF64  F03B         	goto	u2250
  1344   0076C4                     u2251:
  1345   0076C4  EF67  F03B         	goto	l3075
  1346   0076C8                     u2250:
  1347   0076C8  0E00               	movlw	0
  1348   0076CA  EF0C  F03C         	goto	l278
  1349   0076CE                     l3075:
  1350                           
  1351                           ;src/librerias/commandLine.c: 88:     flagCommandReady = 0;
  1352   0076CE  0E00               	movlw	0
  1353   0076D0  6E37               	movwf	_flagCommandReady^0,c
  1354                           
  1355                           ;src/librerias/commandLine.c: 89:     CL_ERROR_CODE status = EC_CL_OK;
  1356   0076D2  0E00               	movlw	0
  1357   0076D4  6E31               	movwf	commandProcess@status^0,c
  1358   0076D6                     
  1359                           ;src/librerias/commandLine.c: 91:     uint8_t nWords = countWords();
  1360   0076D6  EC15  F037         	call	_countWords	;wreg free
  1361   0076DA  6E2F               	movwf	commandProcess@nWords^0,c
  1362   0076DC                     
  1363                           ;src/librerias/commandLine.c: 94:     if(!nWords){
  1364   0076DC  502F               	movf	commandProcess@nWords^0,w,c
  1365   0076DE  A4D8               	btfss	status,2,c
  1366   0076E0  EF74  F03B         	goto	u2261
  1367   0076E4  EF76  F03B         	goto	u2260
  1368   0076E8                     u2261:
  1369   0076E8  EF78  F03B         	goto	l3083
  1370   0076EC                     u2260:
  1371   0076EC                     
  1372                           ;src/librerias/commandLine.c: 95:         status = EC_CL_NOWORDS;
  1373   0076EC  0E02               	movlw	2
  1374   0076EE  6E31               	movwf	commandProcess@status^0,c
  1375   0076F0                     l3083:
  1376                           
  1377                           ;src/librerias/commandLine.c: 98:     if(nWords > 5){
  1378   0076F0  0E05               	movlw	5
  1379   0076F2  642F               	cpfsgt	commandProcess@nWords^0,c
  1380   0076F4  EF7E  F03B         	goto	u2271
  1381   0076F8  EF80  F03B         	goto	u2270
  1382   0076FC                     u2271:
  1383   0076FC  EF82  F03B         	goto	l280
  1384   007700                     u2270:
  1385   007700                     
  1386                           ;src/librerias/commandLine.c: 99:         status = EC_CL_MAXNUMPARAMS;
  1387   007700  0E04               	movlw	4
  1388   007702  6E31               	movwf	commandProcess@status^0,c
  1389   007704                     l280:
  1390                           
  1391                           ;src/librerias/commandLine.c: 102:     if(status == EC_CL_OK){
  1392   007704  5031               	movf	commandProcess@status^0,w,c
  1393   007706  A4D8               	btfss	status,2,c
  1394   007708  EF88  F03B         	goto	u2281
  1395   00770C  EF8A  F03B         	goto	u2280
  1396   007710                     u2281:
  1397   007710  EFAD  F03B         	goto	l3095
  1398   007714                     u2280:
  1399   007714                     
  1400                           ;src/librerias/commandLine.c: 103:         if(nWords){
  1401   007714  502F               	movf	commandProcess@nWords^0,w,c
  1402   007716  B4D8               	btfsc	status,2,c
  1403   007718  EF90  F03B         	goto	u2291
  1404   00771C  EF92  F03B         	goto	u2290
  1405   007720                     u2291:
  1406   007720  EFAD  F03B         	goto	l3095
  1407   007724                     u2290:
  1408   007724                     
  1409                           ;src/librerias/commandLine.c: 104:             if(getWord(0,&command[0])) status = EC_CL
      +                          _WORDOVER;
  1410   007724  0E3A               	movlw	low _command
  1411   007726  6E01               	movwf	getWord@pWord^0,c
  1412   007728  6A02               	clrf	(getWord@pWord+1)^0,c
  1413   00772A  0E00               	movlw	0
  1414   00772C  EC7A  F039         	call	_getWord
  1415   007730  0900               	iorlw	0
  1416   007732  B4D8               	btfsc	status,2,c
  1417   007734  EF9E  F03B         	goto	u2301
  1418   007738  EFA0  F03B         	goto	u2300
  1419   00773C                     u2301:
  1420   00773C  EFA4  F03B         	goto	l3093
  1421   007740                     u2300:
  1422   007740  0E03               	movlw	3
  1423   007742  6E31               	movwf	commandProcess@status^0,c
  1424   007744  EFAD  F03B         	goto	l3095
  1425   007748                     l3093:
  1426   007748  0E47               	movlw	low STR_38
  1427   00774A  6E23               	movwf	printf@fmt^0,c
  1428   00774C  0E7F               	movlw	high STR_38
  1429   00774E  6E24               	movwf	(printf@fmt+1)^0,c
  1430   007750  0E3A               	movlw	low _command
  1431   007752  6E25               	movwf	(?_printf+2)^0,c
  1432   007754  6A26               	clrf	(?_printf+3)^0,c
  1433   007756  ECD2  F035         	call	_printf	;wreg free
  1434   00775A                     l3095:
  1435                           
  1436                           ;src/librerias/commandLine.c: 108:     if(status == EC_CL_OK){
  1437   00775A  5031               	movf	commandProcess@status^0,w,c
  1438   00775C  A4D8               	btfss	status,2,c
  1439   00775E  EFB3  F03B         	goto	u2311
  1440   007762  EFB5  F03B         	goto	u2310
  1441   007766                     u2311:
  1442   007766  EFFD  F03B         	goto	l3111
  1443   00776A                     u2310:
  1444   00776A                     
  1445                           ;src/librerias/commandLine.c: 109:         for(uint8_t i = 0; i < nWords - 1; i++){
  1446   00776A  0E00               	movlw	0
  1447   00776C  6E30               	movwf	commandProcess@i^0,c
  1448   00776E  EFE5  F03B         	goto	l3109
  1449   007772                     l3099:
  1450                           
  1451                           ;src/librerias/commandLine.c: 110:             if(getWord(i+1,&param[i][0])){
  1452   007772  5030               	movf	commandProcess@i^0,w,c
  1453   007774  0D10               	mullw	16
  1454   007776  0E00               	movlw	low _param
  1455   007778  24F3               	addwf	243,w,c
  1456   00777A  6E01               	movwf	getWord@pWord^0,c
  1457   00777C  0E01               	movlw	high _param
  1458   00777E  20F4               	addwfc	prodh,w,c
  1459   007780  6E02               	movwf	(getWord@pWord+1)^0,c
  1460   007782  2830               	incf	commandProcess@i^0,w,c
  1461   007784  EC7A  F039         	call	_getWord
  1462   007788  0900               	iorlw	0
  1463   00778A  B4D8               	btfsc	status,2,c
  1464   00778C  EFCA  F03B         	goto	u2321
  1465   007790  EFCC  F03B         	goto	u2320
  1466   007794                     u2321:
  1467   007794  EFD0  F03B         	goto	l3105
  1468   007798                     u2320:
  1469   007798                     
  1470                           ;src/librerias/commandLine.c: 111:                  status = EC_CL_WORDOVER;
  1471   007798  0E03               	movlw	3
  1472   00779A  6E31               	movwf	commandProcess@status^0,c
  1473                           
  1474                           ;src/librerias/commandLine.c: 112:                  break;
  1475   00779C  EFFD  F03B         	goto	l3111
  1476   0077A0                     l3105:
  1477   0077A0  0EED               	movlw	low STR_39
  1478   0077A2  6E23               	movwf	printf@fmt^0,c
  1479   0077A4  0E7E               	movlw	high STR_39
  1480   0077A6  6E24               	movwf	(printf@fmt+1)^0,c
  1481   0077A8  0E01               	movlw	1
  1482   0077AA  2430               	addwf	commandProcess@i^0,w,c
  1483   0077AC  6E25               	movwf	(?_printf+2)^0,c
  1484   0077AE  6A26               	clrf	(?_printf+3)^0,c
  1485   0077B0  0E00               	movlw	0
  1486   0077B2  2226               	addwfc	(?_printf+3)^0,f,c
  1487   0077B4  5030               	movf	commandProcess@i^0,w,c
  1488   0077B6  0D10               	mullw	16
  1489   0077B8  0E00               	movlw	low _param
  1490   0077BA  24F3               	addwf	243,w,c
  1491   0077BC  6E27               	movwf	(?_printf+4)^0,c
  1492   0077BE  0E01               	movlw	high _param
  1493   0077C0  20F4               	addwfc	prodh,w,c
  1494   0077C2  6E28               	movwf	(?_printf+5)^0,c
  1495   0077C4  ECD2  F035         	call	_printf	;wreg free
  1496   0077C8                     
  1497                           ;src/librerias/commandLine.c: 115:         }
  1498   0077C8  2A30               	incf	commandProcess@i^0,f,c
  1499   0077CA                     l3109:
  1500   0077CA  0EFF               	movlw	255
  1501   0077CC  242F               	addwf	commandProcess@nWords^0,w,c
  1502   0077CE  6E2A               	movwf	??_commandProcess^0,c
  1503   0077D0  6A2B               	clrf	(??_commandProcess+1)^0,c
  1504   0077D2  0EFF               	movlw	255
  1505   0077D4  222B               	addwfc	(??_commandProcess+1)^0,f,c
  1506   0077D6  5030               	movf	commandProcess@i^0,w,c
  1507   0077D8  6E2C               	movwf	(??_commandProcess+2)^0,c
  1508   0077DA  6A2D               	clrf	(??_commandProcess+3)^0,c
  1509   0077DC  502A               	movf	??_commandProcess^0,w,c
  1510   0077DE  5C2C               	subwf	(??_commandProcess+2)^0,w,c
  1511   0077E0  502D               	movf	(??_commandProcess+3)^0,w,c
  1512   0077E2  0A80               	xorlw	128
  1513   0077E4  6E2E               	movwf	(??_commandProcess+4)^0,c
  1514   0077E6  502B               	movf	(??_commandProcess+1)^0,w,c
  1515   0077E8  0A80               	xorlw	128
  1516   0077EA  582E               	subwfb	(??_commandProcess+4)^0,w,c
  1517   0077EC  A0D8               	btfss	status,0,c
  1518   0077EE  EFFB  F03B         	goto	u2331
  1519   0077F2  EFFD  F03B         	goto	u2330
  1520   0077F6                     u2331:
  1521   0077F6  EFB9  F03B         	goto	l3099
  1522   0077FA                     u2330:
  1523   0077FA                     l3111:
  1524                           
  1525                           ;src/librerias/commandLine.c: 118:     if(status == EC_CL_OK){
  1526   0077FA  5031               	movf	commandProcess@status^0,w,c
  1527   0077FC  A4D8               	btfss	status,2,c
  1528   0077FE  EF03  F03C         	goto	u2341
  1529   007802  EF05  F03C         	goto	u2340
  1530   007806                     u2341:
  1531   007806  EF09  F03C         	goto	l3115
  1532   00780A                     u2340:
  1533   00780A                     
  1534                           ;src/librerias/commandLine.c: 119:        status = CL_CommandHandler(nWords-1);
  1535   00780A  042F               	decf	commandProcess@nWords^0,w,c
  1536   00780C  EC00  F000         	call	_CL_CommandHandler
  1537   007810  6E31               	movwf	commandProcess@status^0,c
  1538   007812                     l3115:
  1539                           
  1540                           ;src/librerias/commandLine.c: 122:     commandLineReset();
  1541   007812  EC0A  F036         	call	_commandLineReset	;wreg free
  1542   007816                     
  1543                           ;src/librerias/commandLine.c: 123:     return status;
  1544   007816  5031               	movf	commandProcess@status^0,w,c
  1545   007818                     l278:
  1546   007818  0012               	return		;funcret
  1547   00781A                     __end_of_commandProcess:
  1548                           	callstack 0
  1549                           
  1550 ;; *************** function _getWord *****************
  1551 ;; Defined at:
  1552 ;;		line 138 in file "src/librerias/commandLine.c"
  1553 ;; Parameters:    Size  Location     Type
  1554 ;;  wordNum         1    wreg     unsigned char 
  1555 ;;  pWord           2    0[COMRAM] PTR unsigned char 
  1556 ;;		 -> param(80), command(16), 
  1557 ;; Auto vars:     Size  Location     Type
  1558 ;;  wordNum         1   20[COMRAM] unsigned char 
  1559 ;;  i               2   23[COMRAM] int 
  1560 ;;  tmpWord        16    3[COMRAM] unsigned char [16]
  1561 ;;  buffId          1   25[COMRAM] unsigned char 
  1562 ;;  active          1   22[COMRAM] _Bool 
  1563 ;;  wordId          1   21[COMRAM] unsigned char 
  1564 ;;  delimitCount    1   19[COMRAM] unsigned char 
  1565 ;; Return value:  Size  Location     Type
  1566 ;;                  1    wreg      _Bool 
  1567 ;; Registers used:
  1568 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  1569 ;; Tracked objects:
  1570 ;;		On entry : 0/0
  1571 ;;		On exit  : 0/0
  1572 ;;		Unchanged: 0/0
  1573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK7   BANK6
  1574 ;;      Params:         2       0       0       0       0       0       0       0       0
  1575 ;;      Locals:        23       0       0       0       0       0       0       0       0
  1576 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1577 ;;      Totals:        26       0       0       0       0       0       0       0       0
  1578 ;;Total ram usage:       26 bytes
  1579 ;; Hardware stack levels used: 1
  1580 ;; This function calls:
  1581 ;;		Nothing
  1582 ;; This function is called by:
  1583 ;;		_commandProcess
  1584 ;; This function uses a non-reentrant model
  1585 ;;
  1586                           
  1587                           	psect	text2
  1588   0072F4                     __ptext2:
  1589                           	callstack 0
  1590   0072F4                     _getWord:
  1591                           	callstack 29
  1592                           
  1593                           ;incstack = 0
  1594                           ;getWord@wordNum stored from wreg
  1595   0072F4  6E15               	movwf	getWord@wordNum^0,c
  1596   0072F6                     
  1597                           ;src/librerias/commandLine.c: 140:    uint8_t tmpWord[16];;src/librerias/commandLine.c: 
      +                          141:    uint8_t delimitCount = 0;
  1598   0072F6  0E00               	movlw	0
  1599   0072F8  6E14               	movwf	getWord@delimitCount^0,c
  1600                           
  1601                           ;src/librerias/commandLine.c: 142:    _Bool active = 0;
  1602   0072FA  0E00               	movlw	0
  1603   0072FC  6E17               	movwf	getWord@active^0,c
  1604                           
  1605                           ;src/librerias/commandLine.c: 143:    uint8_t buffId;;src/librerias/commandLine.c: 144: 
      +                             uint8_t wordId = 0;
  1606   0072FE  0E00               	movlw	0
  1607   007300  6E16               	movwf	getWord@wordId^0,c
  1608                           
  1609                           ;src/librerias/commandLine.c: 146:    for(buffId = 0;buffId < 100; buffId++){
  1610   007302  0E00               	movlw	0
  1611   007304  6E1A               	movwf	getWord@buffId^0,c
  1612   007306                     l2985:
  1613                           
  1614                           ;src/librerias/commandLine.c: 147:        if(!wordNum) active = 1;
  1615   007306  5015               	movf	getWord@wordNum^0,w,c
  1616   007308  A4D8               	btfss	status,2,c
  1617   00730A  EF89  F039         	goto	u2101
  1618   00730E  EF8B  F039         	goto	u2100
  1619   007312                     u2101:
  1620   007312  EF8D  F039         	goto	l2989
  1621   007316                     u2100:
  1622   007316  0E01               	movlw	1
  1623   007318  6E17               	movwf	getWord@active^0,c
  1624   00731A                     l2989:
  1625                           
  1626                           ;src/librerias/commandLine.c: 148:        if(charBuff[buffId] == 0x20 && !active){
  1627   00731A  501A               	movf	getWord@buffId^0,w,c
  1628   00731C  0F60               	addlw	low _charBuff
  1629   00731E  6ED9               	movwf	fsr2l,c
  1630   007320  6ADA               	clrf	fsr2h,c
  1631   007322  0E20               	movlw	32
  1632   007324  18DE               	xorwf	postinc2,w,c
  1633   007326  A4D8               	btfss	status,2,c
  1634   007328  EF98  F039         	goto	u2111
  1635   00732C  EF9A  F039         	goto	u2110
  1636   007330                     u2111:
  1637   007330  EFAF  F039         	goto	l3001
  1638   007334                     u2110:
  1639   007334  5017               	movf	getWord@active^0,w,c
  1640   007336  A4D8               	btfss	status,2,c
  1641   007338  EFA0  F039         	goto	u2121
  1642   00733C  EFA2  F039         	goto	u2120
  1643   007340                     u2121:
  1644   007340  EFAF  F039         	goto	l3001
  1645   007344                     u2120:
  1646   007344                     
  1647                           ;src/librerias/commandLine.c: 149:            delimitCount++;
  1648   007344  2A14               	incf	getWord@delimitCount^0,f,c
  1649   007346                     
  1650                           ;src/librerias/commandLine.c: 150:            if(delimitCount == wordNum){
  1651   007346  5015               	movf	getWord@wordNum^0,w,c
  1652   007348  1814               	xorwf	getWord@delimitCount^0,w,c
  1653   00734A  A4D8               	btfss	status,2,c
  1654   00734C  EFAA  F039         	goto	u2131
  1655   007350  EFAC  F039         	goto	u2130
  1656   007354                     u2131:
  1657   007354  EFAF  F039         	goto	l3001
  1658   007358                     u2130:
  1659   007358                     
  1660                           ;src/librerias/commandLine.c: 151:                active = 1;
  1661   007358  0E01               	movlw	1
  1662   00735A  6E17               	movwf	getWord@active^0,c
  1663   00735C                     
  1664                           ;src/librerias/commandLine.c: 152:                buffId++;
  1665   00735C  2A1A               	incf	getWord@buffId^0,f,c
  1666   00735E                     l3001:
  1667                           
  1668                           ;src/librerias/commandLine.c: 155:        if(active){
  1669   00735E  5017               	movf	getWord@active^0,w,c
  1670   007360  B4D8               	btfsc	status,2,c
  1671   007362  EFB5  F039         	goto	u2141
  1672   007366  EFB7  F039         	goto	u2140
  1673   00736A                     u2141:
  1674   00736A  EFDD  F039         	goto	l3011
  1675   00736E                     u2140:
  1676   00736E                     
  1677                           ;src/librerias/commandLine.c: 156:            if(charBuff[buffId] == 0x20 || charBuff[bu
      +                          ffId] == 0x00) break;
  1678   00736E  501A               	movf	getWord@buffId^0,w,c
  1679   007370  0F60               	addlw	low _charBuff
  1680   007372  6ED9               	movwf	fsr2l,c
  1681   007374  6ADA               	clrf	fsr2h,c
  1682   007376  0E20               	movlw	32
  1683   007378  18DE               	xorwf	postinc2,w,c
  1684   00737A  B4D8               	btfsc	status,2,c
  1685   00737C  EFC2  F039         	goto	u2151
  1686   007380  EFC4  F039         	goto	u2150
  1687   007384                     u2151:
  1688   007384  EFE6  F039         	goto	l3015
  1689   007388                     u2150:
  1690   007388  501A               	movf	getWord@buffId^0,w,c
  1691   00738A  0F60               	addlw	low _charBuff
  1692   00738C  6ED9               	movwf	fsr2l,c
  1693   00738E  6ADA               	clrf	fsr2h,c
  1694   007390  50DF               	movf	indf2,w,c
  1695   007392  A4D8               	btfss	status,2,c
  1696   007394  EFCE  F039         	goto	u2161
  1697   007398  EFD0  F039         	goto	u2160
  1698   00739C                     u2161:
  1699   00739C  EFD2  F039         	goto	l3007
  1700   0073A0                     u2160:
  1701   0073A0  EFE6  F039         	goto	l3015
  1702   0073A4                     l3007:
  1703                           
  1704                           ;src/librerias/commandLine.c: 157:            tmpWord[wordId++] = charBuff[buffId];
  1705   0073A4  501A               	movf	getWord@buffId^0,w,c
  1706   0073A6  0F60               	addlw	low _charBuff
  1707   0073A8  6ED9               	movwf	fsr2l,c
  1708   0073AA  6ADA               	clrf	fsr2h,c
  1709   0073AC  5016               	movf	getWord@wordId^0,w,c
  1710   0073AE  0F04               	addlw	low getWord@tmpWord
  1711   0073B0  6EE1               	movwf	fsr1l,c
  1712   0073B2  6AE2               	clrf	fsr1h,c
  1713   0073B4  CFDF FFE7          	movff	indf2,indf1
  1714   0073B8  2A16               	incf	getWord@wordId^0,f,c
  1715   0073BA                     l3011:
  1716                           
  1717                           ;src/librerias/commandLine.c: 159:    }
  1718   0073BA  2A1A               	incf	getWord@buffId^0,f,c
  1719   0073BC  0E63               	movlw	99
  1720   0073BE  641A               	cpfsgt	getWord@buffId^0,c
  1721   0073C0  EFE4  F039         	goto	u2171
  1722   0073C4  EFE6  F039         	goto	u2170
  1723   0073C8                     u2171:
  1724   0073C8  EF83  F039         	goto	l2985
  1725   0073CC                     u2170:
  1726   0073CC                     l3015:
  1727                           
  1728                           ;src/librerias/commandLine.c: 161:     if(wordId > 16){
  1729   0073CC  0E10               	movlw	16
  1730   0073CE  6416               	cpfsgt	getWord@wordId^0,c
  1731   0073D0  EFEC  F039         	goto	u2181
  1732   0073D4  EFEE  F039         	goto	u2180
  1733   0073D8                     u2181:
  1734   0073D8  EFF1  F039         	goto	l3021
  1735   0073DC                     u2180:
  1736   0073DC                     
  1737                           ;src/librerias/commandLine.c: 162:         return 1;
  1738   0073DC  0E01               	movlw	1
  1739   0073DE  EF12  F03A         	goto	l314
  1740   0073E2                     l3021:
  1741                           
  1742                           ;src/librerias/commandLine.c: 164:     for(int i = 0; i < 16; i++){
  1743   0073E2  0E00               	movlw	0
  1744   0073E4  6E19               	movwf	(getWord@i+1)^0,c
  1745   0073E6  0E00               	movlw	0
  1746   0073E8  6E18               	movwf	getWord@i^0,c
  1747   0073EA                     l3027:
  1748                           
  1749                           ;src/librerias/commandLine.c: 165:         *(pWord + i) = tmpWord[i];
  1750   0073EA  5018               	movf	getWord@i^0,w,c
  1751   0073EC  0F04               	addlw	low getWord@tmpWord
  1752   0073EE  6ED9               	movwf	fsr2l,c
  1753   0073F0  6ADA               	clrf	fsr2h,c
  1754   0073F2  5018               	movf	getWord@i^0,w,c
  1755   0073F4  2401               	addwf	getWord@pWord^0,w,c
  1756   0073F6  6EE1               	movwf	fsr1l,c
  1757   0073F8  5019               	movf	(getWord@i+1)^0,w,c
  1758   0073FA  2002               	addwfc	(getWord@pWord+1)^0,w,c
  1759   0073FC  6EE2               	movwf	fsr1h,c
  1760   0073FE  CFDF FFE7          	movff	indf2,indf1
  1761   007402                     
  1762                           ;src/librerias/commandLine.c: 166:     }
  1763   007402  4A18               	infsnz	getWord@i^0,f,c
  1764   007404  2A19               	incf	(getWord@i+1)^0,f,c
  1765   007406  BE19               	btfsc	(getWord@i+1)^0,7,c
  1766   007408  EF0F  F03A         	goto	u2191
  1767   00740C  5019               	movf	(getWord@i+1)^0,w,c
  1768   00740E  E109               	bnz	u2190
  1769   007410  0E10               	movlw	16
  1770   007412  5C18               	subwf	getWord@i^0,w,c
  1771   007414  A0D8               	btfss	status,0,c
  1772   007416  EF0F  F03A         	goto	u2191
  1773   00741A  EF11  F03A         	goto	u2190
  1774   00741E                     u2191:
  1775   00741E  EFF5  F039         	goto	l3027
  1776   007422                     u2190:
  1777   007422                     
  1778                           ;src/librerias/commandLine.c: 167:    return 0;
  1779   007422  0E00               	movlw	0
  1780   007424                     l314:
  1781   007424  0012               	return		;funcret
  1782   007426                     __end_of_getWord:
  1783                           	callstack 0
  1784                           
  1785 ;; *************** function _countWords *****************
  1786 ;; Defined at:
  1787 ;;		line 126 in file "src/librerias/commandLine.c"
  1788 ;; Parameters:    Size  Location     Type
  1789 ;;		None
  1790 ;; Auto vars:     Size  Location     Type
  1791 ;;  i               1    1[COMRAM] unsigned char 
  1792 ;;  currChar        1    2[COMRAM] unsigned char 
  1793 ;;  numWords        1    0[COMRAM] unsigned char 
  1794 ;; Return value:  Size  Location     Type
  1795 ;;                  1    wreg      unsigned char 
  1796 ;; Registers used:
  1797 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1798 ;; Tracked objects:
  1799 ;;		On entry : 0/0
  1800 ;;		On exit  : 0/0
  1801 ;;		Unchanged: 0/0
  1802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK7   BANK6
  1803 ;;      Params:         0       0       0       0       0       0       0       0       0
  1804 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1805 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1806 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1807 ;;Total ram usage:        3 bytes
  1808 ;; Hardware stack levels used: 1
  1809 ;; This function calls:
  1810 ;;		Nothing
  1811 ;; This function is called by:
  1812 ;;		_commandProcess
  1813 ;; This function uses a non-reentrant model
  1814 ;;
  1815                           
  1816                           	psect	text3
  1817   006E2A                     __ptext3:
  1818                           	callstack 0
  1819   006E2A                     _countWords:
  1820                           	callstack 29
  1821   006E2A                     
  1822                           ;src/librerias/commandLine.c: 127:    uint8_t numWords = 0;
  1823   006E2A  0E00               	movlw	0
  1824   006E2C  6E01               	movwf	countWords@numWords^0,c
  1825   006E2E                     
  1826                           ;src/librerias/commandLine.c: 128:    uint8_t currChar = charBuff[0];
  1827   006E2E  C060  F003         	movff	_charBuff,countWords@currChar
  1828                           
  1829                           ;src/librerias/commandLine.c: 130:    if(currChar) numWords++;
  1830   006E32  5003               	movf	countWords@currChar^0,w,c
  1831   006E34  B4D8               	btfsc	status,2,c
  1832   006E36  EF1F  F037         	goto	u1501
  1833   006E3A  EF21  F037         	goto	u1500
  1834   006E3E                     u1501:
  1835   006E3E  EF22  F037         	goto	l2405
  1836   006E42                     u1500:
  1837   006E42  2A01               	incf	countWords@numWords^0,f,c
  1838   006E44                     l2405:
  1839                           
  1840                           ;src/librerias/commandLine.c: 131:    for(uint8_t i=0;i<100 && currChar;i++){
  1841   006E44  0E00               	movlw	0
  1842   006E46  6E02               	movwf	countWords@i^0,c
  1843   006E48  EF37  F037         	goto	l2413
  1844   006E4C                     l2407:
  1845                           
  1846                           ;src/librerias/commandLine.c: 132:       currChar = charBuff[i];
  1847   006E4C  5002               	movf	countWords@i^0,w,c
  1848   006E4E  0F60               	addlw	low _charBuff
  1849   006E50  6ED9               	movwf	fsr2l,c
  1850   006E52  6ADA               	clrf	fsr2h,c
  1851   006E54  50DF               	movf	indf2,w,c
  1852   006E56  6E03               	movwf	countWords@currChar^0,c
  1853   006E58                     
  1854                           ;src/librerias/commandLine.c: 133:       if(currChar==0x20) numWords++;
  1855   006E58  0E20               	movlw	32
  1856   006E5A  1803               	xorwf	countWords@currChar^0,w,c
  1857   006E5C  A4D8               	btfss	status,2,c
  1858   006E5E  EF33  F037         	goto	u1511
  1859   006E62  EF35  F037         	goto	u1510
  1860   006E66                     u1511:
  1861   006E66  EF36  F037         	goto	l297
  1862   006E6A                     u1510:
  1863   006E6A  2A01               	incf	countWords@numWords^0,f,c
  1864   006E6C                     l297:
  1865                           
  1866                           ;src/librerias/commandLine.c: 134:    }
  1867   006E6C  2A02               	incf	countWords@i^0,f,c
  1868   006E6E                     l2413:
  1869   006E6E  0E64               	movlw	100
  1870   006E70  6002               	cpfslt	countWords@i^0,c
  1871   006E72  EF3D  F037         	goto	u1521
  1872   006E76  EF3F  F037         	goto	u1520
  1873   006E7A                     u1521:
  1874   006E7A  EF47  F037         	goto	l2417
  1875   006E7E                     u1520:
  1876   006E7E  5003               	movf	countWords@currChar^0,w,c
  1877   006E80  A4D8               	btfss	status,2,c
  1878   006E82  EF45  F037         	goto	u1531
  1879   006E86  EF47  F037         	goto	u1530
  1880   006E8A                     u1531:
  1881   006E8A  EF26  F037         	goto	l2407
  1882   006E8E                     u1530:
  1883   006E8E                     l2417:
  1884                           
  1885                           ;src/librerias/commandLine.c: 135:    return numWords;
  1886   006E8E  5001               	movf	countWords@numWords^0,w,c
  1887   006E90  0012               	return		;funcret
  1888   006E92                     __end_of_countWords:
  1889                           	callstack 0
  1890                           
  1891 ;; *************** function _commandLineInit *****************
  1892 ;; Defined at:
  1893 ;;		line 14 in file "src/librerias/commandLine.c"
  1894 ;; Parameters:    Size  Location     Type
  1895 ;;		None
  1896 ;; Auto vars:     Size  Location     Type
  1897 ;;		None
  1898 ;; Return value:  Size  Location     Type
  1899 ;;                  1    wreg      void 
  1900 ;; Registers used:
  1901 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1902 ;; Tracked objects:
  1903 ;;		On entry : 0/0
  1904 ;;		On exit  : 0/0
  1905 ;;		Unchanged: 0/0
  1906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK7   BANK6
  1907 ;;      Params:         0       0       0       0       0       0       0       0       0
  1908 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1909 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1910 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1911 ;;Total ram usage:        0 bytes
  1912 ;; Hardware stack levels used: 1
  1913 ;; Hardware stack levels required when called: 6
  1914 ;; This function calls:
  1915 ;;		_clearBuff
  1916 ;;		_printf
  1917 ;; This function is called by:
  1918 ;;		_main
  1919 ;; This function uses a non-reentrant model
  1920 ;;
  1921                           
  1922                           	psect	text4
  1923   006DCC                     __ptext4:
  1924                           	callstack 0
  1925   006DCC                     _commandLineInit:
  1926                           	callstack 24
  1927   006DCC                     
  1928                           ;src/librerias/commandLine.c: 15:     printf("Linea de comandos iniciada\r\n");
  1929   006DCC  0E14               	movlw	low STR_27
  1930   006DCE  6E23               	movwf	printf@fmt^0,c
  1931   006DD0  0E7E               	movlw	high STR_27
  1932   006DD2  6E24               	movwf	(printf@fmt+1)^0,c
  1933   006DD4  ECD2  F035         	call	_printf	;wreg free
  1934                           
  1935                           ;src/librerias/commandLine.c: 16:     printf("Sintaxis:\r\n");
  1936   006DD8  0E70               	movlw	low STR_28
  1937   006DDA  6E23               	movwf	printf@fmt^0,c
  1938   006DDC  0E7F               	movlw	high STR_28
  1939   006DDE  6E24               	movwf	(printf@fmt+1)^0,c
  1940   006DE0  ECD2  F035         	call	_printf	;wreg free
  1941                           
  1942                           ;src/librerias/commandLine.c: 17:     printf("<comando> <parametro1> <parametroN>\r\n");
  1943   006DE4  0E7F               	movlw	low STR_29
  1944   006DE6  6E23               	movwf	printf@fmt^0,c
  1945   006DE8  0E7D               	movlw	high STR_29
  1946   006DEA  6E24               	movwf	(printf@fmt+1)^0,c
  1947   006DEC  ECD2  F035         	call	_printf	;wreg free
  1948                           
  1949                           ;src/librerias/commandLine.c: 18:     printf("[Enter]     Para enviar el comando\r\n");
  1950   006DF0  0ECB               	movlw	low STR_30
  1951   006DF2  6E23               	movwf	printf@fmt^0,c
  1952   006DF4  0E7D               	movlw	high STR_30
  1953   006DF6  6E24               	movwf	(printf@fmt+1)^0,c
  1954   006DF8  ECD2  F035         	call	_printf	;wreg free
  1955                           
  1956                           ;src/librerias/commandLine.c: 19:     printf("[Backspace] Para borrar un caracter\r\n");
  1957   006DFC  0EA5               	movlw	low STR_31
  1958   006DFE  6E23               	movwf	printf@fmt^0,c
  1959   006E00  0E7D               	movlw	high STR_31
  1960   006E02  6E24               	movwf	(printf@fmt+1)^0,c
  1961   006E04  ECD2  F035         	call	_printf	;wreg free
  1962                           
  1963                           ;src/librerias/commandLine.c: 20:     printf("[Escape]    Cancelar la escritura de un co
      +                          mando\r\n");
  1964   006E08  0E4D               	movlw	low STR_32
  1965   006E0A  6E23               	movwf	printf@fmt^0,c
  1966   006E0C  0E7D               	movlw	high STR_32
  1967   006E0E  6E24               	movwf	(printf@fmt+1)^0,c
  1968   006E10  ECD2  F035         	call	_printf	;wreg free
  1969   006E14                     
  1970                           ;src/librerias/commandLine.c: 21:     clearBuff();
  1971   006E14  ECE1  F035         	call	_clearBuff	;wreg free
  1972   006E18                     
  1973                           ;src/librerias/commandLine.c: 22:     commandLineEnable = 1;
  1974   006E18  0E01               	movlw	1
  1975   006E1A  6E38               	movwf	_commandLineEnable^0,c
  1976   006E1C                     
  1977                           ;src/librerias/commandLine.c: 23:     printf("\r\n> ");
  1978   006E1C  0EF5               	movlw	low STR_33
  1979   006E1E  6E23               	movwf	printf@fmt^0,c
  1980   006E20  0E7F               	movlw	high STR_33
  1981   006E22  6E24               	movwf	(printf@fmt+1)^0,c
  1982   006E24  ECD2  F035         	call	_printf	;wreg free
  1983   006E28  0012               	return		;funcret
  1984   006E2A                     __end_of_commandLineInit:
  1985                           	callstack 0
  1986                           
  1987 ;; *************** function _addToBuffer *****************
  1988 ;; Defined at:
  1989 ;;		line 39 in file "src/librerias/commandLine.c"
  1990 ;; Parameters:    Size  Location     Type
  1991 ;;  newchar         1    wreg     unsigned char 
  1992 ;; Auto vars:     Size  Location     Type
  1993 ;;  newchar         1   44[COMRAM] unsigned char 
  1994 ;; Return value:  Size  Location     Type
  1995 ;;                  1    wreg      void 
  1996 ;; Registers used:
  1997 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1998 ;; Tracked objects:
  1999 ;;		On entry : 0/0
  2000 ;;		On exit  : 0/0
  2001 ;;		Unchanged: 0/0
  2002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK7   BANK6
  2003 ;;      Params:         0       0       0       0       0       0       0       0       0
  2004 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2005 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2006 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2007 ;;Total ram usage:        1 bytes
  2008 ;; Hardware stack levels used: 1
  2009 ;; Hardware stack levels required when called: 8
  2010 ;; This function calls:
  2011 ;;		_CL_ErrorHandler
  2012 ;;		_UART_Tx
  2013 ;;		_clearCharInLine
  2014 ;;		_printf
  2015 ;; This function is called by:
  2016 ;;		_main
  2017 ;; This function uses a non-reentrant model
  2018 ;;
  2019                           
  2020                           	psect	text5
  2021   007090                     __ptext5:
  2022                           	callstack 0
  2023   007090                     _addToBuffer:
  2024                           	callstack 22
  2025                           
  2026                           ;incstack = 0
  2027                           ;addToBuffer@newchar stored from wreg
  2028   007090  6E2D               	movwf	addToBuffer@newchar^0,c
  2029   007092                     
  2030                           ;src/librerias/commandLine.c: 40:     if(commandLineEnable){
  2031   007092  5038               	movf	_commandLineEnable^0,w,c
  2032   007094  B4D8               	btfsc	status,2,c
  2033   007096  EF4F  F038         	goto	u2201
  2034   00709A  EF51  F038         	goto	u2200
  2035   00709E                     u2201:
  2036   00709E  EFAB  F038         	goto	l260
  2037   0070A2                     u2200:
  2038   0070A2  EF98  F038         	goto	l3067
  2039   0070A6                     l3041:
  2040                           
  2041                           ;src/librerias/commandLine.c: 44:                 flagCommandReady = 1;
  2042   0070A6  0E01               	movlw	1
  2043   0070A8  6E37               	movwf	_flagCommandReady^0,c
  2044   0070AA                     
  2045                           ;src/librerias/commandLine.c: 45:                 printf("\r\n");
  2046   0070AA  0E11               	movlw	low (STR_34+33)
  2047   0070AC  6E23               	movwf	printf@fmt^0,c
  2048   0070AE  0E7E               	movlw	high (STR_34+33)
  2049   0070B0  6E24               	movwf	(printf@fmt+1)^0,c
  2050   0070B2  ECD2  F035         	call	_printf	;wreg free
  2051                           
  2052                           ;src/librerias/commandLine.c: 46:                 break;
  2053   0070B6  EFAB  F038         	goto	l260
  2054   0070BA                     l3045:
  2055                           
  2056                           ;src/librerias/commandLine.c: 48:                 if(buffCount>0)clearCharInLine();
  2057   0070BA  5039               	movf	_buffCount^0,w,c
  2058   0070BC  B4D8               	btfsc	status,2,c
  2059   0070BE  EF63  F038         	goto	u2211
  2060   0070C2  EF65  F038         	goto	u2210
  2061   0070C6                     u2211:
  2062   0070C6  EFAB  F038         	goto	l260
  2063   0070CA                     u2210:
  2064   0070CA  ECB7  F035         	call	_clearCharInLine	;wreg free
  2065   0070CE  EFAB  F038         	goto	l260
  2066   0070D2                     l3049:
  2067                           
  2068                           ;src/librerias/commandLine.c: 52:                     clearCharInLine();
  2069   0070D2  ECB7  F035         	call	_clearCharInLine	;wreg free
  2070   0070D6                     l3051:
  2071                           
  2072                           ;src/librerias/commandLine.c: 51:                 while(buffCount>0){
  2073   0070D6  5039               	movf	_buffCount^0,w,c
  2074   0070D8  A4D8               	btfss	status,2,c
  2075   0070DA  EF71  F038         	goto	u2221
  2076   0070DE  EF73  F038         	goto	u2220
  2077   0070E2                     u2221:
  2078   0070E2  EF69  F038         	goto	l3049
  2079   0070E6                     u2220:
  2080   0070E6  EFAB  F038         	goto	l260
  2081   0070EA                     l3053:
  2082                           
  2083                           ;src/librerias/commandLine.c: 56:                 if(buffCount >= 100){
  2084   0070EA  0E63               	movlw	99
  2085   0070EC  6439               	cpfsgt	_buffCount^0,c
  2086   0070EE  EF7B  F038         	goto	u2231
  2087   0070F2  EF7D  F038         	goto	u2230
  2088   0070F6                     u2231:
  2089   0070F6  EF82  F038         	goto	l3057
  2090   0070FA                     u2230:
  2091   0070FA                     
  2092                           ;src/librerias/commandLine.c: 57:                     CL_ErrorHandler(EC_CL_BUFFOVER);
  2093   0070FA  0E01               	movlw	1
  2094   0070FC  EC11  F039         	call	_CL_ErrorHandler
  2095                           
  2096                           ;src/librerias/commandLine.c: 58:                     break;
  2097   007100  EFAB  F038         	goto	l260
  2098   007104                     l3057:
  2099                           
  2100                           ;src/librerias/commandLine.c: 60:                 if(newchar > 0x7F) break;
  2101   007104  0E7F               	movlw	127
  2102   007106  642D               	cpfsgt	addToBuffer@newchar^0,c
  2103   007108  EF88  F038         	goto	u2241
  2104   00710C  EF8A  F038         	goto	u2240
  2105   007110                     u2241:
  2106   007110  EF8C  F038         	goto	l3061
  2107   007114                     u2240:
  2108   007114  EFAB  F038         	goto	l260
  2109   007118                     l3061:
  2110                           
  2111                           ;src/librerias/commandLine.c: 61:                 charBuff[buffCount] = newchar;
  2112   007118  5039               	movf	_buffCount^0,w,c
  2113   00711A  0F60               	addlw	low _charBuff
  2114   00711C  6ED9               	movwf	fsr2l,c
  2115   00711E  6ADA               	clrf	fsr2h,c
  2116   007120  C02D  FFDF         	movff	addToBuffer@newchar,indf2
  2117   007124                     
  2118                           ;src/librerias/commandLine.c: 62:                 buffCount++;
  2119   007124  2A39               	incf	_buffCount^0,f,c
  2120   007126                     
  2121                           ;src/librerias/commandLine.c: 63:                 UART_Tx(newchar);
  2122   007126  502D               	movf	addToBuffer@newchar^0,w,c
  2123   007128  EC9F  F035         	call	_UART_Tx
  2124                           
  2125                           ;src/librerias/commandLine.c: 64:         }
  2126   00712C  EFAB  F038         	goto	l260
  2127   007130                     l3067:
  2128   007130  502D               	movf	addToBuffer@newchar^0,w,c
  2129                           
  2130                           ; Switch size 1, requested type "simple"
  2131                           ; Number of cases is 4, Range of values is 0 to 127
  2132                           ; switch strategies available:
  2133                           ; Name         Instructions Cycles
  2134                           ; simple_byte           13     7 (average)
  2135                           ;	Chosen strategy is simple_byte
  2136   007132  0A00               	xorlw	0	; case 0
  2137   007134  B4D8               	btfsc	status,2,c
  2138   007136  EFAB  F038         	goto	l260
  2139   00713A  0A0A               	xorlw	10	; case 10
  2140   00713C  B4D8               	btfsc	status,2,c
  2141   00713E  EF53  F038         	goto	l3041
  2142   007142  0A11               	xorlw	17	; case 27
  2143   007144  B4D8               	btfsc	status,2,c
  2144   007146  EF6B  F038         	goto	l3051
  2145   00714A  0A64               	xorlw	100	; case 127
  2146   00714C  B4D8               	btfsc	status,2,c
  2147   00714E  EF5D  F038         	goto	l3045
  2148   007152  EF75  F038         	goto	l3053
  2149   007156                     l260:
  2150   007156  0012               	return		;funcret
  2151   007158                     __end_of_addToBuffer:
  2152                           	callstack 0
  2153                           
  2154 ;; *************** function _clearCharInLine *****************
  2155 ;; Defined at:
  2156 ;;		line 75 in file "src/librerias/commandLine.c"
  2157 ;; Parameters:    Size  Location     Type
  2158 ;;		None
  2159 ;; Auto vars:     Size  Location     Type
  2160 ;;		None
  2161 ;; Return value:  Size  Location     Type
  2162 ;;                  1    wreg      void 
  2163 ;; Registers used:
  2164 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2165 ;; Tracked objects:
  2166 ;;		On entry : 0/0
  2167 ;;		On exit  : 0/0
  2168 ;;		Unchanged: 0/0
  2169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK7   BANK6
  2170 ;;      Params:         0       0       0       0       0       0       0       0       0
  2171 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2172 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2173 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2174 ;;Total ram usage:        0 bytes
  2175 ;; Hardware stack levels used: 1
  2176 ;; Hardware stack levels required when called: 6
  2177 ;; This function calls:
  2178 ;;		_printf
  2179 ;; This function is called by:
  2180 ;;		_addToBuffer
  2181 ;; This function uses a non-reentrant model
  2182 ;;
  2183                           
  2184                           	psect	text6
  2185   006B6E                     __ptext6:
  2186                           	callstack 0
  2187   006B6E                     _clearCharInLine:
  2188                           	callstack 23
  2189   006B6E                     
  2190                           ;src/librerias/commandLine.c: 76:     charBuff[--buffCount] = 0x00;
  2191   006B6E  0639               	decf	_buffCount^0,f,c
  2192   006B70  5039               	movf	_buffCount^0,w,c
  2193   006B72  0F60               	addlw	low _charBuff
  2194   006B74  6ED9               	movwf	fsr2l,c
  2195   006B76  6ADA               	clrf	fsr2h,c
  2196   006B78  6ADF               	clrf	indf2,c
  2197   006B7A                     
  2198                           ;src/librerias/commandLine.c: 77:     printf("\b \b");
  2199   006B7A  0EFA               	movlw	low STR_37
  2200   006B7C  6E23               	movwf	printf@fmt^0,c
  2201   006B7E  0E7F               	movlw	high STR_37
  2202   006B80  6E24               	movwf	(printf@fmt+1)^0,c
  2203   006B82  ECD2  F035         	call	_printf	;wreg free
  2204   006B86  0012               	return		;funcret
  2205   006B88                     __end_of_clearCharInLine:
  2206                           	callstack 0
  2207                           
  2208 ;; *************** function _CL_ErrorHandler *****************
  2209 ;; Defined at:
  2210 ;;		line 170 in file "src/librerias/commandLine.c"
  2211 ;; Parameters:    Size  Location     Type
  2212 ;;  errorCode       1    wreg     enum E5215
  2213 ;; Auto vars:     Size  Location     Type
  2214 ;;  errorCode       1   43[COMRAM] enum E5215
  2215 ;; Return value:  Size  Location     Type
  2216 ;;                  1    wreg      void 
  2217 ;; Registers used:
  2218 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2219 ;; Tracked objects:
  2220 ;;		On entry : 0/0
  2221 ;;		On exit  : 0/0
  2222 ;;		Unchanged: 0/0
  2223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK7   BANK6
  2224 ;;      Params:         0       0       0       0       0       0       0       0       0
  2225 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2226 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2227 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2228 ;;Total ram usage:        3 bytes
  2229 ;; Hardware stack levels used: 1
  2230 ;; Hardware stack levels required when called: 7
  2231 ;; This function calls:
  2232 ;;		_commandLineReset
  2233 ;;		_printf
  2234 ;; This function is called by:
  2235 ;;		_main
  2236 ;;		_addToBuffer
  2237 ;; This function uses a non-reentrant model
  2238 ;;
  2239                           
  2240                           	psect	text7
  2241   007222                     __ptext7:
  2242                           	callstack 0
  2243   007222                     _CL_ErrorHandler:
  2244                           	callstack 22
  2245                           
  2246                           ;incstack = 0
  2247                           ;CL_ErrorHandler@errorCode stored from wreg
  2248   007222  6E2C               	movwf	CL_ErrorHandler@errorCode^0,c
  2249   007224                     
  2250                           ;src/librerias/commandLine.c: 171:     switch(errorCode){
  2251   007224  EF50  F039         	goto	l2973
  2252   007228                     l2959:
  2253                           
  2254                           ;src/librerias/commandLine.c: 174:             printf("\r\nEC_CL_BUFFOVER\r\n");
  2255   007228  0EDA               	movlw	low STR_40
  2256   00722A  6E23               	movwf	printf@fmt^0,c
  2257   00722C  0E7E               	movlw	high STR_40
  2258   00722E  6E24               	movwf	(printf@fmt+1)^0,c
  2259   007230  ECD2  F035         	call	_printf	;wreg free
  2260                           
  2261                           ;src/librerias/commandLine.c: 175:             commandLineReset();
  2262   007234  EC0A  F036         	call	_commandLineReset	;wreg free
  2263                           
  2264                           ;src/librerias/commandLine.c: 176:         break;
  2265   007238  EF79  F039         	goto	l328
  2266   00723C                     l2961:
  2267                           
  2268                           ;src/librerias/commandLine.c: 178:             printf("\r\nEC_CL_NOWORDS\r\n");
  2269   00723C  0E00               	movlw	low STR_41
  2270   00723E  6E23               	movwf	printf@fmt^0,c
  2271   007240  0E7F               	movlw	high STR_41
  2272   007242  6E24               	movwf	(printf@fmt+1)^0,c
  2273   007244  ECD2  F035         	call	_printf	;wreg free
  2274                           
  2275                           ;src/librerias/commandLine.c: 179:             commandLineReset();
  2276   007248  EC0A  F036         	call	_commandLineReset	;wreg free
  2277                           
  2278                           ;src/librerias/commandLine.c: 180:         break;
  2279   00724C  EF79  F039         	goto	l328
  2280   007250                     l2963:
  2281                           
  2282                           ;src/librerias/commandLine.c: 182:             printf("\r\nEC_CL_WORDOVER\r\n");
  2283   007250  0EC7               	movlw	low STR_42
  2284   007252  6E23               	movwf	printf@fmt^0,c
  2285   007254  0E7E               	movlw	high STR_42
  2286   007256  6E24               	movwf	(printf@fmt+1)^0,c
  2287   007258  ECD2  F035         	call	_printf	;wreg free
  2288                           
  2289                           ;src/librerias/commandLine.c: 183:             commandLineReset();
  2290   00725C  EC0A  F036         	call	_commandLineReset	;wreg free
  2291                           
  2292                           ;src/librerias/commandLine.c: 184:         break;
  2293   007260  EF79  F039         	goto	l328
  2294   007264                     l2965:
  2295                           
  2296                           ;src/librerias/commandLine.c: 186:             printf("\r\nEC_CL_MAXNUMPARAMS\r\n");
  2297   007264  0EB0               	movlw	low STR_43
  2298   007266  6E23               	movwf	printf@fmt^0,c
  2299   007268  0E7E               	movlw	high STR_43
  2300   00726A  6E24               	movwf	(printf@fmt+1)^0,c
  2301   00726C  ECD2  F035         	call	_printf	;wreg free
  2302                           
  2303                           ;src/librerias/commandLine.c: 187:             commandLineReset();
  2304   007270  EC0A  F036         	call	_commandLineReset	;wreg free
  2305                           
  2306                           ;src/librerias/commandLine.c: 188:         break;
  2307   007274  EF79  F039         	goto	l328
  2308   007278                     l2967:
  2309                           
  2310                           ;src/librerias/commandLine.c: 190:             printf("\r\nEC_CL_WRONGNUMPARAMS\r\n");
  2311   007278  0E80               	movlw	low STR_44
  2312   00727A  6E23               	movwf	printf@fmt^0,c
  2313   00727C  0E7E               	movlw	high STR_44
  2314   00727E  6E24               	movwf	(printf@fmt+1)^0,c
  2315   007280  ECD2  F035         	call	_printf	;wreg free
  2316                           
  2317                           ;src/librerias/commandLine.c: 191:             commandLineReset();
  2318   007284  EC0A  F036         	call	_commandLineReset	;wreg free
  2319                           
  2320                           ;src/librerias/commandLine.c: 192:         break;
  2321   007288  EF79  F039         	goto	l328
  2322   00728C                     l2969:
  2323                           
  2324                           ;src/librerias/commandLine.c: 194:             printf("\r\nEC_CL_WRONGCOMMAND\r\n");
  2325   00728C  0E99               	movlw	low STR_45
  2326   00728E  6E23               	movwf	printf@fmt^0,c
  2327   007290  0E7E               	movlw	high STR_45
  2328   007292  6E24               	movwf	(printf@fmt+1)^0,c
  2329   007294  ECD2  F035         	call	_printf	;wreg free
  2330                           
  2331                           ;src/librerias/commandLine.c: 195:             commandLineReset();
  2332   007298  EC0A  F036         	call	_commandLineReset	;wreg free
  2333                           
  2334                           ;src/librerias/commandLine.c: 196:         break;
  2335   00729C  EF79  F039         	goto	l328
  2336   0072A0                     l2973:
  2337   0072A0  502C               	movf	CL_ErrorHandler@errorCode^0,w,c
  2338   0072A2  6E2A               	movwf	??_CL_ErrorHandler^0,c
  2339   0072A4  6A2B               	clrf	(??_CL_ErrorHandler+1)^0,c
  2340                           
  2341                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2342                           ; Switch size 1, requested type "simple"
  2343                           ; Number of cases is 1, Range of values is 0 to 0
  2344                           ; switch strategies available:
  2345                           ; Name         Instructions Cycles
  2346                           ; simple_byte            4     3 (average)
  2347                           ;	Chosen strategy is simple_byte
  2348   0072A6  502B               	movf	(??_CL_ErrorHandler+1)^0,w,c
  2349   0072A8  0A00               	xorlw	0	; case 0
  2350   0072AA  B4D8               	btfsc	status,2,c
  2351   0072AC  EF5A  F039         	goto	l3373
  2352   0072B0  EF79  F039         	goto	l328
  2353   0072B4                     l3373:
  2354                           
  2355                           ; Switch size 1, requested type "simple"
  2356                           ; Number of cases is 7, Range of values is 0 to 6
  2357                           ; switch strategies available:
  2358                           ; Name         Instructions Cycles
  2359                           ; simple_byte           22    12 (average)
  2360                           ;	Chosen strategy is simple_byte
  2361   0072B4  502A               	movf	??_CL_ErrorHandler^0,w,c
  2362   0072B6  0A00               	xorlw	0	; case 0
  2363   0072B8  B4D8               	btfsc	status,2,c
  2364   0072BA  EF79  F039         	goto	l328
  2365   0072BE  0A01               	xorlw	1	; case 1
  2366   0072C0  B4D8               	btfsc	status,2,c
  2367   0072C2  EF14  F039         	goto	l2959
  2368   0072C6  0A03               	xorlw	3	; case 2
  2369   0072C8  B4D8               	btfsc	status,2,c
  2370   0072CA  EF1E  F039         	goto	l2961
  2371   0072CE  0A01               	xorlw	1	; case 3
  2372   0072D0  B4D8               	btfsc	status,2,c
  2373   0072D2  EF28  F039         	goto	l2963
  2374   0072D6  0A07               	xorlw	7	; case 4
  2375   0072D8  B4D8               	btfsc	status,2,c
  2376   0072DA  EF32  F039         	goto	l2965
  2377   0072DE  0A01               	xorlw	1	; case 5
  2378   0072E0  B4D8               	btfsc	status,2,c
  2379   0072E2  EF3C  F039         	goto	l2967
  2380   0072E6  0A03               	xorlw	3	; case 6
  2381   0072E8  B4D8               	btfsc	status,2,c
  2382   0072EA  EF46  F039         	goto	l2969
  2383   0072EE  EF79  F039         	goto	l328
  2384   0072F2                     l328:
  2385   0072F2  0012               	return		;funcret
  2386   0072F4                     __end_of_CL_ErrorHandler:
  2387                           	callstack 0
  2388                           
  2389 ;; *************** function _commandLineReset *****************
  2390 ;; Defined at:
  2391 ;;		line 32 in file "src/librerias/commandLine.c"
  2392 ;; Parameters:    Size  Location     Type
  2393 ;;		None
  2394 ;; Auto vars:     Size  Location     Type
  2395 ;;		None
  2396 ;; Return value:  Size  Location     Type
  2397 ;;                  1    wreg      void 
  2398 ;; Registers used:
  2399 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2400 ;; Tracked objects:
  2401 ;;		On entry : 0/0
  2402 ;;		On exit  : 0/0
  2403 ;;		Unchanged: 0/0
  2404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK7   BANK6
  2405 ;;      Params:         0       0       0       0       0       0       0       0       0
  2406 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2407 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2408 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2409 ;;Total ram usage:        0 bytes
  2410 ;; Hardware stack levels used: 1
  2411 ;; Hardware stack levels required when called: 6
  2412 ;; This function calls:
  2413 ;;		_clearArray
  2414 ;;		_clearBuff
  2415 ;;		_printf
  2416 ;; This function is called by:
  2417 ;;		_commandProcess
  2418 ;;		_CL_ErrorHandler
  2419 ;; This function uses a non-reentrant model
  2420 ;;
  2421                           
  2422                           	psect	text8
  2423   006C14                     __ptext8:
  2424                           	callstack 0
  2425   006C14                     _commandLineReset:
  2426                           	callstack 23
  2427   006C14                     
  2428                           ;src/librerias/commandLine.c: 33:     clearBuff();
  2429   006C14  ECE1  F035         	call	_clearBuff	;wreg free
  2430                           
  2431                           ;src/librerias/commandLine.c: 34:     clearArray(&command[0],16);
  2432   006C18  0E3A               	movlw	low _command
  2433   006C1A  6E01               	movwf	clearArray@array^0,c
  2434   006C1C  6A02               	clrf	(clearArray@array+1)^0,c
  2435   006C1E  0E10               	movlw	16
  2436   006C20  6E03               	movwf	clearArray@len^0,c
  2437   006C22  ECF4  F035         	call	_clearArray	;wreg free
  2438                           
  2439                           ;src/librerias/commandLine.c: 35:     clearArray(&param[0][0],16 * 5);
  2440   006C26  0E00               	movlw	low _param
  2441   006C28  6E01               	movwf	clearArray@array^0,c
  2442   006C2A  0E01               	movlw	high _param
  2443   006C2C  6E02               	movwf	(clearArray@array+1)^0,c
  2444   006C2E  0E50               	movlw	80
  2445   006C30  6E03               	movwf	clearArray@len^0,c
  2446   006C32  ECF4  F035         	call	_clearArray	;wreg free
  2447   006C36                     
  2448                           ;src/librerias/commandLine.c: 36:     printf("\r\n> ");
  2449   006C36  0EF5               	movlw	low STR_33
  2450   006C38  6E23               	movwf	printf@fmt^0,c
  2451   006C3A  0E7F               	movlw	high STR_33
  2452   006C3C  6E24               	movwf	(printf@fmt+1)^0,c
  2453   006C3E  ECD2  F035         	call	_printf	;wreg free
  2454   006C42  0012               	return		;funcret
  2455   006C44                     __end_of_commandLineReset:
  2456                           	callstack 0
  2457                           
  2458 ;; *************** function _clearBuff *****************
  2459 ;; Defined at:
  2460 ;;		line 68 in file "src/librerias/commandLine.c"
  2461 ;; Parameters:    Size  Location     Type
  2462 ;;		None
  2463 ;; Auto vars:     Size  Location     Type
  2464 ;;  i               1    0[COMRAM] unsigned char 
  2465 ;; Return value:  Size  Location     Type
  2466 ;;                  1    wreg      void 
  2467 ;; Registers used:
  2468 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2469 ;; Tracked objects:
  2470 ;;		On entry : 0/0
  2471 ;;		On exit  : 0/0
  2472 ;;		Unchanged: 0/0
  2473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK7   BANK6
  2474 ;;      Params:         0       0       0       0       0       0       0       0       0
  2475 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2476 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2477 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2478 ;;Total ram usage:        1 bytes
  2479 ;; Hardware stack levels used: 1
  2480 ;; This function calls:
  2481 ;;		Nothing
  2482 ;; This function is called by:
  2483 ;;		_commandLineInit
  2484 ;;		_commandLineReset
  2485 ;;		_commandLineDeinit
  2486 ;; This function uses a non-reentrant model
  2487 ;;
  2488                           
  2489                           	psect	text9
  2490   006BC2                     __ptext9:
  2491                           	callstack 0
  2492   006BC2                     _clearBuff:
  2493                           	callstack 28
  2494   006BC2                     
  2495                           ;src/librerias/commandLine.c: 69:     for(uint8_t i = 0;i < 100;i++){
  2496   006BC2  0E00               	movlw	0
  2497   006BC4  6E01               	movwf	clearBuff@i^0,c
  2498   006BC6                     l2233:
  2499                           
  2500                           ;src/librerias/commandLine.c: 70:         charBuff[i] = 0x0;
  2501   006BC6  5001               	movf	clearBuff@i^0,w,c
  2502   006BC8  0F60               	addlw	low _charBuff
  2503   006BCA  6ED9               	movwf	fsr2l,c
  2504   006BCC  6ADA               	clrf	fsr2h,c
  2505   006BCE  6ADF               	clrf	indf2,c
  2506   006BD0                     
  2507                           ;src/librerias/commandLine.c: 71:     }
  2508   006BD0  2A01               	incf	clearBuff@i^0,f,c
  2509   006BD2  0E63               	movlw	99
  2510   006BD4  6401               	cpfsgt	clearBuff@i^0,c
  2511   006BD6  EFEF  F035         	goto	u1411
  2512   006BDA  EFF1  F035         	goto	u1410
  2513   006BDE                     u1411:
  2514   006BDE  EFE3  F035         	goto	l2233
  2515   006BE2                     u1410:
  2516   006BE2                     
  2517                           ;src/librerias/commandLine.c: 72:     buffCount = 0x0;
  2518   006BE2  0E00               	movlw	0
  2519   006BE4  6E39               	movwf	_buffCount^0,c
  2520   006BE6  0012               	return		;funcret
  2521   006BE8                     __end_of_clearBuff:
  2522                           	callstack 0
  2523                           
  2524 ;; *************** function _clearArray *****************
  2525 ;; Defined at:
  2526 ;;		line 80 in file "src/librerias/commandLine.c"
  2527 ;; Parameters:    Size  Location     Type
  2528 ;;  array           2    0[COMRAM] PTR unsigned char 
  2529 ;;		 -> param(80), command(16), 
  2530 ;;  len             1    2[COMRAM] unsigned char 
  2531 ;; Auto vars:     Size  Location     Type
  2532 ;;  i               1    3[COMRAM] unsigned char 
  2533 ;; Return value:  Size  Location     Type
  2534 ;;                  1    wreg      void 
  2535 ;; Registers used:
  2536 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2537 ;; Tracked objects:
  2538 ;;		On entry : 0/0
  2539 ;;		On exit  : 0/0
  2540 ;;		Unchanged: 0/0
  2541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK7   BANK6
  2542 ;;      Params:         3       0       0       0       0       0       0       0       0
  2543 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2544 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2545 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2546 ;;Total ram usage:        4 bytes
  2547 ;; Hardware stack levels used: 1
  2548 ;; This function calls:
  2549 ;;		Nothing
  2550 ;; This function is called by:
  2551 ;;		_commandLineReset
  2552 ;; This function uses a non-reentrant model
  2553 ;;
  2554                           
  2555                           	psect	text10
  2556   006BE8                     __ptext10:
  2557                           	callstack 0
  2558   006BE8                     _clearArray:
  2559                           	callstack 28
  2560   006BE8                     
  2561                           ;src/librerias/commandLine.c: 81:     for(uint8_t i = 0; i < len; i++){
  2562   006BE8  0E00               	movlw	0
  2563   006BEA  6E04               	movwf	clearArray@i^0,c
  2564   006BEC  EF00  F036         	goto	l2951
  2565   006BF0                     l2947:
  2566                           
  2567                           ;src/librerias/commandLine.c: 82:         *(array + i) = 0;
  2568   006BF0  5004               	movf	clearArray@i^0,w,c
  2569   006BF2  2401               	addwf	clearArray@array^0,w,c
  2570   006BF4  6ED9               	movwf	fsr2l,c
  2571   006BF6  0E00               	movlw	0
  2572   006BF8  2002               	addwfc	(clearArray@array+1)^0,w,c
  2573   006BFA  6EDA               	movwf	fsr2h,c
  2574   006BFC  6ADF               	clrf	indf2,c
  2575   006BFE                     
  2576                           ;src/librerias/commandLine.c: 83:     }
  2577   006BFE  2A04               	incf	clearArray@i^0,f,c
  2578   006C00                     l2951:
  2579   006C00  5003               	movf	clearArray@len^0,w,c
  2580   006C02  5C04               	subwf	clearArray@i^0,w,c
  2581   006C04  A0D8               	btfss	status,0,c
  2582   006C06  EF07  F036         	goto	u2091
  2583   006C0A  EF09  F036         	goto	u2090
  2584   006C0E                     u2091:
  2585   006C0E  EFF8  F035         	goto	l2947
  2586   006C12                     u2090:
  2587   006C12  0012               	return		;funcret
  2588   006C14                     __end_of_clearArray:
  2589                           	callstack 0
  2590                           
  2591 ;; *************** function _UART_RxAvailable *****************
  2592 ;; Defined at:
  2593 ;;		line 112 in file "src/librerias/UART.c"
  2594 ;; Parameters:    Size  Location     Type
  2595 ;;		None
  2596 ;; Auto vars:     Size  Location     Type
  2597 ;;		None
  2598 ;; Return value:  Size  Location     Type
  2599 ;;                  1    wreg      _Bool 
  2600 ;; Registers used:
  2601 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2602 ;; Tracked objects:
  2603 ;;		On entry : 0/0
  2604 ;;		On exit  : 0/0
  2605 ;;		Unchanged: 0/0
  2606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK7   BANK6
  2607 ;;      Params:         0       0       0       0       0       0       0       0       0
  2608 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2609 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2610 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2611 ;;Total ram usage:        0 bytes
  2612 ;; Hardware stack levels used: 1
  2613 ;; Hardware stack levels required when called: 7
  2614 ;; This function calls:
  2615 ;;		_UART_ErrorHandler
  2616 ;; This function is called by:
  2617 ;;		_main
  2618 ;; This function uses a non-reentrant model
  2619 ;;
  2620                           
  2621                           	psect	text11
  2622   006CAA                     __ptext11:
  2623                           	callstack 0
  2624   006CAA                     _UART_RxAvailable:
  2625                           	callstack 23
  2626   006CAA                     
  2627                           ;src/librerias/UART.c: 113:     if (!RCSTAbits.SPEN || !RCSTAbits.CREN){
  2628   006CAA  AEAB               	btfss	171,7,c	;volatile
  2629   006CAC  EF5A  F036         	goto	u1901
  2630   006CB0  EF5C  F036         	goto	u1900
  2631   006CB4                     u1901:
  2632   006CB4  EF63  F036         	goto	l2583
  2633   006CB8                     u1900:
  2634   006CB8  B8AB               	btfsc	171,4,c	;volatile
  2635   006CBA  EF61  F036         	goto	u1911
  2636   006CBE  EF63  F036         	goto	u1910
  2637   006CC2                     u1911:
  2638   006CC2  EF69  F036         	goto	l151
  2639   006CC6                     u1910:
  2640   006CC6                     l2583:
  2641                           
  2642                           ;src/librerias/UART.c: 114:         UART_ErrorHandler(ERROR_CODE_UART_CONFIG);
  2643   006CC6  0E03               	movlw	3
  2644   006CC8  EC49  F037         	call	_UART_ErrorHandler
  2645   006CCC                     l2585:
  2646                           
  2647                           ;src/librerias/UART.c: 115:         return 0;
  2648   006CCC  0E00               	movlw	0
  2649   006CCE  EF73  F036         	goto	l154
  2650   006CD2                     l151:
  2651                           
  2652                           ;src/librerias/UART.c: 117:     if (!RC1IF){
  2653   006CD2  BA9E               	btfsc	3998,5,c	;volatile
  2654   006CD4  EF6E  F036         	goto	u1921
  2655   006CD8  EF70  F036         	goto	u1920
  2656   006CDC                     u1921:
  2657   006CDC  EF72  F036         	goto	l2593
  2658   006CE0                     u1920:
  2659   006CE0  EF66  F036         	goto	l2585
  2660   006CE4                     l2593:
  2661                           
  2662                           ;src/librerias/UART.c: 120:     return 1;
  2663   006CE4  0E01               	movlw	1
  2664   006CE6                     l154:
  2665   006CE6  0012               	return		;funcret
  2666   006CE8                     __end_of_UART_RxAvailable:
  2667                           	callstack 0
  2668                           
  2669 ;; *************** function _UART_Rx *****************
  2670 ;; Defined at:
  2671 ;;		line 106 in file "src/librerias/UART.c"
  2672 ;; Parameters:    Size  Location     Type
  2673 ;;		None
  2674 ;; Auto vars:     Size  Location     Type
  2675 ;;		None
  2676 ;; Return value:  Size  Location     Type
  2677 ;;                  1    wreg      unsigned char 
  2678 ;; Registers used:
  2679 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2680 ;; Tracked objects:
  2681 ;;		On entry : 0/0
  2682 ;;		On exit  : 0/0
  2683 ;;		Unchanged: 0/0
  2684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK7   BANK6
  2685 ;;      Params:         0       0       0       0       0       0       0       0       0
  2686 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2687 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2688 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2689 ;;Total ram usage:        0 bytes
  2690 ;; Hardware stack levels used: 1
  2691 ;; Hardware stack levels required when called: 7
  2692 ;; This function calls:
  2693 ;;		_UART_ErrorHandler
  2694 ;;		_UART_Rx_FRAMING
  2695 ;;		_UART_Rx_OVERFLOW
  2696 ;; This function is called by:
  2697 ;;		_main
  2698 ;; This function uses a non-reentrant model
  2699 ;;
  2700                           
  2701                           	psect	text12
  2702   006B2A                     __ptext12:
  2703                           	callstack 0
  2704   006B2A                     _UART_Rx:
  2705                           	callstack 23
  2706   006B2A                     
  2707                           ;src/librerias/UART.c: 107:     UART_ErrorHandler(UART_Rx_OVERFLOW());
  2708   006B2A  ECC4  F035         	call	_UART_Rx_OVERFLOW	;wreg free
  2709   006B2E  EC49  F037         	call	_UART_ErrorHandler
  2710                           
  2711                           ;src/librerias/UART.c: 108:     UART_ErrorHandler(UART_Rx_FRAMING());
  2712   006B32  ECAA  F035         	call	_UART_Rx_FRAMING	;wreg free
  2713   006B36  EC49  F037         	call	_UART_ErrorHandler
  2714   006B3A                     
  2715                           ;src/librerias/UART.c: 109:     return RCREG1;
  2716   006B3A  50AE               	movf	174,w,c	;volatile
  2717   006B3C  0012               	return		;funcret
  2718   006B3E                     __end_of_UART_Rx:
  2719                           	callstack 0
  2720                           
  2721 ;; *************** function _UART_Rx_OVERFLOW *****************
  2722 ;; Defined at:
  2723 ;;		line 89 in file "src/librerias/UART.c"
  2724 ;; Parameters:    Size  Location     Type
  2725 ;;		None
  2726 ;; Auto vars:     Size  Location     Type
  2727 ;;		None
  2728 ;; Return value:  Size  Location     Type
  2729 ;;                  1    wreg      enum E5188
  2730 ;; Registers used:
  2731 ;;		wreg
  2732 ;; Tracked objects:
  2733 ;;		On entry : 0/0
  2734 ;;		On exit  : 0/0
  2735 ;;		Unchanged: 0/0
  2736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK7   BANK6
  2737 ;;      Params:         0       0       0       0       0       0       0       0       0
  2738 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2739 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2740 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2741 ;;Total ram usage:        0 bytes
  2742 ;; Hardware stack levels used: 1
  2743 ;; This function calls:
  2744 ;;		Nothing
  2745 ;; This function is called by:
  2746 ;;		_UART_Rx
  2747 ;; This function uses a non-reentrant model
  2748 ;;
  2749                           
  2750                           	psect	text13
  2751   006B88                     __ptext13:
  2752                           	callstack 0
  2753   006B88                     _UART_Rx_OVERFLOW:
  2754                           	callstack 29
  2755   006B88                     
  2756                           ;src/librerias/UART.c: 90:     if (RCSTAbits.OERR) {
  2757   006B88  A2AB               	btfss	171,1,c	;volatile
  2758   006B8A  EFC9  F035         	goto	u441
  2759   006B8E  EFCB  F035         	goto	u440
  2760   006B92                     u441:
  2761   006B92  EFD0  F035         	goto	l1443
  2762   006B96                     u440:
  2763   006B96                     
  2764                           ;src/librerias/UART.c: 91:         RCSTAbits.CREN = 0;
  2765   006B96  98AB               	bcf	171,4,c	;volatile
  2766                           
  2767                           ;src/librerias/UART.c: 92:         RCSTAbits.CREN = 1;
  2768   006B98  88AB               	bsf	171,4,c	;volatile
  2769   006B9A                     
  2770                           ;src/librerias/UART.c: 93:         return ERROR_CODE_UART_OVERFLOW;
  2771   006B9A  0E01               	movlw	1
  2772   006B9C  EFD1  F035         	goto	l141
  2773   006BA0                     l1443:
  2774                           
  2775                           ;src/librerias/UART.c: 95:     return ERROR_CODE_UART_OK;
  2776   006BA0  0E00               	movlw	0
  2777   006BA2                     l141:
  2778   006BA2  0012               	return		;funcret
  2779   006BA4                     __end_of_UART_Rx_OVERFLOW:
  2780                           	callstack 0
  2781                           
  2782 ;; *************** function _UART_Rx_FRAMING *****************
  2783 ;; Defined at:
  2784 ;;		line 98 in file "src/librerias/UART.c"
  2785 ;; Parameters:    Size  Location     Type
  2786 ;;		None
  2787 ;; Auto vars:     Size  Location     Type
  2788 ;;  dummy           1    0        unsigned char 
  2789 ;; Return value:  Size  Location     Type
  2790 ;;                  1    wreg      enum E5188
  2791 ;; Registers used:
  2792 ;;		wreg
  2793 ;; Tracked objects:
  2794 ;;		On entry : 0/0
  2795 ;;		On exit  : 0/0
  2796 ;;		Unchanged: 0/0
  2797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK7   BANK6
  2798 ;;      Params:         0       0       0       0       0       0       0       0       0
  2799 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2800 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2801 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2802 ;;Total ram usage:        0 bytes
  2803 ;; Hardware stack levels used: 1
  2804 ;; This function calls:
  2805 ;;		Nothing
  2806 ;; This function is called by:
  2807 ;;		_UART_Rx
  2808 ;; This function uses a non-reentrant model
  2809 ;;
  2810                           
  2811                           	psect	text14
  2812   006B54                     __ptext14:
  2813                           	callstack 0
  2814   006B54                     _UART_Rx_FRAMING:
  2815                           	callstack 29
  2816   006B54                     
  2817                           ;src/librerias/UART.c: 99:     if (RCSTAbits.FERR) {
  2818   006B54  A4AB               	btfss	171,2,c	;volatile
  2819   006B56  EFAF  F035         	goto	u451
  2820   006B5A  EFB1  F035         	goto	u450
  2821   006B5E                     u451:
  2822   006B5E  EFB5  F035         	goto	l1455
  2823   006B62                     u450:
  2824   006B62  50AE               	movf	174,w,c	;volatile
  2825   006B64                     
  2826                           ;src/librerias/UART.c: 101:         return ERROR_CODE_UART_FRAMING;
  2827   006B64  0E02               	movlw	2
  2828   006B66  EFB6  F035         	goto	l145
  2829   006B6A                     l1455:
  2830                           
  2831                           ;src/librerias/UART.c: 103:     return ERROR_CODE_UART_OK;
  2832   006B6A  0E00               	movlw	0
  2833   006B6C                     l145:
  2834   006B6C  0012               	return		;funcret
  2835   006B6E                     __end_of_UART_Rx_FRAMING:
  2836                           	callstack 0
  2837                           
  2838 ;; *************** function _UART_ErrorHandler *****************
  2839 ;; Defined at:
  2840 ;;		line 123 in file "src/librerias/UART.c"
  2841 ;; Parameters:    Size  Location     Type
  2842 ;;  errorCode       1    wreg     enum E5188
  2843 ;; Auto vars:     Size  Location     Type
  2844 ;;  errorCode       1   43[COMRAM] enum E5188
  2845 ;; Return value:  Size  Location     Type
  2846 ;;                  1    wreg      void 
  2847 ;; Registers used:
  2848 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2849 ;; Tracked objects:
  2850 ;;		On entry : 0/0
  2851 ;;		On exit  : 0/0
  2852 ;;		Unchanged: 0/0
  2853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK7   BANK6
  2854 ;;      Params:         0       0       0       0       0       0       0       0       0
  2855 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2856 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2857 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2858 ;;Total ram usage:        3 bytes
  2859 ;; Hardware stack levels used: 1
  2860 ;; Hardware stack levels required when called: 6
  2861 ;; This function calls:
  2862 ;;		_printf
  2863 ;; This function is called by:
  2864 ;;		_UART_Rx
  2865 ;;		_UART_RxAvailable
  2866 ;; This function uses a non-reentrant model
  2867 ;;
  2868                           
  2869                           	psect	text15
  2870   006E92                     __ptext15:
  2871                           	callstack 0
  2872   006E92                     _UART_ErrorHandler:
  2873                           	callstack 23
  2874                           
  2875                           ;incstack = 0
  2876                           ;UART_ErrorHandler@errorCode stored from wreg
  2877   006E92  6E2C               	movwf	UART_ErrorHandler@errorCode^0,c
  2878   006E94                     
  2879                           ;src/librerias/UART.c: 124:     if(errorCode == ERROR_CODE_UART_OK) return;
  2880   006E94  502C               	movf	UART_ErrorHandler@errorCode^0,w,c
  2881   006E96  A4D8               	btfss	status,2,c
  2882   006E98  EF50  F037         	goto	u1491
  2883   006E9C  EF52  F037         	goto	u1490
  2884   006EA0                     u1491:
  2885   006EA0  EF54  F037         	goto	l2379
  2886   006EA4                     u1490:
  2887   006EA4  EF8D  F037         	goto	l159
  2888   006EA8                     l2379:
  2889                           
  2890                           ;src/librerias/UART.c: 125:     printf("Error: ");
  2891   006EA8  0EDE               	movlw	low STR_20
  2892   006EAA  6E23               	movwf	printf@fmt^0,c
  2893   006EAC  0E7F               	movlw	high STR_20
  2894   006EAE  6E24               	movwf	(printf@fmt+1)^0,c
  2895   006EB0  ECD2  F035         	call	_printf	;wreg free
  2896                           
  2897                           ;src/librerias/UART.c: 126:     switch(errorCode){
  2898   006EB4  EF74  F037         	goto	l2389
  2899   006EB8                     l2381:
  2900                           
  2901                           ;src/librerias/UART.c: 128:             printf("ERROR_CODE_UART_OVERFLOW\r\n");
  2902   006EB8  0E31               	movlw	low STR_21
  2903   006EBA  6E23               	movwf	printf@fmt^0,c
  2904   006EBC  0E7E               	movlw	high STR_21
  2905   006EBE  6E24               	movwf	(printf@fmt+1)^0,c
  2906   006EC0  ECD2  F035         	call	_printf	;wreg free
  2907                           
  2908                           ;src/librerias/UART.c: 129:         break;
  2909   006EC4  EF8D  F037         	goto	l159
  2910   006EC8                     l2383:
  2911                           
  2912                           ;src/librerias/UART.c: 131:             printf("ERROR_CODE_UART_FRAMING\r\n");
  2913   006EC8  0E66               	movlw	low STR_22
  2914   006ECA  6E23               	movwf	printf@fmt^0,c
  2915   006ECC  0E7E               	movlw	high STR_22
  2916   006ECE  6E24               	movwf	(printf@fmt+1)^0,c
  2917   006ED0  ECD2  F035         	call	_printf	;wreg free
  2918                           
  2919                           ;src/librerias/UART.c: 132:         break;
  2920   006ED4  EF8D  F037         	goto	l159
  2921   006ED8                     l2385:
  2922                           
  2923                           ;src/librerias/UART.c: 134:             printf("ERROR_CODE_UART_CONFIG \r\n");
  2924   006ED8  0E4C               	movlw	low STR_23
  2925   006EDA  6E23               	movwf	printf@fmt^0,c
  2926   006EDC  0E7E               	movlw	high STR_23
  2927   006EDE  6E24               	movwf	(printf@fmt+1)^0,c
  2928   006EE0  ECD2  F035         	call	_printf	;wreg free
  2929                           
  2930                           ;src/librerias/UART.c: 135:         break;
  2931   006EE4  EF8D  F037         	goto	l159
  2932   006EE8                     l2389:
  2933   006EE8  502C               	movf	UART_ErrorHandler@errorCode^0,w,c
  2934   006EEA  6E2A               	movwf	??_UART_ErrorHandler^0,c
  2935   006EEC  6A2B               	clrf	(??_UART_ErrorHandler+1)^0,c
  2936                           
  2937                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2938                           ; Switch size 1, requested type "simple"
  2939                           ; Number of cases is 1, Range of values is 0 to 0
  2940                           ; switch strategies available:
  2941                           ; Name         Instructions Cycles
  2942                           ; simple_byte            4     3 (average)
  2943                           ;	Chosen strategy is simple_byte
  2944   006EEE  502B               	movf	(??_UART_ErrorHandler+1)^0,w,c
  2945   006EF0  0A00               	xorlw	0	; case 0
  2946   006EF2  B4D8               	btfsc	status,2,c
  2947   006EF4  EF7E  F037         	goto	l3375
  2948   006EF8  EF8D  F037         	goto	l159
  2949   006EFC                     l3375:
  2950                           
  2951                           ; Switch size 1, requested type "simple"
  2952                           ; Number of cases is 3, Range of values is 1 to 3
  2953                           ; switch strategies available:
  2954                           ; Name         Instructions Cycles
  2955                           ; simple_byte           10     6 (average)
  2956                           ;	Chosen strategy is simple_byte
  2957   006EFC  502A               	movf	??_UART_ErrorHandler^0,w,c
  2958   006EFE  0A01               	xorlw	1	; case 1
  2959   006F00  B4D8               	btfsc	status,2,c
  2960   006F02  EF5C  F037         	goto	l2381
  2961   006F06  0A03               	xorlw	3	; case 2
  2962   006F08  B4D8               	btfsc	status,2,c
  2963   006F0A  EF64  F037         	goto	l2383
  2964   006F0E  0A01               	xorlw	1	; case 3
  2965   006F10  B4D8               	btfsc	status,2,c
  2966   006F12  EF6C  F037         	goto	l2385
  2967   006F16  EF8D  F037         	goto	l159
  2968   006F1A                     l159:
  2969   006F1A  0012               	return		;funcret
  2970   006F1C                     __end_of_UART_ErrorHandler:
  2971                           	callstack 0
  2972                           
  2973 ;; *************** function _UART_Init *****************
  2974 ;; Defined at:
  2975 ;;		line 29 in file "src/librerias/UART.c"
  2976 ;; Parameters:    Size  Location     Type
  2977 ;;  baudrate        4   41[COMRAM] unsigned long 
  2978 ;; Auto vars:     Size  Location     Type
  2979 ;;		None
  2980 ;; Return value:  Size  Location     Type
  2981 ;;                  1    wreg      void 
  2982 ;; Registers used:
  2983 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2984 ;; Tracked objects:
  2985 ;;		On entry : 0/0
  2986 ;;		On exit  : 0/0
  2987 ;;		Unchanged: 0/0
  2988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK7   BANK6
  2989 ;;      Params:         4       0       0       0       0       0       0       0       0
  2990 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2991 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2992 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2993 ;;Total ram usage:        4 bytes
  2994 ;; Hardware stack levels used: 1
  2995 ;; Hardware stack levels required when called: 7
  2996 ;; This function calls:
  2997 ;;		_UART_config_show
  2998 ;;		_UART_select_baud
  2999 ;; This function is called by:
  3000 ;;		_main
  3001 ;; This function uses a non-reentrant model
  3002 ;;
  3003                           
  3004                           	psect	text16
  3005   006C44                     __ptext16:
  3006                           	callstack 0
  3007   006C44                     _UART_Init:
  3008                           	callstack 23
  3009   006C44                     
  3010                           ;src/librerias/UART.c: 30:     TXSTA1bits.SYNC1 = 0;
  3011   006C44  98AC               	bcf	172,4,c	;volatile
  3012                           
  3013                           ;src/librerias/UART.c: 31:     TXSTA1bits.BRGH1 = 1;
  3014   006C46  84AC               	bsf	172,2,c	;volatile
  3015   006C48                     
  3016                           ;src/librerias/UART.c: 32:     BAUDCON1 = 0x4A;
  3017   006C48  0E4A               	movlw	74
  3018   006C4A  6EB8               	movwf	184,c	;volatile
  3019   006C4C                     
  3020                           ;src/librerias/UART.c: 33:     UART_select_baud(baudrate);
  3021   006C4C  C02A  F001         	movff	UART_Init@baudrate,UART_select_baud@baudrate
  3022   006C50  C02B  F002         	movff	UART_Init@baudrate+1,UART_select_baud@baudrate+1
  3023   006C54  C02C  F003         	movff	UART_Init@baudrate+2,UART_select_baud@baudrate+2
  3024   006C58  C02D  F004         	movff	UART_Init@baudrate+3,UART_select_baud@baudrate+3
  3025   006C5C  EC13  F03A         	call	_UART_select_baud	;wreg free
  3026   006C60                     
  3027                           ;src/librerias/UART.c: 34:     TRISC6 = 1;
  3028   006C60  8C94               	bsf	3988,6,c	;volatile
  3029   006C62                     
  3030                           ;src/librerias/UART.c: 35:     TRISC7 = 1;
  3031   006C62  8E94               	bsf	3988,7,c	;volatile
  3032   006C64                     
  3033                           ;src/librerias/UART.c: 36:     RCSTAbits.SPEN = 1;
  3034   006C64  8EAB               	bsf	171,7,c	;volatile
  3035   006C66                     
  3036                           ;src/librerias/UART.c: 37:     TXSTAbits.TXEN1 = 1;
  3037   006C66  8AAC               	bsf	172,5,c	;volatile
  3038   006C68                     
  3039                           ;src/librerias/UART.c: 38:     RCSTAbits.CREN = 1;
  3040   006C68  88AB               	bsf	171,4,c	;volatile
  3041   006C6A                     
  3042                           ;src/librerias/UART.c: 39:     UART_config_show();
  3043   006C6A  ECB3  F03A         	call	_UART_config_show	;wreg free
  3044   006C6E                     
  3045                           ;src/librerias/UART.c: 40:     ANSELC = 0x0;
  3046   006C6E  0E00               	movlw	0
  3047   006C70  010F               	movlb	15	; () banked
  3048   006C72  6F5D               	movwf	93,b	;volatile
  3049   006C74                     
  3050                           ; BSR set to: 15
  3051   006C74  0012               	return		;funcret
  3052   006C76                     __end_of_UART_Init:
  3053                           	callstack 0
  3054                           
  3055 ;; *************** function _UART_select_baud *****************
  3056 ;; Defined at:
  3057 ;;		line 43 in file "src/librerias/UART.c"
  3058 ;; Parameters:    Size  Location     Type
  3059 ;;  baudrate        4    0[COMRAM] unsigned long 
  3060 ;; Auto vars:     Size  Location     Type
  3061 ;;		None
  3062 ;; Return value:  Size  Location     Type
  3063 ;;                  1    wreg      void 
  3064 ;; Registers used:
  3065 ;;		wreg, status,2, status,0
  3066 ;; Tracked objects:
  3067 ;;		On entry : 0/0
  3068 ;;		On exit  : 0/0
  3069 ;;		Unchanged: 0/0
  3070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK7   BANK6
  3071 ;;      Params:         4       0       0       0       0       0       0       0       0
  3072 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3073 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3074 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3075 ;;Total ram usage:        8 bytes
  3076 ;; Hardware stack levels used: 1
  3077 ;; This function calls:
  3078 ;;		Nothing
  3079 ;; This function is called by:
  3080 ;;		_UART_Init
  3081 ;; This function uses a non-reentrant model
  3082 ;;
  3083                           
  3084                           	psect	text17
  3085   007426                     __ptext17:
  3086                           	callstack 0
  3087   007426                     _UART_select_baud:
  3088                           	callstack 29
  3089   007426                     
  3090                           ;src/librerias/UART.c: 44:     switch (baudrate){
  3091   007426  EF45  F03A         	goto	l2333
  3092   00742A                     l2315:
  3093                           
  3094                           ;src/librerias/UART.c: 46:             SPBRGH = 0x9C;
  3095   00742A  0E9C               	movlw	156
  3096   00742C  6EB0               	movwf	176,c	;volatile
  3097                           
  3098                           ;src/librerias/UART.c: 47:             SPBRG = 0x3F;
  3099   00742E  0E3F               	movlw	63
  3100   007430  6EAF               	movwf	175,c	;volatile
  3101                           
  3102                           ;src/librerias/UART.c: 48:             break;
  3103   007432  EFB2  F03A         	goto	l128
  3104   007436                     l2317:
  3105                           
  3106                           ;src/librerias/UART.c: 50:             SPBRGH = 0x27;
  3107   007436  0E27               	movlw	39
  3108   007438  6EB0               	movwf	176,c	;volatile
  3109                           
  3110                           ;src/librerias/UART.c: 51:             SPBRG = 0x0F;
  3111   00743A  0E0F               	movlw	15
  3112   00743C  6EAF               	movwf	175,c	;volatile
  3113                           
  3114                           ;src/librerias/UART.c: 52:             break;
  3115   00743E  EFB2  F03A         	goto	l128
  3116   007442                     l2319:
  3117                           
  3118                           ;src/librerias/UART.c: 54:             SPBRGH = 0x13;
  3119   007442  0E13               	movlw	19
  3120   007444  6EB0               	movwf	176,c	;volatile
  3121                           
  3122                           ;src/librerias/UART.c: 55:             SPBRG = 0x87;
  3123   007446  0E87               	movlw	135
  3124   007448  6EAF               	movwf	175,c	;volatile
  3125                           
  3126                           ;src/librerias/UART.c: 56:             break;
  3127   00744A  EFB2  F03A         	goto	l128
  3128   00744E                     l2321:
  3129                           
  3130                           ;src/librerias/UART.c: 58:             SPBRGH = 0x04;
  3131   00744E  0E04               	movlw	4
  3132   007450  6EB0               	movwf	176,c	;volatile
  3133                           
  3134                           ;src/librerias/UART.c: 59:             SPBRG = 0x7F;
  3135   007452  0E7F               	movlw	127
  3136   007454  6EAF               	movwf	175,c	;volatile
  3137                           
  3138                           ;src/librerias/UART.c: 60:             break;
  3139   007456  EFB2  F03A         	goto	l128
  3140   00745A                     l2323:
  3141                           
  3142                           ;src/librerias/UART.c: 62:             SPBRGH = 0x02;
  3143   00745A  0E02               	movlw	2
  3144   00745C  6EB0               	movwf	176,c	;volatile
  3145                           
  3146                           ;src/librerias/UART.c: 63:             SPBRG = 0x70;
  3147   00745E  0E70               	movlw	112
  3148   007460  6EAF               	movwf	175,c	;volatile
  3149                           
  3150                           ;src/librerias/UART.c: 64:             break;
  3151   007462  EFB2  F03A         	goto	l128
  3152   007466                     l2325:
  3153                           
  3154                           ;src/librerias/UART.c: 66:             SPBRGH = 0x00;
  3155   007466  0E00               	movlw	0
  3156   007468  6EB0               	movwf	176,c	;volatile
  3157                           
  3158                           ;src/librerias/UART.c: 67:             SPBRG = 0xCF;
  3159   00746A  0ECF               	movlw	207
  3160   00746C  6EAF               	movwf	175,c	;volatile
  3161                           
  3162                           ;src/librerias/UART.c: 68:             break;
  3163   00746E  EFB2  F03A         	goto	l128
  3164   007472                     l2327:
  3165                           
  3166                           ;src/librerias/UART.c: 70:             SPBRGH = 0x00;
  3167   007472  0E00               	movlw	0
  3168   007474  6EB0               	movwf	176,c	;volatile
  3169                           
  3170                           ;src/librerias/UART.c: 71:             SPBRG = 0x67;
  3171   007476  0E67               	movlw	103
  3172   007478  6EAF               	movwf	175,c	;volatile
  3173                           
  3174                           ;src/librerias/UART.c: 72:             break;
  3175   00747A  EFB2  F03A         	goto	l128
  3176   00747E                     l2329:
  3177                           
  3178                           ;src/librerias/UART.c: 74:             SPBRGH = 0x04;
  3179   00747E  0E04               	movlw	4
  3180   007480  6EB0               	movwf	176,c	;volatile
  3181                           
  3182                           ;src/librerias/UART.c: 75:             SPBRG = 0xE1;
  3183   007482  0EE1               	movlw	225
  3184   007484  6EAF               	movwf	175,c	;volatile
  3185                           
  3186                           ;src/librerias/UART.c: 76:             break;
  3187   007486  EFB2  F03A         	goto	l128
  3188   00748A                     l2333:
  3189   00748A  C001  F005         	movff	UART_select_baud@baudrate,??_UART_select_baud
  3190   00748E  C002  F006         	movff	UART_select_baud@baudrate+1,??_UART_select_baud+1
  3191   007492  C003  F007         	movff	UART_select_baud@baudrate+2,??_UART_select_baud+2
  3192   007496  C004  F008         	movff	UART_select_baud@baudrate+3,??_UART_select_baud+3
  3193                           
  3194                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 3 sub-sw
      +                          itches
  3195                           ; Switch size 1, requested type "simple"
  3196                           ; Number of cases is 1, Range of values is 0 to 0
  3197                           ; switch strategies available:
  3198                           ; Name         Instructions Cycles
  3199                           ; simple_byte            4     3 (average)
  3200                           ;	Chosen strategy is simple_byte
  3201   00749A  5008               	movf	(??_UART_select_baud+3)^0,w,c
  3202   00749C  0A00               	xorlw	0	; case 0
  3203   00749E  B4D8               	btfsc	status,2,c
  3204   0074A0  EFA7  F03A         	goto	l3381
  3205   0074A4  EF3F  F03A         	goto	l2329
  3206   0074A8                     l3377:
  3207                           
  3208                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 6 sub-sw
      +                          itches
  3209                           ; Switch size 1, requested type "simple"
  3210                           ; Number of cases is 6, Range of values is 1 to 225
  3211                           ; switch strategies available:
  3212                           ; Name         Instructions Cycles
  3213                           ; simple_byte           19    10 (average)
  3214                           ;	Chosen strategy is simple_byte
  3215   0074A8  5006               	movf	(??_UART_select_baud+1)^0,w,c
  3216   0074AA  0A01               	xorlw	1	; case 1
  3217   0074AC  B4D8               	btfsc	status,2,c
  3218   0074AE  EF6F  F03A         	goto	l3383
  3219   0074B2  0A05               	xorlw	5	; case 4
  3220   0074B4  B4D8               	btfsc	status,2,c
  3221   0074B6  EF76  F03A         	goto	l3385
  3222   0074BA  0A0D               	xorlw	13	; case 9
  3223   0074BC  B4D8               	btfsc	status,2,c
  3224   0074BE  EF7D  F03A         	goto	l3387
  3225   0074C2  0A21               	xorlw	33	; case 40
  3226   0074C4  B4D8               	btfsc	status,2,c
  3227   0074C6  EF84  F03A         	goto	l3389
  3228   0074CA  0A63               	xorlw	99	; case 75
  3229   0074CC  B4D8               	btfsc	status,2,c
  3230   0074CE  EF8B  F03A         	goto	l3391
  3231   0074D2  0AAA               	xorlw	170	; case 225
  3232   0074D4  B4D8               	btfsc	status,2,c
  3233   0074D6  EF92  F03A         	goto	l3393
  3234   0074DA  EF3F  F03A         	goto	l2329
  3235   0074DE                     l3383:
  3236                           
  3237                           ; Switch size 1, requested type "simple"
  3238                           ; Number of cases is 1, Range of values is 44 to 44
  3239                           ; switch strategies available:
  3240                           ; Name         Instructions Cycles
  3241                           ; simple_byte            4     3 (average)
  3242                           ;	Chosen strategy is simple_byte
  3243   0074DE  5005               	movf	??_UART_select_baud^0,w,c
  3244   0074E0  0A2C               	xorlw	44	; case 44
  3245   0074E2  B4D8               	btfsc	status,2,c
  3246   0074E4  EF15  F03A         	goto	l2315
  3247   0074E8  EF3F  F03A         	goto	l2329
  3248   0074EC                     l3385:
  3249                           
  3250                           ; Switch size 1, requested type "simple"
  3251                           ; Number of cases is 1, Range of values is 176 to 176
  3252                           ; switch strategies available:
  3253                           ; Name         Instructions Cycles
  3254                           ; simple_byte            4     3 (average)
  3255                           ;	Chosen strategy is simple_byte
  3256   0074EC  5005               	movf	??_UART_select_baud^0,w,c
  3257   0074EE  0AB0               	xorlw	176	; case 176
  3258   0074F0  B4D8               	btfsc	status,2,c
  3259   0074F2  EF1B  F03A         	goto	l2317
  3260   0074F6  EF3F  F03A         	goto	l2329
  3261   0074FA                     l3387:
  3262                           
  3263                           ; Switch size 1, requested type "simple"
  3264                           ; Number of cases is 1, Range of values is 96 to 96
  3265                           ; switch strategies available:
  3266                           ; Name         Instructions Cycles
  3267                           ; simple_byte            4     3 (average)
  3268                           ;	Chosen strategy is simple_byte
  3269   0074FA  5005               	movf	??_UART_select_baud^0,w,c
  3270   0074FC  0A60               	xorlw	96	; case 96
  3271   0074FE  B4D8               	btfsc	status,2,c
  3272   007500  EF21  F03A         	goto	l2319
  3273   007504  EF3F  F03A         	goto	l2329
  3274   007508                     l3389:
  3275                           
  3276                           ; Switch size 1, requested type "simple"
  3277                           ; Number of cases is 1, Range of values is 177 to 177
  3278                           ; switch strategies available:
  3279                           ; Name         Instructions Cycles
  3280                           ; simple_byte            4     3 (average)
  3281                           ;	Chosen strategy is simple_byte
  3282   007508  5005               	movf	??_UART_select_baud^0,w,c
  3283   00750A  0AB1               	xorlw	177	; case 177
  3284   00750C  B4D8               	btfsc	status,2,c
  3285   00750E  EF27  F03A         	goto	l2321
  3286   007512  EF3F  F03A         	goto	l2329
  3287   007516                     l3391:
  3288                           
  3289                           ; Switch size 1, requested type "simple"
  3290                           ; Number of cases is 1, Range of values is 0 to 0
  3291                           ; switch strategies available:
  3292                           ; Name         Instructions Cycles
  3293                           ; simple_byte            4     3 (average)
  3294                           ;	Chosen strategy is simple_byte
  3295   007516  5005               	movf	??_UART_select_baud^0,w,c
  3296   007518  0A00               	xorlw	0	; case 0
  3297   00751A  B4D8               	btfsc	status,2,c
  3298   00751C  EF2D  F03A         	goto	l2323
  3299   007520  EF3F  F03A         	goto	l2329
  3300   007524                     l3393:
  3301                           
  3302                           ; Switch size 1, requested type "simple"
  3303                           ; Number of cases is 1, Range of values is 0 to 0
  3304                           ; switch strategies available:
  3305                           ; Name         Instructions Cycles
  3306                           ; simple_byte            4     3 (average)
  3307                           ;	Chosen strategy is simple_byte
  3308   007524  5005               	movf	??_UART_select_baud^0,w,c
  3309   007526  0A00               	xorlw	0	; case 0
  3310   007528  B4D8               	btfsc	status,2,c
  3311   00752A  EF33  F03A         	goto	l2325
  3312   00752E  EF3F  F03A         	goto	l2329
  3313   007532                     l3379:
  3314                           
  3315                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3316                           ; Switch size 1, requested type "simple"
  3317                           ; Number of cases is 1, Range of values is 194 to 194
  3318                           ; switch strategies available:
  3319                           ; Name         Instructions Cycles
  3320                           ; simple_byte            4     3 (average)
  3321                           ;	Chosen strategy is simple_byte
  3322   007532  5006               	movf	(??_UART_select_baud+1)^0,w,c
  3323   007534  0AC2               	xorlw	194	; case 194
  3324   007536  B4D8               	btfsc	status,2,c
  3325   007538  EFA0  F03A         	goto	l3395
  3326   00753C  EF3F  F03A         	goto	l2329
  3327   007540                     l3395:
  3328                           
  3329                           ; Switch size 1, requested type "simple"
  3330                           ; Number of cases is 1, Range of values is 0 to 0
  3331                           ; switch strategies available:
  3332                           ; Name         Instructions Cycles
  3333                           ; simple_byte            4     3 (average)
  3334                           ;	Chosen strategy is simple_byte
  3335   007540  5005               	movf	??_UART_select_baud^0,w,c
  3336   007542  0A00               	xorlw	0	; case 0
  3337   007544  B4D8               	btfsc	status,2,c
  3338   007546  EF39  F03A         	goto	l2327
  3339   00754A  EF3F  F03A         	goto	l2329
  3340   00754E                     l3381:
  3341                           
  3342                           ; Switch size 1, requested type "simple"
  3343                           ; Number of cases is 2, Range of values is 0 to 1
  3344                           ; switch strategies available:
  3345                           ; Name         Instructions Cycles
  3346                           ; simple_byte            7     4 (average)
  3347                           ;	Chosen strategy is simple_byte
  3348   00754E  5007               	movf	(??_UART_select_baud+2)^0,w,c
  3349   007550  0A00               	xorlw	0	; case 0
  3350   007552  B4D8               	btfsc	status,2,c
  3351   007554  EF54  F03A         	goto	l3377
  3352   007558  0A01               	xorlw	1	; case 1
  3353   00755A  B4D8               	btfsc	status,2,c
  3354   00755C  EF99  F03A         	goto	l3379
  3355   007560  EF3F  F03A         	goto	l2329
  3356   007564                     l128:
  3357   007564  0012               	return		;funcret
  3358   007566                     __end_of_UART_select_baud:
  3359                           	callstack 0
  3360                           
  3361 ;; *************** function _UART_config_show *****************
  3362 ;; Defined at:
  3363 ;;		line 13 in file "src/librerias/UART.c"
  3364 ;; Parameters:    Size  Location     Type
  3365 ;;		None
  3366 ;; Auto vars:     Size  Location     Type
  3367 ;;		None
  3368 ;; Return value:  Size  Location     Type
  3369 ;;                  1    wreg      void 
  3370 ;; Registers used:
  3371 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3372 ;; Tracked objects:
  3373 ;;		On entry : 0/0
  3374 ;;		On exit  : 0/0
  3375 ;;		Unchanged: 0/0
  3376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK7   BANK6
  3377 ;;      Params:         0       0       0       0       0       0       0       0       0
  3378 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3379 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3380 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3381 ;;Total ram usage:        0 bytes
  3382 ;; Hardware stack levels used: 1
  3383 ;; Hardware stack levels required when called: 6
  3384 ;; This function calls:
  3385 ;;		_printf
  3386 ;; This function is called by:
  3387 ;;		_UART_Init
  3388 ;; This function uses a non-reentrant model
  3389 ;;
  3390                           
  3391                           	psect	text18
  3392   007566                     __ptext18:
  3393                           	callstack 0
  3394   007566                     _UART_config_show:
  3395                           	callstack 23
  3396   007566                     
  3397                           ;src/librerias/UART.c: 14:     printf("Modo: ");
  3398   007566  0EEE               	movlw	low STR_1
  3399   007568  6E23               	movwf	printf@fmt^0,c
  3400   00756A  0E7F               	movlw	high STR_1
  3401   00756C  6E24               	movwf	(printf@fmt+1)^0,c
  3402   00756E  ECD2  F035         	call	_printf	;wreg free
  3403   007572                     
  3404                           ;src/librerias/UART.c: 15:     (SYNC1) ? printf("Sincrono "):printf("Asincrono ");
  3405   007572  A8AC               	btfss	4012,4,c	;volatile
  3406   007574  EFBE  F03A         	goto	u1431
  3407   007578  EFC0  F03A         	goto	u1430
  3408   00757C                     u1431:
  3409   00757C  EFC8  F03A         	goto	l2281
  3410   007580                     u1430:
  3411   007580  0EA7               	movlw	low STR_2
  3412   007582  6E23               	movwf	printf@fmt^0,c
  3413   007584  0E7F               	movlw	high STR_2
  3414   007586  6E24               	movwf	(printf@fmt+1)^0,c
  3415   007588  ECD2  F035         	call	_printf	;wreg free
  3416   00758C  EFCE  F03A         	goto	l2283
  3417   007590                     l2281:
  3418   007590  0E92               	movlw	low STR_3
  3419   007592  6E23               	movwf	printf@fmt^0,c
  3420   007594  0E7F               	movlw	high STR_3
  3421   007596  6E24               	movwf	(printf@fmt+1)^0,c
  3422   007598  ECD2  F035         	call	_printf	;wreg free
  3423   00759C                     l2283:
  3424                           
  3425                           ;src/librerias/UART.c: 16:     (BRGH1) ? printf("alta velocidad \r\n"):printf("baja velo
      +                          cidad \r\n");
  3426   00759C  A4AC               	btfss	4012,2,c	;volatile
  3427   00759E  EFD3  F03A         	goto	u1441
  3428   0075A2  EFD5  F03A         	goto	u1440
  3429   0075A6                     u1441:
  3430   0075A6  EFDD  F03A         	goto	l2287
  3431   0075AA                     u1440:
  3432   0075AA  0E24               	movlw	low STR_4
  3433   0075AC  6E23               	movwf	printf@fmt^0,c
  3434   0075AE  0E7F               	movlw	high STR_4
  3435   0075B0  6E24               	movwf	(printf@fmt+1)^0,c
  3436   0075B2  ECD2  F035         	call	_printf	;wreg free
  3437   0075B6  EFE3  F03A         	goto	l95
  3438   0075BA                     l2287:
  3439   0075BA  0E12               	movlw	low STR_5
  3440   0075BC  6E23               	movwf	printf@fmt^0,c
  3441   0075BE  0E7F               	movlw	high STR_5
  3442   0075C0  6E24               	movwf	(printf@fmt+1)^0,c
  3443   0075C2  ECD2  F035         	call	_printf	;wreg free
  3444   0075C6                     l95:
  3445                           
  3446                           ;src/librerias/UART.c: 17:     printf("Baudrate: ");
  3447   0075C6  0E7C               	movlw	low STR_6
  3448   0075C8  6E23               	movwf	printf@fmt^0,c
  3449   0075CA  0E7F               	movlw	high STR_6
  3450   0075CC  6E24               	movwf	(printf@fmt+1)^0,c
  3451   0075CE  ECD2  F035         	call	_printf	;wreg free
  3452   0075D2                     
  3453                           ;src/librerias/UART.c: 18:     (BRG161) ? printf("16 bits "):printf("8 bits ");
  3454   0075D2  A6B8               	btfss	4024,3,c	;volatile
  3455   0075D4  EFEE  F03A         	goto	u1451
  3456   0075D8  EFF0  F03A         	goto	u1450
  3457   0075DC                     u1451:
  3458   0075DC  EFF8  F03A         	goto	l2293
  3459   0075E0                     u1450:
  3460   0075E0  0ED5               	movlw	low STR_7
  3461   0075E2  6E23               	movwf	printf@fmt^0,c
  3462   0075E4  0E7F               	movlw	high STR_7
  3463   0075E6  6E24               	movwf	(printf@fmt+1)^0,c
  3464   0075E8  ECD2  F035         	call	_printf	;wreg free
  3465   0075EC  EFFE  F03A         	goto	l99
  3466   0075F0                     l2293:
  3467   0075F0  0EE6               	movlw	low STR_8
  3468   0075F2  6E23               	movwf	printf@fmt^0,c
  3469   0075F4  0E7F               	movlw	high STR_8
  3470   0075F6  6E24               	movwf	(printf@fmt+1)^0,c
  3471   0075F8  ECD2  F035         	call	_printf	;wreg free
  3472   0075FC                     l99:
  3473                           
  3474                           ;src/librerias/UART.c: 19:     printf("x baudios \r\n");
  3475   0075FC  0E63               	movlw	low STR_9
  3476   0075FE  6E23               	movwf	printf@fmt^0,c
  3477   007600  0E7F               	movlw	high STR_9
  3478   007602  6E24               	movwf	(printf@fmt+1)^0,c
  3479   007604  ECD2  F035         	call	_printf	;wreg free
  3480                           
  3481                           ;src/librerias/UART.c: 20:     printf("Puerto: ");
  3482   007608  0ECC               	movlw	low STR_10
  3483   00760A  6E23               	movwf	printf@fmt^0,c
  3484   00760C  0E7F               	movlw	high STR_10
  3485   00760E  6E24               	movwf	(printf@fmt+1)^0,c
  3486   007610  ECD2  F035         	call	_printf	;wreg free
  3487   007614                     
  3488                           ;src/librerias/UART.c: 21:     (SPEN) ? printf("Habilitado \r\n"):printf("Deshabilitado 
      +                          \r\n");
  3489   007614  AEAB               	btfss	4011,7,c	;volatile
  3490   007616  EF0F  F03B         	goto	u1461
  3491   00761A  EF11  F03B         	goto	u1460
  3492   00761E                     u1461:
  3493   00761E  EF19  F03B         	goto	l2299
  3494   007622                     u1460:
  3495   007622  0E55               	movlw	low STR_11
  3496   007624  6E23               	movwf	printf@fmt^0,c
  3497   007626  0E7F               	movlw	high STR_11
  3498   007628  6E24               	movwf	(printf@fmt+1)^0,c
  3499   00762A  ECD2  F035         	call	_printf	;wreg free
  3500   00762E  EF1F  F03B         	goto	l103
  3501   007632                     l2299:
  3502   007632  0E36               	movlw	low STR_12
  3503   007634  6E23               	movwf	printf@fmt^0,c
  3504   007636  0E7F               	movlw	high STR_12
  3505   007638  6E24               	movwf	(printf@fmt+1)^0,c
  3506   00763A  ECD2  F035         	call	_printf	;wreg free
  3507   00763E                     l103:
  3508                           
  3509                           ;src/librerias/UART.c: 22:     printf("Transor: ");
  3510   00763E  0E9D               	movlw	low STR_13
  3511   007640  6E23               	movwf	printf@fmt^0,c
  3512   007642  0E7F               	movlw	high STR_13
  3513   007644  6E24               	movwf	(printf@fmt+1)^0,c
  3514   007646  ECD2  F035         	call	_printf	;wreg free
  3515   00764A                     
  3516                           ;src/librerias/UART.c: 23:     (TXEN1) ? printf("Habilitado \r\n"):printf("Deshabilitado
      +                           \r\n");
  3517   00764A  AAAC               	btfss	4012,5,c	;volatile
  3518   00764C  EF2A  F03B         	goto	u1471
  3519   007650  EF2C  F03B         	goto	u1470
  3520   007654                     u1471:
  3521   007654  EF34  F03B         	goto	l2305
  3522   007658                     u1470:
  3523   007658  0E55               	movlw	low STR_11
  3524   00765A  6E23               	movwf	printf@fmt^0,c
  3525   00765C  0E7F               	movlw	high STR_11
  3526   00765E  6E24               	movwf	(printf@fmt+1)^0,c
  3527   007660  ECD2  F035         	call	_printf	;wreg free
  3528   007664  EF3A  F03B         	goto	l107
  3529   007668                     l2305:
  3530   007668  0E36               	movlw	low STR_12
  3531   00766A  6E23               	movwf	printf@fmt^0,c
  3532   00766C  0E7F               	movlw	high STR_12
  3533   00766E  6E24               	movwf	(printf@fmt+1)^0,c
  3534   007670  ECD2  F035         	call	_printf	;wreg free
  3535   007674                     l107:
  3536                           
  3537                           ;src/librerias/UART.c: 24:     printf("Receptor: ");
  3538   007674  0E87               	movlw	low STR_16
  3539   007676  6E23               	movwf	printf@fmt^0,c
  3540   007678  0E7F               	movlw	high STR_16
  3541   00767A  6E24               	movwf	(printf@fmt+1)^0,c
  3542   00767C  ECD2  F035         	call	_printf	;wreg free
  3543   007680                     
  3544                           ;src/librerias/UART.c: 25:     (CREN) ? printf("Habilitado \r\n"):printf("Deshabilitado 
      +                          \r\n");
  3545   007680  A8AB               	btfss	4011,4,c	;volatile
  3546   007682  EF45  F03B         	goto	u1481
  3547   007686  EF47  F03B         	goto	u1480
  3548   00768A                     u1481:
  3549   00768A  EF4F  F03B         	goto	l2311
  3550   00768E                     u1480:
  3551   00768E  0E55               	movlw	low STR_11
  3552   007690  6E23               	movwf	printf@fmt^0,c
  3553   007692  0E7F               	movlw	high STR_11
  3554   007694  6E24               	movwf	(printf@fmt+1)^0,c
  3555   007696  ECD2  F035         	call	_printf	;wreg free
  3556   00769A  EF55  F03B         	goto	l111
  3557   00769E                     l2311:
  3558   00769E  0E36               	movlw	low STR_12
  3559   0076A0  6E23               	movwf	printf@fmt^0,c
  3560   0076A2  0E7F               	movlw	high STR_12
  3561   0076A4  6E24               	movwf	(printf@fmt+1)^0,c
  3562   0076A6  ECD2  F035         	call	_printf	;wreg free
  3563   0076AA                     l111:
  3564                           
  3565                           ;src/librerias/UART.c: 26:     printf("\r\n\r\n");
  3566   0076AA  0E0F               	movlw	low (STR_34+31)
  3567   0076AC  6E23               	movwf	printf@fmt^0,c
  3568   0076AE  0E7E               	movlw	high (STR_34+31)
  3569   0076B0  6E24               	movwf	(printf@fmt+1)^0,c
  3570   0076B2  ECD2  F035         	call	_printf	;wreg free
  3571   0076B6  0012               	return		;funcret
  3572   0076B8                     __end_of_UART_config_show:
  3573                           	callstack 0
  3574                           
  3575 ;; *************** function _printf *****************
  3576 ;; Defined at:
  3577 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\printf.c"
  3578 ;; Parameters:    Size  Location     Type
  3579 ;;  fmt             2   34[COMRAM] PTR const unsigned char 
  3580 ;;		 -> STR_45(23), STR_44(25), STR_43(23), STR_42(19), 
  3581 ;;		 -> STR_41(18), STR_40(19), STR_39(19), STR_38(14), 
  3582 ;;		 -> STR_37(4), STR_36(3), STR_35(5), STR_34(36), 
  3583 ;;		 -> STR_33(5), STR_32(50), STR_31(38), STR_30(37), 
  3584 ;;		 -> STR_29(38), STR_28(12), STR_27(29), STR_23(26), 
  3585 ;;		 -> STR_22(26), STR_21(27), STR_20(8), STR_19(5), 
  3586 ;;		 -> STR_18(17), STR_17(14), STR_16(11), STR_15(17), 
  3587 ;;		 -> STR_14(14), STR_13(10), STR_12(17), STR_11(14), 
  3588 ;;		 -> STR_10(9), STR_9(13), STR_8(8), STR_7(9), 
  3589 ;;		 -> STR_6(11), STR_5(18), STR_4(18), STR_3(11), 
  3590 ;;		 -> STR_2(10), STR_1(7), 
  3591 ;; Auto vars:     Size  Location     Type
  3592 ;;  ret             2    0        int 
  3593 ;;  ap              1   40[COMRAM] PTR void [1]
  3594 ;;		 -> ?_printf(2), 
  3595 ;; Return value:  Size  Location     Type
  3596 ;;                  2   34[COMRAM] int 
  3597 ;; Registers used:
  3598 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3599 ;; Tracked objects:
  3600 ;;		On entry : 0/0
  3601 ;;		On exit  : 0/0
  3602 ;;		Unchanged: 0/0
  3603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK7   BANK6
  3604 ;;      Params:         6       0       0       0       0       0       0       0       0
  3605 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3606 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3607 ;;      Totals:         7       0       0       0       0       0       0       0       0
  3608 ;;Total ram usage:        7 bytes
  3609 ;; Hardware stack levels used: 1
  3610 ;; Hardware stack levels required when called: 5
  3611 ;; This function calls:
  3612 ;;		_vfprintf
  3613 ;; This function is called by:
  3614 ;;		_UART_config_show
  3615 ;;		_UART_ErrorHandler
  3616 ;;		_commandLineInit
  3617 ;;		_commandLineReset
  3618 ;;		_addToBuffer
  3619 ;;		_clearCharInLine
  3620 ;;		_commandProcess
  3621 ;;		_CL_ErrorHandler
  3622 ;;		_commandLineDeinit
  3623 ;; This function uses a non-reentrant model
  3624 ;;
  3625                           
  3626                           	psect	text19
  3627   006BA4                     __ptext19:
  3628                           	callstack 0
  3629   006BA4                     _printf:
  3630                           	callstack 24
  3631   006BA4  0E25               	movlw	low (?_printf+2)
  3632   006BA6  6E29               	movwf	printf@ap^0,c
  3633   006BA8  0E00               	movlw	0
  3634   006BAA  6E1C               	movwf	vfprintf@fp^0,c
  3635   006BAC  0E00               	movlw	0
  3636   006BAE  6E1D               	movwf	(vfprintf@fp+1)^0,c
  3637   006BB0  C023  F01E         	movff	printf@fmt,vfprintf@fmt
  3638   006BB4  C024  F01F         	movff	printf@fmt+1,vfprintf@fmt+1
  3639   006BB8  0E29               	movlw	low printf@ap
  3640   006BBA  6E20               	movwf	vfprintf@ap^0,c
  3641   006BBC  EC74  F036         	call	_vfprintf	;wreg free
  3642   006BC0  0012               	return		;funcret
  3643   006BC2                     __end_of_printf:
  3644                           	callstack 0
  3645                           
  3646 ;; *************** function _vfprintf *****************
  3647 ;; Defined at:
  3648 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  3649 ;; Parameters:    Size  Location     Type
  3650 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  3651 ;;		 -> NULL(0), 
  3652 ;;  fmt             2   29[COMRAM] PTR const unsigned char 
  3653 ;;		 -> STR_45(23), STR_44(25), STR_43(23), STR_42(19), 
  3654 ;;		 -> STR_41(18), STR_40(19), STR_39(19), STR_38(14), 
  3655 ;;		 -> STR_37(4), STR_36(3), STR_35(5), STR_34(36), 
  3656 ;;		 -> STR_33(5), STR_32(50), STR_31(38), STR_30(37), 
  3657 ;;		 -> STR_29(38), STR_28(12), STR_27(29), STR_23(26), 
  3658 ;;		 -> STR_22(26), STR_21(27), STR_20(8), STR_19(5), 
  3659 ;;		 -> STR_18(17), STR_17(14), STR_16(11), STR_15(17), 
  3660 ;;		 -> STR_14(14), STR_13(10), STR_12(17), STR_11(14), 
  3661 ;;		 -> STR_10(9), STR_9(13), STR_8(8), STR_7(9), 
  3662 ;;		 -> STR_6(11), STR_5(18), STR_4(18), STR_3(11), 
  3663 ;;		 -> STR_2(10), STR_1(7), 
  3664 ;;  ap              1   31[COMRAM] PTR PTR void 
  3665 ;;		 -> printf@ap(1), 
  3666 ;; Auto vars:     Size  Location     Type
  3667 ;;  cfmt            2   32[COMRAM] PTR unsigned char 
  3668 ;;		 -> STR_45(23), STR_44(25), STR_43(23), STR_42(19), 
  3669 ;;		 -> STR_41(18), STR_40(19), STR_39(19), STR_38(14), 
  3670 ;;		 -> STR_37(4), STR_36(3), STR_35(5), STR_34(36), 
  3671 ;;		 -> STR_33(5), STR_32(50), STR_31(38), STR_30(37), 
  3672 ;;		 -> STR_29(38), STR_28(12), STR_27(29), STR_23(26), 
  3673 ;;		 -> STR_22(26), STR_21(27), STR_20(8), STR_19(5), 
  3674 ;;		 -> STR_18(17), STR_17(14), STR_16(11), STR_15(17), 
  3675 ;;		 -> STR_14(14), STR_13(10), STR_12(17), STR_11(14), 
  3676 ;;		 -> STR_10(9), STR_9(13), STR_8(8), STR_7(9), 
  3677 ;;		 -> STR_6(11), STR_5(18), STR_4(18), STR_3(11), 
  3678 ;;		 -> STR_2(10), STR_1(7), 
  3679 ;; Return value:  Size  Location     Type
  3680 ;;                  2   27[COMRAM] int 
  3681 ;; Registers used:
  3682 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3683 ;; Tracked objects:
  3684 ;;		On entry : 0/0
  3685 ;;		On exit  : 0/0
  3686 ;;		Unchanged: 0/0
  3687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK7   BANK6
  3688 ;;      Params:         5       0       0       0       0       0       0       0       0
  3689 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3690 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3691 ;;      Totals:         7       0       0       0       0       0       0       0       0
  3692 ;;Total ram usage:        7 bytes
  3693 ;; Hardware stack levels used: 1
  3694 ;; Hardware stack levels required when called: 4
  3695 ;; This function calls:
  3696 ;;		_vfpfcnvrt
  3697 ;; This function is called by:
  3698 ;;		_printf
  3699 ;; This function uses a non-reentrant model
  3700 ;;
  3701                           
  3702                           	psect	text20
  3703   006CE8                     __ptext20:
  3704                           	callstack 0
  3705   006CE8                     _vfprintf:
  3706                           	callstack 24
  3707   006CE8                     
  3708                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  3709   006CE8  C01E  F021         	movff	vfprintf@fmt,vfprintf@cfmt
  3710   006CEC  C01F  F022         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  3711                           
  3712                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  3713   006CF0  EF84  F036         	goto	l2215
  3714   006CF4                     l2213:
  3715                           
  3716                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  3717   006CF4  C01C  F00C         	movff	vfprintf@fp,vfpfcnvrt@fp
  3718   006CF8  C01D  F00D         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  3719   006CFC  0E21               	movlw	low vfprintf@cfmt
  3720   006CFE  6E0E               	movwf	vfpfcnvrt@fmt^0,c
  3721   006D00  C020  F00F         	movff	vfprintf@ap,vfpfcnvrt@ap
  3722   006D04  EC18  F03D         	call	_vfpfcnvrt	;wreg free
  3723   006D08                     l2215:
  3724                           
  3725                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  3726   006D08  C021  FFF6         	movff	vfprintf@cfmt,tblptrl
  3727   006D0C  C022  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  3728   006D10                     	if	0	;tblptru may be non-zero
  3729   006D10                     	endif
  3730   006D10                     	if	0	;tblptru may be non-zero
  3731   006D10                     	endif
  3732   006D10  0008               	tblrd		*
  3733   006D12  50F5               	movf	tablat,w,c
  3734   006D14  0900               	iorlw	0
  3735   006D16  A4D8               	btfss	status,2,c
  3736   006D18  EF90  F036         	goto	u1401
  3737   006D1C  EF92  F036         	goto	u1400
  3738   006D20                     u1401:
  3739   006D20  EF7A  F036         	goto	l2213
  3740   006D24                     u1400:
  3741   006D24                     
  3742                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  3743   006D24  0E00               	movlw	0
  3744   006D26  6E1D               	movwf	(?_vfprintf+1)^0,c
  3745   006D28  0E00               	movlw	0
  3746   006D2A  6E1C               	movwf	?_vfprintf^0,c
  3747   006D2C  0012               	return		;funcret
  3748   006D2E                     __end_of_vfprintf:
  3749                           	callstack 0
  3750                           
  3751 ;; *************** function _vfpfcnvrt *****************
  3752 ;; Defined at:
  3753 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  3754 ;; Parameters:    Size  Location     Type
  3755 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  3756 ;;		 -> NULL(0), 
  3757 ;;  fmt             1   13[COMRAM] PTR PTR unsigned char 
  3758 ;;		 -> vfprintf@cfmt(2), 
  3759 ;;  ap              1   14[COMRAM] PTR PTR void 
  3760 ;;		 -> printf@ap(1), 
  3761 ;; Auto vars:     Size  Location     Type
  3762 ;;  cp              2   17[COMRAM] PTR unsigned char 
  3763 ;;		 -> ?_printf(2), param(80), command(16), 
  3764 ;;  convarg         4   22[COMRAM] struct .
  3765 ;;  cp              2   19[COMRAM] PTR unsigned char 
  3766 ;;		 -> STR_45(23), STR_44(25), STR_43(23), STR_42(19), 
  3767 ;;		 -> STR_41(18), STR_40(19), STR_39(19), STR_38(14), 
  3768 ;;		 -> STR_37(4), STR_36(3), STR_35(5), STR_34(36), 
  3769 ;;		 -> STR_33(5), STR_32(50), STR_31(38), STR_30(37), 
  3770 ;;		 -> STR_29(38), STR_28(12), STR_27(29), STR_23(26), 
  3771 ;;		 -> STR_22(26), STR_21(27), STR_20(8), STR_19(5), 
  3772 ;;		 -> STR_18(17), STR_17(14), STR_16(11), STR_15(17), 
  3773 ;;		 -> STR_14(14), STR_13(10), STR_12(17), STR_11(14), 
  3774 ;;		 -> STR_10(9), STR_9(13), STR_8(8), STR_7(9), 
  3775 ;;		 -> STR_6(11), STR_5(18), STR_4(18), STR_3(11), 
  3776 ;;		 -> STR_2(10), STR_1(7), 
  3777 ;;  c               1   26[COMRAM] unsigned char 
  3778 ;;  done            1   21[COMRAM] _Bool 
  3779 ;; Return value:  Size  Location     Type
  3780 ;;                  1    wreg      void 
  3781 ;; Registers used:
  3782 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3783 ;; Tracked objects:
  3784 ;;		On entry : 0/0
  3785 ;;		On exit  : 0/0
  3786 ;;		Unchanged: 0/0
  3787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK7   BANK6
  3788 ;;      Params:         4       0       0       0       0       0       0       0       0
  3789 ;;      Locals:        10       0       0       0       0       0       0       0       0
  3790 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3791 ;;      Totals:        16       0       0       0       0       0       0       0       0
  3792 ;;Total ram usage:       16 bytes
  3793 ;; Hardware stack levels used: 1
  3794 ;; Hardware stack levels required when called: 3
  3795 ;; This function calls:
  3796 ;;		___awdiv
  3797 ;;		___awmod
  3798 ;;		_abs
  3799 ;;		_fputc
  3800 ;; This function is called by:
  3801 ;;		_vfprintf
  3802 ;; This function uses a non-reentrant model
  3803 ;;
  3804                           
  3805                           	psect	text21
  3806   007A30                     __ptext21:
  3807                           	callstack 0
  3808   007A30                     _vfpfcnvrt:
  3809                           	callstack 24
  3810   007A30                     
  3811                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  3812   007A30  500E               	movf	vfpfcnvrt@fmt^0,w,c
  3813   007A32  6ED9               	movwf	fsr2l,c
  3814   007A34  6ADA               	clrf	fsr2h,c
  3815   007A36  CFDE FFF6          	movff	postinc2,tblptrl
  3816   007A3A  CFDD FFF7          	movff	postdec2,tblptrh
  3817   007A3E                     	if	0	;tblptru may be non-zero
  3818   007A3E                     	endif
  3819   007A3E                     	if	0	;tblptru may be non-zero
  3820   007A3E                     	endif
  3821   007A3E  0008               	tblrd		*
  3822   007A40  50F5               	movf	tablat,w,c
  3823   007A42  0A25               	xorlw	37
  3824   007A44  A4D8               	btfss	status,2,c
  3825   007A46  EF27  F03D         	goto	u1241
  3826   007A4A  EF29  F03D         	goto	u1240
  3827   007A4E                     u1241:
  3828   007A4E  EF90  F03E         	goto	l2205
  3829   007A52                     u1240:
  3830   007A52                     
  3831                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  3832   007A52  500E               	movf	vfpfcnvrt@fmt^0,w,c
  3833   007A54  6ED9               	movwf	fsr2l,c
  3834   007A56  6ADA               	clrf	fsr2h,c
  3835   007A58  2ADE               	incf	postinc2,f,c
  3836   007A5A  0E00               	movlw	0
  3837   007A5C  22DD               	addwfc	postdec2,f,c
  3838   007A5E                     
  3839                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  3840   007A5E  0E00               	movlw	0
  3841   007A60  6E33               	movwf	(_width+1)^0,c
  3842   007A62  0E00               	movlw	0
  3843   007A64  6E32               	movwf	_width^0,c
  3844   007A66  C032  F036         	movff	_width,_flags
  3845   007A6A                     
  3846                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  3847   007A6A  6834               	setf	_prec^0,c
  3848   007A6C  6835               	setf	(_prec+1)^0,c
  3849   007A6E                     
  3850                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  3851   007A6E  500E               	movf	vfpfcnvrt@fmt^0,w,c
  3852   007A70  6ED9               	movwf	fsr2l,c
  3853   007A72  6ADA               	clrf	fsr2h,c
  3854   007A74  CFDE F014          	movff	postinc2,vfpfcnvrt@cp
  3855   007A78  CFDD F015          	movff	postdec2,vfpfcnvrt@cp+1
  3856   007A7C                     
  3857                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  3858   007A7C  C014  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3859   007A80  C015  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3860   007A84                     	if	0	;tblptru may be non-zero
  3861   007A84                     	endif
  3862   007A84                     	if	0	;tblptru may be non-zero
  3863   007A84                     	endif
  3864   007A84  0008               	tblrd		*
  3865   007A86  50F5               	movf	tablat,w,c
  3866   007A88  0A64               	xorlw	100
  3867   007A8A  B4D8               	btfsc	status,2,c
  3868   007A8C  EF4A  F03D         	goto	u1251
  3869   007A90  EF4C  F03D         	goto	u1250
  3870   007A94                     u1251:
  3871   007A94  EF5A  F03D         	goto	l2147
  3872   007A98                     u1250:
  3873   007A98  C014  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3874   007A9C  C015  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  3875   007AA0                     	if	0	;tblptru may be non-zero
  3876   007AA0                     	endif
  3877   007AA0                     	if	0	;tblptru may be non-zero
  3878   007AA0                     	endif
  3879   007AA0  0008               	tblrd		*
  3880   007AA2  50F5               	movf	tablat,w,c
  3881   007AA4  0A69               	xorlw	105
  3882   007AA6  A4D8               	btfss	status,2,c
  3883   007AA8  EF58  F03D         	goto	u1261
  3884   007AAC  EF5A  F03D         	goto	u1260
  3885   007AB0                     u1261:
  3886   007AB0  EFEA  F03D         	goto	l2173
  3887   007AB4                     u1260:
  3888   007AB4                     l2147:
  3889                           
  3890                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  3891   007AB4  500F               	movf	vfpfcnvrt@ap^0,w,c
  3892   007AB6  6ED9               	movwf	fsr2l,c
  3893   007AB8  6ADA               	clrf	fsr2h,c
  3894   007ABA  0E02               	movlw	2
  3895   007ABC  26DF               	addwf	indf2,f,c
  3896   007ABE  5CDF               	subwf	indf2,w,c
  3897   007AC0  6ED9               	movwf	fsr2l,c
  3898   007AC2  6ADA               	clrf	fsr2h,c
  3899   007AC4  CFDE F017          	movff	postinc2,vfpfcnvrt@convarg
  3900   007AC8  CFDE F018          	movff	postinc2,vfpfcnvrt@convarg+1
  3901   007ACC                     
  3902                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  3903   007ACC  0E01               	movlw	1
  3904   007ACE  2414               	addwf	vfpfcnvrt@cp^0,w,c
  3905   007AD0  6E10               	movwf	??_vfpfcnvrt^0,c
  3906   007AD2  0E00               	movlw	0
  3907   007AD4  2015               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  3908   007AD6  6E11               	movwf	(??_vfpfcnvrt+1)^0,c
  3909   007AD8  500E               	movf	vfpfcnvrt@fmt^0,w,c
  3910   007ADA  6ED9               	movwf	fsr2l,c
  3911   007ADC  6ADA               	clrf	fsr2h,c
  3912   007ADE  C010  FFDE         	movff	??_vfpfcnvrt,postinc2
  3913   007AE2  C011  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  3914   007AE6                     
  3915                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  3916   007AE6  0E20               	movlw	32
  3917   007AE8  6E1B               	movwf	vfpfcnvrt@c^0,c
  3918                           
  3919                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  3920   007AEA  BE18               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  3921   007AEC  EF7A  F03D         	goto	u1271
  3922   007AF0  EF7D  F03D         	goto	u1270
  3923   007AF4                     u1271:
  3924   007AF4  0E01               	movlw	1
  3925   007AF6  EF7E  F03D         	goto	u1280
  3926   007AFA                     u1270:
  3927   007AFA  0E00               	movlw	0
  3928   007AFC                     u1280:
  3929   007AFC  6E16               	movwf	vfpfcnvrt@done^0,c
  3930   007AFE                     l2153:
  3931                           
  3932                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  3933   007AFE  061B               	decf	vfpfcnvrt@c^0,f,c
  3934   007B00  501B               	movf	vfpfcnvrt@c^0,w,c
  3935   007B02  0FC4               	addlw	low _dbuf
  3936   007B04  6ED9               	movwf	fsr2l,c
  3937   007B06  6ADA               	clrf	fsr2h,c
  3938   007B08  C017  F001         	movff	vfpfcnvrt@convarg,___awmod@dividend
  3939   007B0C  C018  F002         	movff	vfpfcnvrt@convarg+1,___awmod@dividend+1
  3940   007B10  0E00               	movlw	0
  3941   007B12  6E04               	movwf	(___awmod@divisor+1)^0,c
  3942   007B14  0E0A               	movlw	10
  3943   007B16  6E03               	movwf	___awmod@divisor^0,c
  3944   007B18  EC8E  F037         	call	___awmod	;wreg free
  3945   007B1C  C001  F007         	movff	?___awmod,abs@a
  3946   007B20  C002  F008         	movff	?___awmod+1,abs@a+1
  3947   007B24  EC3B  F036         	call	_abs	;wreg free
  3948   007B28  5007               	movf	?_abs^0,w,c
  3949   007B2A  0F30               	addlw	48
  3950   007B2C  6EDF               	movwf	indf2,c
  3951   007B2E                     
  3952                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  3953   007B2E  C017  F001         	movff	vfpfcnvrt@convarg,___awdiv@dividend
  3954   007B32  C018  F002         	movff	vfpfcnvrt@convarg+1,___awdiv@dividend+1
  3955   007B36  0E00               	movlw	0
  3956   007B38  6E04               	movwf	(___awdiv@divisor+1)^0,c
  3957   007B3A  0E0A               	movlw	10
  3958   007B3C  6E03               	movwf	___awdiv@divisor^0,c
  3959   007B3E  ECE6  F037         	call	___awdiv	;wreg free
  3960   007B42  C001  F017         	movff	?___awdiv,vfpfcnvrt@convarg
  3961   007B46  C002  F018         	movff	?___awdiv+1,vfpfcnvrt@convarg+1
  3962   007B4A                     
  3963                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  3964   007B4A  5017               	movf	vfpfcnvrt@convarg^0,w,c
  3965   007B4C  1018               	iorwf	(vfpfcnvrt@convarg+1)^0,w,c
  3966   007B4E  B4D8               	btfsc	status,2,c
  3967   007B50  EFAC  F03D         	goto	u1291
  3968   007B54  EFAE  F03D         	goto	u1290
  3969   007B58                     u1291:
  3970   007B58  EFB6  F03D         	goto	l2161
  3971   007B5C                     u1290:
  3972   007B5C  501B               	movf	vfpfcnvrt@c^0,w,c
  3973   007B5E  A4D8               	btfss	status,2,c
  3974   007B60  EFB4  F03D         	goto	u1301
  3975   007B64  EFB6  F03D         	goto	u1300
  3976   007B68                     u1301:
  3977   007B68  EF7F  F03D         	goto	l2153
  3978   007B6C                     u1300:
  3979   007B6C                     l2161:
  3980                           
  3981                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  3982   007B6C  501B               	movf	vfpfcnvrt@c^0,w,c
  3983   007B6E  B4D8               	btfsc	status,2,c
  3984   007B70  EFBC  F03D         	goto	u1311
  3985   007B74  EFBE  F03D         	goto	u1310
  3986   007B78                     u1311:
  3987   007B78  EFDF  F03D         	goto	l2171
  3988   007B7C                     u1310:
  3989   007B7C  5016               	movf	vfpfcnvrt@done^0,w,c
  3990   007B7E  B4D8               	btfsc	status,2,c
  3991   007B80  EFC4  F03D         	goto	u1321
  3992   007B84  EFC6  F03D         	goto	u1320
  3993   007B88                     u1321:
  3994   007B88  EFDF  F03D         	goto	l2171
  3995   007B8C                     u1320:
  3996   007B8C                     
  3997                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  3998   007B8C  061B               	decf	vfpfcnvrt@c^0,f,c
  3999   007B8E  501B               	movf	vfpfcnvrt@c^0,w,c
  4000   007B90  0FC4               	addlw	low _dbuf
  4001   007B92  6ED9               	movwf	fsr2l,c
  4002   007B94  6ADA               	clrf	fsr2h,c
  4003   007B96  0E2D               	movlw	45
  4004   007B98  6EDF               	movwf	indf2,c
  4005   007B9A  EFDF  F03D         	goto	l2171
  4006   007B9E                     l2167:
  4007                           
  4008                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  4009   007B9E  501B               	movf	vfpfcnvrt@c^0,w,c
  4010   007BA0  0FC4               	addlw	low _dbuf
  4011   007BA2  6ED9               	movwf	fsr2l,c
  4012   007BA4  6ADA               	clrf	fsr2h,c
  4013   007BA6  50DF               	movf	indf2,w,c
  4014   007BA8  6E10               	movwf	??_vfpfcnvrt^0,c
  4015   007BAA  5010               	movf	??_vfpfcnvrt^0,w,c
  4016   007BAC  6E03               	movwf	fputc@c^0,c
  4017   007BAE  6A04               	clrf	(fputc@c+1)^0,c
  4018   007BB0  C00C  F005         	movff	vfpfcnvrt@fp,fputc@fp
  4019   007BB4  C00D  F006         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4020   007BB8  ECAC  F038         	call	_fputc	;wreg free
  4021   007BBC  2A1B               	incf	vfpfcnvrt@c^0,f,c
  4022   007BBE                     l2171:
  4023                           
  4024                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  4025   007BBE  0E20               	movlw	32
  4026   007BC0  181B               	xorwf	vfpfcnvrt@c^0,w,c
  4027   007BC2  A4D8               	btfss	status,2,c
  4028   007BC4  EFE6  F03D         	goto	u1331
  4029   007BC8  EFE8  F03D         	goto	u1330
  4030   007BCC                     u1331:
  4031   007BCC  EFCF  F03D         	goto	l2167
  4032   007BD0                     u1330:
  4033   007BD0  EFA3  F03E         	goto	l1047
  4034   007BD4                     l2173:
  4035                           
  4036                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1656:   done = 0;
  4037   007BD4  0E00               	movlw	0
  4038   007BD6  6E16               	movwf	vfpfcnvrt@done^0,c
  4039   007BD8                     
  4040                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1657:   if ((*fmt
      +                          )[0] == 's') {
  4041   007BD8  500E               	movf	vfpfcnvrt@fmt^0,w,c
  4042   007BDA  6ED9               	movwf	fsr2l,c
  4043   007BDC  6ADA               	clrf	fsr2h,c
  4044   007BDE  CFDE FFF6          	movff	postinc2,tblptrl
  4045   007BE2  CFDD FFF7          	movff	postdec2,tblptrh
  4046   007BE6                     	if	0	;tblptru may be non-zero
  4047   007BE6                     	endif
  4048   007BE6                     	if	0	;tblptru may be non-zero
  4049   007BE6                     	endif
  4050   007BE6  0008               	tblrd		*
  4051   007BE8  50F5               	movf	tablat,w,c
  4052   007BEA  0A73               	xorlw	115
  4053   007BEC  A4D8               	btfss	status,2,c
  4054   007BEE  EFFB  F03D         	goto	u1341
  4055   007BF2  EFFD  F03D         	goto	u1340
  4056   007BF6                     u1341:
  4057   007BF6  EF07  F03E         	goto	l2181
  4058   007BFA                     u1340:
  4059   007BFA                     
  4060                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1658:    ++*fmt;
  4061   007BFA  500E               	movf	vfpfcnvrt@fmt^0,w,c
  4062   007BFC  6ED9               	movwf	fsr2l,c
  4063   007BFE  6ADA               	clrf	fsr2h,c
  4064   007C00  2ADE               	incf	postinc2,f,c
  4065   007C02  0E00               	movlw	0
  4066   007C04  22DD               	addwfc	postdec2,f,c
  4067   007C06                     l2179:
  4068                           
  4069                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1659:    done = 1
      +                          ;
  4070   007C06  0E01               	movlw	1
  4071   007C08  6E16               	movwf	vfpfcnvrt@done^0,c
  4072                           
  4073                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1660:   }
  4074   007C0A  EF53  F03E         	goto	l2191
  4075   007C0E                     l2181:
  4076   007C0E  500E               	movf	vfpfcnvrt@fmt^0,w,c
  4077   007C10  6ED9               	movwf	fsr2l,c
  4078   007C12  6ADA               	clrf	fsr2h,c
  4079   007C14  CFDE FFF6          	movff	postinc2,tblptrl
  4080   007C18  CFDD FFF7          	movff	postdec2,tblptrh
  4081   007C1C                     	if	0	;tblptru may be non-zero
  4082   007C1C                     	endif
  4083   007C1C                     	if	0	;tblptru may be non-zero
  4084   007C1C                     	endif
  4085   007C1C  0008               	tblrd		*
  4086   007C1E  50F5               	movf	tablat,w,c
  4087   007C20  0A6C               	xorlw	108
  4088   007C22  A4D8               	btfss	status,2,c
  4089   007C24  EF16  F03E         	goto	u1351
  4090   007C28  EF18  F03E         	goto	u1350
  4091   007C2C                     u1351:
  4092   007C2C  EF53  F03E         	goto	l2191
  4093   007C30                     u1350:
  4094   007C30  500E               	movf	vfpfcnvrt@fmt^0,w,c
  4095   007C32  6ED9               	movwf	fsr2l,c
  4096   007C34  6ADA               	clrf	fsr2h,c
  4097   007C36  CFDE F010          	movff	postinc2,??_vfpfcnvrt
  4098   007C3A  CFDD F011          	movff	postdec2,??_vfpfcnvrt+1
  4099   007C3E  0E01               	movlw	1
  4100   007C40  2610               	addwf	??_vfpfcnvrt^0,f,c
  4101   007C42  0E00               	movlw	0
  4102   007C44  2211               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  4103   007C46  C010  FFF6         	movff	??_vfpfcnvrt,tblptrl
  4104   007C4A  C011  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  4105   007C4E                     	if	0	;tblptru may be non-zero
  4106   007C4E                     	endif
  4107   007C4E                     	if	0	;tblptru may be non-zero
  4108   007C4E                     	endif
  4109   007C4E  0008               	tblrd		*
  4110   007C50  50F5               	movf	tablat,w,c
  4111   007C52  0A6C               	xorlw	108
  4112   007C54  A4D8               	btfss	status,2,c
  4113   007C56  EF2F  F03E         	goto	u1361
  4114   007C5A  EF31  F03E         	goto	u1360
  4115   007C5E                     u1361:
  4116   007C5E  EF53  F03E         	goto	l2191
  4117   007C62                     u1360:
  4118   007C62  500E               	movf	vfpfcnvrt@fmt^0,w,c
  4119   007C64  6ED9               	movwf	fsr2l,c
  4120   007C66  6ADA               	clrf	fsr2h,c
  4121   007C68  CFDE F010          	movff	postinc2,??_vfpfcnvrt
  4122   007C6C  CFDD F011          	movff	postdec2,??_vfpfcnvrt+1
  4123   007C70  0E02               	movlw	2
  4124   007C72  2610               	addwf	??_vfpfcnvrt^0,f,c
  4125   007C74  0E00               	movlw	0
  4126   007C76  2211               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  4127   007C78  C010  FFF6         	movff	??_vfpfcnvrt,tblptrl
  4128   007C7C  C011  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  4129   007C80                     	if	0	;tblptru may be non-zero
  4130   007C80                     	endif
  4131   007C80                     	if	0	;tblptru may be non-zero
  4132   007C80                     	endif
  4133   007C80  0008               	tblrd		*
  4134   007C82  50F5               	movf	tablat,w,c
  4135   007C84  0A73               	xorlw	115
  4136   007C86  A4D8               	btfss	status,2,c
  4137   007C88  EF48  F03E         	goto	u1371
  4138   007C8C  EF4A  F03E         	goto	u1370
  4139   007C90                     u1371:
  4140   007C90  EF53  F03E         	goto	l2191
  4141   007C94                     u1370:
  4142   007C94                     
  4143                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1662:    *fmt += 
      +                          3;
  4144   007C94  500E               	movf	vfpfcnvrt@fmt^0,w,c
  4145   007C96  6ED9               	movwf	fsr2l,c
  4146   007C98  6ADA               	clrf	fsr2h,c
  4147   007C9A  0E03               	movlw	3
  4148   007C9C  26DE               	addwf	postinc2,f,c
  4149   007C9E  0E00               	movlw	0
  4150   007CA0  22DD               	addwfc	postdec2,f,c
  4151   007CA2  EF03  F03E         	goto	l2179
  4152   007CA6                     l2191:
  4153                           
  4154                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1665:   if (done)
      +                           {
  4155   007CA6  5016               	movf	vfpfcnvrt@done^0,w,c
  4156   007CA8  B4D8               	btfsc	status,2,c
  4157   007CAA  EF59  F03E         	goto	u1381
  4158   007CAE  EF5B  F03E         	goto	u1380
  4159   007CB2                     u1381:
  4160   007CB2  EF88  F03E         	goto	l2201
  4161   007CB6                     u1380:
  4162   007CB6                     
  4163                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1669:    for (cha
      +                          r * cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0)); *cp != '\0'; cp++) {
  4164   007CB6  500F               	movf	vfpfcnvrt@ap^0,w,c
  4165   007CB8  6ED9               	movwf	fsr2l,c
  4166   007CBA  6ADA               	clrf	fsr2h,c
  4167   007CBC  0E02               	movlw	2
  4168   007CBE  26DF               	addwf	indf2,f,c
  4169   007CC0  5CDF               	subwf	indf2,w,c
  4170   007CC2  6ED9               	movwf	fsr2l,c
  4171   007CC4  6ADA               	clrf	fsr2h,c
  4172   007CC6  CFDE F012          	movff	postinc2,vfpfcnvrt@cp_1116
  4173   007CCA  CFDE F013          	movff	postinc2,vfpfcnvrt@cp_1116+1
  4174   007CCE  EF7A  F03E         	goto	l2199
  4175   007CD2                     l2195:
  4176                           
  4177                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1670:     fputc(*
      +                          cp, fp);
  4178   007CD2  C012  FFD9         	movff	vfpfcnvrt@cp_1116,fsr2l
  4179   007CD6  C013  FFDA         	movff	vfpfcnvrt@cp_1116+1,fsr2h
  4180   007CDA  50DF               	movf	indf2,w,c
  4181   007CDC  6E10               	movwf	??_vfpfcnvrt^0,c
  4182   007CDE  5010               	movf	??_vfpfcnvrt^0,w,c
  4183   007CE0  6E03               	movwf	fputc@c^0,c
  4184   007CE2  6A04               	clrf	(fputc@c+1)^0,c
  4185   007CE4  C00C  F005         	movff	vfpfcnvrt@fp,fputc@fp
  4186   007CE8  C00D  F006         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4187   007CEC  ECAC  F038         	call	_fputc	;wreg free
  4188   007CF0                     
  4189                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1674:    }
  4190   007CF0  4A12               	infsnz	vfpfcnvrt@cp_1116^0,f,c
  4191   007CF2  2A13               	incf	(vfpfcnvrt@cp_1116+1)^0,f,c
  4192   007CF4                     l2199:
  4193   007CF4  C012  FFD9         	movff	vfpfcnvrt@cp_1116,fsr2l
  4194   007CF8  C013  FFDA         	movff	vfpfcnvrt@cp_1116+1,fsr2h
  4195   007CFC  50DF               	movf	indf2,w,c
  4196   007CFE  A4D8               	btfss	status,2,c
  4197   007D00  EF84  F03E         	goto	u1391
  4198   007D04  EF86  F03E         	goto	u1390
  4199   007D08                     u1391:
  4200   007D08  EF69  F03E         	goto	l2195
  4201   007D0C                     u1390:
  4202   007D0C  EFA3  F03E         	goto	l1047
  4203   007D10                     l2201:
  4204                           
  4205                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  4206   007D10  500E               	movf	vfpfcnvrt@fmt^0,w,c
  4207   007D12  6ED9               	movwf	fsr2l,c
  4208   007D14  6ADA               	clrf	fsr2h,c
  4209   007D16  2ADE               	incf	postinc2,f,c
  4210   007D18  0E00               	movlw	0
  4211   007D1A  22DD               	addwfc	postdec2,f,c
  4212   007D1C  EFA3  F03E         	goto	l1047
  4213   007D20                     l2205:
  4214                           
  4215                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  4216   007D20  500E               	movf	vfpfcnvrt@fmt^0,w,c
  4217   007D22  6ED9               	movwf	fsr2l,c
  4218   007D24  6ADA               	clrf	fsr2h,c
  4219   007D26  CFDE FFF6          	movff	postinc2,tblptrl
  4220   007D2A  CFDD FFF7          	movff	postdec2,tblptrh
  4221   007D2E                     	if	0	;tblptru may be non-zero
  4222   007D2E                     	endif
  4223   007D2E                     	if	0	;tblptru may be non-zero
  4224   007D2E                     	endif
  4225   007D2E  0008               	tblrd		*
  4226   007D30  50F5               	movf	tablat,w,c
  4227   007D32  6E03               	movwf	fputc@c^0,c
  4228   007D34  6A04               	clrf	(fputc@c+1)^0,c
  4229   007D36  C00C  F005         	movff	vfpfcnvrt@fp,fputc@fp
  4230   007D3A  C00D  F006         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4231   007D3E  ECAC  F038         	call	_fputc	;wreg free
  4232   007D42  EF88  F03E         	goto	l2201
  4233   007D46                     l1047:
  4234   007D46  0012               	return		;funcret
  4235   007D48                     __end_of_vfpfcnvrt:
  4236                           	callstack 0
  4237                           
  4238 ;; *************** function _fputc *****************
  4239 ;; Defined at:
  4240 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_fputc.c"
  4241 ;; Parameters:    Size  Location     Type
  4242 ;;  c               2    2[COMRAM] int 
  4243 ;;  fp              2    4[COMRAM] PTR struct _IO_FILE
  4244 ;;		 -> NULL(0), 
  4245 ;; Auto vars:     Size  Location     Type
  4246 ;;		None
  4247 ;; Return value:  Size  Location     Type
  4248 ;;                  2    2[COMRAM] int 
  4249 ;; Registers used:
  4250 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4251 ;; Tracked objects:
  4252 ;;		On entry : 0/0
  4253 ;;		On exit  : 0/0
  4254 ;;		Unchanged: 0/0
  4255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK7   BANK6
  4256 ;;      Params:         4       0       0       0       0       0       0       0       0
  4257 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4258 ;;      Temps:          5       0       0       0       0       0       0       0       0
  4259 ;;      Totals:         9       0       0       0       0       0       0       0       0
  4260 ;;Total ram usage:        9 bytes
  4261 ;; Hardware stack levels used: 1
  4262 ;; Hardware stack levels required when called: 2
  4263 ;; This function calls:
  4264 ;;		_putch
  4265 ;; This function is called by:
  4266 ;;		_vfpfcnvrt
  4267 ;; This function uses a non-reentrant model
  4268 ;;
  4269                           
  4270                           	psect	text22
  4271   007158                     __ptext22:
  4272                           	callstack 0
  4273   007158                     _fputc:
  4274                           	callstack 24
  4275   007158  5005               	movf	fputc@fp^0,w,c
  4276   00715A  1006               	iorwf	(fputc@fp+1)^0,w,c
  4277   00715C  B4D8               	btfsc	status,2,c
  4278   00715E  EFB3  F038         	goto	u1191
  4279   007162  EFB5  F038         	goto	u1190
  4280   007166                     u1191:
  4281   007166  EFBE  F038         	goto	l2119
  4282   00716A                     u1190:
  4283   00716A  5005               	movf	fputc@fp^0,w,c
  4284   00716C  1006               	iorwf	(fputc@fp+1)^0,w,c
  4285   00716E  A4D8               	btfss	status,2,c
  4286   007170  EFBC  F038         	goto	u1201
  4287   007174  EFBE  F038         	goto	u1200
  4288   007178                     u1201:
  4289   007178  EFC3  F038         	goto	l2121
  4290   00717C                     u1200:
  4291   00717C                     l2119:
  4292   00717C  5003               	movf	fputc@c^0,w,c
  4293   00717E  EC90  F035         	call	_putch
  4294   007182  EF10  F039         	goto	l1079
  4295   007186                     l2121:
  4296   007186  EE20 F00A          	lfsr	2,10
  4297   00718A  5005               	movf	fputc@fp^0,w,c
  4298   00718C  26D9               	addwf	fsr2l,f,c
  4299   00718E  5006               	movf	(fputc@fp+1)^0,w,c
  4300   007190  22DA               	addwfc	fsr2h,f,c
  4301   007192  50DE               	movf	postinc2,w,c
  4302   007194  10DE               	iorwf	postinc2,w,c
  4303   007196  B4D8               	btfsc	status,2,c
  4304   007198  EFD0  F038         	goto	u1211
  4305   00719C  EFD2  F038         	goto	u1210
  4306   0071A0                     u1211:
  4307   0071A0  EFED  F038         	goto	l2125
  4308   0071A4                     u1210:
  4309   0071A4  EE20 F00A          	lfsr	2,10
  4310   0071A8  5005               	movf	fputc@fp^0,w,c
  4311   0071AA  26D9               	addwf	fsr2l,f,c
  4312   0071AC  5006               	movf	(fputc@fp+1)^0,w,c
  4313   0071AE  22DA               	addwfc	fsr2h,f,c
  4314   0071B0  EE10 F003          	lfsr	1,3
  4315   0071B4  5005               	movf	fputc@fp^0,w,c
  4316   0071B6  26E1               	addwf	fsr1l,f,c
  4317   0071B8  5006               	movf	(fputc@fp+1)^0,w,c
  4318   0071BA  22E2               	addwfc	fsr1h,f,c
  4319   0071BC  50DE               	movf	postinc2,w,c
  4320   0071BE  5CE6               	subwf	postinc1,w,c
  4321   0071C0  50E6               	movf	postinc1,w,c
  4322   0071C2  0A80               	xorlw	128
  4323   0071C4  6E0B               	movwf	(??_fputc+4)^0,c
  4324   0071C6  50DE               	movf	postinc2,w,c
  4325   0071C8  0A80               	xorlw	128
  4326   0071CA  580B               	subwfb	(??_fputc+4)^0,w,c
  4327   0071CC  B0D8               	btfsc	status,0,c
  4328   0071CE  EFEB  F038         	goto	u1221
  4329   0071D2  EFED  F038         	goto	u1220
  4330   0071D6                     u1221:
  4331   0071D6  EF10  F039         	goto	l1079
  4332   0071DA                     u1220:
  4333   0071DA                     l2125:
  4334   0071DA  EE20 F003          	lfsr	2,3
  4335   0071DE  5005               	movf	fputc@fp^0,w,c
  4336   0071E0  26D9               	addwf	fsr2l,f,c
  4337   0071E2  5006               	movf	(fputc@fp+1)^0,w,c
  4338   0071E4  22DA               	addwfc	fsr2h,f,c
  4339   0071E6  CFDE F007          	movff	postinc2,??_fputc
  4340   0071EA  CFDD F008          	movff	postdec2,??_fputc+1
  4341   0071EE  C005  FFD9         	movff	fputc@fp,fsr2l
  4342   0071F2  C006  FFDA         	movff	fputc@fp+1,fsr2h
  4343   0071F6  CFDE F009          	movff	postinc2,??_fputc+2
  4344   0071FA  CFDD F00A          	movff	postdec2,??_fputc+3
  4345   0071FE  5007               	movf	??_fputc^0,w,c
  4346   007200  2409               	addwf	(??_fputc+2)^0,w,c
  4347   007202  6ED9               	movwf	fsr2l,c
  4348   007204  5008               	movf	(??_fputc+1)^0,w,c
  4349   007206  200A               	addwfc	(??_fputc+3)^0,w,c
  4350   007208  6EDA               	movwf	fsr2h,c
  4351   00720A  C003  FFDF         	movff	fputc@c,indf2
  4352   00720E  EE20 F003          	lfsr	2,3
  4353   007212  5005               	movf	fputc@fp^0,w,c
  4354   007214  26D9               	addwf	fsr2l,f,c
  4355   007216  5006               	movf	(fputc@fp+1)^0,w,c
  4356   007218  22DA               	addwfc	fsr2h,f,c
  4357   00721A  2ADE               	incf	postinc2,f,c
  4358   00721C  0E00               	movlw	0
  4359   00721E  22DD               	addwfc	postdec2,f,c
  4360   007220                     l1079:
  4361   007220  0012               	return		;funcret
  4362   007222                     __end_of_fputc:
  4363                           	callstack 0
  4364                           
  4365 ;; *************** function _putch *****************
  4366 ;; Defined at:
  4367 ;;		line 85 in file "src/librerias/UART.c"
  4368 ;; Parameters:    Size  Location     Type
  4369 ;;  data            1    wreg     unsigned char 
  4370 ;; Auto vars:     Size  Location     Type
  4371 ;;  data            1    1[COMRAM] unsigned char 
  4372 ;; Return value:  Size  Location     Type
  4373 ;;                  1    wreg      void 
  4374 ;; Registers used:
  4375 ;;		wreg, status,2, cstack
  4376 ;; Tracked objects:
  4377 ;;		On entry : 0/0
  4378 ;;		On exit  : 0/0
  4379 ;;		Unchanged: 0/0
  4380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK7   BANK6
  4381 ;;      Params:         0       0       0       0       0       0       0       0       0
  4382 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4383 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4384 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4385 ;;Total ram usage:        1 bytes
  4386 ;; Hardware stack levels used: 1
  4387 ;; Hardware stack levels required when called: 1
  4388 ;; This function calls:
  4389 ;;		_UART_Tx
  4390 ;; This function is called by:
  4391 ;;		_fputc
  4392 ;; This function uses a non-reentrant model
  4393 ;;
  4394                           
  4395                           	psect	text23
  4396   006B20                     __ptext23:
  4397                           	callstack 0
  4398   006B20                     _putch:
  4399                           	callstack 24
  4400                           
  4401                           ;incstack = 0
  4402                           ;putch@data stored from wreg
  4403   006B20  6E02               	movwf	putch@data^0,c
  4404   006B22                     
  4405                           ;src/librerias/UART.c: 86:     UART_Tx(data);
  4406   006B22  5002               	movf	putch@data^0,w,c
  4407   006B24  EC9F  F035         	call	_UART_Tx
  4408   006B28  0012               	return		;funcret
  4409   006B2A                     __end_of_putch:
  4410                           	callstack 0
  4411                           
  4412 ;; *************** function _UART_Tx *****************
  4413 ;; Defined at:
  4414 ;;		line 80 in file "src/librerias/UART.c"
  4415 ;; Parameters:    Size  Location     Type
  4416 ;;  dato            1    wreg     unsigned char 
  4417 ;; Auto vars:     Size  Location     Type
  4418 ;;  dato            1    0[COMRAM] unsigned char 
  4419 ;; Return value:  Size  Location     Type
  4420 ;;                  1    wreg      void 
  4421 ;; Registers used:
  4422 ;;		wreg
  4423 ;; Tracked objects:
  4424 ;;		On entry : 0/0
  4425 ;;		On exit  : 0/0
  4426 ;;		Unchanged: 0/0
  4427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK7   BANK6
  4428 ;;      Params:         0       0       0       0       0       0       0       0       0
  4429 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4430 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4431 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4432 ;;Total ram usage:        1 bytes
  4433 ;; Hardware stack levels used: 1
  4434 ;; This function calls:
  4435 ;;		Nothing
  4436 ;; This function is called by:
  4437 ;;		_putch
  4438 ;;		_addToBuffer
  4439 ;; This function uses a non-reentrant model
  4440 ;;
  4441                           
  4442                           	psect	text24
  4443   006B3E                     __ptext24:
  4444                           	callstack 0
  4445   006B3E                     _UART_Tx:
  4446                           	callstack 24
  4447                           
  4448                           ;incstack = 0
  4449                           ;UART_Tx@dato stored from wreg
  4450   006B3E  6E01               	movwf	UART_Tx@dato^0,c
  4451   006B40                     l131:
  4452   006B40  A2AC               	btfss	4012,1,c	;volatile
  4453   006B42  EFA5  F035         	goto	u1061
  4454   006B46  EFA7  F035         	goto	u1060
  4455   006B4A                     u1061:
  4456   006B4A  EFA0  F035         	goto	l131
  4457   006B4E                     u1060:
  4458   006B4E                     
  4459                           ;src/librerias/UART.c: 82:     TXREG1 = dato;
  4460   006B4E  C001  FFAD         	movff	UART_Tx@dato,4013	;volatile
  4461   006B52  0012               	return		;funcret
  4462   006B54                     __end_of_UART_Tx:
  4463                           	callstack 0
  4464                           
  4465 ;; *************** function _abs *****************
  4466 ;; Defined at:
  4467 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\abs.c"
  4468 ;; Parameters:    Size  Location     Type
  4469 ;;  a               2    6[COMRAM] int 
  4470 ;; Auto vars:     Size  Location     Type
  4471 ;;		None
  4472 ;; Return value:  Size  Location     Type
  4473 ;;                  2    6[COMRAM] int 
  4474 ;; Registers used:
  4475 ;;		wreg, status,2, status,0
  4476 ;; Tracked objects:
  4477 ;;		On entry : 0/0
  4478 ;;		On exit  : 0/0
  4479 ;;		Unchanged: 0/0
  4480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK7   BANK6
  4481 ;;      Params:         2       0       0       0       0       0       0       0       0
  4482 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4483 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4484 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4485 ;;Total ram usage:        4 bytes
  4486 ;; Hardware stack levels used: 1
  4487 ;; This function calls:
  4488 ;;		Nothing
  4489 ;; This function is called by:
  4490 ;;		_vfpfcnvrt
  4491 ;; This function uses a non-reentrant model
  4492 ;;
  4493                           
  4494                           	psect	text25
  4495   006C76                     __ptext25:
  4496                           	callstack 0
  4497   006C76                     _abs:
  4498                           	callstack 26
  4499   006C76  BE08               	btfsc	(abs@a+1)^0,7,c
  4500   006C78  EF40  F036         	goto	u1231
  4501   006C7C  EF42  F036         	goto	u1230
  4502   006C80                     u1231:
  4503   006C80  EF48  F036         	goto	l1064
  4504   006C84                     u1230:
  4505   006C84  C007  F007         	movff	abs@a,?_abs
  4506   006C88  C008  F008         	movff	abs@a+1,?_abs+1
  4507   006C8C  EF54  F036         	goto	l1067
  4508   006C90                     l1064:
  4509   006C90  C007  F009         	movff	abs@a,??_abs
  4510   006C94  C008  F00A         	movff	abs@a+1,??_abs+1
  4511   006C98  1E09               	comf	??_abs^0,f,c
  4512   006C9A  1E0A               	comf	(??_abs+1)^0,f,c
  4513   006C9C  4A09               	infsnz	??_abs^0,f,c
  4514   006C9E  2A0A               	incf	(??_abs+1)^0,f,c
  4515   006CA0  C009  F007         	movff	??_abs,?_abs
  4516   006CA4  C00A  F008         	movff	??_abs+1,?_abs+1
  4517   006CA8                     l1067:
  4518   006CA8  0012               	return		;funcret
  4519   006CAA                     __end_of_abs:
  4520                           	callstack 0
  4521                           
  4522 ;; *************** function ___awmod *****************
  4523 ;; Defined at:
  4524 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awmod.c"
  4525 ;; Parameters:    Size  Location     Type
  4526 ;;  dividend        2    0[COMRAM] int 
  4527 ;;  divisor         2    2[COMRAM] int 
  4528 ;; Auto vars:     Size  Location     Type
  4529 ;;  sign            1    5[COMRAM] unsigned char 
  4530 ;;  counter         1    4[COMRAM] unsigned char 
  4531 ;; Return value:  Size  Location     Type
  4532 ;;                  2    0[COMRAM] int 
  4533 ;; Registers used:
  4534 ;;		wreg, status,2, status,0
  4535 ;; Tracked objects:
  4536 ;;		On entry : 0/0
  4537 ;;		On exit  : 0/0
  4538 ;;		Unchanged: 0/0
  4539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK7   BANK6
  4540 ;;      Params:         4       0       0       0       0       0       0       0       0
  4541 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4542 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4543 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4544 ;;Total ram usage:        6 bytes
  4545 ;; Hardware stack levels used: 1
  4546 ;; This function calls:
  4547 ;;		Nothing
  4548 ;; This function is called by:
  4549 ;;		_vfpfcnvrt
  4550 ;; This function uses a non-reentrant model
  4551 ;;
  4552                           
  4553                           	psect	text26
  4554   006F1C                     __ptext26:
  4555                           	callstack 0
  4556   006F1C                     ___awmod:
  4557                           	callstack 26
  4558   006F1C  0E00               	movlw	0
  4559   006F1E  6E06               	movwf	___awmod@sign^0,c
  4560   006F20  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  4561   006F22  EF97  F037         	goto	u1130
  4562   006F26  EF95  F037         	goto	u1131
  4563   006F2A                     u1131:
  4564   006F2A  EF9D  F037         	goto	l2087
  4565   006F2E                     u1130:
  4566   006F2E  6C01               	negf	___awmod@dividend^0,c
  4567   006F30  1E02               	comf	(___awmod@dividend+1)^0,f,c
  4568   006F32  B0D8               	btfsc	status,0,c
  4569   006F34  2A02               	incf	(___awmod@dividend+1)^0,f,c
  4570   006F36  0E01               	movlw	1
  4571   006F38  6E06               	movwf	___awmod@sign^0,c
  4572   006F3A                     l2087:
  4573   006F3A  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  4574   006F3C  EFA4  F037         	goto	u1140
  4575   006F40  EFA2  F037         	goto	u1141
  4576   006F44                     u1141:
  4577   006F44  EFA8  F037         	goto	l2091
  4578   006F48                     u1140:
  4579   006F48  6C03               	negf	___awmod@divisor^0,c
  4580   006F4A  1E04               	comf	(___awmod@divisor+1)^0,f,c
  4581   006F4C  B0D8               	btfsc	status,0,c
  4582   006F4E  2A04               	incf	(___awmod@divisor+1)^0,f,c
  4583   006F50                     l2091:
  4584   006F50  5003               	movf	___awmod@divisor^0,w,c
  4585   006F52  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  4586   006F54  B4D8               	btfsc	status,2,c
  4587   006F56  EFAF  F037         	goto	u1151
  4588   006F5A  EFB1  F037         	goto	u1150
  4589   006F5E                     u1151:
  4590   006F5E  EFD5  F037         	goto	l2107
  4591   006F62                     u1150:
  4592   006F62  0E01               	movlw	1
  4593   006F64  6E05               	movwf	___awmod@counter^0,c
  4594   006F66  EFB9  F037         	goto	l2097
  4595   006F6A                     l2095:
  4596   006F6A  90D8               	bcf	status,0,c
  4597   006F6C  3603               	rlcf	___awmod@divisor^0,f,c
  4598   006F6E  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  4599   006F70  2A05               	incf	___awmod@counter^0,f,c
  4600   006F72                     l2097:
  4601   006F72  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  4602   006F74  EFBE  F037         	goto	u1161
  4603   006F78  EFC0  F037         	goto	u1160
  4604   006F7C                     u1161:
  4605   006F7C  EFB5  F037         	goto	l2095
  4606   006F80                     u1160:
  4607   006F80                     l2099:
  4608   006F80  5003               	movf	___awmod@divisor^0,w,c
  4609   006F82  5C01               	subwf	___awmod@dividend^0,w,c
  4610   006F84  5004               	movf	(___awmod@divisor+1)^0,w,c
  4611   006F86  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  4612   006F88  A0D8               	btfss	status,0,c
  4613   006F8A  EFC9  F037         	goto	u1171
  4614   006F8E  EFCB  F037         	goto	u1170
  4615   006F92                     u1171:
  4616   006F92  EFCF  F037         	goto	l2103
  4617   006F96                     u1170:
  4618   006F96  5003               	movf	___awmod@divisor^0,w,c
  4619   006F98  5E01               	subwf	___awmod@dividend^0,f,c
  4620   006F9A  5004               	movf	(___awmod@divisor+1)^0,w,c
  4621   006F9C  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  4622   006F9E                     l2103:
  4623   006F9E  90D8               	bcf	status,0,c
  4624   006FA0  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  4625   006FA2  3203               	rrcf	___awmod@divisor^0,f,c
  4626   006FA4  2E05               	decfsz	___awmod@counter^0,f,c
  4627   006FA6  EFC0  F037         	goto	l2099
  4628   006FAA                     l2107:
  4629   006FAA  5006               	movf	___awmod@sign^0,w,c
  4630   006FAC  B4D8               	btfsc	status,2,c
  4631   006FAE  EFDB  F037         	goto	u1181
  4632   006FB2  EFDD  F037         	goto	u1180
  4633   006FB6                     u1181:
  4634   006FB6  EFE1  F037         	goto	l2111
  4635   006FBA                     u1180:
  4636   006FBA  6C01               	negf	___awmod@dividend^0,c
  4637   006FBC  1E02               	comf	(___awmod@dividend+1)^0,f,c
  4638   006FBE  B0D8               	btfsc	status,0,c
  4639   006FC0  2A02               	incf	(___awmod@dividend+1)^0,f,c
  4640   006FC2                     l2111:
  4641   006FC2  C001  F001         	movff	___awmod@dividend,?___awmod
  4642   006FC6  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  4643   006FCA  0012               	return		;funcret
  4644   006FCC                     __end_of___awmod:
  4645                           	callstack 0
  4646                           
  4647 ;; *************** function ___awdiv *****************
  4648 ;; Defined at:
  4649 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awdiv.c"
  4650 ;; Parameters:    Size  Location     Type
  4651 ;;  dividend        2    0[COMRAM] int 
  4652 ;;  divisor         2    2[COMRAM] int 
  4653 ;; Auto vars:     Size  Location     Type
  4654 ;;  quotient        2    6[COMRAM] int 
  4655 ;;  sign            1    5[COMRAM] unsigned char 
  4656 ;;  counter         1    4[COMRAM] unsigned char 
  4657 ;; Return value:  Size  Location     Type
  4658 ;;                  2    0[COMRAM] int 
  4659 ;; Registers used:
  4660 ;;		wreg, status,2, status,0
  4661 ;; Tracked objects:
  4662 ;;		On entry : 0/0
  4663 ;;		On exit  : 0/0
  4664 ;;		Unchanged: 0/0
  4665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK7   BANK6
  4666 ;;      Params:         4       0       0       0       0       0       0       0       0
  4667 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4668 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4669 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4670 ;;Total ram usage:        8 bytes
  4671 ;; Hardware stack levels used: 1
  4672 ;; This function calls:
  4673 ;;		Nothing
  4674 ;; This function is called by:
  4675 ;;		_vfpfcnvrt
  4676 ;; This function uses a non-reentrant model
  4677 ;;
  4678                           
  4679                           	psect	text27
  4680   006FCC                     __ptext27:
  4681                           	callstack 0
  4682   006FCC                     ___awdiv:
  4683                           	callstack 26
  4684   006FCC  0E00               	movlw	0
  4685   006FCE  6E06               	movwf	___awdiv@sign^0,c
  4686   006FD0  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  4687   006FD2  EFEF  F037         	goto	u1070
  4688   006FD6  EFED  F037         	goto	u1071
  4689   006FDA                     u1071:
  4690   006FDA  EFF5  F037         	goto	l2043
  4691   006FDE                     u1070:
  4692   006FDE  6C03               	negf	___awdiv@divisor^0,c
  4693   006FE0  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  4694   006FE2  B0D8               	btfsc	status,0,c
  4695   006FE4  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  4696   006FE6  0E01               	movlw	1
  4697   006FE8  6E06               	movwf	___awdiv@sign^0,c
  4698   006FEA                     l2043:
  4699   006FEA  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  4700   006FEC  EFFC  F037         	goto	u1080
  4701   006FF0  EFFA  F037         	goto	u1081
  4702   006FF4                     u1081:
  4703   006FF4  EF02  F038         	goto	l2049
  4704   006FF8                     u1080:
  4705   006FF8  6C01               	negf	___awdiv@dividend^0,c
  4706   006FFA  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  4707   006FFC  B0D8               	btfsc	status,0,c
  4708   006FFE  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  4709   007000  0E01               	movlw	1
  4710   007002  1A06               	xorwf	___awdiv@sign^0,f,c
  4711   007004                     l2049:
  4712   007004  0E00               	movlw	0
  4713   007006  6E08               	movwf	(___awdiv@quotient+1)^0,c
  4714   007008  0E00               	movlw	0
  4715   00700A  6E07               	movwf	___awdiv@quotient^0,c
  4716   00700C  5003               	movf	___awdiv@divisor^0,w,c
  4717   00700E  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  4718   007010  B4D8               	btfsc	status,2,c
  4719   007012  EF0D  F038         	goto	u1091
  4720   007016  EF0F  F038         	goto	u1090
  4721   00701A                     u1091:
  4722   00701A  EF37  F038         	goto	l2071
  4723   00701E                     u1090:
  4724   00701E  0E01               	movlw	1
  4725   007020  6E05               	movwf	___awdiv@counter^0,c
  4726   007022  EF17  F038         	goto	l2057
  4727   007026                     l2055:
  4728   007026  90D8               	bcf	status,0,c
  4729   007028  3603               	rlcf	___awdiv@divisor^0,f,c
  4730   00702A  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  4731   00702C  2A05               	incf	___awdiv@counter^0,f,c
  4732   00702E                     l2057:
  4733   00702E  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  4734   007030  EF1C  F038         	goto	u1101
  4735   007034  EF1E  F038         	goto	u1100
  4736   007038                     u1101:
  4737   007038  EF13  F038         	goto	l2055
  4738   00703C                     u1100:
  4739   00703C                     l2059:
  4740   00703C  90D8               	bcf	status,0,c
  4741   00703E  3607               	rlcf	___awdiv@quotient^0,f,c
  4742   007040  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  4743   007042  5003               	movf	___awdiv@divisor^0,w,c
  4744   007044  5C01               	subwf	___awdiv@dividend^0,w,c
  4745   007046  5004               	movf	(___awdiv@divisor+1)^0,w,c
  4746   007048  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  4747   00704A  A0D8               	btfss	status,0,c
  4748   00704C  EF2A  F038         	goto	u1111
  4749   007050  EF2C  F038         	goto	u1110
  4750   007054                     u1111:
  4751   007054  EF31  F038         	goto	l2067
  4752   007058                     u1110:
  4753   007058  5003               	movf	___awdiv@divisor^0,w,c
  4754   00705A  5E01               	subwf	___awdiv@dividend^0,f,c
  4755   00705C  5004               	movf	(___awdiv@divisor+1)^0,w,c
  4756   00705E  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  4757   007060  8007               	bsf	___awdiv@quotient^0,0,c
  4758   007062                     l2067:
  4759   007062  90D8               	bcf	status,0,c
  4760   007064  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  4761   007066  3203               	rrcf	___awdiv@divisor^0,f,c
  4762   007068  2E05               	decfsz	___awdiv@counter^0,f,c
  4763   00706A  EF1E  F038         	goto	l2059
  4764   00706E                     l2071:
  4765   00706E  5006               	movf	___awdiv@sign^0,w,c
  4766   007070  B4D8               	btfsc	status,2,c
  4767   007072  EF3D  F038         	goto	u1121
  4768   007076  EF3F  F038         	goto	u1120
  4769   00707A                     u1121:
  4770   00707A  EF43  F038         	goto	l2075
  4771   00707E                     u1120:
  4772   00707E  6C07               	negf	___awdiv@quotient^0,c
  4773   007080  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  4774   007082  B0D8               	btfsc	status,0,c
  4775   007084  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  4776   007086                     l2075:
  4777   007086  C007  F001         	movff	___awdiv@quotient,?___awdiv
  4778   00708A  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  4779   00708E  0012               	return		;funcret
  4780   007090                     __end_of___awdiv:
  4781                           	callstack 0
  4782                           
  4783 ;; *************** function _Clock_Init *****************
  4784 ;; Defined at:
  4785 ;;		line 3 in file "src/librerias/clock.c"
  4786 ;; Parameters:    Size  Location     Type
  4787 ;;  s16Timeout      2    0[COMRAM] short 
  4788 ;; Auto vars:     Size  Location     Type
  4789 ;;  bStatus         1    5[COMRAM] _Bool 
  4790 ;;  bStatus         1    4[COMRAM] _Bool 
  4791 ;;  bStatus         1    3[COMRAM] _Bool 
  4792 ;;  bStatus         1    2[COMRAM] _Bool 
  4793 ;;  returnCode      1    7[COMRAM] enum E5188
  4794 ;;  bItTimeEn       1    6[COMRAM] _Bool 
  4795 ;; Return value:  Size  Location     Type
  4796 ;;                  1    wreg      enum E5188
  4797 ;; Registers used:
  4798 ;;		wreg, status,2, status,0
  4799 ;; Tracked objects:
  4800 ;;		On entry : 0/0
  4801 ;;		On exit  : 0/0
  4802 ;;		Unchanged: 0/0
  4803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK7   BANK6
  4804 ;;      Params:         2       0       0       0       0       0       0       0       0
  4805 ;;      Locals:         6       0       0       0       0       0       0       0       0
  4806 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4807 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4808 ;;Total ram usage:        8 bytes
  4809 ;; Hardware stack levels used: 1
  4810 ;; This function calls:
  4811 ;;		Nothing
  4812 ;; This function is called by:
  4813 ;;		_main
  4814 ;; This function uses a non-reentrant model
  4815 ;;
  4816                           
  4817                           	psect	text28
  4818   00781A                     __ptext28:
  4819                           	callstack 0
  4820   00781A                     _Clock_Init:
  4821                           	callstack 30
  4822   00781A                     
  4823                           ;src/librerias/clock.c: 4:     CLK_ERROR_CODE returnCode = ERROR_CODE_OK;
  4824   00781A  0E00               	movlw	0
  4825   00781C  6E08               	movwf	Clock_Init@returnCode^0,c
  4826   00781E                     
  4827                           ;src/librerias/clock.c: 5:     _Bool bItTimeEn = (0 >= s16Timeout) ? 0 : 1;
  4828   00781E  BE02               	btfsc	(Clock_Init@s16Timeout+1)^0,7,c
  4829   007820  EF1D  F03C         	goto	u1640
  4830   007824  5002               	movf	(Clock_Init@s16Timeout+1)^0,w,c
  4831   007826  E106               	bnz	u1641
  4832   007828  0401               	decf	Clock_Init@s16Timeout^0,w,c
  4833   00782A  B0D8               	btfsc	status,0,c
  4834   00782C  EF1A  F03C         	goto	u1641
  4835   007830  EF1D  F03C         	goto	u1640
  4836   007834                     u1641:
  4837   007834  0E01               	movlw	1
  4838   007836  EF1E  F03C         	goto	u1650
  4839   00783A                     u1640:
  4840   00783A  0E00               	movlw	0
  4841   00783C                     u1650:
  4842   00783C  6E07               	movwf	Clock_Init@bItTimeEn^0,c
  4843   00783E                     l174:
  4844                           
  4845                           ;src/librerias/clock.c: 10:             bStatus = OSCCON2bits.HFIOFR;
  4846   00783E  B2D2               	btfsc	210,1,c	;volatile
  4847   007840  EF24  F03C         	goto	u1661
  4848   007844  EF27  F03C         	goto	u1660
  4849   007848                     u1661:
  4850   007848  0E01               	movlw	1
  4851   00784A  EF28  F03C         	goto	u1666
  4852   00784E                     u1660:
  4853   00784E  0E00               	movlw	0
  4854   007850                     u1666:
  4855   007850  6E03               	movwf	Clock_Init@bStatus^0,c
  4856   007852                     
  4857                           ;src/librerias/clock.c: 11:             s16Timeout--;
  4858   007852  0601               	decf	Clock_Init@s16Timeout^0,f,c
  4859   007854  A0D8               	btfss	status,0,c
  4860   007856  0602               	decf	(Clock_Init@s16Timeout+1)^0,f,c
  4861   007858                     
  4862                           ;src/librerias/clock.c: 12:         }while((0 == bStatus) && ((0 < s16Timeout) || (0 == 
      +                          bItTimeEn)));
  4863   007858  5003               	movf	Clock_Init@bStatus^0,w,c
  4864   00785A  A4D8               	btfss	status,2,c
  4865   00785C  EF32  F03C         	goto	u1671
  4866   007860  EF34  F03C         	goto	u1670
  4867   007864                     u1671:
  4868   007864  EF49  F03C         	goto	l2495
  4869   007868                     u1670:
  4870   007868  BE02               	btfsc	(Clock_Init@s16Timeout+1)^0,7,c
  4871   00786A  EF41  F03C         	goto	u1680
  4872   00786E  5002               	movf	(Clock_Init@s16Timeout+1)^0,w,c
  4873   007870  E106               	bnz	u1681
  4874   007872  0401               	decf	Clock_Init@s16Timeout^0,w,c
  4875   007874  B0D8               	btfsc	status,0,c
  4876   007876  EF3F  F03C         	goto	u1681
  4877   00787A  EF41  F03C         	goto	u1680
  4878   00787E                     u1681:
  4879   00787E  EF1F  F03C         	goto	l174
  4880   007882                     u1680:
  4881   007882  5007               	movf	Clock_Init@bItTimeEn^0,w,c
  4882   007884  B4D8               	btfsc	status,2,c
  4883   007886  EF47  F03C         	goto	u1691
  4884   00788A  EF49  F03C         	goto	u1690
  4885   00788E                     u1691:
  4886   00788E  EF1F  F03C         	goto	l174
  4887   007892                     u1690:
  4888   007892                     l2495:
  4889                           
  4890                           ;src/librerias/clock.c: 13:         if (0 == bStatus){
  4891   007892  5003               	movf	Clock_Init@bStatus^0,w,c
  4892   007894  A4D8               	btfss	status,2,c
  4893   007896  EF4F  F03C         	goto	u1701
  4894   00789A  EF51  F03C         	goto	u1700
  4895   00789E                     u1701:
  4896   00789E  EF53  F03C         	goto	l173
  4897   0078A2                     u1700:
  4898   0078A2                     
  4899                           ;src/librerias/clock.c: 14:             returnCode = ERROR_CODE_TIMEOUT;
  4900   0078A2  0E01               	movlw	1
  4901   0078A4  6E08               	movwf	Clock_Init@returnCode^0,c
  4902   0078A6                     l173:
  4903                           
  4904                           ;src/librerias/clock.c: 18:     if(ERROR_CODE_OK == returnCode){
  4905   0078A6  5008               	movf	Clock_Init@returnCode^0,w,c
  4906   0078A8  A4D8               	btfss	status,2,c
  4907   0078AA  EF59  F03C         	goto	u1711
  4908   0078AE  EF5B  F03C         	goto	u1710
  4909   0078B2                     u1711:
  4910   0078B2  EF92  F03C         	goto	l179
  4911   0078B6                     u1710:
  4912   0078B6                     
  4913                           ;src/librerias/clock.c: 19:         OSCCON2bits.INTSRC = 1;
  4914   0078B6  8AD2               	bsf	210,5,c	;volatile
  4915   0078B8                     
  4916                           ;src/librerias/clock.c: 20:         OSCCONbits.IRCF = 7;
  4917   0078B8  0E70               	movlw	112
  4918   0078BA  12D3               	iorwf	211,f,c	;volatile
  4919   0078BC                     l180:
  4920                           
  4921                           ;src/librerias/clock.c: 24:             bStatus = OSCCONbits.HFIOFS;
  4922   0078BC  B4D3               	btfsc	211,2,c	;volatile
  4923   0078BE  EF63  F03C         	goto	u1721
  4924   0078C2  EF66  F03C         	goto	u1720
  4925   0078C6                     u1721:
  4926   0078C6  0E01               	movlw	1
  4927   0078C8  EF67  F03C         	goto	u1726
  4928   0078CC                     u1720:
  4929   0078CC  0E00               	movlw	0
  4930   0078CE                     u1726:
  4931   0078CE  6E04               	movwf	Clock_Init@bStatus_497^0,c
  4932   0078D0                     
  4933                           ;src/librerias/clock.c: 25:             s16Timeout--;
  4934   0078D0  0601               	decf	Clock_Init@s16Timeout^0,f,c
  4935   0078D2  A0D8               	btfss	status,0,c
  4936   0078D4  0602               	decf	(Clock_Init@s16Timeout+1)^0,f,c
  4937   0078D6                     
  4938                           ;src/librerias/clock.c: 26:         }while((0 == bStatus) && ((0 < s16Timeout) || (0 == 
      +                          bItTimeEn)));
  4939   0078D6  5004               	movf	Clock_Init@bStatus_497^0,w,c
  4940   0078D8  A4D8               	btfss	status,2,c
  4941   0078DA  EF71  F03C         	goto	u1731
  4942   0078DE  EF73  F03C         	goto	u1730
  4943   0078E2                     u1731:
  4944   0078E2  EF88  F03C         	goto	l2511
  4945   0078E6                     u1730:
  4946   0078E6  BE02               	btfsc	(Clock_Init@s16Timeout+1)^0,7,c
  4947   0078E8  EF80  F03C         	goto	u1740
  4948   0078EC  5002               	movf	(Clock_Init@s16Timeout+1)^0,w,c
  4949   0078EE  E106               	bnz	u1741
  4950   0078F0  0401               	decf	Clock_Init@s16Timeout^0,w,c
  4951   0078F2  B0D8               	btfsc	status,0,c
  4952   0078F4  EF7E  F03C         	goto	u1741
  4953   0078F8  EF80  F03C         	goto	u1740
  4954   0078FC                     u1741:
  4955   0078FC  EF5E  F03C         	goto	l180
  4956   007900                     u1740:
  4957   007900  5007               	movf	Clock_Init@bItTimeEn^0,w,c
  4958   007902  B4D8               	btfsc	status,2,c
  4959   007904  EF86  F03C         	goto	u1751
  4960   007908  EF88  F03C         	goto	u1750
  4961   00790C                     u1751:
  4962   00790C  EF5E  F03C         	goto	l180
  4963   007910                     u1750:
  4964   007910                     l2511:
  4965                           
  4966                           ;src/librerias/clock.c: 27:         if (0 == bStatus){
  4967   007910  5004               	movf	Clock_Init@bStatus_497^0,w,c
  4968   007912  A4D8               	btfss	status,2,c
  4969   007914  EF8E  F03C         	goto	u1761
  4970   007918  EF90  F03C         	goto	u1760
  4971   00791C                     u1761:
  4972   00791C  EF92  F03C         	goto	l179
  4973   007920                     u1760:
  4974   007920                     
  4975                           ;src/librerias/clock.c: 28:             returnCode = ERROR_CODE_TIMEOUT;
  4976   007920  0E01               	movlw	1
  4977   007922  6E08               	movwf	Clock_Init@returnCode^0,c
  4978   007924                     l179:
  4979                           
  4980                           ;src/librerias/clock.c: 32:     if(ERROR_CODE_OK == returnCode){
  4981   007924  5008               	movf	Clock_Init@returnCode^0,w,c
  4982   007926  A4D8               	btfss	status,2,c
  4983   007928  EF98  F03C         	goto	u1771
  4984   00792C  EF9A  F03C         	goto	u1770
  4985   007930                     u1771:
  4986   007930  EFCE  F03C         	goto	l185
  4987   007934                     u1770:
  4988   007934                     l186:
  4989                           
  4990                           ;src/librerias/clock.c: 35:             bStatus = OSCCONbits.OSTS;
  4991   007934  B6D3               	btfsc	211,3,c	;volatile
  4992   007936  EF9F  F03C         	goto	u1781
  4993   00793A  EFA2  F03C         	goto	u1780
  4994   00793E                     u1781:
  4995   00793E  0E01               	movlw	1
  4996   007940  EFA3  F03C         	goto	u1786
  4997   007944                     u1780:
  4998   007944  0E00               	movlw	0
  4999   007946                     u1786:
  5000   007946  6E05               	movwf	Clock_Init@bStatus_498^0,c
  5001   007948                     
  5002                           ;src/librerias/clock.c: 36:             s16Timeout--;
  5003   007948  0601               	decf	Clock_Init@s16Timeout^0,f,c
  5004   00794A  A0D8               	btfss	status,0,c
  5005   00794C  0602               	decf	(Clock_Init@s16Timeout+1)^0,f,c
  5006   00794E                     
  5007                           ;src/librerias/clock.c: 37:         }while((0 == bStatus) && ((0 < s16Timeout) || (0 == 
      +                          bItTimeEn)));
  5008   00794E  5005               	movf	Clock_Init@bStatus_498^0,w,c
  5009   007950  A4D8               	btfss	status,2,c
  5010   007952  EFAD  F03C         	goto	u1791
  5011   007956  EFAF  F03C         	goto	u1790
  5012   00795A                     u1791:
  5013   00795A  EFC4  F03C         	goto	l2525
  5014   00795E                     u1790:
  5015   00795E  BE02               	btfsc	(Clock_Init@s16Timeout+1)^0,7,c
  5016   007960  EFBC  F03C         	goto	u1800
  5017   007964  5002               	movf	(Clock_Init@s16Timeout+1)^0,w,c
  5018   007966  E106               	bnz	u1801
  5019   007968  0401               	decf	Clock_Init@s16Timeout^0,w,c
  5020   00796A  B0D8               	btfsc	status,0,c
  5021   00796C  EFBA  F03C         	goto	u1801
  5022   007970  EFBC  F03C         	goto	u1800
  5023   007974                     u1801:
  5024   007974  EF9A  F03C         	goto	l186
  5025   007978                     u1800:
  5026   007978  5007               	movf	Clock_Init@bItTimeEn^0,w,c
  5027   00797A  B4D8               	btfsc	status,2,c
  5028   00797C  EFC2  F03C         	goto	u1811
  5029   007980  EFC4  F03C         	goto	u1810
  5030   007984                     u1811:
  5031   007984  EF9A  F03C         	goto	l186
  5032   007988                     u1810:
  5033   007988                     l2525:
  5034                           
  5035                           ;src/librerias/clock.c: 38:         if (0 == bStatus){
  5036   007988  5005               	movf	Clock_Init@bStatus_498^0,w,c
  5037   00798A  A4D8               	btfss	status,2,c
  5038   00798C  EFCA  F03C         	goto	u1821
  5039   007990  EFCC  F03C         	goto	u1820
  5040   007994                     u1821:
  5041   007994  EFCE  F03C         	goto	l185
  5042   007998                     u1820:
  5043   007998                     
  5044                           ;src/librerias/clock.c: 39:             returnCode = ERROR_CODE_TIMEOUT;
  5045   007998  0E01               	movlw	1
  5046   00799A  6E08               	movwf	Clock_Init@returnCode^0,c
  5047   00799C                     l185:
  5048                           
  5049                           ;src/librerias/clock.c: 42:         if(ERROR_CODE_OK == returnCode){
  5050   00799C  5008               	movf	Clock_Init@returnCode^0,w,c
  5051   00799E  A4D8               	btfss	status,2,c
  5052   0079A0  EFD4  F03C         	goto	u1831
  5053   0079A4  EFD6  F03C         	goto	u1830
  5054   0079A8                     u1831:
  5055   0079A8  EF0C  F03D         	goto	l191
  5056   0079AC                     u1830:
  5057   0079AC                     
  5058                           ;src/librerias/clock.c: 43:         OSCTUNEbits.SPLLMULT = 1;
  5059   0079AC  8E9B               	bsf	155,7,c	;volatile
  5060                           
  5061                           ;src/librerias/clock.c: 44:         OSCCON2bits.PLLEN = 1;
  5062   0079AE  88D2               	bsf	210,4,c	;volatile
  5063   0079B0                     l192:
  5064                           
  5065                           ;src/librerias/clock.c: 47:             bStatus = OSCCON2bits.PLLRDY;
  5066   0079B0  BED2               	btfsc	210,7,c	;volatile
  5067   0079B2  EFDD  F03C         	goto	u1841
  5068   0079B6  EFE0  F03C         	goto	u1840
  5069   0079BA                     u1841:
  5070   0079BA  0E01               	movlw	1
  5071   0079BC  EFE1  F03C         	goto	u1846
  5072   0079C0                     u1840:
  5073   0079C0  0E00               	movlw	0
  5074   0079C2                     u1846:
  5075   0079C2  6E06               	movwf	Clock_Init@bStatus_501^0,c
  5076   0079C4                     
  5077                           ;src/librerias/clock.c: 48:             s16Timeout--;
  5078   0079C4  0601               	decf	Clock_Init@s16Timeout^0,f,c
  5079   0079C6  A0D8               	btfss	status,0,c
  5080   0079C8  0602               	decf	(Clock_Init@s16Timeout+1)^0,f,c
  5081   0079CA                     
  5082                           ;src/librerias/clock.c: 49:         }while((0 == bStatus) && ((0 < s16Timeout) || (0 == 
      +                          bItTimeEn)));
  5083   0079CA  5006               	movf	Clock_Init@bStatus_501^0,w,c
  5084   0079CC  A4D8               	btfss	status,2,c
  5085   0079CE  EFEB  F03C         	goto	u1851
  5086   0079D2  EFED  F03C         	goto	u1850
  5087   0079D6                     u1851:
  5088   0079D6  EF02  F03D         	goto	l2541
  5089   0079DA                     u1850:
  5090   0079DA  BE02               	btfsc	(Clock_Init@s16Timeout+1)^0,7,c
  5091   0079DC  EFFA  F03C         	goto	u1860
  5092   0079E0  5002               	movf	(Clock_Init@s16Timeout+1)^0,w,c
  5093   0079E2  E106               	bnz	u1861
  5094   0079E4  0401               	decf	Clock_Init@s16Timeout^0,w,c
  5095   0079E6  B0D8               	btfsc	status,0,c
  5096   0079E8  EFF8  F03C         	goto	u1861
  5097   0079EC  EFFA  F03C         	goto	u1860
  5098   0079F0                     u1861:
  5099   0079F0  EFD8  F03C         	goto	l192
  5100   0079F4                     u1860:
  5101   0079F4  5007               	movf	Clock_Init@bItTimeEn^0,w,c
  5102   0079F6  B4D8               	btfsc	status,2,c
  5103   0079F8  EF00  F03D         	goto	u1871
  5104   0079FC  EF02  F03D         	goto	u1870
  5105   007A00                     u1871:
  5106   007A00  EFD8  F03C         	goto	l192
  5107   007A04                     u1870:
  5108   007A04                     l2541:
  5109                           
  5110                           ;src/librerias/clock.c: 50:         if (0 == bStatus){
  5111   007A04  5006               	movf	Clock_Init@bStatus_501^0,w,c
  5112   007A06  A4D8               	btfss	status,2,c
  5113   007A08  EF08  F03D         	goto	u1881
  5114   007A0C  EF0A  F03D         	goto	u1880
  5115   007A10                     u1881:
  5116   007A10  EF0C  F03D         	goto	l191
  5117   007A14                     u1880:
  5118   007A14                     
  5119                           ;src/librerias/clock.c: 51:             returnCode = ERROR_CODE_TIMEOUT;
  5120   007A14  0E01               	movlw	1
  5121   007A16  6E08               	movwf	Clock_Init@returnCode^0,c
  5122   007A18                     l191:
  5123                           
  5124                           ;src/librerias/clock.c: 56:     if(ERROR_CODE_OK == returnCode){
  5125   007A18  5008               	movf	Clock_Init@returnCode^0,w,c
  5126   007A1A  A4D8               	btfss	status,2,c
  5127   007A1C  EF12  F03D         	goto	u1891
  5128   007A20  EF14  F03D         	goto	u1890
  5129   007A24                     u1891:
  5130   007A24  EF17  F03D         	goto	l198
  5131   007A28                     u1890:
  5132   007A28                     
  5133                           ;src/librerias/clock.c: 57:         OSCCON2bits.PRISD = 0;
  5134   007A28  94D2               	bcf	210,2,c	;volatile
  5135   007A2A                     
  5136                           ;src/librerias/clock.c: 58:         OSCCONbits.SCS = 0;
  5137   007A2A  0EFC               	movlw	-4
  5138   007A2C  16D3               	andwf	211,f,c	;volatile
  5139   007A2E                     l198:
  5140   007A2E  0012               	return		;funcret
  5141   007A30                     __end_of_Clock_Init:
  5142                           	callstack 0
  5143                           
  5144                           	psect	rparam
  5145   000000                     
  5146                           	psect	config
  5147                           
  5148                           ;Config register CONFIG1L @ 0x300000
  5149                           ;	PLL Selection
  5150                           ;	PLLSEL = PLL3X, 3x clock multiplier
  5151                           ;	PLL Enable Configuration bit
  5152                           ;	CFGPLLEN = ON, PLL Enabled
  5153                           ;	CPU System Clock Postscaler
  5154                           ;	CPUDIV = NOCLKDIV, CPU uses system clock (no divide)
  5155                           ;	Low Speed USB mode with 48 MHz system clock
  5156                           ;	LS48MHZ = SYS48X8, System clock at 48 MHz, USB clock divider is set to 8
  5157   300000                     	org	3145728
  5158   300000  23                 	db	35
  5159                           
  5160                           ;Config register CONFIG1H @ 0x300001
  5161                           ;	Oscillator Selection
  5162                           ;	FOSC = INTOSCCLKO, Internal oscillator, clock output on OSC2
  5163                           ;	Primary Oscillator Shutdown
  5164                           ;	PCLKEN = OFF, Primary oscillator shutdown firmware controlled
  5165                           ;	Fail-Safe Clock Monitor
  5166                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  5167                           ;	Internal/External Oscillator Switchover
  5168                           ;	IESO = OFF, Oscillator Switchover mode disabled
  5169   300001                     	org	3145729
  5170   300001  09                 	db	9
  5171                           
  5172                           ;Config register CONFIG2L @ 0x300002
  5173                           ;	Power-up Timer Enable
  5174                           ;	nPWRTEN = OFF, Power up timer disabled
  5175                           ;	Brown-out Reset Enable
  5176                           ;	BOREN = SBORDIS, BOR enabled in hardware (SBOREN is ignored)
  5177                           ;	Brown-out Reset Voltage
  5178                           ;	BORV = 190, BOR set to 1.9V nominal
  5179                           ;	Low-Power Brown-out Reset
  5180                           ;	nLPBOR = OFF, Low-Power Brown-out Reset disabled
  5181   300002                     	org	3145730
  5182   300002  5F                 	db	95
  5183                           
  5184                           ;Config register CONFIG2H @ 0x300003
  5185                           ;	Watchdog Timer Enable bits
  5186                           ;	WDTEN = OFF, WDT disabled in hardware (SWDTEN ignored)
  5187                           ;	Watchdog Timer Postscaler
  5188                           ;	WDTPS = 32768, 1:32768
  5189   300003                     	org	3145731
  5190   300003  3C                 	db	60
  5191                           
  5192                           ; Padding undefined space
  5193   300004                     	org	3145732
  5194   300004  FF                 	db	255
  5195                           
  5196                           ;Config register CONFIG3H @ 0x300005
  5197                           ;	CCP2 MUX bit
  5198                           ;	CCP2MX = RC1, CCP2 input/output is multiplexed with RC1
  5199                           ;	PORTB A/D Enable bit
  5200                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  5201                           ;	Timer3 Clock Input MUX bit
  5202                           ;	T3CMX = RC0, T3CKI function is on RC0
  5203                           ;	SDO Output MUX bit
  5204                           ;	SDOMX = RB3, SDO function is on RB3
  5205                           ;	Master Clear Reset Pin Enable
  5206                           ;	MCLRE = ON, MCLR pin enabled; RE3 input disabled
  5207   300005                     	org	3145733
  5208   300005  D3                 	db	211
  5209                           
  5210                           ;Config register CONFIG4L @ 0x300006
  5211                           ;	Stack Full/Underflow Reset
  5212                           ;	STVREN = ON, Stack full/underflow will cause Reset
  5213                           ;	Single-Supply ICSP Enable bit
  5214                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
  5215                           ;	Dedicated In-Circuit Debug/Programming Port Enable
  5216                           ;	ICPRT = OFF, ICPORT disabled
  5217                           ;	Extended Instruction Set Enable bit
  5218                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled
  5219                           ;	Background Debugger Enable bit
  5220                           ;	DEBUG = 0x1, unprogrammed default
  5221   300006                     	org	3145734
  5222   300006  85                 	db	133
  5223                           
  5224                           ; Padding undefined space
  5225   300007                     	org	3145735
  5226   300007  FF                 	db	255
  5227                           
  5228                           ;Config register CONFIG5L @ 0x300008
  5229                           ;	Block 0 Code Protect
  5230                           ;	CP0 = OFF, Block 0 is not code-protected
  5231                           ;	Block 1 Code Protect
  5232                           ;	CP1 = OFF, Block 1 is not code-protected
  5233                           ;	Block 2 Code Protect
  5234                           ;	CP2 = OFF, Block 2 is not code-protected
  5235                           ;	Block 3 Code Protect
  5236                           ;	CP3 = OFF, Block 3 is not code-protected
  5237   300008                     	org	3145736
  5238   300008  0F                 	db	15
  5239                           
  5240                           ;Config register CONFIG5H @ 0x300009
  5241                           ;	Boot Block Code Protect
  5242                           ;	CPB = OFF, Boot block is not code-protected
  5243                           ;	Data EEPROM Code Protect
  5244                           ;	CPD = OFF, Data EEPROM is not code-protected
  5245   300009                     	org	3145737
  5246   300009  C0                 	db	192
  5247                           
  5248                           ;Config register CONFIG6L @ 0x30000A
  5249                           ;	Block 0 Write Protect
  5250                           ;	WRT0 = OFF, Block 0 (0800-1FFFh) is not write-protected
  5251                           ;	Block 1 Write Protect
  5252                           ;	WRT1 = OFF, Block 1 (2000-3FFFh) is not write-protected
  5253                           ;	Block 2 Write Protect
  5254                           ;	WRT2 = OFF, Block 2 (04000-5FFFh) is not write-protected
  5255                           ;	Block 3 Write Protect
  5256                           ;	WRT3 = OFF, Block 3 (06000-7FFFh) is not write-protected
  5257   30000A                     	org	3145738
  5258   30000A  0F                 	db	15
  5259                           
  5260                           ;Config register CONFIG6H @ 0x30000B
  5261                           ;	Configuration Registers Write Protect
  5262                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  5263                           ;	Boot Block Write Protect
  5264                           ;	WRTB = OFF, Boot block (0000-7FFh) is not write-protected
  5265                           ;	Data EEPROM Write Protect
  5266                           ;	WRTD = OFF, Data EEPROM is not write-protected
  5267   30000B                     	org	3145739
  5268   30000B  E0                 	db	224
  5269                           
  5270                           ;Config register CONFIG7L @ 0x30000C
  5271                           ;	Block 0 Table Read Protect
  5272                           ;	EBTR0 = OFF, Block 0 is not protected from table reads executed in other blocks
  5273                           ;	Block 1 Table Read Protect
  5274                           ;	EBTR1 = OFF, Block 1 is not protected from table reads executed in other blocks
  5275                           ;	Block 2 Table Read Protect
  5276                           ;	EBTR2 = OFF, Block 2 is not protected from table reads executed in other blocks
  5277                           ;	Block 3 Table Read Protect
  5278                           ;	EBTR3 = OFF, Block 3 is not protected from table reads executed in other blocks
  5279   30000C                     	org	3145740
  5280   30000C  0F                 	db	15
  5281                           
  5282                           ;Config register CONFIG7H @ 0x30000D
  5283                           ;	Boot Block Table Read Protect
  5284                           ;	EBTRB = OFF, Boot block is not protected from table reads executed in other blocks
  5285   30000D                     	org	3145741
  5286   30000D  40                 	db	64
  5287                           tosu	equ	0xFFF
  5288                           tosh	equ	0xFFE
  5289                           tosl	equ	0xFFD
  5290                           stkptr	equ	0xFFC
  5291                           pclatu	equ	0xFFB
  5292                           pclath	equ	0xFFA
  5293                           pcl	equ	0xFF9
  5294                           tblptru	equ	0xFF8
  5295                           tblptrh	equ	0xFF7
  5296                           tblptrl	equ	0xFF6
  5297                           tablat	equ	0xFF5
  5298                           prodh	equ	0xFF4
  5299                           prodl	equ	0xFF3
  5300                           indf0	equ	0xFEF
  5301                           postinc0	equ	0xFEE
  5302                           postdec0	equ	0xFED
  5303                           preinc0	equ	0xFEC
  5304                           plusw0	equ	0xFEB
  5305                           fsr0h	equ	0xFEA
  5306                           fsr0l	equ	0xFE9
  5307                           wreg	equ	0xFE8
  5308                           indf1	equ	0xFE7
  5309                           postinc1	equ	0xFE6
  5310                           postdec1	equ	0xFE5
  5311                           preinc1	equ	0xFE4
  5312                           plusw1	equ	0xFE3
  5313                           fsr1h	equ	0xFE2
  5314                           fsr1l	equ	0xFE1
  5315                           bsr	equ	0xFE0
  5316                           indf2	equ	0xFDF
  5317                           postinc2	equ	0xFDE
  5318                           postdec2	equ	0xFDD
  5319                           preinc2	equ	0xFDC
  5320                           plusw2	equ	0xFDB
  5321                           fsr2h	equ	0xFDA
  5322                           fsr2l	equ	0xFD9
  5323                           status	equ	0xFD8

Data Sizes:
    Strings     689
    Constant    4
    Data        6
    BSS         236
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     49      79
    BANK0           160      0     132
    BANK1           256      0      80
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK7           256      0       0
    BANK6           256      0       0

Pointer List with Targets:

    clearArray@array	PTR unsigned char  size(2) Largest target is 80
		 -> command(COMRAM[16]), param(BANK1[80]), 

    comandos	PTR const unsigned char [3] size(2) Largest target is 9
		 -> STR_24(CODE[9]), STR_25(CODE[9]), STR_26(CODE[9]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    getWord@pWord	PTR unsigned char  size(2) Largest target is 80
		 -> command(COMRAM[16]), param(BANK1[80]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 50
		 -> STR_1(CODE[7]), STR_10(CODE[9]), STR_11(CODE[14]), STR_12(CODE[17]), 
		 -> STR_13(CODE[10]), STR_14(CODE[14]), STR_15(CODE[17]), STR_16(CODE[11]), 
		 -> STR_17(CODE[14]), STR_18(CODE[17]), STR_19(CODE[5]), STR_2(CODE[10]), 
		 -> STR_20(CODE[8]), STR_21(CODE[27]), STR_22(CODE[26]), STR_23(CODE[26]), 
		 -> STR_27(CODE[29]), STR_28(CODE[12]), STR_29(CODE[38]), STR_3(CODE[11]), 
		 -> STR_30(CODE[37]), STR_31(CODE[38]), STR_32(CODE[50]), STR_33(CODE[5]), 
		 -> STR_34(CODE[36]), STR_35(CODE[5]), STR_36(CODE[3]), STR_37(CODE[4]), 
		 -> STR_38(CODE[14]), STR_39(CODE[19]), STR_4(CODE[18]), STR_40(CODE[19]), 
		 -> STR_41(CODE[18]), STR_42(CODE[19]), STR_43(CODE[23]), STR_44(CODE[25]), 
		 -> STR_45(CODE[23]), STR_5(CODE[18]), STR_6(CODE[11]), STR_7(CODE[9]), 
		 -> STR_8(CODE[8]), STR_9(CODE[13]), 

    S1047$buffer	PTR unsigned char  size(2) Largest target is 0

    S1047$source	PTR const unsigned char  size(2) Largest target is 0

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 50
		 -> STR_1(CODE[7]), STR_10(CODE[9]), STR_11(CODE[14]), STR_12(CODE[17]), 
		 -> STR_13(CODE[10]), STR_14(CODE[14]), STR_15(CODE[17]), STR_16(CODE[11]), 
		 -> STR_17(CODE[14]), STR_18(CODE[17]), STR_19(CODE[5]), STR_2(CODE[10]), 
		 -> STR_20(CODE[8]), STR_21(CODE[27]), STR_22(CODE[26]), STR_23(CODE[26]), 
		 -> STR_27(CODE[29]), STR_28(CODE[12]), STR_29(CODE[38]), STR_3(CODE[11]), 
		 -> STR_30(CODE[37]), STR_31(CODE[38]), STR_32(CODE[50]), STR_33(CODE[5]), 
		 -> STR_34(CODE[36]), STR_35(CODE[5]), STR_36(CODE[3]), STR_37(CODE[4]), 
		 -> STR_38(CODE[14]), STR_39(CODE[19]), STR_4(CODE[18]), STR_40(CODE[19]), 
		 -> STR_41(CODE[18]), STR_42(CODE[19]), STR_43(CODE[23]), STR_44(CODE[25]), 
		 -> STR_45(CODE[23]), STR_5(CODE[18]), STR_6(CODE[11]), STR_7(CODE[9]), 
		 -> STR_8(CODE[8]), STR_9(CODE[13]), 

    vfpfcnvrt@cp_1116	PTR unsigned char  size(2) Largest target is 80
		 -> command(COMRAM[16]), param(BANK1[80]), ?_printf(COMRAM[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 50
		 -> STR_1(CODE[7]), STR_10(CODE[9]), STR_11(CODE[14]), STR_12(CODE[17]), 
		 -> STR_13(CODE[10]), STR_14(CODE[14]), STR_15(CODE[17]), STR_16(CODE[11]), 
		 -> STR_17(CODE[14]), STR_18(CODE[17]), STR_19(CODE[5]), STR_2(CODE[10]), 
		 -> STR_20(CODE[8]), STR_21(CODE[27]), STR_22(CODE[26]), STR_23(CODE[26]), 
		 -> STR_27(CODE[29]), STR_28(CODE[12]), STR_29(CODE[38]), STR_3(CODE[11]), 
		 -> STR_30(CODE[37]), STR_31(CODE[38]), STR_32(CODE[50]), STR_33(CODE[5]), 
		 -> STR_34(CODE[36]), STR_35(CODE[5]), STR_36(CODE[3]), STR_37(CODE[4]), 
		 -> STR_38(CODE[14]), STR_39(CODE[19]), STR_4(CODE[18]), STR_40(CODE[19]), 
		 -> STR_41(CODE[18]), STR_42(CODE[19]), STR_43(CODE[23]), STR_44(CODE[25]), 
		 -> STR_45(CODE[23]), STR_5(CODE[18]), STR_6(CODE[11]), STR_7(CODE[9]), 
		 -> STR_8(CODE[8]), STR_9(CODE[13]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 50
		 -> STR_1(CODE[7]), STR_10(CODE[9]), STR_11(CODE[14]), STR_12(CODE[17]), 
		 -> STR_13(CODE[10]), STR_14(CODE[14]), STR_15(CODE[17]), STR_16(CODE[11]), 
		 -> STR_17(CODE[14]), STR_18(CODE[17]), STR_19(CODE[5]), STR_2(CODE[10]), 
		 -> STR_20(CODE[8]), STR_21(CODE[27]), STR_22(CODE[26]), STR_23(CODE[26]), 
		 -> STR_27(CODE[29]), STR_28(CODE[12]), STR_29(CODE[38]), STR_3(CODE[11]), 
		 -> STR_30(CODE[37]), STR_31(CODE[38]), STR_32(CODE[50]), STR_33(CODE[5]), 
		 -> STR_34(CODE[36]), STR_35(CODE[5]), STR_36(CODE[3]), STR_37(CODE[4]), 
		 -> STR_38(CODE[14]), STR_39(CODE[19]), STR_4(CODE[18]), STR_40(CODE[19]), 
		 -> STR_41(CODE[18]), STR_42(CODE[19]), STR_43(CODE[23]), STR_44(CODE[25]), 
		 -> STR_45(CODE[23]), STR_5(CODE[18]), STR_6(CODE[11]), STR_7(CODE[9]), 
		 -> STR_8(CODE[8]), STR_9(CODE[13]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _main->_commandProcess
    _commandProcess->_printf
    _commandLineInit->_printf
    _addToBuffer->_CL_ErrorHandler
    _clearCharInLine->_printf
    _CL_ErrorHandler->_printf
    _commandLineReset->_printf
    _UART_RxAvailable->_UART_ErrorHandler
    _UART_Rx->_UART_ErrorHandler
    _UART_ErrorHandler->_printf
    _UART_config_show->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_fputc
    _fputc->_putch
    _putch->_UART_Tx
    _abs->___awmod

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   83883
                    _CL_ErrorHandler
                         _Clock_Init
                          _UART_Init
                            _UART_Rx
                   _UART_RxAvailable
                        _addToBuffer
                    _commandLineInit
                     _commandProcess
 ---------------------------------------------------------------------------------
 (1) _commandProcess                                       8     8      0   15273
                                             41 COMRAM     8     8      0
                  _CL_CommandHandler
                   _commandLineReset
                         _countWords
                            _getWord
                             _printf
 ---------------------------------------------------------------------------------
 (2) _getWord                                             26    24      2     845
                                              0 COMRAM    26    24      2
 ---------------------------------------------------------------------------------
 (2) _countWords                                           3     3      0     139
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _CL_CommandHandler                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _commandLineInit                                      0     0      0    6703
                          _clearBuff
                             _printf
 ---------------------------------------------------------------------------------
 (1) _addToBuffer                                          1     1      0   27275
                                             44 COMRAM     1     1      0
                    _CL_ErrorHandler
                            _UART_Tx
                    _clearCharInLine
                             _printf
 ---------------------------------------------------------------------------------
 (2) _clearCharInLine                                      0     0      0    6635
                             _printf
 ---------------------------------------------------------------------------------
 (2) _CL_ErrorHandler                                      3     3      0   13859
                                             41 COMRAM     3     3      0
                   _commandLineReset
                             _printf
 ---------------------------------------------------------------------------------
 (2) _commandLineReset                                     0     0      0    7193
                         _clearArray
                          _clearBuff
                             _printf
 ---------------------------------------------------------------------------------
 (3) _clearBuff                                            1     1      0      68
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _clearArray                                           4     1      3     490
                                              0 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (1) _UART_RxAvailable                                     0     0      0    6679
                  _UART_ErrorHandler
 ---------------------------------------------------------------------------------
 (1) _UART_Rx                                              0     0      0    6679
                  _UART_ErrorHandler
                    _UART_Rx_FRAMING
                   _UART_Rx_OVERFLOW
 ---------------------------------------------------------------------------------
 (2) _UART_Rx_OVERFLOW                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UART_Rx_FRAMING                                      1     1      0       0
 ---------------------------------------------------------------------------------
 (2) _UART_ErrorHandler                                    3     3      0    6679
                                             41 COMRAM     3     3      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            4     0      4    6831
                                             41 COMRAM     4     0      4
                   _UART_config_show
                   _UART_select_baud
 ---------------------------------------------------------------------------------
 (2) _UART_select_baud                                     8     4      4      98
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _UART_config_show                                     0     0      0    6635
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                               9     3      6    6635
                                             34 COMRAM     7     1      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             7     2      5    3387
                                             27 COMRAM     7     2      5
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           16    12      4    3029
                                             11 COMRAM    16    12      4
                            ___awdiv
                            ___awmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     978
                                              2 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0      44
                                              1 COMRAM     1     1      0
                            _UART_Tx
 ---------------------------------------------------------------------------------
 (7) _UART_Tx                                              1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                              6 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _Clock_Init                                           8     6      2     584
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CL_ErrorHandler
     _commandLineReset
       _clearArray
       _clearBuff
       _printf
         _vfprintf
           _vfpfcnvrt
             ___awdiv
             ___awmod
             _abs
               ___awmod (ARG)
             _fputc
               _putch
                 _UART_Tx
     _printf
   _Clock_Init
   _UART_Init
     _UART_config_show
       _printf
     _UART_select_baud
   _UART_Rx
     _UART_ErrorHandler
       _printf
     _UART_Rx_FRAMING
     _UART_Rx_OVERFLOW
   _UART_RxAvailable
     _UART_ErrorHandler
   _addToBuffer
     _CL_ErrorHandler
     _UART_Tx
     _clearCharInLine
       _printf
     _printf
   _commandLineInit
     _clearBuff
     _printf
   _commandProcess
     _CL_CommandHandler
     _commandLineReset
     _countWords
     _getWord
     _printf

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      29        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      14        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      12        0.0%
BANK5              100      0       0      13        0.0%
BITBANK4           100      0       0      16        0.0%
BANK4              100      0       0      11        0.0%
BITBANK3           100      0       0      15        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      50       7       31.2%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      84       5       82.5%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     31      4F       1       83.2%
BITBIGSFRllh        36      0       0      26        0.0%
BITBIGSFRhhh        29      0       0      20        0.0%
BITBIGSFRhhl        19      0       0      21        0.0%
BITBIGSFRlhh         C      0       0      23        0.0%
BITBIGSFRlll         A      0       0      27        0.0%
BITBIGSFRhlh         7      0       0      22        0.0%
BITBIGSFRlhll        6      0       0      25        0.0%
BITBIGSFRlhlh        2      0       0      24        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     123      28        0.0%
DATA                 0      0     123       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Fri Oct 11 19:47:58 2024

          ?_commandLineInit 0001           _commandLineEnable 0038               getWord@wordId 0016  
         ?_commandLineReset 0001                          l95 75C6                          l99 75FC  
            getWord@tmpWord 0004                ___awdiv@sign 0006             ?_commandProcess 0001  
            getWord@wordNum 0015          ??_commandLineReset 002A  UART_ErrorHandler@errorCode 002C  
                       l111 76AA                         l103 763E                         l112 76B6  
                       l131 6B40                         l107 7674                         l115 6C74  
                       l141 6BA2                         l301 6E90                         l134 6B52  
                       l151 6CD2                         l128 7564                         l137 6B28  
                       l145 6B6C                         l154 6CE6                         l314 7424  
                       l243 6C42                         l180 78BC                         l148 6B3C  
                       l260 7156                         l173 78A6                         l237 6E28  
                       l174 783E                         l191 7A18                         l159 6F1A  
                       l192 79B0                         l328 72F2                         l280 7704  
                       l185 799C                         l265 6BE6                         l186 7934  
                       l274 6C12                         l179 7924                         l268 6B86  
                       l198 7A2E                         l278 7818                         l297 6E6C  
                       l562 708E                         l575 6FCA                         u440 6B96  
                       u441 6B92                         u450 6B62                         u451 6B5E  
                       _abs 6C76                ___awmod@sign 0006                         prod 0FF3  
                       wreg 0FE8                  _TXSTA1bits 0FAC                        l1009 6BC0  
                      ?_abs 0007                        l1060 6D2C                        l2101 6F96  
                      l2111 6FC2                        l2103 6F9E                        l2031 6B4E  
                      l1047 7D46                        l1064 6C90                        l2041 6FE6  
                      l2105 6FA4                        l2033 6B22                        l2121 7186  
                      l2201 7D10                        l3001 735E                        l2051 700C  
                      l2043 6FEA                        l2035 6FCC                        l2107 6FAA  
                      l1067 6CA8                        l2131 6C84                        l2123 71A4  
                      l2115 7158                        l2211 6CE8                        l3003 736E  
                      l3011 73BA                        l2061 7042                        l2053 701E  
                      l2045 6FF8                        l2037 6FD0                        l2109 6FBA  
                      l2029 6B40                        l2125 71DA                        l2117 716A  
                      l2141 7A6E                        l2205 7D20                        l2133 7A30  
                      l2213 6CF4                        l2221 6BA4                        l2301 764A  
                      l3021 73E2                        l3013 73BC                        l3005 7388  
                      l3101 7798                        l2063 7058                        l2055 7026  
                      l2071 706E                        l2047 7000                        l2039 6FDE  
                      l1079 7220                        l2119 717C                        l2151 7AE6  
                      l2143 7A7C                        l2135 7A52                        l2215 6D08  
                      l2223 6BA8                        l2311 769E                        l2303 7658  
                      l3031 7406                        l3007 73A4                        l3015 73CC  
                      l3111 77FA                        l2073 707E                        l2065 7060  
                      l2057 702E                        l2049 7004                        l2081 6F20  
                      l2129 6C76                        l2161 7B6C                        l2153 7AFE  
                      l2145 7A98                        l2137 7A5E                        l2217 6D24  
                      l2305 7668                        l2321 744E                        l2313 7426  
                      l2233 6BC6                        l3041 70A6                        l2401 6E2E  
                      l3033 7422                        l3017 73DC                        l3009 73B8  
                      l3113 780A                        l3105 77A0                        l3121 6D7C  
                      l2075 7086                        l2067 7062                        l2059 703C  
                      l2091 6F50                        l2083 6F2E                        l2163 7B7C  
                      l2171 7BBE                        l2155 7B2E                        l2147 7AB4  
                      l2139 7A6A                        l2307 7680                        l2323 745A  
                      l2315 742A                        l1451 6B64                        l1443 6BA0  
                      l1435 6B88                        l2235 6BD0                        l2227 6BC2  
                      l3051 70D6                        l3043 70AA                        l2411 6E6A  
                      l2403 6E42                        l3027 73EA                        l3115 7812  
                      l3107 77C8                        l3131 6DBC                        l3123 6D88  
                      l2501 78B8                        l2069 7068                        l2093 6F62  
                      l2085 6F36                        l2181 7C0E                        l2165 7B8C  
                      l2157 7B4A                        l2149 7ACC                        l2173 7BD4  
                      l2309 768E                        l2325 7466                        l2317 7436  
                      l2333 748A                        l1437 6B96                        l2237 6BD2  
                      l3061 7118                        l3053 70EA                        l3045 70BA  
                      l3037 7092                        l2413 6E6E                        l2405 6E44  
                      l3029 7402                        l3117 7816                        l3109 77CA  
                      l3125 6D9C                        l2511 7910                        l2503 78D0  
                      l2095 6F6A                        l2087 6F3A                        l2079 6F1C  
                      l2183 7C30                        l2191 7CA6                        l2175 7BD8  
                      l2167 7B9E                        l2159 7B5C                        l2327 7472  
                      l2319 7442                        l1455 6B6A                        l1447 6B54  
                      l1439 6B9A                        l2239 6BE2                        l3063 7124  
                      l3055 70FA                        l3047 70CA                        l2415 6E7E  
                      l2407 6E4C                        l3071 76C8                        l3127 6DA0  
                      l2521 795E                        l2513 7920                        l2505 78D6  
                      l2097 6F72                        l2089 6F48                        l2193 7CB6  
                      l2185 7C62                        l2177 7BFA                        l2169 7BBC  
                      l2281 7590                        l2329 747E                        l1449 6B62  
                      l3065 7126                        l3057 7104                        l3049 70D2  
                      l2417 6E8E                        l2409 6E58                        l3081 76EC  
                      l3129 6DB4                        l2531 79B0                        l2523 7978  
                      l2515 7934                        l2507 78E6                        l2099 6F80  
                      l2195 7CD2                        l2187 7C94                        l2179 7C06  
                      l2291 75E0                        l2283 759C                        l2275 7566  
                      l3067 7130                        l3091 7740                        l3083 76F0  
                      l3075 76CE                        l2541 7A04                        l2533 79C4  
                      l2525 7988                        l2517 7948                        l2509 7900  
                      l2197 7CF0                        l2293 75F0                        l2285 75AA  
                      l2277 7572                        l2381 6EB8                        l3093 7748  
                      l3085 7700                        l3077 76D6                        l3069 76B8  
                      l2543 7A14                        l2535 79CA                        l2527 7998  
                      l2519 794E                        l2199 7CF4                        l2295 7614  
                      l2287 75BA                        l2279 7580                        l2551 6C44  
                      l2383 6EC8                        l2375 6E94                        l3087 7714  
                      l3095 775A                        l3079 76DC                        l2545 7A28  
                      l2537 79DA                        l2529 79AC                        l2481 781E  
                      l2297 7622                        l2289 75D2                        l2561 6C64  
                      l2553 6C48                        l2385 6ED8                        l3097 776A  
                      l3089 7724                        l2547 7A2A                        l2539 79F4  
                      l2491 7868                        l2483 783E                        l2299 7632  
                      l2563 6C66                        l2555 6C4C                        l2379 6EA8  
                      l2395 6B6E                        l2571 6DCC                        l3099 7772  
                      l2493 7882                        l2485 783E                        l3381 754E  
                      l2565 6C68                        l2557 6C60                        l2389 6EE8  
                      l2581 6CB8                        l3373 72B4                        l2397 6B7A  
                      l2573 6E14                        l2495 7892                        l2487 7852  
                      l2479 781A                        l3391 7516                        l3383 74DE  
                      l2567 6C6A                        l2559 6C62                        l3375 6EFC  
                      l2583 6CC6                        l2575 6E18                        l2399 6E2A  
                      l2497 78A2                        l2489 7858                        l3393 7524  
                      l3385 74EC                        l3377 74A8                        l2569 6C6E  
                      l2593 6CE4                        l2585 6CCC                        l2577 6E1C  
                      l2499 78B6                        l3395 7540                        l3379 7532  
                      l3387 74FA                        l2579 6CAA                        l3389 7508  
                      l2597 6B2A                        l2599 6B3A                        l2951 6C00  
                      l2945 6BE8                        l2953 6C14                        l2961 723C  
                      l2947 6BF0                        l2955 6C36                        l2963 7250  
                      l2949 6BFE                        l2965 7264                        l2973 72A0  
                      l2957 7224                        l2967 7278                        l2959 7228  
                      l2991 7334                        l2969 728C                        l2993 7344  
                      l2985 7306                        l2995 7346                        l2987 7316  
                      l2979 72F6                        l2997 7358                        l2989 731A  
                      l2999 735C                        STR_1 7FEE                        STR_2 7FA7  
                      STR_3 7F92                        STR_4 7F24                        STR_5 7F12  
                      STR_6 7F7C                        STR_7 7FD5                        STR_8 7FE6  
                      STR_9 7F63                        _CREN 7D5C                        u1100 703C  
                      u1101 7038                        u1110 7058                        u1111 7054  
                      u1120 707E                        u1200 717C                        u1121 707A  
                      u1201 7178                        u1130 6F2E                        u1210 71A4  
                      u1131 6F2A                        u1211 71A0                        u1140 6F48  
                      u1060 6B4E                        u1220 71DA                        u1300 7B6C  
                      u2100 7316                        u1141 6F44                        u1061 6B4A  
                      u1221 71D6                        u1301 7B68                        u2101 7312  
                      u1070 6FDE                        u1150 6F62                        u1230 6C84  
                      u1310 7B7C                        u2110 7334                        u1071 6FDA  
                      u1151 6F5E                        u1231 6C80                        u1311 7B78  
                      u2111 7330                        u1080 6FF8                        u1160 6F80  
                      u1320 7B8C                        u1240 7A52                        u1400 6D24  
                      u2200 70A2                        u2120 7344                        u1081 6FF4  
                      u1161 6F7C                        u1321 7B88                        u1241 7A4E  
                      u1401 6D20                        u2201 709E                        u2121 7340  
                      u1090 701E                        u1170 6F96                        u1330 7BD0  
                      u1250 7A98                        u1410 6BE2                        u2210 70CA  
                      u2130 7358                        u1091 701A                        u1171 6F92  
                      u1331 7BCC                        u1251 7A94                        u1411 6BDE  
                      u2211 70C6                        u2131 7354                        u1180 6FBA  
                      u1340 7BFA                        u1260 7AB4                        u2220 70E6  
                      u1500 6E42                        u2140 736E                        u2300 7740  
                      u1181 6FB6                        u1341 7BF6                        u1261 7AB0  
                      u2221 70E2                        u1501 6E3E                        u2141 736A  
                      u2301 773C                        u1190 716A                        u1350 7C30  
                      u1270 7AFA                        u1430 7580                        u2230 70FA  
                      u1510 6E6A                        u2150 7388                        u2310 776A  
                      u1191 7166                        u1351 7C2C                        u1271 7AF4  
                      u1431 757C                        u2231 70F6                        u1511 6E66  
                      u2151 7384                        u2311 7766                        u1360 7C62  
                      u1280 7AFC                        u1440 75AA                        u2240 7114  
                      u1520 6E7E                        u2160 73A0                        u2320 7798  
                      u1361 7C5E                        u1441 75A6                        u2241 7110  
                      u1521 6E7A                        u2161 739C                        u2321 7794  
                      u1370 7C94                        u1290 7B5C                        u1450 75E0  
                      u2090 6C12                        u1530 6E8E                        u2170 73CC  
                      u2330 77FA                        u2250 76C8                        u1371 7C90  
                      u1291 7B58                        u1451 75DC                        u2091 6C0E  
                      u1531 6E8A                        u2171 73C8                        u2331 77F6  
                      u2251 76C4                        u1700 78A2                        u1380 7CB6  
                      u1460 7622                        u2180 73DC                        u2340 780A  
                      u2260 76EC                        u1701 789E                        u1381 7CB2  
                      u1461 761E                        u2181 73D8                        u2341 7806  
                      u2261 76E8                        u1710 78B6                        u1390 7D0C  
                      u1470 7658                        u2190 7422                        u2270 7700  
                      u2350 6DB4                        u1711 78B2                        u1391 7D08  
                      u1471 7654                        u2191 741E                        u2271 76FC  
                      u2351 6DB0                        u1800 7978                        u1720 78CC  
                      u1640 783A                        u1480 768E                        u2280 7714  
                      u1801 7974                        u1721 78C6                        u1641 7834  
                      u1481 768A                        u2281 7710                        u1810 7988  
                      u1730 78E6                        u1650 783C                        u1490 6EA4  
                      u2290 7724                        u1811 7984                        u1731 78E2  
                      u1491 6EA0                        u2291 7720                        u1820 7998  
                      u1740 7900                        u1660 784E                        u1900 6CB8  
                      u1821 7994                        u1741 78FC                        u1661 7848  
                      u1901 6CB4                        u1830 79AC                        u1750 7910  
                      u1726 78CE                        u1670 7868                        u1910 6CC6  
                      u1831 79A8                        u1751 790C                        u1671 7864  
                      u1911 6CC2                        u1840 79C0                        u1760 7920  
                      u1680 7882                        u1920 6CE0                        u1841 79BA  
                      u1761 791C                        u1681 787E                        u1921 6CDC  
                      u1850 79DA                        u1770 7934                        u1690 7892  
                      u1666 7850                        u1851 79D6                        u1771 7930  
                      u1691 788E                        u1860 79F4                        u1780 7944  
                      u1861 79F0                        u1781 793E                        u1870 7A04  
                      u1846 79C2                        u1790 795E                        u1871 7A00  
                      u1791 795A                        u1880 7A14                        u1881 7A10  
                      u1890 7A28                        u1786 7946                        u1891 7A24  
                      _SPEN 7D5F                        _TRMT 7D61             __end_of_UART_Rx 6B3E  
           __end_of_UART_Tx 6B54                        abs@a 0007                        _dbuf 00C4  
                      _main 6D7C                        _prec 0034                        fsr1h 0FE2  
                      fsr2h 0FDA                        indf1 0FE7                        indf2 0FDF  
                      fsr1l 0FE1                        fsr2l 0FD9                        prodl 0FF3  
                      start 0002                ___param_bank 0000    UART_select_baud@baudrate 0001  
                     ??_abs 0009                  _Clock_Init 781A                       ?_main 0001  
           __end_of___awdiv 7090                       STR_10 7FCC                       STR_11 7F55  
                     STR_20 7FDE                       STR_12 7F36                       STR_13 7F9D  
                     STR_21 7E31                       STR_14 7F55                       STR_22 7E66  
                     STR_30 7DCB                       STR_15 7F36                       STR_23 7E4C  
                     STR_31 7DA5                       STR_16 7F87                       STR_40 7EDA  
                     STR_32 7D4D                       STR_24 7FB1                       STR_17 7F55  
                     STR_33 7FF5                       STR_41 7F00                       STR_25 7FBA  
                     STR_18 7F36                       STR_42 7EC7                       STR_34 7DF0  
                     STR_26 7FC3                       STR_19 7E0F                       STR_35 7FF5  
                     STR_43 7EB0                       STR_27 7E14                       STR_36 7E11  
                     STR_28 7F70                       STR_44 7E80             __end_of___awmod 6FCC  
                     STR_37 7FFA                       STR_45 7E99                       STR_29 7D7F  
                     STR_38 7F47                       STR_39 7EED                       _BRGH1 7D62  
           ___awdiv@divisor 0003                       _RC1IF 7CF5             ___awdiv@counter 0005  
                     _RCREG 0FAE           Clock_Init@bStatus 0003                vfpfcnvrt@fmt 000E  
          _UART_config_show 7566                       _SPBRG 0FAF                       _TXEN1 7D65  
                     _SYNC1 7D64            ?_UART_Rx_FRAMING 0001             __end_of_getWord 7426  
      commandProcess@nWords 002F                       _flags 0036                       _param 0100  
                     _fputc 7158                       _width 0032                       _putch 6B20  
      commandProcess@status 0031                       tablat 0FF5                       status 0FD8  
         _CL_CommandHandler 0000           ??_clearCharInLine 002A             __initialization 6D2E  
        ?_CL_CommandHandler 0001                __end_of_main 6DCC                 countWords@i 0002  
       ??_CL_CommandHandler 0001                      ??_main 0032               __activetblptr 0002  
                 ??_UART_Rx 002D                   ??_UART_Tx 0001                      ?_fputc 0003  
                    _BRG161 7DC3            ___awdiv@dividend 0001                      ?_putch 0001  
                    _ANSELC 0F5D                      _RCREG1 0FAE               vfpfcnvrt@done 0016  
                    _SPBRGH 0FB0                      _TRISC6 7CA6                      _TRISC7 7CA7  
                    _TXREG1 0FAD            __end_of_charStop 7D4D                vfprintf@cfmt 0021  
         __end_of_UART_Init 6C76                   ??___awdiv 0005                   ??___awmod 0005  
               ?_Clock_Init 0001           ??_CL_ErrorHandler 002A                      clear_0 6D54  
                    clear_1 6D60                      clear_2 6D6C            ___awdiv@quotient 0007  
           ___awmod@divisor 0003                      isa$std 0001             ___awmod@counter 0005  
                    _printf 6BA4                   ??_getWord 0003           ?_UART_RxAvailable 0001  
         ?_UART_Rx_OVERFLOW 0001                      fputc@c 0003                __pdataCOMRAM 004A  
        ??_UART_RxAvailable 002D          ??_UART_Rx_OVERFLOW 0001                __mediumconst 7D48  
                    tblptrh 0FF7                      tblptrl 0FF6                      tblptru 0FF8  
          __end_of_vfprintf 6D2E                  __accesstop 0060     __end_of__initialization 6D72  
             ___rparam_used 0001            ??_commandProcess 002A            _UART_select_baud 7426  
            __pcstackCOMRAM 0001               __end_of_fputc 7222           _UART_ErrorHandler 6E92  
             __end_of_putch 6B2A          ?_UART_ErrorHandler 0001         ??_UART_ErrorHandler 002A  
                   ??_fputc 0007                  _cantParams 7D49                     ??_putch 0002  
                __pbssBANK0 0060                  __pbssBANK1 0100               ??_addToBuffer 002D  
                _clearArray 6BE8    __end_of_UART_config_show 76B8         Clock_Init@bItTimeEn 0007  
 __end_of_UART_ErrorHandler 6F1C                     ?_printf 0023                     _UART_Rx 6B2A  
                   _UART_Tx 6B3E             _clearCharInLine 6B6E           __end_of_clearBuff 6BE8  
                _countWords 6E2A                     __Hparam 0000         __end_of_addToBuffer 7158  
                   __Lparam 0000                     ___awdiv 6FCC                     ___awmod 6F1C  
                 ?_vfprintf 001C                     __pcinit 6D2E                     __ramtop 0800  
                   __ptext0 6D7C                     __ptext1 76B8                     __ptext2 72F4  
                   __ptext3 6E2A                     __ptext4 6DCC                     __ptext5 7090  
                   __ptext6 6B6E                     __ptext7 7222                     __ptext8 6C14  
                   __ptext9 6BC2                     _getWord 72F4                     _command 003A  
               UART_Tx@dato 0001            ___awmod@dividend 0001                  clearBuff@i 0001  
      end_of_initialization 6D72                     fputc@fp 0005               __Lmediumconst 7D48  
          vfpfcnvrt@cp_1116 0012             _CL_ErrorHandler 7222       Clock_Init@bStatus_501 0006  
     Clock_Init@bStatus_497 0004       Clock_Init@bStatus_498 0005                 ?_clearArray 0001  
         __end_of_vfpfcnvrt 7D48                   _RCSTAbits 0FAB                     postdec1 0FE5  
                   postdec2 0FDD                     postinc0 0FEE                     postinc1 0FE6  
                   postinc2 0FDE            vfpfcnvrt@convarg 0017                ??_Clock_Init 0003  
                ??_vfprintf 0021                   _UART_Init 6C44            _flagCommandReady 0037  
             clearArray@len 0003     __end_of_clearCharInLine 6B88    __end_of_UART_select_baud 7566  
          _commandLineReset 6C14           ??_commandLineInit 002A                 _addToBuffer 7090  
        __end_of_Clock_Init 7A30                   _TXSTAbits 0FAC                 ?_countWords 0001  
               vfpfcnvrt@ap 000F                 vfpfcnvrt@cp 0014                 vfpfcnvrt@fp 000C  
                ?_UART_Init 002A               __pidataCOMRAM 6B1A              __end_of_printf 6BC2  
       start_initialization 6D2E                 __end_of_abs 6CAA     __end_of_CL_ErrorHandler 72F4  
      Clock_Init@s16Timeout 0001           ?_UART_config_show 0001                 vfprintf@fmt 001E  
         ??_UART_Rx_FRAMING 0001          ??_UART_config_show 002A                    ??_printf 0029  
          ?_clearCharInLine 0001             commandProcess@i 0030                 __pbssCOMRAM 0032  
                  ?_UART_Rx 0001                    ?_UART_Tx 0001          addToBuffer@newchar 002D  
                 _clearBuff 6BC2               __pmediumconst 7D48                    ?___awdiv 0001  
                  ?___awmod 0001                   _buffCount 0039                 ??_UART_Init 002E  
                  ?_getWord 0001                    _BAUDCON1 0FB8            ?_CL_ErrorHandler 0001  
          _UART_RxAvailable 6CAA            _UART_Rx_OVERFLOW 6B88                ??_clearArray 0004  
                ?_clearBuff 0001    __end_of_commandLineReset 6C44                   _vfpfcnvrt 7A30  
       getWord@delimitCount 0014           UART_Init@baudrate 002A          __end_of_cantParams 7D4C  
           _commandLineInit 6DCC          __end_of_clearArray 6C14           ?_UART_select_baud 0001  
                vfpfcnvrt@c 001B                   copy_data0 6D42          ??_UART_select_baud 0005  
              ?_addToBuffer 0001                ??_countWords 0001                    __Hrparam 0000  
                vfprintf@ap 0020                    __Lrparam 0000                  vfprintf@fp 001C  
                ?_vfpfcnvrt 000C          countWords@currChar 0003                    _charBuff 0060  
                  _charStop 7D4C          __end_of_countWords 6E92          countWords@numWords 0001  
                  __ptext10 6BE8                    __ptext11 6CAA                    __ptext20 6CE8  
                  __ptext12 6B2A                    __ptext21 7A30                    __ptext13 6B88  
                  __ptext22 7158                    __ptext14 6B54                    __ptext23 6B20  
                  __ptext15 6E92                    __ptext24 6B3E                    __ptext16 6C44  
                  __ptext25 6C76                    __ptext17 7426                    __ptext26 6F1C  
                  __ptext18 7566                    __ptext27 6FCC                    __ptext19 6BA4  
                  __ptext28 781A                    _comandos 004A             _UART_Rx_FRAMING 6B54  
               _OSCCON2bits 0FD2                 ??_clearBuff 0001     __end_of_commandLineInit 6E2A  
                  isa$xinst 0000                 clearArray@i 0004    CL_ErrorHandler@errorCode 002C  
                  getWord@i 0018                    _vfprintf 6CE8                   printf@fmt 0023  
            _commandProcess 76B8                   putch@data 0002                 _OSCTUNEbits 0F9B  
                _OSCCONbits 0FD3                    printf@ap 0029      __end_of_commandProcess 781A  
               ??_vfpfcnvrt 0010    __end_of_UART_RxAvailable 6CE8    __end_of_UART_Rx_OVERFLOW 6BA4  
           clearArray@array 0001        Clock_Init@returnCode 0008     __end_of_UART_Rx_FRAMING 6B6E  
             getWord@active 0017               getWord@buffId 001A                getWord@pWord 0001  
