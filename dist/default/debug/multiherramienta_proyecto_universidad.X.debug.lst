

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Wed Oct 02 20:02:04 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F45K50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    15                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    17   000000                     
    18                           ; Generated 12/10/2023 GMT
    19                           ; 
    20                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution. Publication is not required when
    34                           ;        this file is used in an embedded application.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC18F45K50 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52   000000                     _RCREG	set	4014
    53   000000                     _TXREG1	set	4013
    54   000000                     _SPBRG	set	4015
    55   000000                     _SPBRGH	set	4016
    56   000000                     _BRG161	set	32195
    57   000000                     _RCREG1	set	4014
    58   000000                     _TXSTAbits	set	4012
    59   000000                     _RCSTAbits	set	4011
    60   000000                     _BAUDCON1	set	4024
    61   000000                     _TXSTA1bits	set	4012
    62   000000                     _TRMT	set	32097
    63   000000                     _TRISC7	set	31911
    64   000000                     _CREN	set	32092
    65   000000                     _TXEN1	set	32101
    66   000000                     _BRGH1	set	32098
    67   000000                     _ANSELC	set	3933
    68   000000                     _LATAbits	set	3977
    69   000000                     _TRISAbits	set	3986
    70   000000                     _PIR1bits	set	3998
    71   000000                     _TRISC6	set	31910
    72   000000                     _SPEN	set	32095
    73   000000                     _SYNC1	set	32100
    74   000000                     _OSCCON2bits	set	4050
    75   000000                     _OSCTUNEbits	set	3995
    76   000000                     _OSCCONbits	set	4051
    77                           
    78                           	psect	smallconst
    79   000800                     __psmallconst:
    80                           	callstack 0
    81   000800  00                 	db	0
    82   000801  62                 	db	98	;'b'
    83   000802  61                 	db	97	;'a'
    84   000803  6A                 	db	106	;'j'
    85   000804  61                 	db	97	;'a'
    86   000805  20                 	db	32
    87   000806  76                 	db	118	;'v'
    88   000807  65                 	db	101	;'e'
    89   000808  6C                 	db	108	;'l'
    90   000809  6F                 	db	111	;'o'
    91   00080A  63                 	db	99	;'c'
    92   00080B  69                 	db	105	;'i'
    93   00080C  64                 	db	100	;'d'
    94   00080D  61                 	db	97	;'a'
    95   00080E  64                 	db	100	;'d'
    96   00080F  20                 	db	32
    97   000810  0D                 	db	13
    98   000811  0A                 	db	10
    99   000812  00                 	db	0
   100   000813  61                 	db	97	;'a'
   101   000814  6C                 	db	108	;'l'
   102   000815  74                 	db	116	;'t'
   103   000816  61                 	db	97	;'a'
   104   000817  20                 	db	32
   105   000818  76                 	db	118	;'v'
   106   000819  65                 	db	101	;'e'
   107   00081A  6C                 	db	108	;'l'
   108   00081B  6F                 	db	111	;'o'
   109   00081C  63                 	db	99	;'c'
   110   00081D  69                 	db	105	;'i'
   111   00081E  64                 	db	100	;'d'
   112   00081F  61                 	db	97	;'a'
   113   000820  64                 	db	100	;'d'
   114   000821  20                 	db	32
   115   000822  0D                 	db	13
   116   000823  0A                 	db	10
   117   000824  00                 	db	0
   118   000825                     STR_12:
   119   000825  44                 	db	68	;'D'
   120   000826  65                 	db	101	;'e'
   121   000827  73                 	db	115	;'s'
   122   000828  68                 	db	104	;'h'
   123   000829  61                 	db	97	;'a'
   124   00082A  62                 	db	98	;'b'
   125   00082B  69                 	db	105	;'i'
   126   00082C  6C                 	db	108	;'l'
   127   00082D  69                 	db	105	;'i'
   128   00082E  74                 	db	116	;'t'
   129   00082F  61                 	db	97	;'a'
   130   000830  64                 	db	100	;'d'
   131   000831  6F                 	db	111	;'o'
   132   000832  20                 	db	32
   133   000833  0D                 	db	13
   134   000834  0A                 	db	10
   135   000835  00                 	db	0
   136   000836                     STR_11:
   137   000836  48                 	db	72	;'H'
   138   000837  61                 	db	97	;'a'
   139   000838  62                 	db	98	;'b'
   140   000839  69                 	db	105	;'i'
   141   00083A  6C                 	db	108	;'l'
   142   00083B  69                 	db	105	;'i'
   143   00083C  74                 	db	116	;'t'
   144   00083D  61                 	db	97	;'a'
   145   00083E  64                 	db	100	;'d'
   146   00083F  6F                 	db	111	;'o'
   147   000840  20                 	db	32
   148   000841  0D                 	db	13
   149   000842  0A                 	db	10
   150   000843  00                 	db	0
   151   000844  78                 	db	120	;'x'
   152   000845  20                 	db	32
   153   000846  62                 	db	98	;'b'
   154   000847  61                 	db	97	;'a'
   155   000848  75                 	db	117	;'u'
   156   000849  64                 	db	100	;'d'
   157   00084A  69                 	db	105	;'i'
   158   00084B  6F                 	db	111	;'o'
   159   00084C  73                 	db	115	;'s'
   160   00084D  20                 	db	32
   161   00084E  0D                 	db	13
   162   00084F  0A                 	db	10
   163   000850  00                 	db	0
   164   000851  42                 	db	66	;'B'
   165   000852  61                 	db	97	;'a'
   166   000853  75                 	db	117	;'u'
   167   000854  64                 	db	100	;'d'
   168   000855  72                 	db	114	;'r'
   169   000856  61                 	db	97	;'a'
   170   000857  74                 	db	116	;'t'
   171   000858  65                 	db	101	;'e'
   172   000859  3A                 	db	58	;':'
   173   00085A  20                 	db	32
   174   00085B  00                 	db	0
   175   00085C  52                 	db	82	;'R'
   176   00085D  65                 	db	101	;'e'
   177   00085E  63                 	db	99	;'c'
   178   00085F  65                 	db	101	;'e'
   179   000860  70                 	db	112	;'p'
   180   000861  74                 	db	116	;'t'
   181   000862  6F                 	db	111	;'o'
   182   000863  72                 	db	114	;'r'
   183   000864  3A                 	db	58	;':'
   184   000865  20                 	db	32
   185   000866  00                 	db	0
   186   000867  41                 	db	65	;'A'
   187   000868  73                 	db	115	;'s'
   188   000869  69                 	db	105	;'i'
   189   00086A  6E                 	db	110	;'n'
   190   00086B  63                 	db	99	;'c'
   191   00086C  72                 	db	114	;'r'
   192   00086D  6F                 	db	111	;'o'
   193   00086E  6E                 	db	110	;'n'
   194   00086F  6F                 	db	111	;'o'
   195   000870  20                 	db	32
   196   000871  00                 	db	0
   197   000872  54                 	db	84	;'T'
   198   000873  72                 	db	114	;'r'
   199   000874  61                 	db	97	;'a'
   200   000875  6E                 	db	110	;'n'
   201   000876  73                 	db	115	;'s'
   202   000877  6F                 	db	111	;'o'
   203   000878  72                 	db	114	;'r'
   204   000879  3A                 	db	58	;':'
   205   00087A  20                 	db	32
   206   00087B  00                 	db	0
   207   00087C  53                 	db	83	;'S'
   208   00087D  69                 	db	105	;'i'
   209   00087E  6E                 	db	110	;'n'
   210   00087F  63                 	db	99	;'c'
   211   000880  72                 	db	114	;'r'
   212   000881  6F                 	db	111	;'o'
   213   000882  6E                 	db	110	;'n'
   214   000883  6F                 	db	111	;'o'
   215   000884  20                 	db	32
   216   000885  00                 	db	0
   217   000886  50                 	db	80	;'P'
   218   000887  75                 	db	117	;'u'
   219   000888  65                 	db	101	;'e'
   220   000889  72                 	db	114	;'r'
   221   00088A  74                 	db	116	;'t'
   222   00088B  6F                 	db	111	;'o'
   223   00088C  3A                 	db	58	;':'
   224   00088D  20                 	db	32
   225   00088E  00                 	db	0
   226   00088F  31                 	db	49	;'1'
   227   000890  36                 	db	54	;'6'
   228   000891  20                 	db	32
   229   000892  62                 	db	98	;'b'
   230   000893  69                 	db	105	;'i'
   231   000894  74                 	db	116	;'t'
   232   000895  73                 	db	115	;'s'
   233   000896  20                 	db	32
   234   000897  00                 	db	0
   235   000898  38                 	db	56	;'8'
   236   000899  20                 	db	32
   237   00089A  62                 	db	98	;'b'
   238   00089B  69                 	db	105	;'i'
   239   00089C  74                 	db	116	;'t'
   240   00089D  73                 	db	115	;'s'
   241   00089E  20                 	db	32
   242   00089F  00                 	db	0
   243   0008A0  4D                 	db	77	;'M'
   244   0008A1  6F                 	db	111	;'o'
   245   0008A2  64                 	db	100	;'d'
   246   0008A3  6F                 	db	111	;'o'
   247   0008A4  3A                 	db	58	;':'
   248   0008A5  20                 	db	32
   249   0008A6  00                 	db	0
   250   0008A7  00                 	db	0	; dummy byte at the end
   251   000000                     
   252                           ; #config settings
   253                           
   254                           	psect	cinit
   255   000C92                     __pcinit:
   256                           	callstack 0
   257   000C92                     start_initialization:
   258                           	callstack 0
   259   000C92                     __initialization:
   260                           	callstack 0
   261                           
   262                           ; Clear objects allocated to COMRAM (1 bytes)
   263   000C92  6A0D               	clrf	__pbssCOMRAM& (0+255),c
   264   000C94                     end_of_initialization:
   265                           	callstack 0
   266   000C94                     __end_of__initialization:
   267                           	callstack 0
   268   000C94  0E00               	movlw	low (__Lmediumconst shr (0+16))
   269   000C96  6EF8               	movwf	tblptru,c
   270   000C98  0100               	movlb	0
   271   000C9A  EFFF  F005         	goto	_main	;jump to C main() function
   272                           
   273                           	psect	bssCOMRAM
   274   00000D                     __pbssCOMRAM:
   275                           	callstack 0
   276   00000D                     _readMessage:
   277                           	callstack 0
   278   00000D                     	ds	1
   279                           
   280                           	psect	cstackCOMRAM
   281   000001                     __pcstackCOMRAM:
   282                           	callstack 0
   283   000001                     Clock_Init@s16Timeout:
   284                           	callstack 0
   285   000001                     UART_select_baud@baudrate:
   286                           	callstack 0
   287                           
   288                           ; 4 bytes @ 0x0
   289   000001                     	ds	2
   290   000003                     Clock_Init@bStatus:
   291                           	callstack 0
   292                           
   293                           ; 1 bytes @ 0x2
   294   000003                     	ds	1
   295   000004                     Clock_Init@bStatus_588:
   296                           	callstack 0
   297                           
   298                           ; 1 bytes @ 0x3
   299   000004                     	ds	1
   300   000005                     ??_UART_select_baud:
   301   000005                     Clock_Init@bStatus_589:
   302                           	callstack 0
   303                           
   304                           ; 1 bytes @ 0x4
   305   000005                     	ds	1
   306   000006                     Clock_Init@bStatus_592:
   307                           	callstack 0
   308                           
   309                           ; 1 bytes @ 0x5
   310   000006                     	ds	1
   311   000007                     Clock_Init@bItTimeEn:
   312                           	callstack 0
   313                           
   314                           ; 1 bytes @ 0x6
   315   000007                     	ds	1
   316   000008                     Clock_Init@returnCode:
   317                           	callstack 0
   318                           
   319                           ; 1 bytes @ 0x7
   320   000008                     	ds	1
   321   000009                     UART_Init@baudrate:
   322                           	callstack 0
   323                           
   324                           ; 4 bytes @ 0x8
   325   000009                     	ds	4
   326   00000D                     
   327                           ; 1 bytes @ 0xC
   328 ;;
   329 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   330 ;;
   331 ;; *************** function _main *****************
   332 ;; Defined at:
   333 ;;		line 20 in file "src/main.c"
   334 ;; Parameters:    Size  Location     Type
   335 ;;		None
   336 ;; Auto vars:     Size  Location     Type
   337 ;;		None
   338 ;; Return value:  Size  Location     Type
   339 ;;                  2   18[None  ] int 
   340 ;; Registers used:
   341 ;;		wreg, status,2, status,0, cstack
   342 ;; Tracked objects:
   343 ;;		On entry : 0/0
   344 ;;		On exit  : 0/0
   345 ;;		Unchanged: 0/0
   346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK5   BANK6   BANK7   BANK3   BANK4
   347 ;;      Params:         0       0       0       0       0       0       0       0       0
   348 ;;      Locals:         0       0       0       0       0       0       0       0       0
   349 ;;      Temps:          0       0       0       0       0       0       0       0       0
   350 ;;      Totals:         0       0       0       0       0       0       0       0       0
   351 ;;Total ram usage:        0 bytes
   352 ;; Hardware stack levels required when called: 2
   353 ;; This function calls:
   354 ;;		_Clock_Init
   355 ;;		_UART_Init
   356 ;;		_UART_Rx
   357 ;; This function is called by:
   358 ;;		Startup code after reset
   359 ;; This function uses a non-reentrant model
   360 ;;
   361                           
   362                           	psect	text0
   363   000BFE                     __ptext0:
   364                           	callstack 0
   365   000BFE                     _main:
   366                           	callstack 29
   367   000BFE                     
   368                           ;src/main.c: 22:     Clock_Init(16000);
   369   000BFE  0E3E               	movlw	62
   370   000C00  6E02               	movwf	(Clock_Init@s16Timeout+1)^0,c
   371   000C02  0E80               	movlw	128
   372   000C04  6E01               	movwf	Clock_Init@s16Timeout^0,c
   373   000C06  EC54  F004         	call	_Clock_Init	;wreg free
   374                           
   375                           ;src/main.c: 23:     UART_Init(9600);
   376   000C0A  0E80               	movlw	128
   377   000C0C  6E09               	movwf	UART_Init@baudrate^0,c
   378   000C0E  0E25               	movlw	37
   379   000C10  6E0A               	movwf	(UART_Init@baudrate+1)^0,c
   380   000C12  0E00               	movlw	0
   381   000C14  6E0B               	movwf	(UART_Init@baudrate+2)^0,c
   382   000C16  0E00               	movlw	0
   383   000C18  6E0C               	movwf	(UART_Init@baudrate+3)^0,c
   384   000C1A  EC32  F006         	call	_UART_Init	;wreg free
   385   000C1E                     
   386                           ;src/main.c: 25:     TRISAbits.RA1 = 0;
   387   000C1E  9292               	bcf	146,1,c	;volatile
   388   000C20                     l1427:
   389                           
   390                           ;src/main.c: 28:     {;src/main.c: 29:         if(PIR1bits.RC1IF){
   391   000C20  AA9E               	btfss	158,5,c	;volatile
   392   000C22  EF15  F006         	goto	u651
   393   000C26  EF17  F006         	goto	u650
   394   000C2A                     u651:
   395   000C2A  EF10  F006         	goto	l1427
   396   000C2E                     u650:
   397   000C2E                     
   398                           ;src/main.c: 30:             readMessage = UART_Rx();
   399   000C2E  EC4F  F006         	call	_UART_Rx	;wreg free
   400   000C32  6E0D               	movwf	_readMessage^0,c
   401   000C34                     
   402                           ;src/main.c: 31:             if(readMessage == '1') do { LATAbits.LATA1 = 1; } while(0);
   403   000C34  0E31               	movlw	49
   404   000C36  180D               	xorwf	_readMessage^0,w,c
   405   000C38  A4D8               	btfss	status,2,c
   406   000C3A  EF21  F006         	goto	u661
   407   000C3E  EF23  F006         	goto	u660
   408   000C42                     u661:
   409   000C42  EF24  F006         	goto	l1433
   410   000C46                     u660:
   411   000C46  8289               	bsf	137,1,c	;volatile
   412   000C48                     l1433:
   413                           
   414                           ;src/main.c: 32:             if(readMessage == '0') do { LATAbits.LATA1 = 0; } while(0);
   415   000C48  0E30               	movlw	48
   416   000C4A  180D               	xorwf	_readMessage^0,w,c
   417   000C4C  A4D8               	btfss	status,2,c
   418   000C4E  EF2B  F006         	goto	u671
   419   000C52  EF2D  F006         	goto	u670
   420   000C56                     u671:
   421   000C56  EF10  F006         	goto	l1427
   422   000C5A                     u670:
   423   000C5A  9289               	bcf	137,1,c	;volatile
   424   000C5C  EF10  F006         	goto	l1427
   425   000C60  EF01  F000         	goto	start
   426   000C64                     __end_of_main:
   427                           	callstack 0
   428                           
   429 ;; *************** function _UART_Rx *****************
   430 ;; Defined at:
   431 ;;		line 98 in file "src/librerias/UART.c"
   432 ;; Parameters:    Size  Location     Type
   433 ;;		None
   434 ;; Auto vars:     Size  Location     Type
   435 ;;		None
   436 ;; Return value:  Size  Location     Type
   437 ;;                  1    wreg      unsigned char 
   438 ;; Registers used:
   439 ;;		wreg, status,2
   440 ;; Tracked objects:
   441 ;;		On entry : 0/0
   442 ;;		On exit  : 0/0
   443 ;;		Unchanged: 0/0
   444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK5   BANK6   BANK7   BANK3   BANK4
   445 ;;      Params:         0       0       0       0       0       0       0       0       0
   446 ;;      Locals:         0       0       0       0       0       0       0       0       0
   447 ;;      Temps:          0       0       0       0       0       0       0       0       0
   448 ;;      Totals:         0       0       0       0       0       0       0       0       0
   449 ;;Total ram usage:        0 bytes
   450 ;; Hardware stack levels used: 1
   451 ;; This function calls:
   452 ;;		Nothing
   453 ;; This function is called by:
   454 ;;		_main
   455 ;; This function uses a non-reentrant model
   456 ;;
   457                           
   458                           	psect	text1
   459   000C9E                     __ptext1:
   460                           	callstack 0
   461   000C9E                     _UART_Rx:
   462                           	callstack 30
   463   000C9E                     
   464                           ;src/librerias/UART.c: 101:     return RCREG1;
   465   000C9E  50AE               	movf	174,w,c	;volatile
   466   000CA0  0012               	return		;funcret
   467   000CA2                     __end_of_UART_Rx:
   468                           	callstack 0
   469                           
   470 ;; *************** function _UART_Init *****************
   471 ;; Defined at:
   472 ;;		line 20 in file "src/librerias/UART.c"
   473 ;; Parameters:    Size  Location     Type
   474 ;;  baudrate        4    8[COMRAM] unsigned long 
   475 ;; Auto vars:     Size  Location     Type
   476 ;;		None
   477 ;; Return value:  Size  Location     Type
   478 ;;                  1    wreg      void 
   479 ;; Registers used:
   480 ;;		wreg, status,2, status,0, cstack
   481 ;; Tracked objects:
   482 ;;		On entry : 0/0
   483 ;;		On exit  : 0/0
   484 ;;		Unchanged: 0/0
   485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK5   BANK6   BANK7   BANK3   BANK4
   486 ;;      Params:         4       0       0       0       0       0       0       0       0
   487 ;;      Locals:         0       0       0       0       0       0       0       0       0
   488 ;;      Temps:          0       0       0       0       0       0       0       0       0
   489 ;;      Totals:         4       0       0       0       0       0       0       0       0
   490 ;;Total ram usage:        4 bytes
   491 ;; Hardware stack levels used: 1
   492 ;; Hardware stack levels required when called: 1
   493 ;; This function calls:
   494 ;;		_UART_select_baud
   495 ;; This function is called by:
   496 ;;		_main
   497 ;; This function uses a non-reentrant model
   498 ;;
   499                           
   500                           	psect	text2
   501   000C64                     __ptext2:
   502                           	callstack 0
   503   000C64                     _UART_Init:
   504                           	callstack 29
   505   000C64                     
   506                           ;src/librerias/UART.c: 21:     TXSTA1bits.SYNC1 = 0;
   507   000C64  98AC               	bcf	172,4,c	;volatile
   508                           
   509                           ;src/librerias/UART.c: 22:     TXSTA1bits.BRGH1 = 1;
   510   000C66  84AC               	bsf	172,2,c	;volatile
   511   000C68                     
   512                           ;src/librerias/UART.c: 23:     BAUDCON1 = 0x4A;
   513   000C68  0E4A               	movlw	74
   514   000C6A  6EB8               	movwf	184,c	;volatile
   515   000C6C                     
   516                           ;src/librerias/UART.c: 24:     UART_select_baud(baudrate);
   517   000C6C  C009  F001         	movff	UART_Init@baudrate,UART_select_baud@baudrate
   518   000C70  C00A  F002         	movff	UART_Init@baudrate+1,UART_select_baud@baudrate+1
   519   000C74  C00B  F003         	movff	UART_Init@baudrate+2,UART_select_baud@baudrate+2
   520   000C78  C00C  F004         	movff	UART_Init@baudrate+3,UART_select_baud@baudrate+3
   521   000C7C  EC5F  F005         	call	_UART_select_baud	;wreg free
   522   000C80                     
   523                           ;src/librerias/UART.c: 25:     TRISC6 = 1;
   524   000C80  8C94               	bsf	3988,6,c	;volatile
   525   000C82                     
   526                           ;src/librerias/UART.c: 26:     TRISC7 = 1;
   527   000C82  8E94               	bsf	3988,7,c	;volatile
   528   000C84                     
   529                           ;src/librerias/UART.c: 27:     RCSTAbits.SPEN = 1;
   530   000C84  8EAB               	bsf	171,7,c	;volatile
   531   000C86                     
   532                           ;src/librerias/UART.c: 28:     TXSTAbits.TXEN1 = 1;
   533   000C86  8AAC               	bsf	172,5,c	;volatile
   534   000C88                     
   535                           ;src/librerias/UART.c: 29:     RCSTAbits.CREN = 1;
   536   000C88  88AB               	bsf	171,4,c	;volatile
   537   000C8A                     
   538                           ;src/librerias/UART.c: 30:     ANSELC = 0x0;
   539   000C8A  0E00               	movlw	0
   540   000C8C  010F               	movlb	15	; () banked
   541   000C8E  6F5D               	movwf	93,b	;volatile
   542   000C90                     
   543                           ; BSR set to: 15
   544   000C90  0012               	return		;funcret
   545   000C92                     __end_of_UART_Init:
   546                           	callstack 0
   547                           
   548 ;; *************** function _UART_select_baud *****************
   549 ;; Defined at:
   550 ;;		line 35 in file "src/librerias/UART.c"
   551 ;; Parameters:    Size  Location     Type
   552 ;;  baudrate        4    0[COMRAM] unsigned long 
   553 ;; Auto vars:     Size  Location     Type
   554 ;;		None
   555 ;; Return value:  Size  Location     Type
   556 ;;                  1    wreg      void 
   557 ;; Registers used:
   558 ;;		wreg, status,2, status,0
   559 ;; Tracked objects:
   560 ;;		On entry : 0/0
   561 ;;		On exit  : 0/0
   562 ;;		Unchanged: 0/0
   563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK5   BANK6   BANK7   BANK3   BANK4
   564 ;;      Params:         4       0       0       0       0       0       0       0       0
   565 ;;      Locals:         0       0       0       0       0       0       0       0       0
   566 ;;      Temps:          4       0       0       0       0       0       0       0       0
   567 ;;      Totals:         8       0       0       0       0       0       0       0       0
   568 ;;Total ram usage:        8 bytes
   569 ;; Hardware stack levels used: 1
   570 ;; This function calls:
   571 ;;		Nothing
   572 ;; This function is called by:
   573 ;;		_UART_Init
   574 ;; This function uses a non-reentrant model
   575 ;;
   576                           
   577                           	psect	text3
   578   000ABE                     __ptext3:
   579                           	callstack 0
   580   000ABE                     _UART_select_baud:
   581                           	callstack 29
   582   000ABE                     
   583                           ;src/librerias/UART.c: 36:     switch (baudrate){
   584   000ABE  EF91  F005         	goto	l1291
   585   000AC2                     l1273:
   586                           
   587                           ;src/librerias/UART.c: 38:             SPBRGH = 0x9C;
   588   000AC2  0E9C               	movlw	156
   589   000AC4  6EB0               	movwf	176,c	;volatile
   590                           
   591                           ;src/librerias/UART.c: 39:             SPBRG = 0x3F;
   592   000AC6  0E3F               	movlw	63
   593   000AC8  6EAF               	movwf	175,c	;volatile
   594                           
   595                           ;src/librerias/UART.c: 40:             break;
   596   000ACA  EFFE  F005         	goto	l114
   597   000ACE                     l1275:
   598                           
   599                           ;src/librerias/UART.c: 42:             SPBRGH = 0x27;
   600   000ACE  0E27               	movlw	39
   601   000AD0  6EB0               	movwf	176,c	;volatile
   602                           
   603                           ;src/librerias/UART.c: 43:             SPBRG = 0x0F;
   604   000AD2  0E0F               	movlw	15
   605   000AD4  6EAF               	movwf	175,c	;volatile
   606                           
   607                           ;src/librerias/UART.c: 44:             break;
   608   000AD6  EFFE  F005         	goto	l114
   609   000ADA                     l1277:
   610                           
   611                           ;src/librerias/UART.c: 46:             SPBRGH = 0x13;
   612   000ADA  0E13               	movlw	19
   613   000ADC  6EB0               	movwf	176,c	;volatile
   614                           
   615                           ;src/librerias/UART.c: 47:             SPBRG = 0x87;
   616   000ADE  0E87               	movlw	135
   617   000AE0  6EAF               	movwf	175,c	;volatile
   618                           
   619                           ;src/librerias/UART.c: 48:             break;
   620   000AE2  EFFE  F005         	goto	l114
   621   000AE6                     l1279:
   622                           
   623                           ;src/librerias/UART.c: 50:             SPBRGH = 0x04;
   624   000AE6  0E04               	movlw	4
   625   000AE8  6EB0               	movwf	176,c	;volatile
   626                           
   627                           ;src/librerias/UART.c: 51:             SPBRG = 0x7F;
   628   000AEA  0E7F               	movlw	127
   629   000AEC  6EAF               	movwf	175,c	;volatile
   630                           
   631                           ;src/librerias/UART.c: 52:             break;
   632   000AEE  EFFE  F005         	goto	l114
   633   000AF2                     l1281:
   634                           
   635                           ;src/librerias/UART.c: 54:             SPBRGH = 0x02;
   636   000AF2  0E02               	movlw	2
   637   000AF4  6EB0               	movwf	176,c	;volatile
   638                           
   639                           ;src/librerias/UART.c: 55:             SPBRG = 0x70;
   640   000AF6  0E70               	movlw	112
   641   000AF8  6EAF               	movwf	175,c	;volatile
   642                           
   643                           ;src/librerias/UART.c: 56:             break;
   644   000AFA  EFFE  F005         	goto	l114
   645   000AFE                     l1283:
   646                           
   647                           ;src/librerias/UART.c: 58:             SPBRGH = 0x00;
   648   000AFE  0E00               	movlw	0
   649   000B00  6EB0               	movwf	176,c	;volatile
   650                           
   651                           ;src/librerias/UART.c: 59:             SPBRG = 0xCF;
   652   000B02  0ECF               	movlw	207
   653   000B04  6EAF               	movwf	175,c	;volatile
   654                           
   655                           ;src/librerias/UART.c: 60:             break;
   656   000B06  EFFE  F005         	goto	l114
   657   000B0A                     l1285:
   658                           
   659                           ;src/librerias/UART.c: 62:             SPBRGH = 0x00;
   660   000B0A  0E00               	movlw	0
   661   000B0C  6EB0               	movwf	176,c	;volatile
   662                           
   663                           ;src/librerias/UART.c: 63:             SPBRG = 0x67;
   664   000B0E  0E67               	movlw	103
   665   000B10  6EAF               	movwf	175,c	;volatile
   666                           
   667                           ;src/librerias/UART.c: 64:             break;
   668   000B12  EFFE  F005         	goto	l114
   669   000B16                     l1287:
   670                           
   671                           ;src/librerias/UART.c: 66:             SPBRGH = 0x04;
   672   000B16  0E04               	movlw	4
   673   000B18  6EB0               	movwf	176,c	;volatile
   674                           
   675                           ;src/librerias/UART.c: 67:             SPBRG = 0xE1;
   676   000B1A  0EE1               	movlw	225
   677   000B1C  6EAF               	movwf	175,c	;volatile
   678                           
   679                           ;src/librerias/UART.c: 68:             break;
   680   000B1E  EFFE  F005         	goto	l114
   681   000B22                     l1291:
   682   000B22  C001  F005         	movff	UART_select_baud@baudrate,??_UART_select_baud
   683   000B26  C002  F006         	movff	UART_select_baud@baudrate+1,??_UART_select_baud+1
   684   000B2A  C003  F007         	movff	UART_select_baud@baudrate+2,??_UART_select_baud+2
   685   000B2E  C004  F008         	movff	UART_select_baud@baudrate+3,??_UART_select_baud+3
   686                           
   687                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 3 sub-sw
      +                          itches
   688                           ; Switch size 1, requested type "simple"
   689                           ; Number of cases is 1, Range of values is 0 to 0
   690                           ; switch strategies available:
   691                           ; Name         Instructions Cycles
   692                           ; simple_byte            4     3 (average)
   693                           ;	Chosen strategy is simple_byte
   694   000B32  5008               	movf	(??_UART_select_baud+3)^0,w,c
   695   000B34  0A00               	xorlw	0	; case 0
   696   000B36  B4D8               	btfsc	status,2,c
   697   000B38  EFF3  F005         	goto	l1639
   698   000B3C  EF8B  F005         	goto	l1287
   699   000B40                     l1635:
   700                           
   701                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 6 sub-sw
      +                          itches
   702                           ; Switch size 1, requested type "simple"
   703                           ; Number of cases is 6, Range of values is 1 to 225
   704                           ; switch strategies available:
   705                           ; Name         Instructions Cycles
   706                           ; simple_byte           19    10 (average)
   707                           ;	Chosen strategy is simple_byte
   708   000B40  5006               	movf	(??_UART_select_baud+1)^0,w,c
   709   000B42  0A01               	xorlw	1	; case 1
   710   000B44  B4D8               	btfsc	status,2,c
   711   000B46  EFBB  F005         	goto	l1641
   712   000B4A  0A05               	xorlw	5	; case 4
   713   000B4C  B4D8               	btfsc	status,2,c
   714   000B4E  EFC2  F005         	goto	l1643
   715   000B52  0A0D               	xorlw	13	; case 9
   716   000B54  B4D8               	btfsc	status,2,c
   717   000B56  EFC9  F005         	goto	l1645
   718   000B5A  0A21               	xorlw	33	; case 40
   719   000B5C  B4D8               	btfsc	status,2,c
   720   000B5E  EFD0  F005         	goto	l1647
   721   000B62  0A63               	xorlw	99	; case 75
   722   000B64  B4D8               	btfsc	status,2,c
   723   000B66  EFD7  F005         	goto	l1649
   724   000B6A  0AAA               	xorlw	170	; case 225
   725   000B6C  B4D8               	btfsc	status,2,c
   726   000B6E  EFDE  F005         	goto	l1651
   727   000B72  EF8B  F005         	goto	l1287
   728   000B76                     l1641:
   729                           
   730                           ; Switch size 1, requested type "simple"
   731                           ; Number of cases is 1, Range of values is 44 to 44
   732                           ; switch strategies available:
   733                           ; Name         Instructions Cycles
   734                           ; simple_byte            4     3 (average)
   735                           ;	Chosen strategy is simple_byte
   736   000B76  5005               	movf	??_UART_select_baud^0,w,c
   737   000B78  0A2C               	xorlw	44	; case 44
   738   000B7A  B4D8               	btfsc	status,2,c
   739   000B7C  EF61  F005         	goto	l1273
   740   000B80  EF8B  F005         	goto	l1287
   741   000B84                     l1643:
   742                           
   743                           ; Switch size 1, requested type "simple"
   744                           ; Number of cases is 1, Range of values is 176 to 176
   745                           ; switch strategies available:
   746                           ; Name         Instructions Cycles
   747                           ; simple_byte            4     3 (average)
   748                           ;	Chosen strategy is simple_byte
   749   000B84  5005               	movf	??_UART_select_baud^0,w,c
   750   000B86  0AB0               	xorlw	176	; case 176
   751   000B88  B4D8               	btfsc	status,2,c
   752   000B8A  EF67  F005         	goto	l1275
   753   000B8E  EF8B  F005         	goto	l1287
   754   000B92                     l1645:
   755                           
   756                           ; Switch size 1, requested type "simple"
   757                           ; Number of cases is 1, Range of values is 96 to 96
   758                           ; switch strategies available:
   759                           ; Name         Instructions Cycles
   760                           ; simple_byte            4     3 (average)
   761                           ;	Chosen strategy is simple_byte
   762   000B92  5005               	movf	??_UART_select_baud^0,w,c
   763   000B94  0A60               	xorlw	96	; case 96
   764   000B96  B4D8               	btfsc	status,2,c
   765   000B98  EF6D  F005         	goto	l1277
   766   000B9C  EF8B  F005         	goto	l1287
   767   000BA0                     l1647:
   768                           
   769                           ; Switch size 1, requested type "simple"
   770                           ; Number of cases is 1, Range of values is 177 to 177
   771                           ; switch strategies available:
   772                           ; Name         Instructions Cycles
   773                           ; simple_byte            4     3 (average)
   774                           ;	Chosen strategy is simple_byte
   775   000BA0  5005               	movf	??_UART_select_baud^0,w,c
   776   000BA2  0AB1               	xorlw	177	; case 177
   777   000BA4  B4D8               	btfsc	status,2,c
   778   000BA6  EF73  F005         	goto	l1279
   779   000BAA  EF8B  F005         	goto	l1287
   780   000BAE                     l1649:
   781                           
   782                           ; Switch size 1, requested type "simple"
   783                           ; Number of cases is 1, Range of values is 0 to 0
   784                           ; switch strategies available:
   785                           ; Name         Instructions Cycles
   786                           ; simple_byte            4     3 (average)
   787                           ;	Chosen strategy is simple_byte
   788   000BAE  5005               	movf	??_UART_select_baud^0,w,c
   789   000BB0  0A00               	xorlw	0	; case 0
   790   000BB2  B4D8               	btfsc	status,2,c
   791   000BB4  EF79  F005         	goto	l1281
   792   000BB8  EF8B  F005         	goto	l1287
   793   000BBC                     l1651:
   794                           
   795                           ; Switch size 1, requested type "simple"
   796                           ; Number of cases is 1, Range of values is 0 to 0
   797                           ; switch strategies available:
   798                           ; Name         Instructions Cycles
   799                           ; simple_byte            4     3 (average)
   800                           ;	Chosen strategy is simple_byte
   801   000BBC  5005               	movf	??_UART_select_baud^0,w,c
   802   000BBE  0A00               	xorlw	0	; case 0
   803   000BC0  B4D8               	btfsc	status,2,c
   804   000BC2  EF7F  F005         	goto	l1283
   805   000BC6  EF8B  F005         	goto	l1287
   806   000BCA                     l1637:
   807                           
   808                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   809                           ; Switch size 1, requested type "simple"
   810                           ; Number of cases is 1, Range of values is 194 to 194
   811                           ; switch strategies available:
   812                           ; Name         Instructions Cycles
   813                           ; simple_byte            4     3 (average)
   814                           ;	Chosen strategy is simple_byte
   815   000BCA  5006               	movf	(??_UART_select_baud+1)^0,w,c
   816   000BCC  0AC2               	xorlw	194	; case 194
   817   000BCE  B4D8               	btfsc	status,2,c
   818   000BD0  EFEC  F005         	goto	l1653
   819   000BD4  EF8B  F005         	goto	l1287
   820   000BD8                     l1653:
   821                           
   822                           ; Switch size 1, requested type "simple"
   823                           ; Number of cases is 1, Range of values is 0 to 0
   824                           ; switch strategies available:
   825                           ; Name         Instructions Cycles
   826                           ; simple_byte            4     3 (average)
   827                           ;	Chosen strategy is simple_byte
   828   000BD8  5005               	movf	??_UART_select_baud^0,w,c
   829   000BDA  0A00               	xorlw	0	; case 0
   830   000BDC  B4D8               	btfsc	status,2,c
   831   000BDE  EF85  F005         	goto	l1285
   832   000BE2  EF8B  F005         	goto	l1287
   833   000BE6                     l1639:
   834                           
   835                           ; Switch size 1, requested type "simple"
   836                           ; Number of cases is 2, Range of values is 0 to 1
   837                           ; switch strategies available:
   838                           ; Name         Instructions Cycles
   839                           ; simple_byte            7     4 (average)
   840                           ;	Chosen strategy is simple_byte
   841   000BE6  5007               	movf	(??_UART_select_baud+2)^0,w,c
   842   000BE8  0A00               	xorlw	0	; case 0
   843   000BEA  B4D8               	btfsc	status,2,c
   844   000BEC  EFA0  F005         	goto	l1635
   845   000BF0  0A01               	xorlw	1	; case 1
   846   000BF2  B4D8               	btfsc	status,2,c
   847   000BF4  EFE5  F005         	goto	l1637
   848   000BF8  EF8B  F005         	goto	l1287
   849   000BFC                     l114:
   850   000BFC  0012               	return		;funcret
   851   000BFE                     __end_of_UART_select_baud:
   852                           	callstack 0
   853                           
   854 ;; *************** function _Clock_Init *****************
   855 ;; Defined at:
   856 ;;		line 3 in file "src/librerias/clock.c"
   857 ;; Parameters:    Size  Location     Type
   858 ;;  s16Timeout      2    0[COMRAM] short 
   859 ;; Auto vars:     Size  Location     Type
   860 ;;  bStatus         1    5[COMRAM] _Bool 
   861 ;;  bStatus         1    4[COMRAM] _Bool 
   862 ;;  bStatus         1    3[COMRAM] _Bool 
   863 ;;  bStatus         1    2[COMRAM] _Bool 
   864 ;;  returnCode      1    7[COMRAM] enum E5188
   865 ;;  bItTimeEn       1    6[COMRAM] _Bool 
   866 ;; Return value:  Size  Location     Type
   867 ;;                  1    wreg      enum E5188
   868 ;; Registers used:
   869 ;;		wreg, status,2, status,0
   870 ;; Tracked objects:
   871 ;;		On entry : 0/0
   872 ;;		On exit  : 0/0
   873 ;;		Unchanged: 0/0
   874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK5   BANK6   BANK7   BANK3   BANK4
   875 ;;      Params:         2       0       0       0       0       0       0       0       0
   876 ;;      Locals:         6       0       0       0       0       0       0       0       0
   877 ;;      Temps:          0       0       0       0       0       0       0       0       0
   878 ;;      Totals:         8       0       0       0       0       0       0       0       0
   879 ;;Total ram usage:        8 bytes
   880 ;; Hardware stack levels used: 1
   881 ;; This function calls:
   882 ;;		Nothing
   883 ;; This function is called by:
   884 ;;		_main
   885 ;; This function uses a non-reentrant model
   886 ;;
   887                           
   888                           	psect	text4
   889   0008A8                     __ptext4:
   890                           	callstack 0
   891   0008A8                     _Clock_Init:
   892                           	callstack 30
   893   0008A8                     
   894                           ;src/librerias/clock.c: 4:     CLK_ERROR_CODE returnCode = ERROR_CODE_OK;
   895   0008A8  0E00               	movlw	0
   896   0008AA  6E08               	movwf	Clock_Init@returnCode^0,c
   897   0008AC                     
   898                           ;src/librerias/clock.c: 5:     _Bool bItTimeEn = (0 >= s16Timeout) ? 0 : 1;
   899   0008AC  BE02               	btfsc	(Clock_Init@s16Timeout+1)^0,7,c
   900   0008AE  EF64  F004         	goto	u390
   901   0008B2  5002               	movf	(Clock_Init@s16Timeout+1)^0,w,c
   902   0008B4  E106               	bnz	u391
   903   0008B6  0401               	decf	Clock_Init@s16Timeout^0,w,c
   904   0008B8  B0D8               	btfsc	status,0,c
   905   0008BA  EF61  F004         	goto	u391
   906   0008BE  EF64  F004         	goto	u390
   907   0008C2                     u391:
   908   0008C2  0E01               	movlw	1
   909   0008C4  EF65  F004         	goto	u400
   910   0008C8                     u390:
   911   0008C8  0E00               	movlw	0
   912   0008CA                     u400:
   913   0008CA  6E07               	movwf	Clock_Init@bItTimeEn^0,c
   914   0008CC                     l144:
   915                           
   916                           ;src/librerias/clock.c: 10:             bStatus = OSCCON2bits.HFIOFR;
   917   0008CC  B2D2               	btfsc	210,1,c	;volatile
   918   0008CE  EF6B  F004         	goto	u411
   919   0008D2  EF6E  F004         	goto	u410
   920   0008D6                     u411:
   921   0008D6  0E01               	movlw	1
   922   0008D8  EF6F  F004         	goto	u416
   923   0008DC                     u410:
   924   0008DC  0E00               	movlw	0
   925   0008DE                     u416:
   926   0008DE  6E03               	movwf	Clock_Init@bStatus^0,c
   927   0008E0                     
   928                           ;src/librerias/clock.c: 11:             s16Timeout--;
   929   0008E0  0601               	decf	Clock_Init@s16Timeout^0,f,c
   930   0008E2  A0D8               	btfss	status,0,c
   931   0008E4  0602               	decf	(Clock_Init@s16Timeout+1)^0,f,c
   932   0008E6                     
   933                           ;src/librerias/clock.c: 12:         }while((0 == bStatus) && ((0 < s16Timeout) || (0 == 
      +                          bItTimeEn)));
   934   0008E6  5003               	movf	Clock_Init@bStatus^0,w,c
   935   0008E8  A4D8               	btfss	status,2,c
   936   0008EA  EF79  F004         	goto	u421
   937   0008EE  EF7B  F004         	goto	u420
   938   0008F2                     u421:
   939   0008F2  EF90  F004         	goto	l1349
   940   0008F6                     u420:
   941   0008F6  BE02               	btfsc	(Clock_Init@s16Timeout+1)^0,7,c
   942   0008F8  EF88  F004         	goto	u430
   943   0008FC  5002               	movf	(Clock_Init@s16Timeout+1)^0,w,c
   944   0008FE  E106               	bnz	u431
   945   000900  0401               	decf	Clock_Init@s16Timeout^0,w,c
   946   000902  B0D8               	btfsc	status,0,c
   947   000904  EF86  F004         	goto	u431
   948   000908  EF88  F004         	goto	u430
   949   00090C                     u431:
   950   00090C  EF66  F004         	goto	l144
   951   000910                     u430:
   952   000910  5007               	movf	Clock_Init@bItTimeEn^0,w,c
   953   000912  B4D8               	btfsc	status,2,c
   954   000914  EF8E  F004         	goto	u441
   955   000918  EF90  F004         	goto	u440
   956   00091C                     u441:
   957   00091C  EF66  F004         	goto	l144
   958   000920                     u440:
   959   000920                     l1349:
   960                           
   961                           ;src/librerias/clock.c: 13:         if (0 == bStatus){
   962   000920  5003               	movf	Clock_Init@bStatus^0,w,c
   963   000922  A4D8               	btfss	status,2,c
   964   000924  EF96  F004         	goto	u451
   965   000928  EF98  F004         	goto	u450
   966   00092C                     u451:
   967   00092C  EF9A  F004         	goto	l143
   968   000930                     u450:
   969   000930                     
   970                           ;src/librerias/clock.c: 14:             returnCode = ERROR_CODE_TIMEOUT;
   971   000930  0E01               	movlw	1
   972   000932  6E08               	movwf	Clock_Init@returnCode^0,c
   973   000934                     l143:
   974                           
   975                           ;src/librerias/clock.c: 18:     if(ERROR_CODE_OK == returnCode){
   976   000934  5008               	movf	Clock_Init@returnCode^0,w,c
   977   000936  A4D8               	btfss	status,2,c
   978   000938  EFA0  F004         	goto	u461
   979   00093C  EFA2  F004         	goto	u460
   980   000940                     u461:
   981   000940  EFD9  F004         	goto	l149
   982   000944                     u460:
   983   000944                     
   984                           ;src/librerias/clock.c: 19:         OSCCON2bits.INTSRC = 1;
   985   000944  8AD2               	bsf	210,5,c	;volatile
   986   000946                     
   987                           ;src/librerias/clock.c: 20:         OSCCONbits.IRCF = 7;
   988   000946  0E70               	movlw	112
   989   000948  12D3               	iorwf	211,f,c	;volatile
   990   00094A                     l150:
   991                           
   992                           ;src/librerias/clock.c: 24:             bStatus = OSCCONbits.HFIOFS;
   993   00094A  B4D3               	btfsc	211,2,c	;volatile
   994   00094C  EFAA  F004         	goto	u471
   995   000950  EFAD  F004         	goto	u470
   996   000954                     u471:
   997   000954  0E01               	movlw	1
   998   000956  EFAE  F004         	goto	u476
   999   00095A                     u470:
  1000   00095A  0E00               	movlw	0
  1001   00095C                     u476:
  1002   00095C  6E04               	movwf	Clock_Init@bStatus_588^0,c
  1003   00095E                     
  1004                           ;src/librerias/clock.c: 25:             s16Timeout--;
  1005   00095E  0601               	decf	Clock_Init@s16Timeout^0,f,c
  1006   000960  A0D8               	btfss	status,0,c
  1007   000962  0602               	decf	(Clock_Init@s16Timeout+1)^0,f,c
  1008   000964                     
  1009                           ;src/librerias/clock.c: 26:         }while((0 == bStatus) && ((0 < s16Timeout) || (0 == 
      +                          bItTimeEn)));
  1010   000964  5004               	movf	Clock_Init@bStatus_588^0,w,c
  1011   000966  A4D8               	btfss	status,2,c
  1012   000968  EFB8  F004         	goto	u481
  1013   00096C  EFBA  F004         	goto	u480
  1014   000970                     u481:
  1015   000970  EFCF  F004         	goto	l1365
  1016   000974                     u480:
  1017   000974  BE02               	btfsc	(Clock_Init@s16Timeout+1)^0,7,c
  1018   000976  EFC7  F004         	goto	u490
  1019   00097A  5002               	movf	(Clock_Init@s16Timeout+1)^0,w,c
  1020   00097C  E106               	bnz	u491
  1021   00097E  0401               	decf	Clock_Init@s16Timeout^0,w,c
  1022   000980  B0D8               	btfsc	status,0,c
  1023   000982  EFC5  F004         	goto	u491
  1024   000986  EFC7  F004         	goto	u490
  1025   00098A                     u491:
  1026   00098A  EFA5  F004         	goto	l150
  1027   00098E                     u490:
  1028   00098E  5007               	movf	Clock_Init@bItTimeEn^0,w,c
  1029   000990  B4D8               	btfsc	status,2,c
  1030   000992  EFCD  F004         	goto	u501
  1031   000996  EFCF  F004         	goto	u500
  1032   00099A                     u501:
  1033   00099A  EFA5  F004         	goto	l150
  1034   00099E                     u500:
  1035   00099E                     l1365:
  1036                           
  1037                           ;src/librerias/clock.c: 27:         if (0 == bStatus){
  1038   00099E  5004               	movf	Clock_Init@bStatus_588^0,w,c
  1039   0009A0  A4D8               	btfss	status,2,c
  1040   0009A2  EFD5  F004         	goto	u511
  1041   0009A6  EFD7  F004         	goto	u510
  1042   0009AA                     u511:
  1043   0009AA  EFD9  F004         	goto	l149
  1044   0009AE                     u510:
  1045   0009AE                     
  1046                           ;src/librerias/clock.c: 28:             returnCode = ERROR_CODE_TIMEOUT;
  1047   0009AE  0E01               	movlw	1
  1048   0009B0  6E08               	movwf	Clock_Init@returnCode^0,c
  1049   0009B2                     l149:
  1050                           
  1051                           ;src/librerias/clock.c: 32:     if(ERROR_CODE_OK == returnCode){
  1052   0009B2  5008               	movf	Clock_Init@returnCode^0,w,c
  1053   0009B4  A4D8               	btfss	status,2,c
  1054   0009B6  EFDF  F004         	goto	u521
  1055   0009BA  EFE1  F004         	goto	u520
  1056   0009BE                     u521:
  1057   0009BE  EF15  F005         	goto	l155
  1058   0009C2                     u520:
  1059   0009C2                     l156:
  1060                           
  1061                           ;src/librerias/clock.c: 35:             bStatus = OSCCONbits.OSTS;
  1062   0009C2  B6D3               	btfsc	211,3,c	;volatile
  1063   0009C4  EFE6  F004         	goto	u531
  1064   0009C8  EFE9  F004         	goto	u530
  1065   0009CC                     u531:
  1066   0009CC  0E01               	movlw	1
  1067   0009CE  EFEA  F004         	goto	u536
  1068   0009D2                     u530:
  1069   0009D2  0E00               	movlw	0
  1070   0009D4                     u536:
  1071   0009D4  6E05               	movwf	Clock_Init@bStatus_589^0,c
  1072   0009D6                     
  1073                           ;src/librerias/clock.c: 36:             s16Timeout--;
  1074   0009D6  0601               	decf	Clock_Init@s16Timeout^0,f,c
  1075   0009D8  A0D8               	btfss	status,0,c
  1076   0009DA  0602               	decf	(Clock_Init@s16Timeout+1)^0,f,c
  1077   0009DC                     
  1078                           ;src/librerias/clock.c: 37:         }while((0 == bStatus) && ((0 < s16Timeout) || (0 == 
      +                          bItTimeEn)));
  1079   0009DC  5005               	movf	Clock_Init@bStatus_589^0,w,c
  1080   0009DE  A4D8               	btfss	status,2,c
  1081   0009E0  EFF4  F004         	goto	u541
  1082   0009E4  EFF6  F004         	goto	u540
  1083   0009E8                     u541:
  1084   0009E8  EF0B  F005         	goto	l1379
  1085   0009EC                     u540:
  1086   0009EC  BE02               	btfsc	(Clock_Init@s16Timeout+1)^0,7,c
  1087   0009EE  EF03  F005         	goto	u550
  1088   0009F2  5002               	movf	(Clock_Init@s16Timeout+1)^0,w,c
  1089   0009F4  E106               	bnz	u551
  1090   0009F6  0401               	decf	Clock_Init@s16Timeout^0,w,c
  1091   0009F8  B0D8               	btfsc	status,0,c
  1092   0009FA  EF01  F005         	goto	u551
  1093   0009FE  EF03  F005         	goto	u550
  1094   000A02                     u551:
  1095   000A02  EFE1  F004         	goto	l156
  1096   000A06                     u550:
  1097   000A06  5007               	movf	Clock_Init@bItTimeEn^0,w,c
  1098   000A08  B4D8               	btfsc	status,2,c
  1099   000A0A  EF09  F005         	goto	u561
  1100   000A0E  EF0B  F005         	goto	u560
  1101   000A12                     u561:
  1102   000A12  EFE1  F004         	goto	l156
  1103   000A16                     u560:
  1104   000A16                     l1379:
  1105                           
  1106                           ;src/librerias/clock.c: 38:         if (0 == bStatus){
  1107   000A16  5005               	movf	Clock_Init@bStatus_589^0,w,c
  1108   000A18  A4D8               	btfss	status,2,c
  1109   000A1A  EF11  F005         	goto	u571
  1110   000A1E  EF13  F005         	goto	u570
  1111   000A22                     u571:
  1112   000A22  EF15  F005         	goto	l155
  1113   000A26                     u570:
  1114   000A26                     
  1115                           ;src/librerias/clock.c: 39:             returnCode = ERROR_CODE_TIMEOUT;
  1116   000A26  0E01               	movlw	1
  1117   000A28  6E08               	movwf	Clock_Init@returnCode^0,c
  1118   000A2A                     l155:
  1119                           
  1120                           ;src/librerias/clock.c: 42:         if(ERROR_CODE_OK == returnCode){
  1121   000A2A  5008               	movf	Clock_Init@returnCode^0,w,c
  1122   000A2C  A4D8               	btfss	status,2,c
  1123   000A2E  EF1B  F005         	goto	u581
  1124   000A32  EF1D  F005         	goto	u580
  1125   000A36                     u581:
  1126   000A36  EF53  F005         	goto	l161
  1127   000A3A                     u580:
  1128   000A3A                     
  1129                           ;src/librerias/clock.c: 43:         OSCTUNEbits.SPLLMULT = 1;
  1130   000A3A  8E9B               	bsf	155,7,c	;volatile
  1131                           
  1132                           ;src/librerias/clock.c: 44:         OSCCON2bits.PLLEN = 1;
  1133   000A3C  88D2               	bsf	210,4,c	;volatile
  1134   000A3E                     l162:
  1135                           
  1136                           ;src/librerias/clock.c: 47:             bStatus = OSCCON2bits.PLLRDY;
  1137   000A3E  BED2               	btfsc	210,7,c	;volatile
  1138   000A40  EF24  F005         	goto	u591
  1139   000A44  EF27  F005         	goto	u590
  1140   000A48                     u591:
  1141   000A48  0E01               	movlw	1
  1142   000A4A  EF28  F005         	goto	u596
  1143   000A4E                     u590:
  1144   000A4E  0E00               	movlw	0
  1145   000A50                     u596:
  1146   000A50  6E06               	movwf	Clock_Init@bStatus_592^0,c
  1147   000A52                     
  1148                           ;src/librerias/clock.c: 48:             s16Timeout--;
  1149   000A52  0601               	decf	Clock_Init@s16Timeout^0,f,c
  1150   000A54  A0D8               	btfss	status,0,c
  1151   000A56  0602               	decf	(Clock_Init@s16Timeout+1)^0,f,c
  1152   000A58                     
  1153                           ;src/librerias/clock.c: 49:         }while((0 == bStatus) && ((0 < s16Timeout) || (0 == 
      +                          bItTimeEn)));
  1154   000A58  5006               	movf	Clock_Init@bStatus_592^0,w,c
  1155   000A5A  A4D8               	btfss	status,2,c
  1156   000A5C  EF32  F005         	goto	u601
  1157   000A60  EF34  F005         	goto	u600
  1158   000A64                     u601:
  1159   000A64  EF49  F005         	goto	l1395
  1160   000A68                     u600:
  1161   000A68  BE02               	btfsc	(Clock_Init@s16Timeout+1)^0,7,c
  1162   000A6A  EF41  F005         	goto	u610
  1163   000A6E  5002               	movf	(Clock_Init@s16Timeout+1)^0,w,c
  1164   000A70  E106               	bnz	u611
  1165   000A72  0401               	decf	Clock_Init@s16Timeout^0,w,c
  1166   000A74  B0D8               	btfsc	status,0,c
  1167   000A76  EF3F  F005         	goto	u611
  1168   000A7A  EF41  F005         	goto	u610
  1169   000A7E                     u611:
  1170   000A7E  EF1F  F005         	goto	l162
  1171   000A82                     u610:
  1172   000A82  5007               	movf	Clock_Init@bItTimeEn^0,w,c
  1173   000A84  B4D8               	btfsc	status,2,c
  1174   000A86  EF47  F005         	goto	u621
  1175   000A8A  EF49  F005         	goto	u620
  1176   000A8E                     u621:
  1177   000A8E  EF1F  F005         	goto	l162
  1178   000A92                     u620:
  1179   000A92                     l1395:
  1180                           
  1181                           ;src/librerias/clock.c: 50:         if (0 == bStatus){
  1182   000A92  5006               	movf	Clock_Init@bStatus_592^0,w,c
  1183   000A94  A4D8               	btfss	status,2,c
  1184   000A96  EF4F  F005         	goto	u631
  1185   000A9A  EF51  F005         	goto	u630
  1186   000A9E                     u631:
  1187   000A9E  EF53  F005         	goto	l161
  1188   000AA2                     u630:
  1189   000AA2                     
  1190                           ;src/librerias/clock.c: 51:             returnCode = ERROR_CODE_TIMEOUT;
  1191   000AA2  0E01               	movlw	1
  1192   000AA4  6E08               	movwf	Clock_Init@returnCode^0,c
  1193   000AA6                     l161:
  1194                           
  1195                           ;src/librerias/clock.c: 56:     if(ERROR_CODE_OK == returnCode){
  1196   000AA6  5008               	movf	Clock_Init@returnCode^0,w,c
  1197   000AA8  A4D8               	btfss	status,2,c
  1198   000AAA  EF59  F005         	goto	u641
  1199   000AAE  EF5B  F005         	goto	u640
  1200   000AB2                     u641:
  1201   000AB2  EF5E  F005         	goto	l168
  1202   000AB6                     u640:
  1203   000AB6                     
  1204                           ;src/librerias/clock.c: 57:         OSCCON2bits.PRISD = 0;
  1205   000AB6  94D2               	bcf	210,2,c	;volatile
  1206   000AB8                     
  1207                           ;src/librerias/clock.c: 58:         OSCCONbits.SCS = 0;
  1208   000AB8  0EFC               	movlw	-4
  1209   000ABA  16D3               	andwf	211,f,c	;volatile
  1210   000ABC                     l168:
  1211   000ABC  0012               	return		;funcret
  1212   000ABE                     __end_of_Clock_Init:
  1213                           	callstack 0
  1214                           
  1215                           	psect	rparam
  1216   000000                     
  1217                           	psect	config
  1218                           
  1219                           ;Config register CONFIG1L @ 0x300000
  1220                           ;	PLL Selection
  1221                           ;	PLLSEL = PLL3X, 3x clock multiplier
  1222                           ;	PLL Enable Configuration bit
  1223                           ;	CFGPLLEN = ON, PLL Enabled
  1224                           ;	CPU System Clock Postscaler
  1225                           ;	CPUDIV = NOCLKDIV, CPU uses system clock (no divide)
  1226                           ;	Low Speed USB mode with 48 MHz system clock
  1227                           ;	LS48MHZ = SYS48X8, System clock at 48 MHz, USB clock divider is set to 8
  1228   300000                     	org	3145728
  1229   300000  23                 	db	35
  1230                           
  1231                           ;Config register CONFIG1H @ 0x300001
  1232                           ;	Oscillator Selection
  1233                           ;	FOSC = INTOSCCLKO, Internal oscillator, clock output on OSC2
  1234                           ;	Primary Oscillator Shutdown
  1235                           ;	PCLKEN = OFF, Primary oscillator shutdown firmware controlled
  1236                           ;	Fail-Safe Clock Monitor
  1237                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1238                           ;	Internal/External Oscillator Switchover
  1239                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1240   300001                     	org	3145729
  1241   300001  09                 	db	9
  1242                           
  1243                           ;Config register CONFIG2L @ 0x300002
  1244                           ;	Power-up Timer Enable
  1245                           ;	nPWRTEN = OFF, Power up timer disabled
  1246                           ;	Brown-out Reset Enable
  1247                           ;	BOREN = SBORDIS, BOR enabled in hardware (SBOREN is ignored)
  1248                           ;	Brown-out Reset Voltage
  1249                           ;	BORV = 190, BOR set to 1.9V nominal
  1250                           ;	Low-Power Brown-out Reset
  1251                           ;	nLPBOR = OFF, Low-Power Brown-out Reset disabled
  1252   300002                     	org	3145730
  1253   300002  5F                 	db	95
  1254                           
  1255                           ;Config register CONFIG2H @ 0x300003
  1256                           ;	Watchdog Timer Enable bits
  1257                           ;	WDTEN = OFF, WDT disabled in hardware (SWDTEN ignored)
  1258                           ;	Watchdog Timer Postscaler
  1259                           ;	WDTPS = 32768, 1:32768
  1260   300003                     	org	3145731
  1261   300003  3C                 	db	60
  1262                           
  1263                           ; Padding undefined space
  1264   300004                     	org	3145732
  1265   300004  FF                 	db	255
  1266                           
  1267                           ;Config register CONFIG3H @ 0x300005
  1268                           ;	CCP2 MUX bit
  1269                           ;	CCP2MX = RC1, CCP2 input/output is multiplexed with RC1
  1270                           ;	PORTB A/D Enable bit
  1271                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  1272                           ;	Timer3 Clock Input MUX bit
  1273                           ;	T3CMX = RC0, T3CKI function is on RC0
  1274                           ;	SDO Output MUX bit
  1275                           ;	SDOMX = RB3, SDO function is on RB3
  1276                           ;	Master Clear Reset Pin Enable
  1277                           ;	MCLRE = ON, MCLR pin enabled; RE3 input disabled
  1278   300005                     	org	3145733
  1279   300005  D3                 	db	211
  1280                           
  1281                           ;Config register CONFIG4L @ 0x300006
  1282                           ;	Stack Full/Underflow Reset
  1283                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1284                           ;	Single-Supply ICSP Enable bit
  1285                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
  1286                           ;	Dedicated In-Circuit Debug/Programming Port Enable
  1287                           ;	ICPRT = OFF, ICPORT disabled
  1288                           ;	Extended Instruction Set Enable bit
  1289                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled
  1290                           ;	Background Debugger Enable bit
  1291                           ;	DEBUG = 0x1, unprogrammed default
  1292   300006                     	org	3145734
  1293   300006  85                 	db	133
  1294                           
  1295                           ; Padding undefined space
  1296   300007                     	org	3145735
  1297   300007  FF                 	db	255
  1298                           
  1299                           ;Config register CONFIG5L @ 0x300008
  1300                           ;	Block 0 Code Protect
  1301                           ;	CP0 = OFF, Block 0 is not code-protected
  1302                           ;	Block 1 Code Protect
  1303                           ;	CP1 = OFF, Block 1 is not code-protected
  1304                           ;	Block 2 Code Protect
  1305                           ;	CP2 = OFF, Block 2 is not code-protected
  1306                           ;	Block 3 Code Protect
  1307                           ;	CP3 = OFF, Block 3 is not code-protected
  1308   300008                     	org	3145736
  1309   300008  0F                 	db	15
  1310                           
  1311                           ;Config register CONFIG5H @ 0x300009
  1312                           ;	Boot Block Code Protect
  1313                           ;	CPB = OFF, Boot block is not code-protected
  1314                           ;	Data EEPROM Code Protect
  1315                           ;	CPD = OFF, Data EEPROM is not code-protected
  1316   300009                     	org	3145737
  1317   300009  C0                 	db	192
  1318                           
  1319                           ;Config register CONFIG6L @ 0x30000A
  1320                           ;	Block 0 Write Protect
  1321                           ;	WRT0 = OFF, Block 0 (0800-1FFFh) is not write-protected
  1322                           ;	Block 1 Write Protect
  1323                           ;	WRT1 = OFF, Block 1 (2000-3FFFh) is not write-protected
  1324                           ;	Block 2 Write Protect
  1325                           ;	WRT2 = OFF, Block 2 (04000-5FFFh) is not write-protected
  1326                           ;	Block 3 Write Protect
  1327                           ;	WRT3 = OFF, Block 3 (06000-7FFFh) is not write-protected
  1328   30000A                     	org	3145738
  1329   30000A  0F                 	db	15
  1330                           
  1331                           ;Config register CONFIG6H @ 0x30000B
  1332                           ;	Configuration Registers Write Protect
  1333                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  1334                           ;	Boot Block Write Protect
  1335                           ;	WRTB = OFF, Boot block (0000-7FFh) is not write-protected
  1336                           ;	Data EEPROM Write Protect
  1337                           ;	WRTD = OFF, Data EEPROM is not write-protected
  1338   30000B                     	org	3145739
  1339   30000B  E0                 	db	224
  1340                           
  1341                           ;Config register CONFIG7L @ 0x30000C
  1342                           ;	Block 0 Table Read Protect
  1343                           ;	EBTR0 = OFF, Block 0 is not protected from table reads executed in other blocks
  1344                           ;	Block 1 Table Read Protect
  1345                           ;	EBTR1 = OFF, Block 1 is not protected from table reads executed in other blocks
  1346                           ;	Block 2 Table Read Protect
  1347                           ;	EBTR2 = OFF, Block 2 is not protected from table reads executed in other blocks
  1348                           ;	Block 3 Table Read Protect
  1349                           ;	EBTR3 = OFF, Block 3 is not protected from table reads executed in other blocks
  1350   30000C                     	org	3145740
  1351   30000C  0F                 	db	15
  1352                           
  1353                           ;Config register CONFIG7H @ 0x30000D
  1354                           ;	Boot Block Table Read Protect
  1355                           ;	EBTRB = OFF, Boot block is not protected from table reads executed in other blocks
  1356   30000D                     	org	3145741
  1357   30000D  40                 	db	64
  1358                           tosu	equ	0xFFF
  1359                           tosh	equ	0xFFE
  1360                           tosl	equ	0xFFD
  1361                           stkptr	equ	0xFFC
  1362                           pclatu	equ	0xFFB
  1363                           pclath	equ	0xFFA
  1364                           pcl	equ	0xFF9
  1365                           tblptru	equ	0xFF8
  1366                           tblptrh	equ	0xFF7
  1367                           tblptrl	equ	0xFF6
  1368                           tablat	equ	0xFF5
  1369                           prodh	equ	0xFF4
  1370                           prodl	equ	0xFF3
  1371                           indf0	equ	0xFEF
  1372                           postinc0	equ	0xFEE
  1373                           postdec0	equ	0xFED
  1374                           preinc0	equ	0xFEC
  1375                           plusw0	equ	0xFEB
  1376                           fsr0h	equ	0xFEA
  1377                           fsr0l	equ	0xFE9
  1378                           wreg	equ	0xFE8
  1379                           indf1	equ	0xFE7
  1380                           postinc1	equ	0xFE6
  1381                           postdec1	equ	0xFE5
  1382                           preinc1	equ	0xFE4
  1383                           plusw1	equ	0xFE3
  1384                           fsr1h	equ	0xFE2
  1385                           fsr1l	equ	0xFE1
  1386                           bsr	equ	0xFE0
  1387                           indf2	equ	0xFDF
  1388                           postinc2	equ	0xFDE
  1389                           postdec2	equ	0xFDD
  1390                           preinc2	equ	0xFDC
  1391                           plusw2	equ	0xFDB
  1392                           fsr2h	equ	0xFDA
  1393                           fsr2l	equ	0xFD9
  1394                           status	equ	0xFD8

Data Sizes:
    Strings     166
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     12      13
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0

Pointer List with Targets:

    vfprintf$0	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf$1	PTR const unsigned char  size(1) Largest target is 18
		 -> STR_1(CODE[7]), STR_10(CODE[9]), STR_11(CODE[14]), STR_12(CODE[17]), 
		 -> STR_13(CODE[10]), STR_14(CODE[14]), STR_15(CODE[17]), STR_16(CODE[11]), 
		 -> STR_17(CODE[14]), STR_18(CODE[17]), STR_2(CODE[10]), STR_3(CODE[11]), 
		 -> STR_4(CODE[18]), STR_5(CODE[18]), STR_6(CODE[11]), STR_7(CODE[9]), 
		 -> STR_8(CODE[8]), STR_9(CODE[13]), 

    vfprintf$2	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(COMRAM[1]), 


Critical Paths under _main in COMRAM

    _main->_UART_Init
    _UART_Init->_UART_select_baud

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     780
                         _Clock_Init
                          _UART_Init
                            _UART_Rx
 ---------------------------------------------------------------------------------
 (1) _UART_Rx                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            4     0      4     196
                                              8 COMRAM     4     0      4
                   _UART_select_baud
 ---------------------------------------------------------------------------------
 (2) _UART_select_baud                                     8     4      4      98
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _Clock_Init                                           8     6      2     584
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Clock_Init
   _UART_Init
     _UART_select_baud
   _UART_Rx

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      31        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      12        0.0%
BITBANK6           100      0       0      18        0.0%
BANK6              100      0       0      11        0.0%
BITBANK5           100      0       0      17        0.0%
BANK5              100      0       0      10        0.0%
BITBANK4           100      0       0      15        0.0%
BANK4              100      0       0      16        0.0%
BITBANK3           100      0       0      13        0.0%
BANK3              100      0       0      14        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      C       D       1       13.7%
BITBIGSFRllh        2B      0       0      28        0.0%
BITBIGSFRhhhhh      29      0       0      20        0.0%
BITBIGSFRhhhhl      19      0       0      21        0.0%
BITBIGSFRhhl         C      0       0      23        0.0%
BITBIGSFRlll         A      0       0      29        0.0%
BITBIGSFRlh          8      0       0      27        0.0%
BITBIGSFRhhhlh       7      0       0      22        0.0%
BITBIGSFRhlhl        6      0       0      25        0.0%
BITBIGSFRhlhh        2      0       0      24        0.0%
BITBIGSFRhll         1      0       0      26        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       D      30        0.0%
DATA                 0      0       D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Wed Oct 02 20:02:04 2024

                      l22 0C46                        l25 0C5A                       l101 0C90  
                     l114 0BFC                       l150 094A                       l134 0CA0  
                     l143 0934                       l144 08CC                       l161 0AA6  
                     l162 0A3E                       l155 0A2A                       l156 09C2  
                     l149 09B2                       l168 0ABC                       u400 08CA  
                     u410 08DC                       u411 08D6                       u500 099E  
                     u420 08F6                       u501 099A                       u421 08F2  
                     u510 09AE                       u430 0910                       u511 09AA  
                     u431 090C                       u600 0A68                       u520 09C2  
                     u440 0920                       u416 08DE                       u601 0A64  
                     u521 09BE                       u441 091C                       u610 0A82  
                     u530 09D2                       u450 0930                       u611 0A7E  
                     u531 09CC                       u451 092C                       u620 0A92  
                     u540 09EC                       u460 0944                       u621 0A8E  
                     u541 09E8                       u461 0940                       u630 0AA2  
                     u550 0A06                       u470 095A                       u390 08C8  
                     u631 0A9E                       u551 0A02                       u471 0954  
                     u391 08C2                       u640 0AB6                       u560 0A16  
                     u536 09D4                       u480 0974                       u641 0AB2  
                     u561 0A12                       u481 0970                       u570 0A26  
                     u490 098E                       u650 0C2E                       u571 0A22  
                     u491 098A                       u651 0C2A                       u580 0A3A  
                     u476 095C                       u660 0C46                       u581 0A36  
                     u661 0C42                       u590 0A4E                       u670 0C5A  
                     u591 0A48                       u671 0C56                       u596 0A50  
              _TXSTA1bits 0FAC                      l1003 0C9E                      l1401 0AB8  
                    l1411 0C80                      l1341 08E0                      l1333 08A8  
                    l1421 0C8A                      l1413 0C82                      l1405 0C64  
                    l1351 0930                      l1343 08E6                      l1335 08AC  
                    l1271 0ABE                      l1415 0C84                      l1407 0C68  
                    l1431 0C34                      l1423 0BFE                      l1361 0974  
                    l1353 0944                      l1345 08F6                      l1337 08CC  
                    l1281 0AF2                      l1273 0AC2                      l1417 0C86  
                    l1409 0C6C                      l1433 0C48                      l1425 0C1E  
                    l1371 09D6                      l1363 098E                      l1355 0946  
                    l1347 0910                      l1339 08CC                      l1283 0AFE  
                    l1275 0ACE                      l1291 0B22                      l1419 0C88  
                    l1427 0C20                      l1381 0A26                      l1373 09DC  
                    l1365 099E                      l1357 095E                      l1349 0920  
                    l1285 0B0A                      l1277 0ADA                      l1429 0C2E  
                    l1391 0A68                      l1383 0A3A                      l1375 09EC  
                    l1367 09AE                      l1359 0964                      l1287 0B16  
                    l1279 0AE6                      l1393 0A82                      l1385 0A3E  
                    l1377 0A06                      l1369 09C2                      l1641 0B76  
                    l1395 0A92                      l1387 0A52                      l1379 0A16  
                    l1651 0BBC                      l1643 0B84                      l1635 0B40  
                    l1397 0AA2                      l1389 0A58                      l1653 0BD8  
                    l1637 0BCA                      l1645 0B92                      l1399 0AB6  
                    l1647 0BA0                      l1639 0BE6                      l1649 0BAE  
                    STR_1 08A0                      STR_2 087C                      STR_3 0867  
                    STR_4 0813                      STR_5 0801                      STR_6 0851  
                    STR_7 088F                      STR_8 0898                      STR_9 0844  
                    _CREN 7D5C                      _SPEN 7D5F                      _TRMT 7D61  
         __end_of_UART_Rx 0CA2                      _main 0BFE                      start 0002  
            ___param_bank 0000  UART_select_baud@baudrate 0001                _Clock_Init 08A8  
                   ?_main 0001                     STR_10 0886                     STR_11 0836  
                   STR_12 0825                     STR_13 0872                     STR_16 085C  
                   _BRGH1 7D62                     _RCREG 0FAE         Clock_Init@bStatus 0003  
                   _SPBRG 0FAF                     _TXEN1 7D65                     _SYNC1 7D64  
                   status 0FD8           __initialization 0C92              __end_of_main 0C64  
                  ??_main 000D             __activetblptr 0002                 ??_UART_Rx 0001  
                  _BRG161 7DC3                    _ANSELC 0F5D                    _RCREG1 0FAE  
                  _SPBRGH 0FB0                    _TRISC6 7CA6                    _TRISC7 7CA7  
                  _TXREG1 0FAD         __end_of_UART_Init 0C92               ?_Clock_Init 0001  
                  isa$std 0001              __mediumconst 0000                    tblptru 0FF8  
              __accesstop 0060   __end_of__initialization 0C94             ___rparam_used 0001  
        _UART_select_baud 0ABE            __pcstackCOMRAM 0001       Clock_Init@bItTimeEn 0007  
                 _UART_Rx 0C9E                   __Hparam 0000                   __Lparam 0000  
            __psmallconst 0800                   __pcinit 0C92                   __ramtop 0800  
                 __ptext0 0BFE                   __ptext1 0C9E                   __ptext2 0C64  
                 __ptext3 0ABE                   __ptext4 08A8      end_of_initialization 0C94  
           __Lmediumconst 0000     Clock_Init@bStatus_592 0006     Clock_Init@bStatus_588 0004  
   Clock_Init@bStatus_589 0005                 _RCSTAbits 0FAB              ??_Clock_Init 0003  
               _UART_Init 0C64                 _TRISAbits 0F92  __end_of_UART_select_baud 0BFE  
      __end_of_Clock_Init 0ABE                 _TXSTAbits 0FAC                ?_UART_Init 0009  
     start_initialization 0C92      Clock_Init@s16Timeout 0001               __pbssCOMRAM 000D  
                ?_UART_Rx 0001               ??_UART_Init 000D               __smallconst 0800  
                _BAUDCON1 0FB8                  _LATAbits 0F89                  _PIR1bits 0F9E  
       UART_Init@baudrate 0009         ?_UART_select_baud 0001        ??_UART_select_baud 0005  
                __Hrparam 0000                  __Lrparam 0000               _readMessage 000D  
             _OSCCON2bits 0FD2                  isa$xinst 0000               _OSCTUNEbits 0F9B  
              _OSCCONbits 0FD3      Clock_Init@returnCode 0008  
