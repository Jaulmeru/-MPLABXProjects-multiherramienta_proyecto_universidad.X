

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Wed Sep 11 18:44:56 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F45K50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    24                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    25                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    26   000000                     
    27                           ; Generated 12/10/2023 GMT
    28                           ; 
    29                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution. Publication is not required when
    43                           ;        this file is used in an embedded application.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC18F45K50 Definitions
    59                           ; 
    60                           ; SFR Addresses
    61   000000                     _RCREG	set	4014
    62   000000                     _TXREG1	set	4013
    63   000000                     _SPBRG	set	4015
    64   000000                     _SPBRGH	set	4016
    65   000000                     _BRG161	set	32195
    66   000000                     _RCREG1	set	4014
    67   000000                     _TXSTAbits	set	4012
    68   000000                     _RCSTAbits	set	4011
    69   000000                     _BAUDCON1bits	set	4024
    70   000000                     _TXSTA1bits	set	4012
    71   000000                     _TRMT	set	32097
    72   000000                     _TRISC7	set	31911
    73   000000                     _CREN	set	32092
    74   000000                     _TXEN1	set	32101
    75   000000                     _BRGH1	set	32098
    76   000000                     _TRISC6	set	31910
    77   000000                     _SPEN	set	32095
    78   000000                     _SYNC1	set	32100
    79   000000                     _SSP1ADD	set	4040
    80   000000                     _OSCCON2bits	set	4050
    81   000000                     _OSCTUNEbits	set	3995
    82   000000                     _RC1IF	set	31989
    83   000000                     _OSCCONbits	set	4051
    84                           
    85                           	psect	mediumconst
    86   007EE8                     __pmediumconst:
    87                           	callstack 0
    88   007EE8  00                 	db	0
    89   007EE9                     STR_24:
    90   007EE9  45                 	db	69	;'E'
    91   007EEA  52                 	db	82	;'R'
    92   007EEB  52                 	db	82	;'R'
    93   007EEC  4F                 	db	79	;'O'
    94   007EED  52                 	db	82	;'R'
    95   007EEE  5F                 	db	95	;'_'
    96   007EEF  43                 	db	67	;'C'
    97   007EF0  4F                 	db	79	;'O'
    98   007EF1  44                 	db	68	;'D'
    99   007EF2  45                 	db	69	;'E'
   100   007EF3  5F                 	db	95	;'_'
   101   007EF4  53                 	db	83	;'S'
   102   007EF5  50                 	db	80	;'P'
   103   007EF6  49                 	db	73	;'I'
   104   007EF7  5F                 	db	95	;'_'
   105   007EF8  42                 	db	66	;'B'
   106   007EF9  52                 	db	82	;'R'
   107   007EFA  5F                 	db	95	;'_'
   108   007EFB  4F                 	db	79	;'O'
   109   007EFC  56                 	db	86	;'V'
   110   007EFD  45                 	db	69	;'E'
   111   007EFE  52                 	db	82	;'R'
   112   007EFF  52                 	db	82	;'R'
   113   007F00  41                 	db	65	;'A'
   114   007F01  4E                 	db	78	;'N'
   115   007F02  47                 	db	71	;'G'
   116   007F03  45                 	db	69	;'E'
   117   007F04  00                 	db	0
   118   007F05  45                 	db	69	;'E'
   119   007F06  52                 	db	82	;'R'
   120   007F07  52                 	db	82	;'R'
   121   007F08  4F                 	db	79	;'O'
   122   007F09  52                 	db	82	;'R'
   123   007F0A  5F                 	db	95	;'_'
   124   007F0B  43                 	db	67	;'C'
   125   007F0C  4F                 	db	79	;'O'
   126   007F0D  44                 	db	68	;'D'
   127   007F0E  45                 	db	69	;'E'
   128   007F0F  5F                 	db	95	;'_'
   129   007F10  55                 	db	85	;'U'
   130   007F11  41                 	db	65	;'A'
   131   007F12  52                 	db	82	;'R'
   132   007F13  54                 	db	84	;'T'
   133   007F14  5F                 	db	95	;'_'
   134   007F15  43                 	db	67	;'C'
   135   007F16  4F                 	db	79	;'O'
   136   007F17  4E                 	db	78	;'N'
   137   007F18  46                 	db	70	;'F'
   138   007F19  49                 	db	73	;'I'
   139   007F1A  47                 	db	71	;'G'
   140   007F1B  20                 	db	32
   141   007F1C  0D                 	db	13
   142   007F1D  0A                 	db	10
   143   007F1E  00                 	db	0
   144   007F1F  45                 	db	69	;'E'
   145   007F20  52                 	db	82	;'R'
   146   007F21  52                 	db	82	;'R'
   147   007F22  4F                 	db	79	;'O'
   148   007F23  52                 	db	82	;'R'
   149   007F24  5F                 	db	95	;'_'
   150   007F25  43                 	db	67	;'C'
   151   007F26  4F                 	db	79	;'O'
   152   007F27  44                 	db	68	;'D'
   153   007F28  45                 	db	69	;'E'
   154   007F29  5F                 	db	95	;'_'
   155   007F2A  55                 	db	85	;'U'
   156   007F2B  41                 	db	65	;'A'
   157   007F2C  52                 	db	82	;'R'
   158   007F2D  54                 	db	84	;'T'
   159   007F2E  5F                 	db	95	;'_'
   160   007F2F  4F                 	db	79	;'O'
   161   007F30  56                 	db	86	;'V'
   162   007F31  45                 	db	69	;'E'
   163   007F32  52                 	db	82	;'R'
   164   007F33  46                 	db	70	;'F'
   165   007F34  4C                 	db	76	;'L'
   166   007F35  4F                 	db	79	;'O'
   167   007F36  57                 	db	87	;'W'
   168   007F37  00                 	db	0
   169   007F38  45                 	db	69	;'E'
   170   007F39  52                 	db	82	;'R'
   171   007F3A  52                 	db	82	;'R'
   172   007F3B  4F                 	db	79	;'O'
   173   007F3C  52                 	db	82	;'R'
   174   007F3D  5F                 	db	95	;'_'
   175   007F3E  43                 	db	67	;'C'
   176   007F3F  4F                 	db	79	;'O'
   177   007F40  44                 	db	68	;'D'
   178   007F41  45                 	db	69	;'E'
   179   007F42  5F                 	db	95	;'_'
   180   007F43  55                 	db	85	;'U'
   181   007F44  41                 	db	65	;'A'
   182   007F45  52                 	db	82	;'R'
   183   007F46  54                 	db	84	;'T'
   184   007F47  5F                 	db	95	;'_'
   185   007F48  46                 	db	70	;'F'
   186   007F49  52                 	db	82	;'R'
   187   007F4A  41                 	db	65	;'A'
   188   007F4B  4D                 	db	77	;'M'
   189   007F4C  49                 	db	73	;'I'
   190   007F4D  4E                 	db	78	;'N'
   191   007F4E  47                 	db	71	;'G'
   192   007F4F  00                 	db	0
   193   007F50                     STR_5:
   194   007F50  62                 	db	98	;'b'
   195   007F51  61                 	db	97	;'a'
   196   007F52  6A                 	db	106	;'j'
   197   007F53  61                 	db	97	;'a'
   198   007F54  20                 	db	32
   199   007F55  76                 	db	118	;'v'
   200   007F56  65                 	db	101	;'e'
   201   007F57  6C                 	db	108	;'l'
   202   007F58  6F                 	db	111	;'o'
   203   007F59  63                 	db	99	;'c'
   204   007F5A  69                 	db	105	;'i'
   205   007F5B  64                 	db	100	;'d'
   206   007F5C  61                 	db	97	;'a'
   207   007F5D  64                 	db	100	;'d'
   208   007F5E  20                 	db	32
   209   007F5F  0D                 	db	13
   210   007F60  0A                 	db	10
   211   007F61  00                 	db	0
   212   007F62                     STR_4:
   213   007F62  61                 	db	97	;'a'
   214   007F63  6C                 	db	108	;'l'
   215   007F64  74                 	db	116	;'t'
   216   007F65  61                 	db	97	;'a'
   217   007F66  20                 	db	32
   218   007F67  76                 	db	118	;'v'
   219   007F68  65                 	db	101	;'e'
   220   007F69  6C                 	db	108	;'l'
   221   007F6A  6F                 	db	111	;'o'
   222   007F6B  63                 	db	99	;'c'
   223   007F6C  69                 	db	105	;'i'
   224   007F6D  64                 	db	100	;'d'
   225   007F6E  61                 	db	97	;'a'
   226   007F6F  64                 	db	100	;'d'
   227   007F70  20                 	db	32
   228   007F71  0D                 	db	13
   229   007F72  0A                 	db	10
   230   007F73  00                 	db	0
   231   007F74                     STR_12:
   232   007F74  44                 	db	68	;'D'
   233   007F75  65                 	db	101	;'e'
   234   007F76  73                 	db	115	;'s'
   235   007F77  68                 	db	104	;'h'
   236   007F78  61                 	db	97	;'a'
   237   007F79  62                 	db	98	;'b'
   238   007F7A  69                 	db	105	;'i'
   239   007F7B  6C                 	db	108	;'l'
   240   007F7C  69                 	db	105	;'i'
   241   007F7D  74                 	db	116	;'t'
   242   007F7E  61                 	db	97	;'a'
   243   007F7F  64                 	db	100	;'d'
   244   007F80  6F                 	db	111	;'o'
   245   007F81  20                 	db	32
   246   007F82  0D                 	db	13
   247   007F83  0A                 	db	10
   248   007F84  00                 	db	0
   249   007F85                     STR_11:
   250   007F85  48                 	db	72	;'H'
   251   007F86  61                 	db	97	;'a'
   252   007F87  62                 	db	98	;'b'
   253   007F88  69                 	db	105	;'i'
   254   007F89  6C                 	db	108	;'l'
   255   007F8A  69                 	db	105	;'i'
   256   007F8B  74                 	db	116	;'t'
   257   007F8C  61                 	db	97	;'a'
   258   007F8D  64                 	db	100	;'d'
   259   007F8E  6F                 	db	111	;'o'
   260   007F8F  20                 	db	32
   261   007F90  0D                 	db	13
   262   007F91  0A                 	db	10
   263   007F92  00                 	db	0
   264   007F93                     STR_9:
   265   007F93  78                 	db	120	;'x'
   266   007F94  20                 	db	32
   267   007F95  62                 	db	98	;'b'
   268   007F96  61                 	db	97	;'a'
   269   007F97  75                 	db	117	;'u'
   270   007F98  64                 	db	100	;'d'
   271   007F99  69                 	db	105	;'i'
   272   007F9A  6F                 	db	111	;'o'
   273   007F9B  73                 	db	115	;'s'
   274   007F9C  20                 	db	32
   275   007F9D  0D                 	db	13
   276   007F9E  0A                 	db	10
   277   007F9F  00                 	db	0
   278   007FA0                     STR_6:
   279   007FA0  42                 	db	66	;'B'
   280   007FA1  61                 	db	97	;'a'
   281   007FA2  75                 	db	117	;'u'
   282   007FA3  64                 	db	100	;'d'
   283   007FA4  72                 	db	114	;'r'
   284   007FA5  61                 	db	97	;'a'
   285   007FA6  74                 	db	116	;'t'
   286   007FA7  65                 	db	101	;'e'
   287   007FA8  3A                 	db	58	;':'
   288   007FA9  20                 	db	32
   289   007FAA  00                 	db	0
   290   007FAB                     STR_16:
   291   007FAB  52                 	db	82	;'R'
   292   007FAC  65                 	db	101	;'e'
   293   007FAD  63                 	db	99	;'c'
   294   007FAE  65                 	db	101	;'e'
   295   007FAF  70                 	db	112	;'p'
   296   007FB0  74                 	db	116	;'t'
   297   007FB1  6F                 	db	111	;'o'
   298   007FB2  72                 	db	114	;'r'
   299   007FB3  3A                 	db	58	;':'
   300   007FB4  20                 	db	32
   301   007FB5  00                 	db	0
   302   007FB6                     STR_3:
   303   007FB6  41                 	db	65	;'A'
   304   007FB7  73                 	db	115	;'s'
   305   007FB8  69                 	db	105	;'i'
   306   007FB9  6E                 	db	110	;'n'
   307   007FBA  63                 	db	99	;'c'
   308   007FBB  72                 	db	114	;'r'
   309   007FBC  6F                 	db	111	;'o'
   310   007FBD  6E                 	db	110	;'n'
   311   007FBE  6F                 	db	111	;'o'
   312   007FBF  20                 	db	32
   313   007FC0  00                 	db	0
   314   007FC1                     STR_13:
   315   007FC1  54                 	db	84	;'T'
   316   007FC2  72                 	db	114	;'r'
   317   007FC3  61                 	db	97	;'a'
   318   007FC4  6E                 	db	110	;'n'
   319   007FC5  73                 	db	115	;'s'
   320   007FC6  6F                 	db	111	;'o'
   321   007FC7  72                 	db	114	;'r'
   322   007FC8  3A                 	db	58	;':'
   323   007FC9  20                 	db	32
   324   007FCA  00                 	db	0
   325   007FCB                     STR_2:
   326   007FCB  53                 	db	83	;'S'
   327   007FCC  69                 	db	105	;'i'
   328   007FCD  6E                 	db	110	;'n'
   329   007FCE  63                 	db	99	;'c'
   330   007FCF  72                 	db	114	;'r'
   331   007FD0  6F                 	db	111	;'o'
   332   007FD1  6E                 	db	110	;'n'
   333   007FD2  6F                 	db	111	;'o'
   334   007FD3  20                 	db	32
   335   007FD4  00                 	db	0
   336   007FD5                     STR_10:
   337   007FD5  50                 	db	80	;'P'
   338   007FD6  75                 	db	117	;'u'
   339   007FD7  65                 	db	101	;'e'
   340   007FD8  72                 	db	114	;'r'
   341   007FD9  74                 	db	116	;'t'
   342   007FDA  6F                 	db	111	;'o'
   343   007FDB  3A                 	db	58	;':'
   344   007FDC  20                 	db	32
   345   007FDD  00                 	db	0
   346   007FDE                     STR_7:
   347   007FDE  31                 	db	49	;'1'
   348   007FDF  36                 	db	54	;'6'
   349   007FE0  20                 	db	32
   350   007FE1  62                 	db	98	;'b'
   351   007FE2  69                 	db	105	;'i'
   352   007FE3  74                 	db	116	;'t'
   353   007FE4  73                 	db	115	;'s'
   354   007FE5  20                 	db	32
   355   007FE6  00                 	db	0
   356   007FE7                     STR_19:
   357   007FE7  45                 	db	69	;'E'
   358   007FE8  72                 	db	114	;'r'
   359   007FE9  72                 	db	114	;'r'
   360   007FEA  6F                 	db	111	;'o'
   361   007FEB  72                 	db	114	;'r'
   362   007FEC  3A                 	db	58	;':'
   363   007FED  20                 	db	32
   364   007FEE  00                 	db	0
   365   007FEF                     STR_8:
   366   007FEF  38                 	db	56	;'8'
   367   007FF0  20                 	db	32
   368   007FF1  62                 	db	98	;'b'
   369   007FF2  69                 	db	105	;'i'
   370   007FF3  74                 	db	116	;'t'
   371   007FF4  73                 	db	115	;'s'
   372   007FF5  20                 	db	32
   373   007FF6  00                 	db	0
   374   007FF7                     STR_1:
   375   007FF7  4D                 	db	77	;'M'
   376   007FF8  6F                 	db	111	;'o'
   377   007FF9  64                 	db	100	;'d'
   378   007FFA  6F                 	db	111	;'o'
   379   007FFB  3A                 	db	58	;':'
   380   007FFC  20                 	db	32
   381   007FFD  00                 	db	0
   382   007FFE  00                 	db	0	; dummy byte at the end
   383   000000                     
   384                           ; #config settings
   385                           
   386                           	psect	cinit
   387   00763A                     __pcinit:
   388                           	callstack 0
   389   00763A                     start_initialization:
   390                           	callstack 0
   391   00763A                     __initialization:
   392                           	callstack 0
   393                           
   394                           ; Clear objects allocated to COMRAM (37 bytes)
   395   00763A  EE00  F029         	lfsr	0,__pbssCOMRAM
   396   00763E  0E25               	movlw	37
   397   007640                     clear_0:
   398   007640  6AEE               	clrf	postinc0,c
   399   007642  06E8               	decf	wreg,f,c
   400   007644  E1FD               	bnz	clear_0
   401   007646                     end_of_initialization:
   402                           	callstack 0
   403   007646                     __end_of__initialization:
   404                           	callstack 0
   405   007646  0E00               	movlw	low (__Lmediumconst shr (0+16))
   406   007648  6EF8               	movwf	tblptru,c
   407   00764A  0100               	movlb	0
   408   00764C  EF4C  F03B         	goto	_main	;jump to C main() function
   409                           
   410                           	psect	bssCOMRAM
   411   000029                     __pbssCOMRAM:
   412                           	callstack 0
   413   000029                     	ds	32
   414   000049                     _width:
   415                           	callstack 0
   416   000049                     	ds	2
   417   00004B                     _prec:
   418                           	callstack 0
   419   00004B                     	ds	2
   420   00004D                     _flags:
   421                           	callstack 0
   422   00004D                     	ds	1
   423                           
   424                           	psect	cstackCOMRAM
   425   000001                     __pcstackCOMRAM:
   426                           	callstack 0
   427   000001                     ?___aldiv:
   428                           	callstack 0
   429   000001                     UART_Tx@dato:
   430                           	callstack 0
   431   000001                     Clock_Init@s16Timeout:
   432                           	callstack 0
   433   000001                     UART_select_baud@baudrate:
   434                           	callstack 0
   435   000001                     ___aldiv@dividend:
   436                           	callstack 0
   437                           
   438                           ; 4 bytes @ 0x0
   439   000001                     	ds	1
   440   000002                     putch@data:
   441                           	callstack 0
   442                           
   443                           ; 1 bytes @ 0x1
   444   000002                     	ds	1
   445   000003                     Clock_Init@bStatus:
   446                           	callstack 0
   447   000003                     fputc@c:
   448                           	callstack 0
   449                           
   450                           ; 2 bytes @ 0x2
   451   000003                     	ds	1
   452   000004                     Clock_Init@bStatus_544:
   453                           	callstack 0
   454                           
   455                           ; 1 bytes @ 0x3
   456   000004                     	ds	1
   457   000005                     ??_UART_select_baud:
   458   000005                     Clock_Init@bStatus_545:
   459                           	callstack 0
   460   000005                     fputc@fp:
   461                           	callstack 0
   462   000005                     ___aldiv@divisor:
   463                           	callstack 0
   464                           
   465                           ; 4 bytes @ 0x4
   466   000005                     	ds	1
   467   000006                     Clock_Init@bStatus_548:
   468                           	callstack 0
   469                           
   470                           ; 1 bytes @ 0x5
   471   000006                     	ds	1
   472   000007                     ??_fputc:
   473   000007                     Clock_Init@bItTimeEn:
   474                           	callstack 0
   475                           
   476                           ; 1 bytes @ 0x6
   477   000007                     	ds	1
   478   000008                     Clock_Init@returnCode:
   479                           	callstack 0
   480                           
   481                           ; 1 bytes @ 0x7
   482   000008                     	ds	1
   483   000009                     ___aldiv@counter:
   484                           	callstack 0
   485                           
   486                           ; 1 bytes @ 0x8
   487   000009                     	ds	1
   488   00000A                     ___aldiv@sign:
   489                           	callstack 0
   490                           
   491                           ; 1 bytes @ 0x9
   492   00000A                     	ds	1
   493   00000B                     ___aldiv@quotient:
   494                           	callstack 0
   495                           
   496                           ; 4 bytes @ 0xA
   497   00000B                     	ds	1
   498   00000C                     vfpfcnvrt@fp:
   499                           	callstack 0
   500                           
   501                           ; 2 bytes @ 0xB
   502   00000C                     	ds	2
   503   00000E                     vfpfcnvrt@fmt:
   504                           	callstack 0
   505                           
   506                           ; 1 bytes @ 0xD
   507   00000E                     	ds	1
   508   00000F                     vfpfcnvrt@ap:
   509                           	callstack 0
   510                           
   511                           ; 1 bytes @ 0xE
   512   00000F                     	ds	1
   513   000010                     ?_vfprintf:
   514                           	callstack 0
   515   000010                     vfprintf@fp:
   516                           	callstack 0
   517                           
   518                           ; 2 bytes @ 0xF
   519   000010                     	ds	2
   520   000012                     vfprintf@fmt:
   521                           	callstack 0
   522                           
   523                           ; 2 bytes @ 0x11
   524   000012                     	ds	2
   525   000014                     vfprintf@ap:
   526                           	callstack 0
   527                           
   528                           ; 1 bytes @ 0x13
   529   000014                     	ds	1
   530   000015                     vfprintf@cfmt:
   531                           	callstack 0
   532                           
   533                           ; 2 bytes @ 0x14
   534   000015                     	ds	2
   535   000017                     ?_printf:
   536                           	callstack 0
   537   000017                     printf@fmt:
   538                           	callstack 0
   539                           
   540                           ; 2 bytes @ 0x16
   541   000017                     	ds	2
   542   000019                     printf@ap:
   543                           	callstack 0
   544                           
   545                           ; 1 bytes @ 0x18
   546   000019                     	ds	1
   547   00001A                     ??_SPI_ErrorHandler:
   548   00001A                     UART_Init@baudrate:
   549                           	callstack 0
   550                           
   551                           ; 4 bytes @ 0x19
   552   00001A                     	ds	2
   553   00001C                     SPI_ErrorHandler@errorCode:
   554                           	callstack 0
   555                           
   556                           ; 1 bytes @ 0x1B
   557   00001C                     	ds	1
   558   00001D                     SPI_BaudRateGen@FClock:
   559                           	callstack 0
   560                           
   561                           ; 4 bytes @ 0x1C
   562   00001D                     	ds	1
   563   00001E                     
   564                           ; 1 bytes @ 0x1D
   565   00001E                     	ds	3
   566   000021                     ??_SPI_BaudRateGen:
   567                           
   568                           ; 1 bytes @ 0x20
   569   000021                     	ds	4
   570   000025                     SPI_BaudRateGen@baudReg:
   571                           	callstack 0
   572                           
   573                           ; 4 bytes @ 0x24
   574   000025                     	ds	4
   575   000029                     
   576                           ; 1 bytes @ 0x28
   577 ;;
   578 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   579 ;;
   580 ;; *************** function _main *****************
   581 ;; Defined at:
   582 ;;		line 15 in file "main.c"
   583 ;; Parameters:    Size  Location     Type
   584 ;;		None
   585 ;; Auto vars:     Size  Location     Type
   586 ;;		None
   587 ;; Return value:  Size  Location     Type
   588 ;;                  1    wreg      void 
   589 ;; Registers used:
   590 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   591 ;; Tracked objects:
   592 ;;		On entry : 0/0
   593 ;;		On exit  : 0/0
   594 ;;		Unchanged: 0/0
   595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   596 ;;      Params:         0       0       0       0       0       0       0       0       0
   597 ;;      Locals:         0       0       0       0       0       0       0       0       0
   598 ;;      Temps:          0       0       0       0       0       0       0       0       0
   599 ;;      Totals:         0       0       0       0       0       0       0       0       0
   600 ;;Total ram usage:        0 bytes
   601 ;; Hardware stack levels required when called: 8
   602 ;; This function calls:
   603 ;;		_Clock_Init
   604 ;;		_SPI_BaudRateGen
   605 ;;		_UART_Init
   606 ;; This function is called by:
   607 ;;		Startup code after reset
   608 ;; This function uses a non-reentrant model
   609 ;;
   610                           
   611                           	psect	text0
   612   007698                     __ptext0:
   613                           	callstack 0
   614   007698                     _main:
   615                           	callstack 23
   616   007698                     
   617                           ;main.c: 16:     Clock_Init(16000);
   618   007698  0E3E               	movlw	62
   619   00769A  6E02               	movwf	(Clock_Init@s16Timeout+1)^0,c
   620   00769C  0E80               	movlw	128
   621   00769E  6E01               	movwf	Clock_Init@s16Timeout^0,c
   622   0076A0  EC69  F03E         	call	_Clock_Init	;wreg free
   623   0076A4                     
   624                           ;main.c: 17:     UART_Init(9600);
   625   0076A4  0E80               	movlw	128
   626   0076A6  6E1A               	movwf	UART_Init@baudrate^0,c
   627   0076A8  0E25               	movlw	37
   628   0076AA  6E1B               	movwf	(UART_Init@baudrate+1)^0,c
   629   0076AC  0E00               	movlw	0
   630   0076AE  6E1C               	movwf	(UART_Init@baudrate+2)^0,c
   631   0076B0  0E00               	movlw	0
   632   0076B2  6E1D               	movwf	(UART_Init@baudrate+3)^0,c
   633   0076B4  EC37  F03B         	call	_UART_Init	;wreg free
   634   0076B8                     
   635                           ;main.c: 18:     SPI_BaudRateGen(100000);
   636   0076B8  0EA0               	movlw	160
   637   0076BA  6E1D               	movwf	SPI_BaudRateGen@FClock^0,c
   638   0076BC  0E86               	movlw	134
   639   0076BE  6E1E               	movwf	(SPI_BaudRateGen@FClock+1)^0,c
   640   0076C0  0E01               	movlw	1
   641   0076C2  6E1F               	movwf	(SPI_BaudRateGen@FClock+2)^0,c
   642   0076C4  0E00               	movlw	0
   643   0076C6  6E20               	movwf	(SPI_BaudRateGen@FClock+3)^0,c
   644   0076C8  ECF9  F03B         	call	_SPI_BaudRateGen	;wreg free
   645   0076CC                     l11:
   646   0076CC  EF66  F03B         	goto	l11
   647   0076D0  EF00  F000         	goto	start
   648   0076D4                     __end_of_main:
   649                           	callstack 0
   650                           
   651 ;; *************** function _UART_Init *****************
   652 ;; Defined at:
   653 ;;		line 20 in file "librerias/UART.c"
   654 ;; Parameters:    Size  Location     Type
   655 ;;  baudrate        4   25[COMRAM] unsigned long 
   656 ;; Auto vars:     Size  Location     Type
   657 ;;		None
   658 ;; Return value:  Size  Location     Type
   659 ;;                  1    wreg      void 
   660 ;; Registers used:
   661 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   662 ;; Tracked objects:
   663 ;;		On entry : 0/0
   664 ;;		On exit  : 0/0
   665 ;;		Unchanged: 0/0
   666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   667 ;;      Params:         4       0       0       0       0       0       0       0       0
   668 ;;      Locals:         0       0       0       0       0       0       0       0       0
   669 ;;      Temps:          0       0       0       0       0       0       0       0       0
   670 ;;      Totals:         4       0       0       0       0       0       0       0       0
   671 ;;Total ram usage:        4 bytes
   672 ;; Hardware stack levels used: 1
   673 ;; Hardware stack levels required when called: 7
   674 ;; This function calls:
   675 ;;		_UART_config_show
   676 ;;		_UART_select_baud
   677 ;; This function is called by:
   678 ;;		_main
   679 ;; This function uses a non-reentrant model
   680 ;;
   681                           
   682                           	psect	text1
   683   00766E                     __ptext1:
   684                           	callstack 0
   685   00766E                     _UART_Init:
   686                           	callstack 23
   687   00766E                     
   688                           ;librerias/UART.c: 21:     TXSTA1bits.SYNC1 = 0;
   689   00766E  98AC               	bcf	172,4,c	;volatile
   690                           
   691                           ;librerias/UART.c: 22:     TXSTA1bits.BRGH1 = 1;
   692   007670  84AC               	bsf	172,2,c	;volatile
   693                           
   694                           ;librerias/UART.c: 23:     BAUDCON1bits.BRG161 = 1;
   695   007672  86B8               	bsf	184,3,c	;volatile
   696   007674                     
   697                           ;librerias/UART.c: 24:     UART_select_baud(baudrate);
   698   007674  C01A  F001         	movff	UART_Init@baudrate,UART_select_baud@baudrate
   699   007678  C01B  F002         	movff	UART_Init@baudrate+1,UART_select_baud@baudrate+1
   700   00767C  C01C  F003         	movff	UART_Init@baudrate+2,UART_select_baud@baudrate+2
   701   007680  C01D  F004         	movff	UART_Init@baudrate+3,UART_select_baud@baudrate+3
   702   007684  EC26  F03D         	call	_UART_select_baud	;wreg free
   703   007688                     
   704                           ;librerias/UART.c: 25:     TRISC6 = 1;
   705   007688  8C94               	bsf	3988,6,c	;volatile
   706   00768A                     
   707                           ;librerias/UART.c: 26:     TRISC7 = 1;
   708   00768A  8E94               	bsf	3988,7,c	;volatile
   709   00768C                     
   710                           ;librerias/UART.c: 27:     RCSTAbits.SPEN = 1;
   711   00768C  8EAB               	bsf	171,7,c	;volatile
   712   00768E                     
   713                           ;librerias/UART.c: 28:     TXSTAbits.TXEN1 = 1;
   714   00768E  8AAC               	bsf	172,5,c	;volatile
   715   007690                     
   716                           ;librerias/UART.c: 29:     RCSTAbits.CREN = 1;
   717   007690  88AB               	bsf	171,4,c	;volatile
   718   007692                     
   719                           ;librerias/UART.c: 30:     UART_config_show();
   720   007692  ECC6  F03D         	call	_UART_config_show	;wreg free
   721   007696  0012               	return		;funcret
   722   007698                     __end_of_UART_Init:
   723                           	callstack 0
   724                           
   725 ;; *************** function _UART_select_baud *****************
   726 ;; Defined at:
   727 ;;		line 33 in file "librerias/UART.c"
   728 ;; Parameters:    Size  Location     Type
   729 ;;  baudrate        4    0[COMRAM] unsigned long 
   730 ;; Auto vars:     Size  Location     Type
   731 ;;		None
   732 ;; Return value:  Size  Location     Type
   733 ;;                  1    wreg      void 
   734 ;; Registers used:
   735 ;;		wreg, status,2, status,0
   736 ;; Tracked objects:
   737 ;;		On entry : 0/0
   738 ;;		On exit  : 0/0
   739 ;;		Unchanged: 0/0
   740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   741 ;;      Params:         4       0       0       0       0       0       0       0       0
   742 ;;      Locals:         0       0       0       0       0       0       0       0       0
   743 ;;      Temps:          4       0       0       0       0       0       0       0       0
   744 ;;      Totals:         8       0       0       0       0       0       0       0       0
   745 ;;Total ram usage:        8 bytes
   746 ;; Hardware stack levels used: 1
   747 ;; This function calls:
   748 ;;		Nothing
   749 ;; This function is called by:
   750 ;;		_UART_Init
   751 ;; This function uses a non-reentrant model
   752 ;;
   753                           
   754                           	psect	text2
   755   007A4C                     __ptext2:
   756                           	callstack 0
   757   007A4C                     _UART_select_baud:
   758                           	callstack 29
   759   007A4C                     
   760                           ;librerias/UART.c: 34:     switch (baudrate){
   761   007A4C  EF58  F03D         	goto	l1448
   762   007A50                     l1430:
   763                           
   764                           ;librerias/UART.c: 36:             SPBRGH = 0x9C;
   765   007A50  0E9C               	movlw	156
   766   007A52  6EB0               	movwf	176,c	;volatile
   767                           
   768                           ;librerias/UART.c: 37:             SPBRG = 0x3F;
   769   007A54  0E3F               	movlw	63
   770   007A56  6EAF               	movwf	175,c	;volatile
   771                           
   772                           ;librerias/UART.c: 38:             break;
   773   007A58  EFC5  F03D         	goto	l101
   774   007A5C                     l1432:
   775                           
   776                           ;librerias/UART.c: 40:             SPBRGH = 0x27;
   777   007A5C  0E27               	movlw	39
   778   007A5E  6EB0               	movwf	176,c	;volatile
   779                           
   780                           ;librerias/UART.c: 41:             SPBRG = 0x0F;
   781   007A60  0E0F               	movlw	15
   782   007A62  6EAF               	movwf	175,c	;volatile
   783                           
   784                           ;librerias/UART.c: 42:             break;
   785   007A64  EFC5  F03D         	goto	l101
   786   007A68                     l1434:
   787                           
   788                           ;librerias/UART.c: 44:             SPBRGH = 0x13;
   789   007A68  0E13               	movlw	19
   790   007A6A  6EB0               	movwf	176,c	;volatile
   791                           
   792                           ;librerias/UART.c: 45:             SPBRG = 0x87;
   793   007A6C  0E87               	movlw	135
   794   007A6E  6EAF               	movwf	175,c	;volatile
   795                           
   796                           ;librerias/UART.c: 46:             break;
   797   007A70  EFC5  F03D         	goto	l101
   798   007A74                     l1436:
   799                           
   800                           ;librerias/UART.c: 48:             SPBRGH = 0x04;
   801   007A74  0E04               	movlw	4
   802   007A76  6EB0               	movwf	176,c	;volatile
   803                           
   804                           ;librerias/UART.c: 49:             SPBRG = 0x7F;
   805   007A78  0E7F               	movlw	127
   806   007A7A  6EAF               	movwf	175,c	;volatile
   807                           
   808                           ;librerias/UART.c: 50:             break;
   809   007A7C  EFC5  F03D         	goto	l101
   810   007A80                     l1438:
   811                           
   812                           ;librerias/UART.c: 52:             SPBRGH = 0x02;
   813   007A80  0E02               	movlw	2
   814   007A82  6EB0               	movwf	176,c	;volatile
   815                           
   816                           ;librerias/UART.c: 53:             SPBRG = 0x70;
   817   007A84  0E70               	movlw	112
   818   007A86  6EAF               	movwf	175,c	;volatile
   819                           
   820                           ;librerias/UART.c: 54:             break;
   821   007A88  EFC5  F03D         	goto	l101
   822   007A8C                     l1440:
   823                           
   824                           ;librerias/UART.c: 56:             SPBRGH = 0x00;
   825   007A8C  0E00               	movlw	0
   826   007A8E  6EB0               	movwf	176,c	;volatile
   827                           
   828                           ;librerias/UART.c: 57:             SPBRG = 0xCF;
   829   007A90  0ECF               	movlw	207
   830   007A92  6EAF               	movwf	175,c	;volatile
   831                           
   832                           ;librerias/UART.c: 58:             break;
   833   007A94  EFC5  F03D         	goto	l101
   834   007A98                     l1442:
   835                           
   836                           ;librerias/UART.c: 60:             SPBRGH = 0x00;
   837   007A98  0E00               	movlw	0
   838   007A9A  6EB0               	movwf	176,c	;volatile
   839                           
   840                           ;librerias/UART.c: 61:             SPBRG = 0x67;
   841   007A9C  0E67               	movlw	103
   842   007A9E  6EAF               	movwf	175,c	;volatile
   843                           
   844                           ;librerias/UART.c: 62:             break;
   845   007AA0  EFC5  F03D         	goto	l101
   846   007AA4                     l1444:
   847                           
   848                           ;librerias/UART.c: 64:             SPBRGH = 0x04;
   849   007AA4  0E04               	movlw	4
   850   007AA6  6EB0               	movwf	176,c	;volatile
   851                           
   852                           ;librerias/UART.c: 65:             SPBRG = 0xE1;
   853   007AA8  0EE1               	movlw	225
   854   007AAA  6EAF               	movwf	175,c	;volatile
   855                           
   856                           ;librerias/UART.c: 66:             break;
   857   007AAC  EFC5  F03D         	goto	l101
   858   007AB0                     l1448:
   859   007AB0  C001  F005         	movff	UART_select_baud@baudrate,??_UART_select_baud
   860   007AB4  C002  F006         	movff	UART_select_baud@baudrate+1,??_UART_select_baud+1
   861   007AB8  C003  F007         	movff	UART_select_baud@baudrate+2,??_UART_select_baud+2
   862   007ABC  C004  F008         	movff	UART_select_baud@baudrate+3,??_UART_select_baud+3
   863                           
   864                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 3 sub-sw
      +                          itches
   865                           ; Switch size 1, requested type "simple"
   866                           ; Number of cases is 1, Range of values is 0 to 0
   867                           ; switch strategies available:
   868                           ; Name         Instructions Cycles
   869                           ; simple_byte            4     3 (average)
   870                           ;	Chosen strategy is simple_byte
   871   007AC0  5008               	movf	(??_UART_select_baud+3)^0,w,c
   872   007AC2  0A00               	xorlw	0	; case 0
   873   007AC4  B4D8               	btfsc	status,2,c
   874   007AC6  EFBA  F03D         	goto	l1736
   875   007ACA  EF52  F03D         	goto	l1444
   876   007ACE                     l1732:
   877                           
   878                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 6 sub-sw
      +                          itches
   879                           ; Switch size 1, requested type "simple"
   880                           ; Number of cases is 6, Range of values is 1 to 225
   881                           ; switch strategies available:
   882                           ; Name         Instructions Cycles
   883                           ; simple_byte           19    10 (average)
   884                           ;	Chosen strategy is simple_byte
   885   007ACE  5006               	movf	(??_UART_select_baud+1)^0,w,c
   886   007AD0  0A01               	xorlw	1	; case 1
   887   007AD2  B4D8               	btfsc	status,2,c
   888   007AD4  EF82  F03D         	goto	l1738
   889   007AD8  0A05               	xorlw	5	; case 4
   890   007ADA  B4D8               	btfsc	status,2,c
   891   007ADC  EF89  F03D         	goto	l1740
   892   007AE0  0A0D               	xorlw	13	; case 9
   893   007AE2  B4D8               	btfsc	status,2,c
   894   007AE4  EF90  F03D         	goto	l1742
   895   007AE8  0A21               	xorlw	33	; case 40
   896   007AEA  B4D8               	btfsc	status,2,c
   897   007AEC  EF97  F03D         	goto	l1744
   898   007AF0  0A63               	xorlw	99	; case 75
   899   007AF2  B4D8               	btfsc	status,2,c
   900   007AF4  EF9E  F03D         	goto	l1746
   901   007AF8  0AAA               	xorlw	170	; case 225
   902   007AFA  B4D8               	btfsc	status,2,c
   903   007AFC  EFA5  F03D         	goto	l1748
   904   007B00  EF52  F03D         	goto	l1444
   905   007B04                     l1738:
   906                           
   907                           ; Switch size 1, requested type "simple"
   908                           ; Number of cases is 1, Range of values is 44 to 44
   909                           ; switch strategies available:
   910                           ; Name         Instructions Cycles
   911                           ; simple_byte            4     3 (average)
   912                           ;	Chosen strategy is simple_byte
   913   007B04  5005               	movf	??_UART_select_baud^0,w,c
   914   007B06  0A2C               	xorlw	44	; case 44
   915   007B08  B4D8               	btfsc	status,2,c
   916   007B0A  EF28  F03D         	goto	l1430
   917   007B0E  EF52  F03D         	goto	l1444
   918   007B12                     l1740:
   919                           
   920                           ; Switch size 1, requested type "simple"
   921                           ; Number of cases is 1, Range of values is 176 to 176
   922                           ; switch strategies available:
   923                           ; Name         Instructions Cycles
   924                           ; simple_byte            4     3 (average)
   925                           ;	Chosen strategy is simple_byte
   926   007B12  5005               	movf	??_UART_select_baud^0,w,c
   927   007B14  0AB0               	xorlw	176	; case 176
   928   007B16  B4D8               	btfsc	status,2,c
   929   007B18  EF2E  F03D         	goto	l1432
   930   007B1C  EF52  F03D         	goto	l1444
   931   007B20                     l1742:
   932                           
   933                           ; Switch size 1, requested type "simple"
   934                           ; Number of cases is 1, Range of values is 96 to 96
   935                           ; switch strategies available:
   936                           ; Name         Instructions Cycles
   937                           ; simple_byte            4     3 (average)
   938                           ;	Chosen strategy is simple_byte
   939   007B20  5005               	movf	??_UART_select_baud^0,w,c
   940   007B22  0A60               	xorlw	96	; case 96
   941   007B24  B4D8               	btfsc	status,2,c
   942   007B26  EF34  F03D         	goto	l1434
   943   007B2A  EF52  F03D         	goto	l1444
   944   007B2E                     l1744:
   945                           
   946                           ; Switch size 1, requested type "simple"
   947                           ; Number of cases is 1, Range of values is 177 to 177
   948                           ; switch strategies available:
   949                           ; Name         Instructions Cycles
   950                           ; simple_byte            4     3 (average)
   951                           ;	Chosen strategy is simple_byte
   952   007B2E  5005               	movf	??_UART_select_baud^0,w,c
   953   007B30  0AB1               	xorlw	177	; case 177
   954   007B32  B4D8               	btfsc	status,2,c
   955   007B34  EF3A  F03D         	goto	l1436
   956   007B38  EF52  F03D         	goto	l1444
   957   007B3C                     l1746:
   958                           
   959                           ; Switch size 1, requested type "simple"
   960                           ; Number of cases is 1, Range of values is 0 to 0
   961                           ; switch strategies available:
   962                           ; Name         Instructions Cycles
   963                           ; simple_byte            4     3 (average)
   964                           ;	Chosen strategy is simple_byte
   965   007B3C  5005               	movf	??_UART_select_baud^0,w,c
   966   007B3E  0A00               	xorlw	0	; case 0
   967   007B40  B4D8               	btfsc	status,2,c
   968   007B42  EF40  F03D         	goto	l1438
   969   007B46  EF52  F03D         	goto	l1444
   970   007B4A                     l1748:
   971                           
   972                           ; Switch size 1, requested type "simple"
   973                           ; Number of cases is 1, Range of values is 0 to 0
   974                           ; switch strategies available:
   975                           ; Name         Instructions Cycles
   976                           ; simple_byte            4     3 (average)
   977                           ;	Chosen strategy is simple_byte
   978   007B4A  5005               	movf	??_UART_select_baud^0,w,c
   979   007B4C  0A00               	xorlw	0	; case 0
   980   007B4E  B4D8               	btfsc	status,2,c
   981   007B50  EF46  F03D         	goto	l1440
   982   007B54  EF52  F03D         	goto	l1444
   983   007B58                     l1734:
   984                           
   985                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   986                           ; Switch size 1, requested type "simple"
   987                           ; Number of cases is 1, Range of values is 194 to 194
   988                           ; switch strategies available:
   989                           ; Name         Instructions Cycles
   990                           ; simple_byte            4     3 (average)
   991                           ;	Chosen strategy is simple_byte
   992   007B58  5006               	movf	(??_UART_select_baud+1)^0,w,c
   993   007B5A  0AC2               	xorlw	194	; case 194
   994   007B5C  B4D8               	btfsc	status,2,c
   995   007B5E  EFB3  F03D         	goto	l1750
   996   007B62  EF52  F03D         	goto	l1444
   997   007B66                     l1750:
   998                           
   999                           ; Switch size 1, requested type "simple"
  1000                           ; Number of cases is 1, Range of values is 0 to 0
  1001                           ; switch strategies available:
  1002                           ; Name         Instructions Cycles
  1003                           ; simple_byte            4     3 (average)
  1004                           ;	Chosen strategy is simple_byte
  1005   007B66  5005               	movf	??_UART_select_baud^0,w,c
  1006   007B68  0A00               	xorlw	0	; case 0
  1007   007B6A  B4D8               	btfsc	status,2,c
  1008   007B6C  EF4C  F03D         	goto	l1442
  1009   007B70  EF52  F03D         	goto	l1444
  1010   007B74                     l1736:
  1011                           
  1012                           ; Switch size 1, requested type "simple"
  1013                           ; Number of cases is 2, Range of values is 0 to 1
  1014                           ; switch strategies available:
  1015                           ; Name         Instructions Cycles
  1016                           ; simple_byte            7     4 (average)
  1017                           ;	Chosen strategy is simple_byte
  1018   007B74  5007               	movf	(??_UART_select_baud+2)^0,w,c
  1019   007B76  0A00               	xorlw	0	; case 0
  1020   007B78  B4D8               	btfsc	status,2,c
  1021   007B7A  EF67  F03D         	goto	l1732
  1022   007B7E  0A01               	xorlw	1	; case 1
  1023   007B80  B4D8               	btfsc	status,2,c
  1024   007B82  EFAC  F03D         	goto	l1734
  1025   007B86  EF52  F03D         	goto	l1444
  1026   007B8A                     l101:
  1027   007B8A  0012               	return		;funcret
  1028   007B8C                     __end_of_UART_select_baud:
  1029                           	callstack 0
  1030                           
  1031 ;; *************** function _UART_config_show *****************
  1032 ;; Defined at:
  1033 ;;		line 5 in file "librerias/UART.c"
  1034 ;; Parameters:    Size  Location     Type
  1035 ;;		None
  1036 ;; Auto vars:     Size  Location     Type
  1037 ;;		None
  1038 ;; Return value:  Size  Location     Type
  1039 ;;                  1    wreg      void 
  1040 ;; Registers used:
  1041 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1042 ;; Tracked objects:
  1043 ;;		On entry : 0/0
  1044 ;;		On exit  : 0/0
  1045 ;;		Unchanged: 0/0
  1046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1047 ;;      Params:         0       0       0       0       0       0       0       0       0
  1048 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1049 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1050 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1051 ;;Total ram usage:        0 bytes
  1052 ;; Hardware stack levels used: 1
  1053 ;; Hardware stack levels required when called: 6
  1054 ;; This function calls:
  1055 ;;		_printf
  1056 ;; This function is called by:
  1057 ;;		_UART_Init
  1058 ;; This function uses a non-reentrant model
  1059 ;;
  1060                           
  1061                           	psect	text3
  1062   007B8C                     __ptext3:
  1063                           	callstack 0
  1064   007B8C                     _UART_config_show:
  1065                           	callstack 23
  1066   007B8C                     
  1067                           ;librerias/UART.c: 6:     printf("Modo: ");
  1068   007B8C  0EF7               	movlw	low STR_1
  1069   007B8E  6E17               	movwf	printf@fmt^0,c
  1070   007B90  0E7F               	movlw	high STR_1
  1071   007B92  6E18               	movwf	(printf@fmt+1)^0,c
  1072   007B94  EC28  F03B         	call	_printf	;wreg free
  1073   007B98                     
  1074                           ;librerias/UART.c: 7:     (SYNC1) ? printf("Sincrono "):printf("Asincrono ");
  1075   007B98  A8AC               	btfss	4012,4,c	;volatile
  1076   007B9A  EFD1  F03D         	goto	u601
  1077   007B9E  EFD3  F03D         	goto	u600
  1078   007BA2                     u601:
  1079   007BA2  EFDB  F03D         	goto	l1396
  1080   007BA6                     u600:
  1081   007BA6  0ECB               	movlw	low STR_2
  1082   007BA8  6E17               	movwf	printf@fmt^0,c
  1083   007BAA  0E7F               	movlw	high STR_2
  1084   007BAC  6E18               	movwf	(printf@fmt+1)^0,c
  1085   007BAE  EC28  F03B         	call	_printf	;wreg free
  1086   007BB2  EFE1  F03D         	goto	l1398
  1087   007BB6                     l1396:
  1088   007BB6  0EB6               	movlw	low STR_3
  1089   007BB8  6E17               	movwf	printf@fmt^0,c
  1090   007BBA  0E7F               	movlw	high STR_3
  1091   007BBC  6E18               	movwf	(printf@fmt+1)^0,c
  1092   007BBE  EC28  F03B         	call	_printf	;wreg free
  1093   007BC2                     l1398:
  1094                           
  1095                           ;librerias/UART.c: 8:     (BRGH1) ? printf("alta velocidad \r\n"):printf("baja velocidad
      +                           \r\n");
  1096   007BC2  A4AC               	btfss	4012,2,c	;volatile
  1097   007BC4  EFE6  F03D         	goto	u611
  1098   007BC8  EFE8  F03D         	goto	u610
  1099   007BCC                     u611:
  1100   007BCC  EFF0  F03D         	goto	l1402
  1101   007BD0                     u610:
  1102   007BD0  0E62               	movlw	low STR_4
  1103   007BD2  6E17               	movwf	printf@fmt^0,c
  1104   007BD4  0E7F               	movlw	high STR_4
  1105   007BD6  6E18               	movwf	(printf@fmt+1)^0,c
  1106   007BD8  EC28  F03B         	call	_printf	;wreg free
  1107   007BDC  EFF6  F03D         	goto	l68
  1108   007BE0                     l1402:
  1109   007BE0  0E50               	movlw	low STR_5
  1110   007BE2  6E17               	movwf	printf@fmt^0,c
  1111   007BE4  0E7F               	movlw	high STR_5
  1112   007BE6  6E18               	movwf	(printf@fmt+1)^0,c
  1113   007BE8  EC28  F03B         	call	_printf	;wreg free
  1114   007BEC                     l68:
  1115                           
  1116                           ;librerias/UART.c: 9:     printf("Baudrate: ");
  1117   007BEC  0EA0               	movlw	low STR_6
  1118   007BEE  6E17               	movwf	printf@fmt^0,c
  1119   007BF0  0E7F               	movlw	high STR_6
  1120   007BF2  6E18               	movwf	(printf@fmt+1)^0,c
  1121   007BF4  EC28  F03B         	call	_printf	;wreg free
  1122   007BF8                     
  1123                           ;librerias/UART.c: 10:     (BRG161) ? printf("16 bits "):printf("8 bits ");
  1124   007BF8  A6B8               	btfss	4024,3,c	;volatile
  1125   007BFA  EF01  F03E         	goto	u621
  1126   007BFE  EF03  F03E         	goto	u620
  1127   007C02                     u621:
  1128   007C02  EF0B  F03E         	goto	l1408
  1129   007C06                     u620:
  1130   007C06  0EDE               	movlw	low STR_7
  1131   007C08  6E17               	movwf	printf@fmt^0,c
  1132   007C0A  0E7F               	movlw	high STR_7
  1133   007C0C  6E18               	movwf	(printf@fmt+1)^0,c
  1134   007C0E  EC28  F03B         	call	_printf	;wreg free
  1135   007C12  EF11  F03E         	goto	l72
  1136   007C16                     l1408:
  1137   007C16  0EEF               	movlw	low STR_8
  1138   007C18  6E17               	movwf	printf@fmt^0,c
  1139   007C1A  0E7F               	movlw	high STR_8
  1140   007C1C  6E18               	movwf	(printf@fmt+1)^0,c
  1141   007C1E  EC28  F03B         	call	_printf	;wreg free
  1142   007C22                     l72:
  1143                           
  1144                           ;librerias/UART.c: 11:     printf("x baudios \r\n");
  1145   007C22  0E93               	movlw	low STR_9
  1146   007C24  6E17               	movwf	printf@fmt^0,c
  1147   007C26  0E7F               	movlw	high STR_9
  1148   007C28  6E18               	movwf	(printf@fmt+1)^0,c
  1149   007C2A  EC28  F03B         	call	_printf	;wreg free
  1150                           
  1151                           ;librerias/UART.c: 12:     printf("Puerto: ");
  1152   007C2E  0ED5               	movlw	low STR_10
  1153   007C30  6E17               	movwf	printf@fmt^0,c
  1154   007C32  0E7F               	movlw	high STR_10
  1155   007C34  6E18               	movwf	(printf@fmt+1)^0,c
  1156   007C36  EC28  F03B         	call	_printf	;wreg free
  1157   007C3A                     
  1158                           ;librerias/UART.c: 13:     (SPEN) ? printf("Habilitado \r\n"):printf("Deshabilitado \r\n
      +                          ");
  1159   007C3A  AEAB               	btfss	4011,7,c	;volatile
  1160   007C3C  EF22  F03E         	goto	u631
  1161   007C40  EF24  F03E         	goto	u630
  1162   007C44                     u631:
  1163   007C44  EF2C  F03E         	goto	l1414
  1164   007C48                     u630:
  1165   007C48  0E85               	movlw	low STR_11
  1166   007C4A  6E17               	movwf	printf@fmt^0,c
  1167   007C4C  0E7F               	movlw	high STR_11
  1168   007C4E  6E18               	movwf	(printf@fmt+1)^0,c
  1169   007C50  EC28  F03B         	call	_printf	;wreg free
  1170   007C54  EF32  F03E         	goto	l76
  1171   007C58                     l1414:
  1172   007C58  0E74               	movlw	low STR_12
  1173   007C5A  6E17               	movwf	printf@fmt^0,c
  1174   007C5C  0E7F               	movlw	high STR_12
  1175   007C5E  6E18               	movwf	(printf@fmt+1)^0,c
  1176   007C60  EC28  F03B         	call	_printf	;wreg free
  1177   007C64                     l76:
  1178                           
  1179                           ;librerias/UART.c: 14:     printf("Transor: ");
  1180   007C64  0EC1               	movlw	low STR_13
  1181   007C66  6E17               	movwf	printf@fmt^0,c
  1182   007C68  0E7F               	movlw	high STR_13
  1183   007C6A  6E18               	movwf	(printf@fmt+1)^0,c
  1184   007C6C  EC28  F03B         	call	_printf	;wreg free
  1185   007C70                     
  1186                           ;librerias/UART.c: 15:     (TXEN1) ? printf("Habilitado \r\n"):printf("Deshabilitado \r\
      +                          n");
  1187   007C70  AAAC               	btfss	4012,5,c	;volatile
  1188   007C72  EF3D  F03E         	goto	u641
  1189   007C76  EF3F  F03E         	goto	u640
  1190   007C7A                     u641:
  1191   007C7A  EF47  F03E         	goto	l1420
  1192   007C7E                     u640:
  1193   007C7E  0E85               	movlw	low STR_11
  1194   007C80  6E17               	movwf	printf@fmt^0,c
  1195   007C82  0E7F               	movlw	high STR_11
  1196   007C84  6E18               	movwf	(printf@fmt+1)^0,c
  1197   007C86  EC28  F03B         	call	_printf	;wreg free
  1198   007C8A  EF4D  F03E         	goto	l80
  1199   007C8E                     l1420:
  1200   007C8E  0E74               	movlw	low STR_12
  1201   007C90  6E17               	movwf	printf@fmt^0,c
  1202   007C92  0E7F               	movlw	high STR_12
  1203   007C94  6E18               	movwf	(printf@fmt+1)^0,c
  1204   007C96  EC28  F03B         	call	_printf	;wreg free
  1205   007C9A                     l80:
  1206                           
  1207                           ;librerias/UART.c: 16:     printf("Receptor: ");
  1208   007C9A  0EAB               	movlw	low STR_16
  1209   007C9C  6E17               	movwf	printf@fmt^0,c
  1210   007C9E  0E7F               	movlw	high STR_16
  1211   007CA0  6E18               	movwf	(printf@fmt+1)^0,c
  1212   007CA2  EC28  F03B         	call	_printf	;wreg free
  1213   007CA6                     
  1214                           ;librerias/UART.c: 17:     (CREN) ? printf("Habilitado \r\n"):printf("Deshabilitado \r\n
      +                          ");
  1215   007CA6  A8AB               	btfss	4011,4,c	;volatile
  1216   007CA8  EF58  F03E         	goto	u651
  1217   007CAC  EF5A  F03E         	goto	u650
  1218   007CB0                     u651:
  1219   007CB0  EF62  F03E         	goto	l1426
  1220   007CB4                     u650:
  1221   007CB4  0E85               	movlw	low STR_11
  1222   007CB6  6E17               	movwf	printf@fmt^0,c
  1223   007CB8  0E7F               	movlw	high STR_11
  1224   007CBA  6E18               	movwf	(printf@fmt+1)^0,c
  1225   007CBC  EC28  F03B         	call	_printf	;wreg free
  1226   007CC0  EF68  F03E         	goto	l85
  1227   007CC4                     l1426:
  1228   007CC4  0E74               	movlw	low STR_12
  1229   007CC6  6E17               	movwf	printf@fmt^0,c
  1230   007CC8  0E7F               	movlw	high STR_12
  1231   007CCA  6E18               	movwf	(printf@fmt+1)^0,c
  1232   007CCC  EC28  F03B         	call	_printf	;wreg free
  1233   007CD0                     l85:
  1234   007CD0  0012               	return		;funcret
  1235   007CD2                     __end_of_UART_config_show:
  1236                           	callstack 0
  1237                           
  1238 ;; *************** function _SPI_BaudRateGen *****************
  1239 ;; Defined at:
  1240 ;;		line 3 in file "librerias/SPI.c"
  1241 ;; Parameters:    Size  Location     Type
  1242 ;;  FClock          4   28[COMRAM] long 
  1243 ;; Auto vars:     Size  Location     Type
  1244 ;;  baudReg         4   36[COMRAM] unsigned long 
  1245 ;; Return value:  Size  Location     Type
  1246 ;;                  1    wreg      void 
  1247 ;; Registers used:
  1248 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1249 ;; Tracked objects:
  1250 ;;		On entry : 0/0
  1251 ;;		On exit  : 0/0
  1252 ;;		Unchanged: 0/0
  1253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1254 ;;      Params:         4       0       0       0       0       0       0       0       0
  1255 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1256 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1257 ;;      Totals:        12       0       0       0       0       0       0       0       0
  1258 ;;Total ram usage:       12 bytes
  1259 ;; Hardware stack levels used: 1
  1260 ;; Hardware stack levels required when called: 7
  1261 ;; This function calls:
  1262 ;;		_SPI_ErrorHandler
  1263 ;;		___aldiv
  1264 ;; This function is called by:
  1265 ;;		_main
  1266 ;; This function uses a non-reentrant model
  1267 ;;
  1268                           
  1269                           	psect	text4
  1270   0077F2                     __ptext4:
  1271                           	callstack 0
  1272   0077F2                     _SPI_BaudRateGen:
  1273                           	callstack 23
  1274   0077F2                     
  1275                           ;librerias/SPI.c: 4:     uint32_t baudReg = (48000000 / (FClock * 4)) - 1;
  1276   0077F2  0E00               	movlw	0
  1277   0077F4  6E01               	movwf	___aldiv@dividend^0,c
  1278   0077F6  0E6C               	movlw	108
  1279   0077F8  6E02               	movwf	(___aldiv@dividend+1)^0,c
  1280   0077FA  0EDC               	movlw	220
  1281   0077FC  6E03               	movwf	(___aldiv@dividend+2)^0,c
  1282   0077FE  0E02               	movlw	2
  1283   007800  6E04               	movwf	(___aldiv@dividend+3)^0,c
  1284   007802  C01D  F021         	movff	SPI_BaudRateGen@FClock,??_SPI_BaudRateGen
  1285   007806  C01E  F022         	movff	SPI_BaudRateGen@FClock+1,??_SPI_BaudRateGen+1
  1286   00780A  C01F  F023         	movff	SPI_BaudRateGen@FClock+2,??_SPI_BaudRateGen+2
  1287   00780E  C020  F024         	movff	SPI_BaudRateGen@FClock+3,??_SPI_BaudRateGen+3
  1288   007812  0E02               	movlw	2
  1289   007814                     u995:
  1290   007814  90D8               	bcf	status,0,c
  1291   007816  3621               	rlcf	??_SPI_BaudRateGen^0,f,c
  1292   007818  3622               	rlcf	(??_SPI_BaudRateGen+1)^0,f,c
  1293   00781A  3623               	rlcf	(??_SPI_BaudRateGen+2)^0,f,c
  1294   00781C  3624               	rlcf	(??_SPI_BaudRateGen+3)^0,f,c
  1295   00781E  2EE8               	decfsz	wreg,f,c
  1296   007820  EF0A  F03C         	goto	u995
  1297   007824  C021  F005         	movff	??_SPI_BaudRateGen,___aldiv@divisor
  1298   007828  C022  F006         	movff	??_SPI_BaudRateGen+1,___aldiv@divisor+1
  1299   00782C  C023  F007         	movff	??_SPI_BaudRateGen+2,___aldiv@divisor+2
  1300   007830  C024  F008         	movff	??_SPI_BaudRateGen+3,___aldiv@divisor+3
  1301   007834  ECA0  F03C         	call	___aldiv	;wreg free
  1302   007838  0EFF               	movlw	255
  1303   00783A  2401               	addwf	?___aldiv^0,w,c
  1304   00783C  6E25               	movwf	SPI_BaudRateGen@baudReg^0,c
  1305   00783E  0EFF               	movlw	255
  1306   007840  2002               	addwfc	(?___aldiv+1)^0,w,c
  1307   007842  6E26               	movwf	(SPI_BaudRateGen@baudReg+1)^0,c
  1308   007844  0EFF               	movlw	255
  1309   007846  2003               	addwfc	(?___aldiv+2)^0,w,c
  1310   007848  6E27               	movwf	(SPI_BaudRateGen@baudReg+2)^0,c
  1311   00784A  0EFF               	movlw	255
  1312   00784C  2004               	addwfc	(?___aldiv+3)^0,w,c
  1313   00784E  6E28               	movwf	(SPI_BaudRateGen@baudReg+3)^0,c
  1314   007850                     
  1315                           ;librerias/SPI.c: 5:     if(baudReg > 0xFF){
  1316   007850  5028               	movf	(SPI_BaudRateGen@baudReg+3)^0,w,c
  1317   007852  1027               	iorwf	(SPI_BaudRateGen@baudReg+2)^0,w,c
  1318   007854  E108               	bnz	u1000
  1319   007856  0426               	decf	(SPI_BaudRateGen@baudReg+1)^0,w,c
  1320   007858  A0D8               	btfss	status,0,c
  1321   00785A  EF31  F03C         	goto	u1001
  1322   00785E  EF33  F03C         	goto	u1000
  1323   007862                     u1001:
  1324   007862  EF38  F03C         	goto	l169
  1325   007866                     u1000:
  1326   007866                     
  1327                           ;librerias/SPI.c: 6:         SPI_ErrorHandler(ERROR_CODE_SPI_BR_OVERRANGE);
  1328   007866  0E01               	movlw	1
  1329   007868  EC8D  F03B         	call	_SPI_ErrorHandler
  1330   00786C  EF3A  F03C         	goto	l170
  1331   007870                     l169:
  1332                           
  1333                           ;librerias/SPI.c: 9:     SSP1ADD = baudReg;
  1334   007870  C025  FFC8         	movff	SPI_BaudRateGen@baudReg,4040	;volatile
  1335   007874                     l170:
  1336   007874  0012               	return		;funcret
  1337   007876                     __end_of_SPI_BaudRateGen:
  1338                           	callstack 0
  1339                           
  1340 ;; *************** function ___aldiv *****************
  1341 ;; Defined at:
  1342 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\aldiv.c"
  1343 ;; Parameters:    Size  Location     Type
  1344 ;;  dividend        4    0[COMRAM] long 
  1345 ;;  divisor         4    4[COMRAM] long 
  1346 ;; Auto vars:     Size  Location     Type
  1347 ;;  quotient        4   10[COMRAM] long 
  1348 ;;  sign            1    9[COMRAM] unsigned char 
  1349 ;;  counter         1    8[COMRAM] unsigned char 
  1350 ;; Return value:  Size  Location     Type
  1351 ;;                  4    0[COMRAM] long 
  1352 ;; Registers used:
  1353 ;;		wreg, status,2, status,0
  1354 ;; Tracked objects:
  1355 ;;		On entry : 0/0
  1356 ;;		On exit  : 0/0
  1357 ;;		Unchanged: 0/0
  1358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1359 ;;      Params:         8       0       0       0       0       0       0       0       0
  1360 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1361 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1362 ;;      Totals:        14       0       0       0       0       0       0       0       0
  1363 ;;Total ram usage:       14 bytes
  1364 ;; Hardware stack levels used: 1
  1365 ;; This function calls:
  1366 ;;		Nothing
  1367 ;; This function is called by:
  1368 ;;		_SPI_BaudRateGen
  1369 ;; This function uses a non-reentrant model
  1370 ;;
  1371                           
  1372                           	psect	text5
  1373   007940                     __ptext5:
  1374                           	callstack 0
  1375   007940                     ___aldiv:
  1376                           	callstack 29
  1377   007940  0E00               	movlw	0
  1378   007942  6E0A               	movwf	___aldiv@sign^0,c
  1379   007944  BE08               	btfsc	(___aldiv@divisor+3)^0,7,c
  1380   007946  EFA9  F03C         	goto	u670
  1381   00794A  EFA7  F03C         	goto	u671
  1382   00794E                     u671:
  1383   00794E  EFB3  F03C         	goto	l1514
  1384   007952                     u670:
  1385   007952  1E08               	comf	(___aldiv@divisor+3)^0,f,c
  1386   007954  1E07               	comf	(___aldiv@divisor+2)^0,f,c
  1387   007956  1E06               	comf	(___aldiv@divisor+1)^0,f,c
  1388   007958  6C05               	negf	___aldiv@divisor^0,c
  1389   00795A  0E00               	movlw	0
  1390   00795C  2206               	addwfc	(___aldiv@divisor+1)^0,f,c
  1391   00795E  2207               	addwfc	(___aldiv@divisor+2)^0,f,c
  1392   007960  2208               	addwfc	(___aldiv@divisor+3)^0,f,c
  1393   007962  0E01               	movlw	1
  1394   007964  6E0A               	movwf	___aldiv@sign^0,c
  1395   007966                     l1514:
  1396   007966  BE04               	btfsc	(___aldiv@dividend+3)^0,7,c
  1397   007968  EFBA  F03C         	goto	u680
  1398   00796C  EFB8  F03C         	goto	u681
  1399   007970                     u681:
  1400   007970  EFC4  F03C         	goto	l1520
  1401   007974                     u680:
  1402   007974  1E04               	comf	(___aldiv@dividend+3)^0,f,c
  1403   007976  1E03               	comf	(___aldiv@dividend+2)^0,f,c
  1404   007978  1E02               	comf	(___aldiv@dividend+1)^0,f,c
  1405   00797A  6C01               	negf	___aldiv@dividend^0,c
  1406   00797C  0E00               	movlw	0
  1407   00797E  2202               	addwfc	(___aldiv@dividend+1)^0,f,c
  1408   007980  2203               	addwfc	(___aldiv@dividend+2)^0,f,c
  1409   007982  2204               	addwfc	(___aldiv@dividend+3)^0,f,c
  1410   007984  0E01               	movlw	1
  1411   007986  1A0A               	xorwf	___aldiv@sign^0,f,c
  1412   007988                     l1520:
  1413   007988  0E00               	movlw	0
  1414   00798A  6E0B               	movwf	___aldiv@quotient^0,c
  1415   00798C  0E00               	movlw	0
  1416   00798E  6E0C               	movwf	(___aldiv@quotient+1)^0,c
  1417   007990  0E00               	movlw	0
  1418   007992  6E0D               	movwf	(___aldiv@quotient+2)^0,c
  1419   007994  0E00               	movlw	0
  1420   007996  6E0E               	movwf	(___aldiv@quotient+3)^0,c
  1421   007998  5005               	movf	___aldiv@divisor^0,w,c
  1422   00799A  1006               	iorwf	(___aldiv@divisor+1)^0,w,c
  1423   00799C  1007               	iorwf	(___aldiv@divisor+2)^0,w,c
  1424   00799E  1008               	iorwf	(___aldiv@divisor+3)^0,w,c
  1425   0079A0  B4D8               	btfsc	status,2,c
  1426   0079A2  EFD5  F03C         	goto	u691
  1427   0079A6  EFD7  F03C         	goto	u690
  1428   0079AA                     u691:
  1429   0079AA  EF0D  F03D         	goto	l1542
  1430   0079AE                     u690:
  1431   0079AE  0E01               	movlw	1
  1432   0079B0  6E09               	movwf	___aldiv@counter^0,c
  1433   0079B2  EFE1  F03C         	goto	l1528
  1434   0079B6                     l1526:
  1435   0079B6  90D8               	bcf	status,0,c
  1436   0079B8  3605               	rlcf	___aldiv@divisor^0,f,c
  1437   0079BA  3606               	rlcf	(___aldiv@divisor+1)^0,f,c
  1438   0079BC  3607               	rlcf	(___aldiv@divisor+2)^0,f,c
  1439   0079BE  3608               	rlcf	(___aldiv@divisor+3)^0,f,c
  1440   0079C0  2A09               	incf	___aldiv@counter^0,f,c
  1441   0079C2                     l1528:
  1442   0079C2  AE08               	btfss	(___aldiv@divisor+3)^0,7,c
  1443   0079C4  EFE6  F03C         	goto	u701
  1444   0079C8  EFE8  F03C         	goto	u700
  1445   0079CC                     u701:
  1446   0079CC  EFDB  F03C         	goto	l1526
  1447   0079D0                     u700:
  1448   0079D0                     l1530:
  1449   0079D0  90D8               	bcf	status,0,c
  1450   0079D2  360B               	rlcf	___aldiv@quotient^0,f,c
  1451   0079D4  360C               	rlcf	(___aldiv@quotient+1)^0,f,c
  1452   0079D6  360D               	rlcf	(___aldiv@quotient+2)^0,f,c
  1453   0079D8  360E               	rlcf	(___aldiv@quotient+3)^0,f,c
  1454   0079DA  5005               	movf	___aldiv@divisor^0,w,c
  1455   0079DC  5C01               	subwf	___aldiv@dividend^0,w,c
  1456   0079DE  5006               	movf	(___aldiv@divisor+1)^0,w,c
  1457   0079E0  5802               	subwfb	(___aldiv@dividend+1)^0,w,c
  1458   0079E2  5007               	movf	(___aldiv@divisor+2)^0,w,c
  1459   0079E4  5803               	subwfb	(___aldiv@dividend+2)^0,w,c
  1460   0079E6  5008               	movf	(___aldiv@divisor+3)^0,w,c
  1461   0079E8  5804               	subwfb	(___aldiv@dividend+3)^0,w,c
  1462   0079EA  A0D8               	btfss	status,0,c
  1463   0079EC  EFFA  F03C         	goto	u711
  1464   0079F0  EFFC  F03C         	goto	u710
  1465   0079F4                     u711:
  1466   0079F4  EF05  F03D         	goto	l1538
  1467   0079F8                     u710:
  1468   0079F8  5005               	movf	___aldiv@divisor^0,w,c
  1469   0079FA  5E01               	subwf	___aldiv@dividend^0,f,c
  1470   0079FC  5006               	movf	(___aldiv@divisor+1)^0,w,c
  1471   0079FE  5A02               	subwfb	(___aldiv@dividend+1)^0,f,c
  1472   007A00  5007               	movf	(___aldiv@divisor+2)^0,w,c
  1473   007A02  5A03               	subwfb	(___aldiv@dividend+2)^0,f,c
  1474   007A04  5008               	movf	(___aldiv@divisor+3)^0,w,c
  1475   007A06  5A04               	subwfb	(___aldiv@dividend+3)^0,f,c
  1476   007A08  800B               	bsf	___aldiv@quotient^0,0,c
  1477   007A0A                     l1538:
  1478   007A0A  90D8               	bcf	status,0,c
  1479   007A0C  3208               	rrcf	(___aldiv@divisor+3)^0,f,c
  1480   007A0E  3207               	rrcf	(___aldiv@divisor+2)^0,f,c
  1481   007A10  3206               	rrcf	(___aldiv@divisor+1)^0,f,c
  1482   007A12  3205               	rrcf	___aldiv@divisor^0,f,c
  1483   007A14  2E09               	decfsz	___aldiv@counter^0,f,c
  1484   007A16  EFE8  F03C         	goto	l1530
  1485   007A1A                     l1542:
  1486   007A1A  500A               	movf	___aldiv@sign^0,w,c
  1487   007A1C  B4D8               	btfsc	status,2,c
  1488   007A1E  EF13  F03D         	goto	u721
  1489   007A22  EF15  F03D         	goto	u720
  1490   007A26                     u721:
  1491   007A26  EF1D  F03D         	goto	l1546
  1492   007A2A                     u720:
  1493   007A2A  1E0E               	comf	(___aldiv@quotient+3)^0,f,c
  1494   007A2C  1E0D               	comf	(___aldiv@quotient+2)^0,f,c
  1495   007A2E  1E0C               	comf	(___aldiv@quotient+1)^0,f,c
  1496   007A30  6C0B               	negf	___aldiv@quotient^0,c
  1497   007A32  0E00               	movlw	0
  1498   007A34  220C               	addwfc	(___aldiv@quotient+1)^0,f,c
  1499   007A36  220D               	addwfc	(___aldiv@quotient+2)^0,f,c
  1500   007A38  220E               	addwfc	(___aldiv@quotient+3)^0,f,c
  1501   007A3A                     l1546:
  1502   007A3A  C00B  F001         	movff	___aldiv@quotient,?___aldiv
  1503   007A3E  C00C  F002         	movff	___aldiv@quotient+1,?___aldiv+1
  1504   007A42  C00D  F003         	movff	___aldiv@quotient+2,?___aldiv+2
  1505   007A46  C00E  F004         	movff	___aldiv@quotient+3,?___aldiv+3
  1506   007A4A  0012               	return		;funcret
  1507   007A4C                     __end_of___aldiv:
  1508                           	callstack 0
  1509                           
  1510 ;; *************** function _SPI_ErrorHandler *****************
  1511 ;; Defined at:
  1512 ;;		line 24 in file "librerias/variables.c"
  1513 ;; Parameters:    Size  Location     Type
  1514 ;;  errorCode       1    wreg     enum E5200
  1515 ;; Auto vars:     Size  Location     Type
  1516 ;;  errorCode       1   27[COMRAM] enum E5200
  1517 ;; Return value:  Size  Location     Type
  1518 ;;                  1    wreg      void 
  1519 ;; Registers used:
  1520 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1521 ;; Tracked objects:
  1522 ;;		On entry : 0/0
  1523 ;;		On exit  : 0/0
  1524 ;;		Unchanged: 0/0
  1525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1526 ;;      Params:         0       0       0       0       0       0       0       0       0
  1527 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1528 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1529 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1530 ;;Total ram usage:        3 bytes
  1531 ;; Hardware stack levels used: 1
  1532 ;; Hardware stack levels required when called: 6
  1533 ;; This function calls:
  1534 ;;		_printf
  1535 ;; This function is called by:
  1536 ;;		_SPI_BaudRateGen
  1537 ;; This function uses a non-reentrant model
  1538 ;;
  1539                           
  1540                           	psect	text6
  1541   00771A                     __ptext6:
  1542                           	callstack 0
  1543   00771A                     _SPI_ErrorHandler:
  1544                           	callstack 23
  1545                           
  1546                           ;incstack = 0
  1547                           ;SPI_ErrorHandler@errorCode stored from wreg
  1548   00771A  6E1C               	movwf	SPI_ErrorHandler@errorCode^0,c
  1549   00771C                     
  1550                           ;librerias/variables.c: 25:     if(errorCode != ERROR_CODE_SPI_OK) return;
  1551   00771C  501C               	movf	SPI_ErrorHandler@errorCode^0,w,c
  1552   00771E  B4D8               	btfsc	status,2,c
  1553   007720  EF94  F03B         	goto	u661
  1554   007724  EF96  F03B         	goto	u660
  1555   007728                     u661:
  1556   007728  EF98  F03B         	goto	l1494
  1557   00772C                     u660:
  1558   00772C  EFBD  F03B         	goto	l186
  1559   007730                     l1494:
  1560                           
  1561                           ;librerias/variables.c: 26:     printf("Error: ");
  1562   007730  0EE7               	movlw	low STR_19
  1563   007732  6E17               	movwf	printf@fmt^0,c
  1564   007734  0E7F               	movlw	high STR_19
  1565   007736  6E18               	movwf	(printf@fmt+1)^0,c
  1566   007738  EC28  F03B         	call	_printf	;wreg free
  1567                           
  1568                           ;librerias/variables.c: 27:     switch(errorCode){
  1569   00773C  EFA8  F03B         	goto	l1500
  1570   007740                     l1496:
  1571                           
  1572                           ;librerias/variables.c: 32:             printf("ERROR_CODE_SPI_BR_OVERRANGE");
  1573   007740  0EE9               	movlw	low STR_24
  1574   007742  6E17               	movwf	printf@fmt^0,c
  1575   007744  0E7E               	movlw	high STR_24
  1576   007746  6E18               	movwf	(printf@fmt+1)^0,c
  1577   007748  EC28  F03B         	call	_printf	;wreg free
  1578                           
  1579                           ;librerias/variables.c: 33:         break;
  1580   00774C  EFBD  F03B         	goto	l186
  1581   007750                     l1500:
  1582   007750  501C               	movf	SPI_ErrorHandler@errorCode^0,w,c
  1583   007752  6E1A               	movwf	??_SPI_ErrorHandler^0,c
  1584   007754  6A1B               	clrf	(??_SPI_ErrorHandler+1)^0,c
  1585                           
  1586                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1587                           ; Switch size 1, requested type "simple"
  1588                           ; Number of cases is 1, Range of values is 0 to 0
  1589                           ; switch strategies available:
  1590                           ; Name         Instructions Cycles
  1591                           ; simple_byte            4     3 (average)
  1592                           ;	Chosen strategy is simple_byte
  1593   007756  501B               	movf	(??_SPI_ErrorHandler+1)^0,w,c
  1594   007758  0A00               	xorlw	0	; case 0
  1595   00775A  B4D8               	btfsc	status,2,c
  1596   00775C  EFB2  F03B         	goto	l1752
  1597   007760  EFBD  F03B         	goto	l186
  1598   007764                     l1752:
  1599                           
  1600                           ; Switch size 1, requested type "simple"
  1601                           ; Number of cases is 2, Range of values is 0 to 1
  1602                           ; switch strategies available:
  1603                           ; Name         Instructions Cycles
  1604                           ; simple_byte            7     4 (average)
  1605                           ;	Chosen strategy is simple_byte
  1606   007764  501A               	movf	??_SPI_ErrorHandler^0,w,c
  1607   007766  0A00               	xorlw	0	; case 0
  1608   007768  B4D8               	btfsc	status,2,c
  1609   00776A  EFBD  F03B         	goto	l186
  1610   00776E  0A01               	xorlw	1	; case 1
  1611   007770  B4D8               	btfsc	status,2,c
  1612   007772  EFA0  F03B         	goto	l1496
  1613   007776  EFBD  F03B         	goto	l186
  1614   00777A                     l186:
  1615   00777A  0012               	return		;funcret
  1616   00777C                     __end_of_SPI_ErrorHandler:
  1617                           	callstack 0
  1618                           
  1619 ;; *************** function _printf *****************
  1620 ;; Defined at:
  1621 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\printf.c"
  1622 ;; Parameters:    Size  Location     Type
  1623 ;;  fmt             2   22[COMRAM] PTR const unsigned char 
  1624 ;;		 -> STR_24(28), STR_23(8), STR_22(26), STR_21(24), 
  1625 ;;		 -> STR_20(25), STR_19(8), STR_18(17), STR_17(14), 
  1626 ;;		 -> STR_16(11), STR_15(17), STR_14(14), STR_13(10), 
  1627 ;;		 -> STR_12(17), STR_11(14), STR_10(9), STR_9(13), 
  1628 ;;		 -> STR_8(8), STR_7(9), STR_6(11), STR_5(18), 
  1629 ;;		 -> STR_4(18), STR_3(11), STR_2(10), STR_1(7), 
  1630 ;; Auto vars:     Size  Location     Type
  1631 ;;  ret             2    0        int 
  1632 ;;  ap              1   24[COMRAM] PTR void [1]
  1633 ;;		 -> ?_printf(2), 
  1634 ;; Return value:  Size  Location     Type
  1635 ;;                  2   22[COMRAM] int 
  1636 ;; Registers used:
  1637 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1638 ;; Tracked objects:
  1639 ;;		On entry : 0/0
  1640 ;;		On exit  : 0/0
  1641 ;;		Unchanged: 0/0
  1642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1643 ;;      Params:         2       0       0       0       0       0       0       0       0
  1644 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1645 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1646 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1647 ;;Total ram usage:        3 bytes
  1648 ;; Hardware stack levels used: 1
  1649 ;; Hardware stack levels required when called: 5
  1650 ;; This function calls:
  1651 ;;		_vfprintf
  1652 ;; This function is called by:
  1653 ;;		_UART_config_show
  1654 ;;		_SPI_ErrorHandler
  1655 ;;		_UART_ErrorHandler
  1656 ;; This function uses a non-reentrant model
  1657 ;;
  1658                           
  1659                           	psect	text7
  1660   007650                     __ptext7:
  1661                           	callstack 0
  1662   007650                     _printf:
  1663                           	callstack 23
  1664   007650  0E19               	movlw	low (?_printf+2)
  1665   007652  6E19               	movwf	printf@ap^0,c
  1666   007654  0E00               	movlw	0
  1667   007656  6E10               	movwf	vfprintf@fp^0,c
  1668   007658  0E00               	movlw	0
  1669   00765A  6E11               	movwf	(vfprintf@fp+1)^0,c
  1670   00765C  C017  F012         	movff	printf@fmt,vfprintf@fmt
  1671   007660  C018  F013         	movff	printf@fmt+1,vfprintf@fmt+1
  1672   007664  0E19               	movlw	low printf@ap
  1673   007666  6E14               	movwf	vfprintf@ap^0,c
  1674   007668  EC6A  F03B         	call	_vfprintf	;wreg free
  1675   00766C  0012               	return		;funcret
  1676   00766E                     __end_of_printf:
  1677                           	callstack 0
  1678                           
  1679 ;; *************** function _vfprintf *****************
  1680 ;; Defined at:
  1681 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  1682 ;; Parameters:    Size  Location     Type
  1683 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
  1684 ;;		 -> NULL(0), 
  1685 ;;  fmt             2   17[COMRAM] PTR const unsigned char 
  1686 ;;		 -> STR_24(28), STR_23(8), STR_22(26), STR_21(24), 
  1687 ;;		 -> STR_20(25), STR_19(8), STR_18(17), STR_17(14), 
  1688 ;;		 -> STR_16(11), STR_15(17), STR_14(14), STR_13(10), 
  1689 ;;		 -> STR_12(17), STR_11(14), STR_10(9), STR_9(13), 
  1690 ;;		 -> STR_8(8), STR_7(9), STR_6(11), STR_5(18), 
  1691 ;;		 -> STR_4(18), STR_3(11), STR_2(10), STR_1(7), 
  1692 ;;  ap              1   19[COMRAM] PTR PTR void 
  1693 ;;		 -> printf@ap(1), 
  1694 ;; Auto vars:     Size  Location     Type
  1695 ;;  cfmt            2   20[COMRAM] PTR unsigned char 
  1696 ;;		 -> STR_24(28), STR_23(8), STR_22(26), STR_21(24), 
  1697 ;;		 -> STR_20(25), STR_19(8), STR_18(17), STR_17(14), 
  1698 ;;		 -> STR_16(11), STR_15(17), STR_14(14), STR_13(10), 
  1699 ;;		 -> STR_12(17), STR_11(14), STR_10(9), STR_9(13), 
  1700 ;;		 -> STR_8(8), STR_7(9), STR_6(11), STR_5(18), 
  1701 ;;		 -> STR_4(18), STR_3(11), STR_2(10), STR_1(7), 
  1702 ;; Return value:  Size  Location     Type
  1703 ;;                  2   15[COMRAM] int 
  1704 ;; Registers used:
  1705 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1706 ;; Tracked objects:
  1707 ;;		On entry : 0/0
  1708 ;;		On exit  : 0/0
  1709 ;;		Unchanged: 0/0
  1710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1711 ;;      Params:         5       0       0       0       0       0       0       0       0
  1712 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1713 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1714 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1715 ;;Total ram usage:        7 bytes
  1716 ;; Hardware stack levels used: 1
  1717 ;; Hardware stack levels required when called: 4
  1718 ;; This function calls:
  1719 ;;		_vfpfcnvrt
  1720 ;; This function is called by:
  1721 ;;		_printf
  1722 ;; This function uses a non-reentrant model
  1723 ;;
  1724                           
  1725                           	psect	text8
  1726   0076D4                     __ptext8:
  1727                           	callstack 0
  1728   0076D4                     _vfprintf:
  1729                           	callstack 23
  1730   0076D4                     
  1731                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  1732   0076D4  C012  F015         	movff	vfprintf@fmt,vfprintf@cfmt
  1733   0076D8  C013  F016         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1734                           
  1735                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1736   0076DC  EF7A  F03B         	goto	l1378
  1737   0076E0                     l1376:
  1738                           
  1739                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1740   0076E0  C010  F00C         	movff	vfprintf@fp,vfpfcnvrt@fp
  1741   0076E4  C011  F00D         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1742   0076E8  0E15               	movlw	low vfprintf@cfmt
  1743   0076EA  6E0E               	movwf	vfpfcnvrt@fmt^0,c
  1744   0076EC  C014  F00F         	movff	vfprintf@ap,vfpfcnvrt@ap
  1745   0076F0  ECBE  F03B         	call	_vfpfcnvrt	;wreg free
  1746   0076F4                     l1378:
  1747                           
  1748                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1749   0076F4  C015  FFF6         	movff	vfprintf@cfmt,tblptrl
  1750   0076F8  C016  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1751   0076FC                     	if	0	;tblptru may be non-zero
  1752   0076FC                     	endif
  1753   0076FC                     	if	0	;tblptru may be non-zero
  1754   0076FC                     	endif
  1755   0076FC  0008               	tblrd		*
  1756   0076FE  50F5               	movf	tablat,w,c
  1757   007700  0900               	iorlw	0
  1758   007702  A4D8               	btfss	status,2,c
  1759   007704  EF86  F03B         	goto	u591
  1760   007708  EF88  F03B         	goto	u590
  1761   00770C                     u591:
  1762   00770C  EF70  F03B         	goto	l1376
  1763   007710                     u590:
  1764   007710                     
  1765                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  1766   007710  0E00               	movlw	0
  1767   007712  6E11               	movwf	(?_vfprintf+1)^0,c
  1768   007714  0E00               	movlw	0
  1769   007716  6E10               	movwf	?_vfprintf^0,c
  1770   007718  0012               	return		;funcret
  1771   00771A                     __end_of_vfprintf:
  1772                           	callstack 0
  1773                           
  1774 ;; *************** function _vfpfcnvrt *****************
  1775 ;; Defined at:
  1776 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  1777 ;; Parameters:    Size  Location     Type
  1778 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  1779 ;;		 -> NULL(0), 
  1780 ;;  fmt             1   13[COMRAM] PTR PTR unsigned char 
  1781 ;;		 -> vfprintf@cfmt(2), 
  1782 ;;  ap              1   14[COMRAM] PTR PTR void 
  1783 ;;		 -> printf@ap(1), 
  1784 ;; Auto vars:     Size  Location     Type
  1785 ;;  cp              3    0        PTR unsigned char 
  1786 ;;  done            1    0        _Bool 
  1787 ;;  c               1    0        unsigned char 
  1788 ;; Return value:  Size  Location     Type
  1789 ;;                  1    wreg      void 
  1790 ;; Registers used:
  1791 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1792 ;; Tracked objects:
  1793 ;;		On entry : 0/0
  1794 ;;		On exit  : 0/0
  1795 ;;		Unchanged: 0/0
  1796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1797 ;;      Params:         4       0       0       0       0       0       0       0       0
  1798 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1799 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1800 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1801 ;;Total ram usage:        4 bytes
  1802 ;; Hardware stack levels used: 1
  1803 ;; Hardware stack levels required when called: 3
  1804 ;; This function calls:
  1805 ;;		_fputc
  1806 ;; This function is called by:
  1807 ;;		_vfprintf
  1808 ;; This function uses a non-reentrant model
  1809 ;;
  1810                           
  1811                           	psect	text9
  1812   00777C                     __ptext9:
  1813                           	callstack 0
  1814   00777C                     _vfpfcnvrt:
  1815                           	callstack 23
  1816   00777C                     
  1817                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  1818   00777C  500E               	movf	vfpfcnvrt@fmt^0,w,c
  1819   00777E  6ED9               	movwf	fsr2l,c
  1820   007780  6ADA               	clrf	fsr2h,c
  1821   007782  CFDE FFF6          	movff	postinc2,tblptrl
  1822   007786  CFDD FFF7          	movff	postdec2,tblptrh
  1823   00778A                     	if	0	;tblptru may be non-zero
  1824   00778A                     	endif
  1825   00778A                     	if	0	;tblptru may be non-zero
  1826   00778A                     	endif
  1827   00778A  0008               	tblrd		*
  1828   00778C  50F5               	movf	tablat,w,c
  1829   00778E  0A25               	xorlw	37
  1830   007790  A4D8               	btfss	status,2,c
  1831   007792  EFCD  F03B         	goto	u581
  1832   007796  EFCF  F03B         	goto	u580
  1833   00779A                     u581:
  1834   00779A  EFE5  F03B         	goto	l1368
  1835   00779E                     u580:
  1836   00779E                     
  1837                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  1838   00779E  500E               	movf	vfpfcnvrt@fmt^0,w,c
  1839   0077A0  6ED9               	movwf	fsr2l,c
  1840   0077A2  6ADA               	clrf	fsr2h,c
  1841   0077A4  2ADE               	incf	postinc2,f,c
  1842   0077A6  0E00               	movlw	0
  1843   0077A8  22DD               	addwfc	postdec2,f,c
  1844   0077AA                     
  1845                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  1846   0077AA  0E00               	movlw	0
  1847   0077AC  6E4A               	movwf	(_width+1)^0,c
  1848   0077AE  0E00               	movlw	0
  1849   0077B0  6E49               	movwf	_width^0,c
  1850   0077B2  C049  F04D         	movff	_width,_flags
  1851   0077B6                     
  1852                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  1853   0077B6  684B               	setf	_prec^0,c
  1854   0077B8  684C               	setf	(_prec+1)^0,c
  1855   0077BA                     l1364:
  1856                           
  1857                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  1858   0077BA  500E               	movf	vfpfcnvrt@fmt^0,w,c
  1859   0077BC  6ED9               	movwf	fsr2l,c
  1860   0077BE  6ADA               	clrf	fsr2h,c
  1861   0077C0  2ADE               	incf	postinc2,f,c
  1862   0077C2  0E00               	movlw	0
  1863   0077C4  22DD               	addwfc	postdec2,f,c
  1864   0077C6  EFF8  F03B         	goto	l894
  1865   0077CA                     l1368:
  1866                           
  1867                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  1868   0077CA  500E               	movf	vfpfcnvrt@fmt^0,w,c
  1869   0077CC  6ED9               	movwf	fsr2l,c
  1870   0077CE  6ADA               	clrf	fsr2h,c
  1871   0077D0  CFDE FFF6          	movff	postinc2,tblptrl
  1872   0077D4  CFDD FFF7          	movff	postdec2,tblptrh
  1873   0077D8                     	if	0	;tblptru may be non-zero
  1874   0077D8                     	endif
  1875   0077D8                     	if	0	;tblptru may be non-zero
  1876   0077D8                     	endif
  1877   0077D8  0008               	tblrd		*
  1878   0077DA  50F5               	movf	tablat,w,c
  1879   0077DC  6E03               	movwf	fputc@c^0,c
  1880   0077DE  6A04               	clrf	(fputc@c+1)^0,c
  1881   0077E0  C00C  F005         	movff	vfpfcnvrt@fp,fputc@fp
  1882   0077E4  C00D  F006         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1883   0077E8  EC3B  F03C         	call	_fputc	;wreg free
  1884   0077EC  EFDD  F03B         	goto	l1364
  1885   0077F0                     l894:
  1886   0077F0  0012               	return		;funcret
  1887   0077F2                     __end_of_vfpfcnvrt:
  1888                           	callstack 0
  1889                           
  1890 ;; *************** function _fputc *****************
  1891 ;; Defined at:
  1892 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_fputc.c"
  1893 ;; Parameters:    Size  Location     Type
  1894 ;;  c               2    2[COMRAM] int 
  1895 ;;  fp              2    4[COMRAM] PTR struct _IO_FILE
  1896 ;;		 -> NULL(0), 
  1897 ;; Auto vars:     Size  Location     Type
  1898 ;;		None
  1899 ;; Return value:  Size  Location     Type
  1900 ;;                  2    2[COMRAM] int 
  1901 ;; Registers used:
  1902 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1903 ;; Tracked objects:
  1904 ;;		On entry : 0/0
  1905 ;;		On exit  : 0/0
  1906 ;;		Unchanged: 0/0
  1907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1908 ;;      Params:         4       0       0       0       0       0       0       0       0
  1909 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1910 ;;      Temps:          5       0       0       0       0       0       0       0       0
  1911 ;;      Totals:         9       0       0       0       0       0       0       0       0
  1912 ;;Total ram usage:        9 bytes
  1913 ;; Hardware stack levels used: 1
  1914 ;; Hardware stack levels required when called: 2
  1915 ;; This function calls:
  1916 ;;		_putch
  1917 ;; This function is called by:
  1918 ;;		_vfpfcnvrt
  1919 ;; This function uses a non-reentrant model
  1920 ;;
  1921                           
  1922                           	psect	text10
  1923   007876                     __ptext10:
  1924                           	callstack 0
  1925   007876                     _fputc:
  1926                           	callstack 23
  1927   007876  5005               	movf	fputc@fp^0,w,c
  1928   007878  1006               	iorwf	(fputc@fp+1)^0,w,c
  1929   00787A  B4D8               	btfsc	status,2,c
  1930   00787C  EF42  F03C         	goto	u541
  1931   007880  EF44  F03C         	goto	u540
  1932   007884                     u541:
  1933   007884  EF4D  F03C         	goto	l1346
  1934   007888                     u540:
  1935   007888  5005               	movf	fputc@fp^0,w,c
  1936   00788A  1006               	iorwf	(fputc@fp+1)^0,w,c
  1937   00788C  A4D8               	btfss	status,2,c
  1938   00788E  EF4B  F03C         	goto	u551
  1939   007892  EF4D  F03C         	goto	u550
  1940   007896                     u551:
  1941   007896  EF52  F03C         	goto	l1348
  1942   00789A                     u550:
  1943   00789A                     l1346:
  1944   00789A  5003               	movf	fputc@c^0,w,c
  1945   00789C  EC0D  F03B         	call	_putch
  1946   0078A0  EF9F  F03C         	goto	l912
  1947   0078A4                     l1348:
  1948   0078A4  EE20 F00A          	lfsr	2,10
  1949   0078A8  5005               	movf	fputc@fp^0,w,c
  1950   0078AA  26D9               	addwf	fsr2l,f,c
  1951   0078AC  5006               	movf	(fputc@fp+1)^0,w,c
  1952   0078AE  22DA               	addwfc	fsr2h,f,c
  1953   0078B0  50DE               	movf	postinc2,w,c
  1954   0078B2  10DE               	iorwf	postinc2,w,c
  1955   0078B4  B4D8               	btfsc	status,2,c
  1956   0078B6  EF5F  F03C         	goto	u561
  1957   0078BA  EF61  F03C         	goto	u560
  1958   0078BE                     u561:
  1959   0078BE  EF7C  F03C         	goto	l1352
  1960   0078C2                     u560:
  1961   0078C2  EE20 F00A          	lfsr	2,10
  1962   0078C6  5005               	movf	fputc@fp^0,w,c
  1963   0078C8  26D9               	addwf	fsr2l,f,c
  1964   0078CA  5006               	movf	(fputc@fp+1)^0,w,c
  1965   0078CC  22DA               	addwfc	fsr2h,f,c
  1966   0078CE  EE10 F003          	lfsr	1,3
  1967   0078D2  5005               	movf	fputc@fp^0,w,c
  1968   0078D4  26E1               	addwf	fsr1l,f,c
  1969   0078D6  5006               	movf	(fputc@fp+1)^0,w,c
  1970   0078D8  22E2               	addwfc	fsr1h,f,c
  1971   0078DA  50DE               	movf	postinc2,w,c
  1972   0078DC  5CE6               	subwf	postinc1,w,c
  1973   0078DE  50E6               	movf	postinc1,w,c
  1974   0078E0  0A80               	xorlw	128
  1975   0078E2  6E0B               	movwf	(??_fputc+4)^0,c
  1976   0078E4  50DE               	movf	postinc2,w,c
  1977   0078E6  0A80               	xorlw	128
  1978   0078E8  580B               	subwfb	(??_fputc+4)^0,w,c
  1979   0078EA  B0D8               	btfsc	status,0,c
  1980   0078EC  EF7A  F03C         	goto	u571
  1981   0078F0  EF7C  F03C         	goto	u570
  1982   0078F4                     u571:
  1983   0078F4  EF9F  F03C         	goto	l912
  1984   0078F8                     u570:
  1985   0078F8                     l1352:
  1986   0078F8  EE20 F003          	lfsr	2,3
  1987   0078FC  5005               	movf	fputc@fp^0,w,c
  1988   0078FE  26D9               	addwf	fsr2l,f,c
  1989   007900  5006               	movf	(fputc@fp+1)^0,w,c
  1990   007902  22DA               	addwfc	fsr2h,f,c
  1991   007904  CFDE F007          	movff	postinc2,??_fputc
  1992   007908  CFDD F008          	movff	postdec2,??_fputc+1
  1993   00790C  C005  FFD9         	movff	fputc@fp,fsr2l
  1994   007910  C006  FFDA         	movff	fputc@fp+1,fsr2h
  1995   007914  CFDE F009          	movff	postinc2,??_fputc+2
  1996   007918  CFDD F00A          	movff	postdec2,??_fputc+3
  1997   00791C  5007               	movf	??_fputc^0,w,c
  1998   00791E  2409               	addwf	(??_fputc+2)^0,w,c
  1999   007920  6ED9               	movwf	fsr2l,c
  2000   007922  5008               	movf	(??_fputc+1)^0,w,c
  2001   007924  200A               	addwfc	(??_fputc+3)^0,w,c
  2002   007926  6EDA               	movwf	fsr2h,c
  2003   007928  C003  FFDF         	movff	fputc@c,indf2
  2004   00792C  EE20 F003          	lfsr	2,3
  2005   007930  5005               	movf	fputc@fp^0,w,c
  2006   007932  26D9               	addwf	fsr2l,f,c
  2007   007934  5006               	movf	(fputc@fp+1)^0,w,c
  2008   007936  22DA               	addwfc	fsr2h,f,c
  2009   007938  2ADE               	incf	postinc2,f,c
  2010   00793A  0E00               	movlw	0
  2011   00793C  22DD               	addwfc	postdec2,f,c
  2012   00793E                     l912:
  2013   00793E  0012               	return		;funcret
  2014   007940                     __end_of_fputc:
  2015                           	callstack 0
  2016                           
  2017 ;; *************** function _putch *****************
  2018 ;; Defined at:
  2019 ;;		line 75 in file "librerias/UART.c"
  2020 ;; Parameters:    Size  Location     Type
  2021 ;;  data            1    wreg     unsigned char 
  2022 ;; Auto vars:     Size  Location     Type
  2023 ;;  data            1    1[COMRAM] unsigned char 
  2024 ;; Return value:  Size  Location     Type
  2025 ;;                  1    wreg      void 
  2026 ;; Registers used:
  2027 ;;		wreg, status,2, cstack
  2028 ;; Tracked objects:
  2029 ;;		On entry : 0/0
  2030 ;;		On exit  : 0/0
  2031 ;;		Unchanged: 0/0
  2032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2033 ;;      Params:         0       0       0       0       0       0       0       0       0
  2034 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2035 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2036 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2037 ;;Total ram usage:        1 bytes
  2038 ;; Hardware stack levels used: 1
  2039 ;; Hardware stack levels required when called: 1
  2040 ;; This function calls:
  2041 ;;		_UART_Tx
  2042 ;; This function is called by:
  2043 ;;		_fputc
  2044 ;; This function uses a non-reentrant model
  2045 ;;
  2046                           
  2047                           	psect	text11
  2048   00761A                     __ptext11:
  2049                           	callstack 0
  2050   00761A                     _putch:
  2051                           	callstack 23
  2052                           
  2053                           ;incstack = 0
  2054                           ;putch@data stored from wreg
  2055   00761A  6E02               	movwf	putch@data^0,c
  2056   00761C                     
  2057                           ;librerias/UART.c: 76:     UART_Tx(data);
  2058   00761C  5002               	movf	putch@data^0,w,c
  2059   00761E  EC12  F03B         	call	_UART_Tx
  2060   007622  0012               	return		;funcret
  2061   007624                     __end_of_putch:
  2062                           	callstack 0
  2063                           
  2064 ;; *************** function _UART_Tx *****************
  2065 ;; Defined at:
  2066 ;;		line 70 in file "librerias/UART.c"
  2067 ;; Parameters:    Size  Location     Type
  2068 ;;  dato            1    wreg     unsigned char 
  2069 ;; Auto vars:     Size  Location     Type
  2070 ;;  dato            1    0[COMRAM] unsigned char 
  2071 ;; Return value:  Size  Location     Type
  2072 ;;                  1    wreg      void 
  2073 ;; Registers used:
  2074 ;;		wreg
  2075 ;; Tracked objects:
  2076 ;;		On entry : 0/0
  2077 ;;		On exit  : 0/0
  2078 ;;		Unchanged: 0/0
  2079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2080 ;;      Params:         0       0       0       0       0       0       0       0       0
  2081 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2082 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2083 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2084 ;;Total ram usage:        1 bytes
  2085 ;; Hardware stack levels used: 1
  2086 ;; This function calls:
  2087 ;;		Nothing
  2088 ;; This function is called by:
  2089 ;;		_putch
  2090 ;; This function uses a non-reentrant model
  2091 ;;
  2092                           
  2093                           	psect	text12
  2094   007624                     __ptext12:
  2095                           	callstack 0
  2096   007624                     _UART_Tx:
  2097                           	callstack 23
  2098                           
  2099                           ;incstack = 0
  2100                           ;UART_Tx@dato stored from wreg
  2101   007624  6E01               	movwf	UART_Tx@dato^0,c
  2102   007626                     l104:
  2103   007626  A2AC               	btfss	4012,1,c	;volatile
  2104   007628  EF18  F03B         	goto	u11
  2105   00762C  EF1A  F03B         	goto	u10
  2106   007630                     u11:
  2107   007630  EF13  F03B         	goto	l104
  2108   007634                     u10:
  2109   007634                     
  2110                           ;librerias/UART.c: 72:     TXREG1 = dato;
  2111   007634  C001  FFAD         	movff	UART_Tx@dato,4013	;volatile
  2112   007638  0012               	return		;funcret
  2113   00763A                     __end_of_UART_Tx:
  2114                           	callstack 0
  2115                           
  2116 ;; *************** function _Clock_Init *****************
  2117 ;; Defined at:
  2118 ;;		line 3 in file "librerias/clock.c"
  2119 ;; Parameters:    Size  Location     Type
  2120 ;;  s16Timeout      2    0[COMRAM] short 
  2121 ;; Auto vars:     Size  Location     Type
  2122 ;;  bStatus         1    5[COMRAM] _Bool 
  2123 ;;  bStatus         1    4[COMRAM] _Bool 
  2124 ;;  bStatus         1    3[COMRAM] _Bool 
  2125 ;;  bStatus         1    2[COMRAM] _Bool 
  2126 ;;  returnCode      1    7[COMRAM] enum E5188
  2127 ;;  bItTimeEn       1    6[COMRAM] _Bool 
  2128 ;; Return value:  Size  Location     Type
  2129 ;;                  1    wreg      enum E5188
  2130 ;; Registers used:
  2131 ;;		wreg, status,2, status,0
  2132 ;; Tracked objects:
  2133 ;;		On entry : 0/0
  2134 ;;		On exit  : 0/0
  2135 ;;		Unchanged: 0/0
  2136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2137 ;;      Params:         2       0       0       0       0       0       0       0       0
  2138 ;;      Locals:         6       0       0       0       0       0       0       0       0
  2139 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2140 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2141 ;;Total ram usage:        8 bytes
  2142 ;; Hardware stack levels used: 1
  2143 ;; This function calls:
  2144 ;;		Nothing
  2145 ;; This function is called by:
  2146 ;;		_main
  2147 ;; This function uses a non-reentrant model
  2148 ;;
  2149                           
  2150                           	psect	text13
  2151   007CD2                     __ptext13:
  2152                           	callstack 0
  2153   007CD2                     _Clock_Init:
  2154                           	callstack 30
  2155   007CD2                     
  2156                           ;librerias/clock.c: 4:     CLK_ERROR_CODE returnCode = ERROR_CODE_OK;
  2157   007CD2  0E00               	movlw	0
  2158   007CD4  6E08               	movwf	Clock_Init@returnCode^0,c
  2159   007CD6                     
  2160                           ;librerias/clock.c: 5:     _Bool bItTimeEn = (0 >= s16Timeout) ? 0 : 1;
  2161   007CD6  BE02               	btfsc	(Clock_Init@s16Timeout+1)^0,7,c
  2162   007CD8  EF79  F03E         	goto	u730
  2163   007CDC  5002               	movf	(Clock_Init@s16Timeout+1)^0,w,c
  2164   007CDE  E106               	bnz	u731
  2165   007CE0  0401               	decf	Clock_Init@s16Timeout^0,w,c
  2166   007CE2  B0D8               	btfsc	status,0,c
  2167   007CE4  EF76  F03E         	goto	u731
  2168   007CE8  EF79  F03E         	goto	u730
  2169   007CEC                     u731:
  2170   007CEC  0E01               	movlw	1
  2171   007CEE  EF7A  F03E         	goto	u740
  2172   007CF2                     u730:
  2173   007CF2  0E00               	movlw	0
  2174   007CF4                     u740:
  2175   007CF4  6E07               	movwf	Clock_Init@bItTimeEn^0,c
  2176   007CF6                     l138:
  2177                           
  2178                           ;librerias/clock.c: 10:             bStatus = OSCCON2bits.HFIOFR;
  2179   007CF6  B2D2               	btfsc	210,1,c	;volatile
  2180   007CF8  EF80  F03E         	goto	u751
  2181   007CFC  EF83  F03E         	goto	u750
  2182   007D00                     u751:
  2183   007D00  0E01               	movlw	1
  2184   007D02  EF84  F03E         	goto	u756
  2185   007D06                     u750:
  2186   007D06  0E00               	movlw	0
  2187   007D08                     u756:
  2188   007D08  6E03               	movwf	Clock_Init@bStatus^0,c
  2189   007D0A                     
  2190                           ;librerias/clock.c: 11:             s16Timeout--;
  2191   007D0A  0601               	decf	Clock_Init@s16Timeout^0,f,c
  2192   007D0C  A0D8               	btfss	status,0,c
  2193   007D0E  0602               	decf	(Clock_Init@s16Timeout+1)^0,f,c
  2194   007D10                     
  2195                           ;librerias/clock.c: 12:         }while((0 == bStatus) && ((0 < s16Timeout) || (0 == bItT
      +                          imeEn)));
  2196   007D10  5003               	movf	Clock_Init@bStatus^0,w,c
  2197   007D12  A4D8               	btfss	status,2,c
  2198   007D14  EF8E  F03E         	goto	u761
  2199   007D18  EF90  F03E         	goto	u760
  2200   007D1C                     u761:
  2201   007D1C  EFA5  F03E         	goto	l1566
  2202   007D20                     u760:
  2203   007D20  BE02               	btfsc	(Clock_Init@s16Timeout+1)^0,7,c
  2204   007D22  EF9D  F03E         	goto	u770
  2205   007D26  5002               	movf	(Clock_Init@s16Timeout+1)^0,w,c
  2206   007D28  E106               	bnz	u771
  2207   007D2A  0401               	decf	Clock_Init@s16Timeout^0,w,c
  2208   007D2C  B0D8               	btfsc	status,0,c
  2209   007D2E  EF9B  F03E         	goto	u771
  2210   007D32  EF9D  F03E         	goto	u770
  2211   007D36                     u771:
  2212   007D36  EF7B  F03E         	goto	l138
  2213   007D3A                     u770:
  2214   007D3A  5007               	movf	Clock_Init@bItTimeEn^0,w,c
  2215   007D3C  B4D8               	btfsc	status,2,c
  2216   007D3E  EFA3  F03E         	goto	u781
  2217   007D42  EFA5  F03E         	goto	u780
  2218   007D46                     u781:
  2219   007D46  EF7B  F03E         	goto	l138
  2220   007D4A                     u780:
  2221   007D4A                     l1566:
  2222                           
  2223                           ;librerias/clock.c: 13:         if (0 == bStatus){
  2224   007D4A  5003               	movf	Clock_Init@bStatus^0,w,c
  2225   007D4C  A4D8               	btfss	status,2,c
  2226   007D4E  EFAB  F03E         	goto	u791
  2227   007D52  EFAD  F03E         	goto	u790
  2228   007D56                     u791:
  2229   007D56  EFAF  F03E         	goto	l137
  2230   007D5A                     u790:
  2231   007D5A                     
  2232                           ;librerias/clock.c: 14:             returnCode = ERROR_CODE_TIMEOUT;
  2233   007D5A  0E01               	movlw	1
  2234   007D5C  6E08               	movwf	Clock_Init@returnCode^0,c
  2235   007D5E                     l137:
  2236                           
  2237                           ;librerias/clock.c: 18:     if(ERROR_CODE_OK == returnCode){
  2238   007D5E  5008               	movf	Clock_Init@returnCode^0,w,c
  2239   007D60  A4D8               	btfss	status,2,c
  2240   007D62  EFB5  F03E         	goto	u801
  2241   007D66  EFB7  F03E         	goto	u800
  2242   007D6A                     u801:
  2243   007D6A  EFEE  F03E         	goto	l143
  2244   007D6E                     u800:
  2245   007D6E                     
  2246                           ;librerias/clock.c: 19:         OSCCON2bits.INTSRC = 1;
  2247   007D6E  8AD2               	bsf	210,5,c	;volatile
  2248   007D70                     
  2249                           ;librerias/clock.c: 20:         OSCCONbits.IRCF = 7;
  2250   007D70  0E70               	movlw	112
  2251   007D72  12D3               	iorwf	211,f,c	;volatile
  2252   007D74                     l144:
  2253                           
  2254                           ;librerias/clock.c: 24:             bStatus = OSCCONbits.HFIOFS;
  2255   007D74  B4D3               	btfsc	211,2,c	;volatile
  2256   007D76  EFBF  F03E         	goto	u811
  2257   007D7A  EFC2  F03E         	goto	u810
  2258   007D7E                     u811:
  2259   007D7E  0E01               	movlw	1
  2260   007D80  EFC3  F03E         	goto	u816
  2261   007D84                     u810:
  2262   007D84  0E00               	movlw	0
  2263   007D86                     u816:
  2264   007D86  6E04               	movwf	Clock_Init@bStatus_544^0,c
  2265   007D88                     
  2266                           ;librerias/clock.c: 25:             s16Timeout--;
  2267   007D88  0601               	decf	Clock_Init@s16Timeout^0,f,c
  2268   007D8A  A0D8               	btfss	status,0,c
  2269   007D8C  0602               	decf	(Clock_Init@s16Timeout+1)^0,f,c
  2270   007D8E                     
  2271                           ;librerias/clock.c: 26:         }while((0 == bStatus) && ((0 < s16Timeout) || (0 == bItT
      +                          imeEn)));
  2272   007D8E  5004               	movf	Clock_Init@bStatus_544^0,w,c
  2273   007D90  A4D8               	btfss	status,2,c
  2274   007D92  EFCD  F03E         	goto	u821
  2275   007D96  EFCF  F03E         	goto	u820
  2276   007D9A                     u821:
  2277   007D9A  EFE4  F03E         	goto	l1582
  2278   007D9E                     u820:
  2279   007D9E  BE02               	btfsc	(Clock_Init@s16Timeout+1)^0,7,c
  2280   007DA0  EFDC  F03E         	goto	u830
  2281   007DA4  5002               	movf	(Clock_Init@s16Timeout+1)^0,w,c
  2282   007DA6  E106               	bnz	u831
  2283   007DA8  0401               	decf	Clock_Init@s16Timeout^0,w,c
  2284   007DAA  B0D8               	btfsc	status,0,c
  2285   007DAC  EFDA  F03E         	goto	u831
  2286   007DB0  EFDC  F03E         	goto	u830
  2287   007DB4                     u831:
  2288   007DB4  EFBA  F03E         	goto	l144
  2289   007DB8                     u830:
  2290   007DB8  5007               	movf	Clock_Init@bItTimeEn^0,w,c
  2291   007DBA  B4D8               	btfsc	status,2,c
  2292   007DBC  EFE2  F03E         	goto	u841
  2293   007DC0  EFE4  F03E         	goto	u840
  2294   007DC4                     u841:
  2295   007DC4  EFBA  F03E         	goto	l144
  2296   007DC8                     u840:
  2297   007DC8                     l1582:
  2298                           
  2299                           ;librerias/clock.c: 27:         if (0 == bStatus){
  2300   007DC8  5004               	movf	Clock_Init@bStatus_544^0,w,c
  2301   007DCA  A4D8               	btfss	status,2,c
  2302   007DCC  EFEA  F03E         	goto	u851
  2303   007DD0  EFEC  F03E         	goto	u850
  2304   007DD4                     u851:
  2305   007DD4  EFEE  F03E         	goto	l143
  2306   007DD8                     u850:
  2307   007DD8                     
  2308                           ;librerias/clock.c: 28:             returnCode = ERROR_CODE_TIMEOUT;
  2309   007DD8  0E01               	movlw	1
  2310   007DDA  6E08               	movwf	Clock_Init@returnCode^0,c
  2311   007DDC                     l143:
  2312                           
  2313                           ;librerias/clock.c: 32:     if(ERROR_CODE_OK == returnCode){
  2314   007DDC  5008               	movf	Clock_Init@returnCode^0,w,c
  2315   007DDE  A4D8               	btfss	status,2,c
  2316   007DE0  EFF4  F03E         	goto	u861
  2317   007DE4  EFF6  F03E         	goto	u860
  2318   007DE8                     u861:
  2319   007DE8  EF2A  F03F         	goto	l149
  2320   007DEC                     u860:
  2321   007DEC                     l150:
  2322                           
  2323                           ;librerias/clock.c: 35:             bStatus = OSCCONbits.OSTS;
  2324   007DEC  B6D3               	btfsc	211,3,c	;volatile
  2325   007DEE  EFFB  F03E         	goto	u871
  2326   007DF2  EFFE  F03E         	goto	u870
  2327   007DF6                     u871:
  2328   007DF6  0E01               	movlw	1
  2329   007DF8  EFFF  F03E         	goto	u876
  2330   007DFC                     u870:
  2331   007DFC  0E00               	movlw	0
  2332   007DFE                     u876:
  2333   007DFE  6E05               	movwf	Clock_Init@bStatus_545^0,c
  2334   007E00                     
  2335                           ;librerias/clock.c: 36:             s16Timeout--;
  2336   007E00  0601               	decf	Clock_Init@s16Timeout^0,f,c
  2337   007E02  A0D8               	btfss	status,0,c
  2338   007E04  0602               	decf	(Clock_Init@s16Timeout+1)^0,f,c
  2339   007E06                     
  2340                           ;librerias/clock.c: 37:         }while((0 == bStatus) && ((0 < s16Timeout) || (0 == bItT
      +                          imeEn)));
  2341   007E06  5005               	movf	Clock_Init@bStatus_545^0,w,c
  2342   007E08  A4D8               	btfss	status,2,c
  2343   007E0A  EF09  F03F         	goto	u881
  2344   007E0E  EF0B  F03F         	goto	u880
  2345   007E12                     u881:
  2346   007E12  EF20  F03F         	goto	l1596
  2347   007E16                     u880:
  2348   007E16  BE02               	btfsc	(Clock_Init@s16Timeout+1)^0,7,c
  2349   007E18  EF18  F03F         	goto	u890
  2350   007E1C  5002               	movf	(Clock_Init@s16Timeout+1)^0,w,c
  2351   007E1E  E106               	bnz	u891
  2352   007E20  0401               	decf	Clock_Init@s16Timeout^0,w,c
  2353   007E22  B0D8               	btfsc	status,0,c
  2354   007E24  EF16  F03F         	goto	u891
  2355   007E28  EF18  F03F         	goto	u890
  2356   007E2C                     u891:
  2357   007E2C  EFF6  F03E         	goto	l150
  2358   007E30                     u890:
  2359   007E30  5007               	movf	Clock_Init@bItTimeEn^0,w,c
  2360   007E32  B4D8               	btfsc	status,2,c
  2361   007E34  EF1E  F03F         	goto	u901
  2362   007E38  EF20  F03F         	goto	u900
  2363   007E3C                     u901:
  2364   007E3C  EFF6  F03E         	goto	l150
  2365   007E40                     u900:
  2366   007E40                     l1596:
  2367                           
  2368                           ;librerias/clock.c: 38:         if (0 == bStatus){
  2369   007E40  5005               	movf	Clock_Init@bStatus_545^0,w,c
  2370   007E42  A4D8               	btfss	status,2,c
  2371   007E44  EF26  F03F         	goto	u911
  2372   007E48  EF28  F03F         	goto	u910
  2373   007E4C                     u911:
  2374   007E4C  EF2A  F03F         	goto	l149
  2375   007E50                     u910:
  2376   007E50                     
  2377                           ;librerias/clock.c: 39:             returnCode = ERROR_CODE_TIMEOUT;
  2378   007E50  0E01               	movlw	1
  2379   007E52  6E08               	movwf	Clock_Init@returnCode^0,c
  2380   007E54                     l149:
  2381                           
  2382                           ;librerias/clock.c: 42:         if(ERROR_CODE_OK == returnCode){
  2383   007E54  5008               	movf	Clock_Init@returnCode^0,w,c
  2384   007E56  A4D8               	btfss	status,2,c
  2385   007E58  EF30  F03F         	goto	u921
  2386   007E5C  EF32  F03F         	goto	u920
  2387   007E60                     u921:
  2388   007E60  EF68  F03F         	goto	l155
  2389   007E64                     u920:
  2390   007E64                     
  2391                           ;librerias/clock.c: 43:         OSCTUNEbits.SPLLMULT = 1;
  2392   007E64  8E9B               	bsf	155,7,c	;volatile
  2393                           
  2394                           ;librerias/clock.c: 44:         OSCCON2bits.PLLEN = 1;
  2395   007E66  88D2               	bsf	210,4,c	;volatile
  2396   007E68                     l156:
  2397                           
  2398                           ;librerias/clock.c: 47:             bStatus = OSCCON2bits.PLLRDY;
  2399   007E68  BED2               	btfsc	210,7,c	;volatile
  2400   007E6A  EF39  F03F         	goto	u931
  2401   007E6E  EF3C  F03F         	goto	u930
  2402   007E72                     u931:
  2403   007E72  0E01               	movlw	1
  2404   007E74  EF3D  F03F         	goto	u936
  2405   007E78                     u930:
  2406   007E78  0E00               	movlw	0
  2407   007E7A                     u936:
  2408   007E7A  6E06               	movwf	Clock_Init@bStatus_548^0,c
  2409   007E7C                     
  2410                           ;librerias/clock.c: 48:             s16Timeout--;
  2411   007E7C  0601               	decf	Clock_Init@s16Timeout^0,f,c
  2412   007E7E  A0D8               	btfss	status,0,c
  2413   007E80  0602               	decf	(Clock_Init@s16Timeout+1)^0,f,c
  2414   007E82                     
  2415                           ;librerias/clock.c: 49:         }while((0 == bStatus) && ((0 < s16Timeout) || (0 == bItT
      +                          imeEn)));
  2416   007E82  5006               	movf	Clock_Init@bStatus_548^0,w,c
  2417   007E84  A4D8               	btfss	status,2,c
  2418   007E86  EF47  F03F         	goto	u941
  2419   007E8A  EF49  F03F         	goto	u940
  2420   007E8E                     u941:
  2421   007E8E  EF5E  F03F         	goto	l1612
  2422   007E92                     u940:
  2423   007E92  BE02               	btfsc	(Clock_Init@s16Timeout+1)^0,7,c
  2424   007E94  EF56  F03F         	goto	u950
  2425   007E98  5002               	movf	(Clock_Init@s16Timeout+1)^0,w,c
  2426   007E9A  E106               	bnz	u951
  2427   007E9C  0401               	decf	Clock_Init@s16Timeout^0,w,c
  2428   007E9E  B0D8               	btfsc	status,0,c
  2429   007EA0  EF54  F03F         	goto	u951
  2430   007EA4  EF56  F03F         	goto	u950
  2431   007EA8                     u951:
  2432   007EA8  EF34  F03F         	goto	l156
  2433   007EAC                     u950:
  2434   007EAC  5007               	movf	Clock_Init@bItTimeEn^0,w,c
  2435   007EAE  B4D8               	btfsc	status,2,c
  2436   007EB0  EF5C  F03F         	goto	u961
  2437   007EB4  EF5E  F03F         	goto	u960
  2438   007EB8                     u961:
  2439   007EB8  EF34  F03F         	goto	l156
  2440   007EBC                     u960:
  2441   007EBC                     l1612:
  2442                           
  2443                           ;librerias/clock.c: 50:         if (0 == bStatus){
  2444   007EBC  5006               	movf	Clock_Init@bStatus_548^0,w,c
  2445   007EBE  A4D8               	btfss	status,2,c
  2446   007EC0  EF64  F03F         	goto	u971
  2447   007EC4  EF66  F03F         	goto	u970
  2448   007EC8                     u971:
  2449   007EC8  EF68  F03F         	goto	l155
  2450   007ECC                     u970:
  2451   007ECC                     
  2452                           ;librerias/clock.c: 51:             returnCode = ERROR_CODE_TIMEOUT;
  2453   007ECC  0E01               	movlw	1
  2454   007ECE  6E08               	movwf	Clock_Init@returnCode^0,c
  2455   007ED0                     l155:
  2456                           
  2457                           ;librerias/clock.c: 56:     if(ERROR_CODE_OK == returnCode){
  2458   007ED0  5008               	movf	Clock_Init@returnCode^0,w,c
  2459   007ED2  A4D8               	btfss	status,2,c
  2460   007ED4  EF6E  F03F         	goto	u981
  2461   007ED8  EF70  F03F         	goto	u980
  2462   007EDC                     u981:
  2463   007EDC  EF73  F03F         	goto	l162
  2464   007EE0                     u980:
  2465   007EE0                     
  2466                           ;librerias/clock.c: 57:         OSCCON2bits.PRISD = 0;
  2467   007EE0  94D2               	bcf	210,2,c	;volatile
  2468   007EE2                     
  2469                           ;librerias/clock.c: 58:         OSCCONbits.SCS = 0;
  2470   007EE2  0EFC               	movlw	-4
  2471   007EE4  16D3               	andwf	211,f,c	;volatile
  2472   007EE6                     l162:
  2473   007EE6  0012               	return		;funcret
  2474   007EE8                     __end_of_Clock_Init:
  2475                           	callstack 0
  2476                           
  2477                           	psect	rparam
  2478   000000                     
  2479                           	psect	config
  2480                           
  2481                           ;Config register CONFIG1L @ 0x300000
  2482                           ;	PLL Selection
  2483                           ;	PLLSEL = PLL3X, 3x clock multiplier
  2484                           ;	PLL Enable Configuration bit
  2485                           ;	CFGPLLEN = ON, PLL Enabled
  2486                           ;	CPU System Clock Postscaler
  2487                           ;	CPUDIV = NOCLKDIV, CPU uses system clock (no divide)
  2488                           ;	Low Speed USB mode with 48 MHz system clock
  2489                           ;	LS48MHZ = SYS48X8, System clock at 48 MHz, USB clock divider is set to 8
  2490   300000                     	org	3145728
  2491   300000  23                 	db	35
  2492                           
  2493                           ;Config register CONFIG1H @ 0x300001
  2494                           ;	Oscillator Selection
  2495                           ;	FOSC = INTOSCCLKO, Internal oscillator, clock output on OSC2
  2496                           ;	Primary Oscillator Shutdown
  2497                           ;	PCLKEN = OFF, Primary oscillator shutdown firmware controlled
  2498                           ;	Fail-Safe Clock Monitor
  2499                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2500                           ;	Internal/External Oscillator Switchover
  2501                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2502   300001                     	org	3145729
  2503   300001  09                 	db	9
  2504                           
  2505                           ;Config register CONFIG2L @ 0x300002
  2506                           ;	Power-up Timer Enable
  2507                           ;	nPWRTEN = OFF, Power up timer disabled
  2508                           ;	Brown-out Reset Enable
  2509                           ;	BOREN = SBORDIS, BOR enabled in hardware (SBOREN is ignored)
  2510                           ;	Brown-out Reset Voltage
  2511                           ;	BORV = 190, BOR set to 1.9V nominal
  2512                           ;	Low-Power Brown-out Reset
  2513                           ;	nLPBOR = OFF, Low-Power Brown-out Reset disabled
  2514   300002                     	org	3145730
  2515   300002  5F                 	db	95
  2516                           
  2517                           ;Config register CONFIG2H @ 0x300003
  2518                           ;	Watchdog Timer Enable bits
  2519                           ;	WDTEN = OFF, WDT disabled in hardware (SWDTEN ignored)
  2520                           ;	Watchdog Timer Postscaler
  2521                           ;	WDTPS = 32768, 1:32768
  2522   300003                     	org	3145731
  2523   300003  3C                 	db	60
  2524                           
  2525                           ; Padding undefined space
  2526   300004                     	org	3145732
  2527   300004  FF                 	db	255
  2528                           
  2529                           ;Config register CONFIG3H @ 0x300005
  2530                           ;	CCP2 MUX bit
  2531                           ;	CCP2MX = RC1, CCP2 input/output is multiplexed with RC1
  2532                           ;	PORTB A/D Enable bit
  2533                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  2534                           ;	Timer3 Clock Input MUX bit
  2535                           ;	T3CMX = RC0, T3CKI function is on RC0
  2536                           ;	SDO Output MUX bit
  2537                           ;	SDOMX = RB3, SDO function is on RB3
  2538                           ;	Master Clear Reset Pin Enable
  2539                           ;	MCLRE = ON, MCLR pin enabled; RE3 input disabled
  2540   300005                     	org	3145733
  2541   300005  D3                 	db	211
  2542                           
  2543                           ;Config register CONFIG4L @ 0x300006
  2544                           ;	Stack Full/Underflow Reset
  2545                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2546                           ;	Single-Supply ICSP Enable bit
  2547                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
  2548                           ;	Dedicated In-Circuit Debug/Programming Port Enable
  2549                           ;	ICPRT = OFF, ICPORT disabled
  2550                           ;	Extended Instruction Set Enable bit
  2551                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled
  2552                           ;	Background Debugger Enable bit
  2553                           ;	DEBUG = 0x1, unprogrammed default
  2554   300006                     	org	3145734
  2555   300006  85                 	db	133
  2556                           
  2557                           ; Padding undefined space
  2558   300007                     	org	3145735
  2559   300007  FF                 	db	255
  2560                           
  2561                           ;Config register CONFIG5L @ 0x300008
  2562                           ;	Block 0 Code Protect
  2563                           ;	CP0 = OFF, Block 0 is not code-protected
  2564                           ;	Block 1 Code Protect
  2565                           ;	CP1 = OFF, Block 1 is not code-protected
  2566                           ;	Block 2 Code Protect
  2567                           ;	CP2 = OFF, Block 2 is not code-protected
  2568                           ;	Block 3 Code Protect
  2569                           ;	CP3 = OFF, Block 3 is not code-protected
  2570   300008                     	org	3145736
  2571   300008  0F                 	db	15
  2572                           
  2573                           ;Config register CONFIG5H @ 0x300009
  2574                           ;	Boot Block Code Protect
  2575                           ;	CPB = OFF, Boot block is not code-protected
  2576                           ;	Data EEPROM Code Protect
  2577                           ;	CPD = OFF, Data EEPROM is not code-protected
  2578   300009                     	org	3145737
  2579   300009  C0                 	db	192
  2580                           
  2581                           ;Config register CONFIG6L @ 0x30000A
  2582                           ;	Block 0 Write Protect
  2583                           ;	WRT0 = OFF, Block 0 (0800-1FFFh) is not write-protected
  2584                           ;	Block 1 Write Protect
  2585                           ;	WRT1 = OFF, Block 1 (2000-3FFFh) is not write-protected
  2586                           ;	Block 2 Write Protect
  2587                           ;	WRT2 = OFF, Block 2 (04000-5FFFh) is not write-protected
  2588                           ;	Block 3 Write Protect
  2589                           ;	WRT3 = OFF, Block 3 (06000-7FFFh) is not write-protected
  2590   30000A                     	org	3145738
  2591   30000A  0F                 	db	15
  2592                           
  2593                           ;Config register CONFIG6H @ 0x30000B
  2594                           ;	Configuration Registers Write Protect
  2595                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  2596                           ;	Boot Block Write Protect
  2597                           ;	WRTB = OFF, Boot block (0000-7FFh) is not write-protected
  2598                           ;	Data EEPROM Write Protect
  2599                           ;	WRTD = OFF, Data EEPROM is not write-protected
  2600   30000B                     	org	3145739
  2601   30000B  E0                 	db	224
  2602                           
  2603                           ;Config register CONFIG7L @ 0x30000C
  2604                           ;	Block 0 Table Read Protect
  2605                           ;	EBTR0 = OFF, Block 0 is not protected from table reads executed in other blocks
  2606                           ;	Block 1 Table Read Protect
  2607                           ;	EBTR1 = OFF, Block 1 is not protected from table reads executed in other blocks
  2608                           ;	Block 2 Table Read Protect
  2609                           ;	EBTR2 = OFF, Block 2 is not protected from table reads executed in other blocks
  2610                           ;	Block 3 Table Read Protect
  2611                           ;	EBTR3 = OFF, Block 3 is not protected from table reads executed in other blocks
  2612   30000C                     	org	3145740
  2613   30000C  0F                 	db	15
  2614                           
  2615                           ;Config register CONFIG7H @ 0x30000D
  2616                           ;	Boot Block Table Read Protect
  2617                           ;	EBTRB = OFF, Boot block is not protected from table reads executed in other blocks
  2618   30000D                     	org	3145741
  2619   30000D  40                 	db	64
  2620                           tosu	equ	0xFFF
  2621                           tosh	equ	0xFFE
  2622                           tosl	equ	0xFFD
  2623                           stkptr	equ	0xFFC
  2624                           pclatu	equ	0xFFB
  2625                           pclath	equ	0xFFA
  2626                           pcl	equ	0xFF9
  2627                           tblptru	equ	0xFF8
  2628                           tblptrh	equ	0xFF7
  2629                           tblptrl	equ	0xFF6
  2630                           tablat	equ	0xFF5
  2631                           prodh	equ	0xFF4
  2632                           prodl	equ	0xFF3
  2633                           indf0	equ	0xFEF
  2634                           postinc0	equ	0xFEE
  2635                           postdec0	equ	0xFED
  2636                           preinc0	equ	0xFEC
  2637                           plusw0	equ	0xFEB
  2638                           fsr0h	equ	0xFEA
  2639                           fsr0l	equ	0xFE9
  2640                           wreg	equ	0xFE8
  2641                           indf1	equ	0xFE7
  2642                           postinc1	equ	0xFE6
  2643                           postdec1	equ	0xFE5
  2644                           preinc1	equ	0xFE4
  2645                           plusw1	equ	0xFE3
  2646                           fsr1h	equ	0xFE2
  2647                           fsr1l	equ	0xFE1
  2648                           bsr	equ	0xFE0
  2649                           indf2	equ	0xFDF
  2650                           postinc2	equ	0xFDE
  2651                           postdec2	equ	0xFDD
  2652                           preinc2	equ	0xFDC
  2653                           plusw2	equ	0xFDB
  2654                           fsr2h	equ	0xFDA
  2655                           fsr2l	equ	0xFD9
  2656                           status	equ	0xFD8

Data Sizes:
    Strings     277
    Constant    0
    Data        0
    BSS         37
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     40      77
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_1(CODE[7]), STR_10(CODE[9]), STR_11(CODE[14]), STR_12(CODE[17]), 
		 -> STR_13(CODE[10]), STR_14(CODE[14]), STR_15(CODE[17]), STR_16(CODE[11]), 
		 -> STR_17(CODE[14]), STR_18(CODE[17]), STR_19(CODE[8]), STR_2(CODE[10]), 
		 -> STR_20(CODE[25]), STR_21(CODE[24]), STR_22(CODE[26]), STR_23(CODE[8]), 
		 -> STR_24(CODE[28]), STR_3(CODE[11]), STR_4(CODE[18]), STR_5(CODE[18]), 
		 -> STR_6(CODE[11]), STR_7(CODE[9]), STR_8(CODE[8]), STR_9(CODE[13]), 

    S1021$buffer	PTR unsigned char  size(2) Largest target is 0

    S1021$source	PTR const unsigned char  size(2) Largest target is 0

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(COMRAM[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 28
		 -> STR_1(CODE[7]), STR_10(CODE[9]), STR_11(CODE[14]), STR_12(CODE[17]), 
		 -> STR_13(CODE[10]), STR_14(CODE[14]), STR_15(CODE[17]), STR_16(CODE[11]), 
		 -> STR_17(CODE[14]), STR_18(CODE[17]), STR_19(CODE[8]), STR_2(CODE[10]), 
		 -> STR_20(CODE[25]), STR_21(CODE[24]), STR_22(CODE[26]), STR_23(CODE[8]), 
		 -> STR_24(CODE[28]), STR_3(CODE[11]), STR_4(CODE[18]), STR_5(CODE[18]), 
		 -> STR_6(CODE[11]), STR_7(CODE[9]), STR_8(CODE[8]), STR_9(CODE[13]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_1(CODE[7]), STR_10(CODE[9]), STR_11(CODE[14]), STR_12(CODE[17]), 
		 -> STR_13(CODE[10]), STR_14(CODE[14]), STR_15(CODE[17]), STR_16(CODE[11]), 
		 -> STR_17(CODE[14]), STR_18(CODE[17]), STR_19(CODE[8]), STR_2(CODE[10]), 
		 -> STR_20(CODE[25]), STR_21(CODE[24]), STR_22(CODE[26]), STR_23(CODE[8]), 
		 -> STR_24(CODE[28]), STR_3(CODE[11]), STR_4(CODE[18]), STR_5(CODE[18]), 
		 -> STR_6(CODE[11]), STR_7(CODE[9]), STR_8(CODE[8]), STR_9(CODE[13]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _main->_SPI_BaudRateGen
    _UART_config_show->_printf
    _SPI_BaudRateGen->_SPI_ErrorHandler
    _SPI_ErrorHandler->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_fputc
    _fputc->_putch
    _putch->_UART_Tx

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    7905
                         _Clock_Init
                    _SPI_BaudRateGen
                          _UART_Init
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            4     0      4    3439
                                             25 COMRAM     4     0      4
                   _UART_config_show
                   _UART_select_baud
 ---------------------------------------------------------------------------------
 (2) _UART_select_baud                                     8     4      4      98
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _UART_config_show                                     0     0      0    3243
                             _printf
 ---------------------------------------------------------------------------------
 (1) _SPI_BaudRateGen                                     12     8      4    3882
                                             28 COMRAM    12     8      4
                   _SPI_ErrorHandler
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             14     6      8     452
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (2) _SPI_ErrorHandler                                     3     3      0    3287
                                             25 COMRAM     3     3      0
                             _printf
 ---------------------------------------------------------------------------------
 (3) _printf                                               5     3      2    3243
                                             22 COMRAM     3     1      2
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             7     2      5    1367
                                             15 COMRAM     7     2      5
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                            9     5      4    1020
                                             11 COMRAM     4     0      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4     660
                                              2 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0      30
                                              1 COMRAM     1     1      0
                            _UART_Tx
 ---------------------------------------------------------------------------------
 (8) _UART_Tx                                              1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Clock_Init                                           8     6      2     584
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Clock_Init
   _SPI_BaudRateGen
     _SPI_ErrorHandler
       _printf
         _vfprintf
           _vfpfcnvrt
             _fputc
               _putch
                 _UART_Tx
     ___aldiv
   _UART_Init
     _UART_config_show
       _printf
     _UART_select_baud

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      29        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     28      4D       1       81.1%
BITBIGSFRll         41      0       0      27        0.0%
BITBIGSFRhhh        2C      0       0      20        0.0%
BITBIGSFRhhll        F      0       0      22        0.0%
BITBIGSFRlhh         C      0       0      24        0.0%
BITBIGSFRhhlh        9      0       0      21        0.0%
BITBIGSFRhlh         7      0       0      23        0.0%
BITBIGSFRlhll        6      0       0      26        0.0%
BITBIGSFRlhlh        2      0       0      25        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      4D      28        0.0%
DATA                 0      0      4D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Wed Sep 11 18:44:56 2024

                       l11 76CC                         l12 76CC                         l80 7C9A  
                       l72 7C22                         l76 7C64                         l68 7BEC  
                       l85 7CD0                         l88 7696                         u10 7634  
                       u11 7630                        l101 7B8A                        l110 7622  
                      l104 7626                        l107 7638                        l150 7DEC  
                      l143 7DDC                        l144 7D74                        l137 7D5E  
                      l162 7EE6                        l138 7CF6                        l170 7874  
                      l155 7ED0                        l156 7E68                        l149 7E54  
                      l272 7A4A                        l169 7870                        l186 777A  
                      l900 7718                        l912 793E                        l922 7626  
                      l924 7634                        l926 761C                        l871 766C  
                      l894 77F0           ?_SPI_BaudRateGen 001D                        u600 7BA6  
                      u601 7BA2                        u610 7BD0                        u611 7BCC  
                      u540 7888                        u700 79D0                        u620 7C06  
                      u541 7884                        u701 79CC                        u621 7C02  
                      u550 789A                        u710 79F8                        u630 7C48  
                      u551 7896                        u711 79F4                        u631 7C44  
                      u800 7D6E                        u560 78C2                        u720 7A2A  
                      u640 7C7E                        u801 7D6A                        u561 78BE  
                      u721 7A26                        u641 7C7A                        u810 7D84  
                      u730 7CF2                        u570 78F8                        u650 7CB4  
                      u811 7D7E                        u731 7CEC                        u571 78F4  
                      u651 7CB0                        u900 7E40                        u820 7D9E  
                      u740 7CF4                        u580 779E                        u660 772C  
                      u901 7E3C                        u821 7D9A                        u581 779A  
                      u661 7728                        u910 7E50                        u830 7DB8  
                      u750 7D06                        u590 7710                        u670 7952  
                      u911 7E4C                        u831 7DB4                        u751 7D00  
                      u591 770C                        u671 794E                        u920 7E64  
                      u840 7DC8                        u816 7D86                        u760 7D20  
                      u680 7974                        u921 7E60                        u841 7DC4  
                      u761 7D1C                        u681 7970                        u930 7E78  
                      u850 7DD8                        u770 7D3A                        u690 79AE  
                      u931 7E72                        u851 7DD4                        u771 7D36  
                      u691 79AA                        u940 7E92                        u860 7DEC  
                      u780 7D4A                        u756 7D08                        u941 7E8E  
                      u861 7DE8                        u781 7D46                        u950 7EAC  
                      u870 7DFC                        u790 7D5A                        u951 7EA8  
                      u871 7DF6                        u791 7D56                        u960 7EBC  
                      u936 7E7A                        u880 7E16                        u961 7EB8  
                      u881 7E12                        u970 7ECC                        u890 7E30  
                      u971 7EC8                        u891 7E2C                        u980 7EE0  
                      u876 7DFE                        u981 7EDC                        u995 7814  
                      wreg 0FE8                 _TXSTA1bits 0FAC                       l1400 7BD0  
                     l1410 7C3A                       l1402 7BE0                       l1500 7750  
                     l1420 7C8E                       l1412 7C48                       l1404 7BF8  
                     l1350 78C2                       l1342 7876                       l1510 7952  
                     l1422 7CA6                       l1414 7C58                       l1406 7C06  
                     l1430 7A50                       l1600 7E64                       l1352 78F8  
                     l1344 7888                       l1360 77AA                       l1520 7988  
                     l1512 7962                       l1424 7CB4                       l1416 7C70  
                     l1408 7C16                       l1440 7A8C                       l1432 7A5C  
                     l1610 7EAC                       l1602 7E68                       l1346 789A  
                     l1362 77B6                       l1530 79D0                       l1522 7998  
                     l1514 7966                       l1506 7940                       l1426 7CC4  
                     l1418 7C7E                       l1442 7A98                       l1434 7A68  
                     l1612 7EBC                       l1604 7E7C                       l1348 78A4  
                     l1364 77BA                       l1356 777C                       l1380 7710  
                     l1540 7A14                       l1532 79DA                       l1524 79AE  
                     l1516 7974                       l1508 7944                       l1444 7AA4  
                     l1436 7A74                       l1428 7A4C                       l1614 7ECC  
                     l1606 7E82                       l1550 7CD2                       l1358 779E  
                     l1374 76D4                       l1534 79F8                       l1526 79B6  
                     l1542 7A1A                       l1518 7984                       l1390 7B8C  
                     l1438 7A80                       l1630 768C                       l1622 766E  
                     l1616 7EE0                       l1608 7E92                       l1560 7D10  
                     l1552 7CD6                       l1368 77CA                       l1376 76E0  
                     l1384 7650                       l1544 7A2A                       l1536 7A08  
                     l1528 79C2                       l1640 7850                       l1392 7B98  
                     l1448 7AB0                       l1632 768E                       l1624 7674  
                     l1618 7EE2                       l1570 7D6E                       l1562 7D20  
                     l1554 7CF6                       l1378 76F4                       l1386 7654  
                     l1490 771C                       l1546 7A3A                       l1538 7A0A  
                     l1642 7866                       l1394 7BA6                       l1634 7690  
                     l1626 7688                       l1650 76B8                       l1580 7DB8  
                     l1572 7D70                       l1564 7D3A                       l1556 7CF6  
                     l1396 7BB6                       l1740 7B12                       l1732 7ACE  
                     l1636 7692                       l1628 768A                       l1590 7E06  
                     l1582 7DC8                       l1574 7D88                       l1566 7D4A  
                     l1558 7D0A                       l1494 7730                       l1638 77F2  
                     l1398 7BC2                       l1750 7B66                       l1734 7B58  
                     l1742 7B20                       l1646 7698                       l1592 7E16  
                     l1584 7DD8                       l1576 7D8E                       l1568 7D5A  
                     l1752 7764                       l1496 7740                       l1744 7B2E  
                     l1736 7B74                       l1648 76A4                       l1594 7E30  
                     l1586 7DEC                       l1578 7D9E                       l1746 7B3C  
                     l1738 7B04                       l1596 7E40                       l1588 7E00  
                     l1748 7B4A                       l1598 7E50                       STR_1 7FF7  
                     STR_2 7FCB                       STR_3 7FB6                       STR_4 7F62  
                     STR_5 7F50                       STR_6 7FA0                       STR_7 7FDE  
                     STR_8 7FEF                       STR_9 7F93                       u1000 7866  
                     _CREN 7D5C                       u1001 7862                       _SPEN 7D5F  
                     _TRMT 7D61            __end_of_UART_Tx 763A                       _dbuf 0029  
                     _main 7698                       _prec 004B                       fsr1h 0FE2  
                     fsr2h 0FDA                       indf2 0FDF                       fsr1l 0FE1  
                     fsr2l 0FD9                       start 0000               ___param_bank 0000  
 UART_select_baud@baudrate 0001                 _Clock_Init 7CD2               _BAUDCON1bits 0FB8  
          __end_of___aldiv 7A4C                      ?_main 0001                      STR_10 7FD5  
                    STR_11 7F85                      STR_12 7F74                      STR_20 7F1F  
                    STR_13 7FC1                      STR_21 7F38                      STR_14 7F85  
                    STR_22 7F05                      STR_15 7F74                      STR_23 7FE7  
                    STR_16 7FAB                      STR_24 7EE9                      STR_17 7F85  
                    STR_18 7F74                      STR_19 7FE7                      _BRGH1 7D62  
                    _RC1IF 7CF5                      _RCREG 0FAE          Clock_Init@bStatus 0003  
             vfpfcnvrt@fmt 000E           _UART_config_show 7B8C                      _SPBRG 0FAF  
                    _TXEN1 7D65                      _SYNC1 7D64                      _flags 004D  
                    _fputc 7876                      _width 0049                      _putch 761A  
                    tablat 0FF5                      status 0FD8            __initialization 763A  
             __end_of_main 76D4                     ??_main 0029              __activetblptr 0002  
                ??_UART_Tx 0001                     ?_fputc 0003                     _BRG161 7DC3  
                   ?_putch 0001                     _RCREG1 0FAE                     _SPBRGH 0FB0  
                   _TRISC6 7CA6                     _TRISC7 7CA7                     _TXREG1 0FAD  
             vfprintf@cfmt 0015          __end_of_UART_Init 7698                  ??___aldiv 0009  
              ?_Clock_Init 0001                     clear_0 7640                     isa$std 0001  
                   _printf 7650   __end_of_SPI_ErrorHandler 777C                     fputc@c 0003  
             __mediumconst 7EE8                     tblptrh 0FF7                     tblptrl 0FF6  
                   tblptru 0FF8           __end_of_vfprintf 771A                 __accesstop 0060  
  __end_of__initialization 7646              ___rparam_used 0001           _UART_select_baud 7A4C  
           __pcstackCOMRAM 0001              __end_of_fputc 7940              __end_of_putch 7624  
                  ??_fputc 0007                    ??_putch 0002   __end_of_UART_config_show 7CD2  
      Clock_Init@bItTimeEn 0007                    ?_printf 0017                    _SSP1ADD 0FC8  
                  _UART_Tx 7624                    __Hparam 0000                    __Lparam 0000  
                  ___aldiv 7940                  ?_vfprintf 0010                    __pcinit 763A  
                  __ramtop 0800                    __ptext0 7698                    __ptext1 766E  
                  __ptext2 7A4C                    __ptext3 7B8C                    __ptext4 77F2  
                  __ptext5 7940                    __ptext6 771A                    __ptext7 7650  
                  __ptext8 76D4                    __ptext9 777C                UART_Tx@dato 0001  
         ___aldiv@dividend 0001       end_of_initialization 7646                    fputc@fp 0005  
            __Lmediumconst 7EE8      Clock_Init@bStatus_544 0004      Clock_Init@bStatus_545 0005  
    Clock_Init@bStatus_548 0006          __end_of_vfpfcnvrt 77F2                  _RCSTAbits 0FAB  
         ___aldiv@quotient 000B                    postdec2 0FDD                    postinc0 0FEE  
                  postinc1 0FE6                    postinc2 0FDE               ??_Clock_Init 0003  
               ??_vfprintf 0015                  _UART_Init 766E          ?_SPI_ErrorHandler 0001  
 __end_of_UART_select_baud 7B8C         ??_SPI_ErrorHandler 001A         __end_of_Clock_Init 7EE8  
                _TXSTAbits 0FAC          ??_SPI_BaudRateGen 0021                vfpfcnvrt@ap 000F  
              vfpfcnvrt@fp 000C                 ?_UART_Init 001A             __end_of_printf 766E  
      start_initialization 763A     SPI_BaudRateGen@baudReg 0025  SPI_ErrorHandler@errorCode 001C  
     Clock_Init@s16Timeout 0001          ?_UART_config_show 0001                vfprintf@fmt 0012  
       ??_UART_config_show 001A                   ??_printf 0019                __pbssCOMRAM 0029  
                 ?_UART_Tx 0001              __pmediumconst 7EE8                   ?___aldiv 0001  
              ??_UART_Init 001E            ___aldiv@divisor 0005            ___aldiv@counter 0009  
                _vfpfcnvrt 777C          UART_Init@baudrate 001A      SPI_BaudRateGen@FClock 001D  
        ?_UART_select_baud 0001            _SPI_BaudRateGen 77F2         ??_UART_select_baud 0005  
                 __Hrparam 0000                 vfprintf@ap 0014                   __Lrparam 0000  
               vfprintf@fp 0010                 ?_vfpfcnvrt 000C                   __ptext10 7876  
                 __ptext11 761A                   __ptext12 7624                   __ptext13 7CD2  
              _OSCCON2bits 0FD2                   isa$xinst 0000                   _vfprintf 76D4  
                printf@fmt 0017    __end_of_SPI_BaudRateGen 7876                  putch@data 0002  
              _OSCTUNEbits 0F9B                 _OSCCONbits 0FD3                   printf@ap 0019  
              ??_vfpfcnvrt 0010       Clock_Init@returnCode 0008               ___aldiv@sign 000A  
         _SPI_ErrorHandler 771A  
