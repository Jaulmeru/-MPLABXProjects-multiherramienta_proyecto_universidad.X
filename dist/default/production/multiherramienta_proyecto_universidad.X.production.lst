

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Wed Oct 02 20:05:35 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F45K50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    22                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    23                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    24   000000                     
    25                           ; Generated 12/10/2023 GMT
    26                           ; 
    27                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution. Publication is not required when
    41                           ;        this file is used in an embedded application.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC18F45K50 Definitions
    57                           ; 
    58                           ; SFR Addresses
    59   000000                     _RCREG	set	4014
    60   000000                     _TXREG1	set	4013
    61   000000                     _SPBRG	set	4015
    62   000000                     _SPBRGH	set	4016
    63   000000                     _BRG161	set	32195
    64   000000                     _RCREG1	set	4014
    65   000000                     _TXSTAbits	set	4012
    66   000000                     _RCSTAbits	set	4011
    67   000000                     _BAUDCON1	set	4024
    68   000000                     _TXSTA1bits	set	4012
    69   000000                     _TRMT	set	32097
    70   000000                     _TRISC7	set	31911
    71   000000                     _CREN	set	32092
    72   000000                     _TXEN1	set	32101
    73   000000                     _BRGH1	set	32098
    74   000000                     _ANSELC	set	3933
    75   000000                     _LATAbits	set	3977
    76   000000                     _TRISAbits	set	3986
    77   000000                     _PIR1bits	set	3998
    78   000000                     _TRISC6	set	31910
    79   000000                     _SPEN	set	32095
    80   000000                     _SYNC1	set	32100
    81   000000                     _OSCCON2bits	set	4050
    82   000000                     _OSCTUNEbits	set	3995
    83   000000                     _OSCCONbits	set	4051
    84                           
    85                           	psect	smallconst
    86   000800                     __psmallconst:
    87                           	callstack 0
    88   000800  00                 	db	0
    89   000801                     STR_5:
    90   000801  62                 	db	98	;'b'
    91   000802  61                 	db	97	;'a'
    92   000803  6A                 	db	106	;'j'
    93   000804  61                 	db	97	;'a'
    94   000805  20                 	db	32
    95   000806  76                 	db	118	;'v'
    96   000807  65                 	db	101	;'e'
    97   000808  6C                 	db	108	;'l'
    98   000809  6F                 	db	111	;'o'
    99   00080A  63                 	db	99	;'c'
   100   00080B  69                 	db	105	;'i'
   101   00080C  64                 	db	100	;'d'
   102   00080D  61                 	db	97	;'a'
   103   00080E  64                 	db	100	;'d'
   104   00080F  20                 	db	32
   105   000810  0D                 	db	13
   106   000811  0A                 	db	10
   107   000812  00                 	db	0
   108   000813                     STR_4:
   109   000813  61                 	db	97	;'a'
   110   000814  6C                 	db	108	;'l'
   111   000815  74                 	db	116	;'t'
   112   000816  61                 	db	97	;'a'
   113   000817  20                 	db	32
   114   000818  76                 	db	118	;'v'
   115   000819  65                 	db	101	;'e'
   116   00081A  6C                 	db	108	;'l'
   117   00081B  6F                 	db	111	;'o'
   118   00081C  63                 	db	99	;'c'
   119   00081D  69                 	db	105	;'i'
   120   00081E  64                 	db	100	;'d'
   121   00081F  61                 	db	97	;'a'
   122   000820  64                 	db	100	;'d'
   123   000821  20                 	db	32
   124   000822  0D                 	db	13
   125   000823  0A                 	db	10
   126   000824  00                 	db	0
   127   000825                     STR_12:
   128   000825  44                 	db	68	;'D'
   129   000826  65                 	db	101	;'e'
   130   000827  73                 	db	115	;'s'
   131   000828  68                 	db	104	;'h'
   132   000829  61                 	db	97	;'a'
   133   00082A  62                 	db	98	;'b'
   134   00082B  69                 	db	105	;'i'
   135   00082C  6C                 	db	108	;'l'
   136   00082D  69                 	db	105	;'i'
   137   00082E  74                 	db	116	;'t'
   138   00082F  61                 	db	97	;'a'
   139   000830  64                 	db	100	;'d'
   140   000831  6F                 	db	111	;'o'
   141   000832  20                 	db	32
   142   000833  0D                 	db	13
   143   000834  0A                 	db	10
   144   000835  00                 	db	0
   145   000836                     STR_11:
   146   000836  48                 	db	72	;'H'
   147   000837  61                 	db	97	;'a'
   148   000838  62                 	db	98	;'b'
   149   000839  69                 	db	105	;'i'
   150   00083A  6C                 	db	108	;'l'
   151   00083B  69                 	db	105	;'i'
   152   00083C  74                 	db	116	;'t'
   153   00083D  61                 	db	97	;'a'
   154   00083E  64                 	db	100	;'d'
   155   00083F  6F                 	db	111	;'o'
   156   000840  20                 	db	32
   157   000841  0D                 	db	13
   158   000842  0A                 	db	10
   159   000843  00                 	db	0
   160   000844                     STR_9:
   161   000844  78                 	db	120	;'x'
   162   000845  20                 	db	32
   163   000846  62                 	db	98	;'b'
   164   000847  61                 	db	97	;'a'
   165   000848  75                 	db	117	;'u'
   166   000849  64                 	db	100	;'d'
   167   00084A  69                 	db	105	;'i'
   168   00084B  6F                 	db	111	;'o'
   169   00084C  73                 	db	115	;'s'
   170   00084D  20                 	db	32
   171   00084E  0D                 	db	13
   172   00084F  0A                 	db	10
   173   000850  00                 	db	0
   174   000851                     STR_6:
   175   000851  42                 	db	66	;'B'
   176   000852  61                 	db	97	;'a'
   177   000853  75                 	db	117	;'u'
   178   000854  64                 	db	100	;'d'
   179   000855  72                 	db	114	;'r'
   180   000856  61                 	db	97	;'a'
   181   000857  74                 	db	116	;'t'
   182   000858  65                 	db	101	;'e'
   183   000859  3A                 	db	58	;':'
   184   00085A  20                 	db	32
   185   00085B  00                 	db	0
   186   00085C                     STR_16:
   187   00085C  52                 	db	82	;'R'
   188   00085D  65                 	db	101	;'e'
   189   00085E  63                 	db	99	;'c'
   190   00085F  65                 	db	101	;'e'
   191   000860  70                 	db	112	;'p'
   192   000861  74                 	db	116	;'t'
   193   000862  6F                 	db	111	;'o'
   194   000863  72                 	db	114	;'r'
   195   000864  3A                 	db	58	;':'
   196   000865  20                 	db	32
   197   000866  00                 	db	0
   198   000867                     STR_3:
   199   000867  41                 	db	65	;'A'
   200   000868  73                 	db	115	;'s'
   201   000869  69                 	db	105	;'i'
   202   00086A  6E                 	db	110	;'n'
   203   00086B  63                 	db	99	;'c'
   204   00086C  72                 	db	114	;'r'
   205   00086D  6F                 	db	111	;'o'
   206   00086E  6E                 	db	110	;'n'
   207   00086F  6F                 	db	111	;'o'
   208   000870  20                 	db	32
   209   000871  00                 	db	0
   210   000872                     STR_13:
   211   000872  54                 	db	84	;'T'
   212   000873  72                 	db	114	;'r'
   213   000874  61                 	db	97	;'a'
   214   000875  6E                 	db	110	;'n'
   215   000876  73                 	db	115	;'s'
   216   000877  6F                 	db	111	;'o'
   217   000878  72                 	db	114	;'r'
   218   000879  3A                 	db	58	;':'
   219   00087A  20                 	db	32
   220   00087B  00                 	db	0
   221   00087C                     STR_2:
   222   00087C  53                 	db	83	;'S'
   223   00087D  69                 	db	105	;'i'
   224   00087E  6E                 	db	110	;'n'
   225   00087F  63                 	db	99	;'c'
   226   000880  72                 	db	114	;'r'
   227   000881  6F                 	db	111	;'o'
   228   000882  6E                 	db	110	;'n'
   229   000883  6F                 	db	111	;'o'
   230   000884  20                 	db	32
   231   000885  00                 	db	0
   232   000886                     STR_10:
   233   000886  50                 	db	80	;'P'
   234   000887  75                 	db	117	;'u'
   235   000888  65                 	db	101	;'e'
   236   000889  72                 	db	114	;'r'
   237   00088A  74                 	db	116	;'t'
   238   00088B  6F                 	db	111	;'o'
   239   00088C  3A                 	db	58	;':'
   240   00088D  20                 	db	32
   241   00088E  00                 	db	0
   242   00088F                     STR_7:
   243   00088F  31                 	db	49	;'1'
   244   000890  36                 	db	54	;'6'
   245   000891  20                 	db	32
   246   000892  62                 	db	98	;'b'
   247   000893  69                 	db	105	;'i'
   248   000894  74                 	db	116	;'t'
   249   000895  73                 	db	115	;'s'
   250   000896  20                 	db	32
   251   000897  00                 	db	0
   252   000898                     STR_8:
   253   000898  38                 	db	56	;'8'
   254   000899  20                 	db	32
   255   00089A  62                 	db	98	;'b'
   256   00089B  69                 	db	105	;'i'
   257   00089C  74                 	db	116	;'t'
   258   00089D  73                 	db	115	;'s'
   259   00089E  20                 	db	32
   260   00089F  00                 	db	0
   261   0008A0                     STR_1:
   262   0008A0  4D                 	db	77	;'M'
   263   0008A1  6F                 	db	111	;'o'
   264   0008A2  64                 	db	100	;'d'
   265   0008A3  6F                 	db	111	;'o'
   266   0008A4  3A                 	db	58	;':'
   267   0008A5  20                 	db	32
   268   0008A6  00                 	db	0
   269   0008A7  00                 	db	0	; dummy byte at the end
   270   000000                     
   271                           ; #config settings
   272                           
   273                           	psect	cinit
   274   000F28                     __pcinit:
   275                           	callstack 0
   276   000F28                     start_initialization:
   277                           	callstack 0
   278   000F28                     __initialization:
   279                           	callstack 0
   280                           
   281                           ; Clear objects allocated to COMRAM (38 bytes)
   282   000F28  EE00  F001         	lfsr	0,__pbssCOMRAM
   283   000F2C  0E26               	movlw	38
   284   000F2E                     clear_0:
   285   000F2E  6AEE               	clrf	postinc0,c
   286   000F30  06E8               	decf	wreg,f,c
   287   000F32  E1FD               	bnz	clear_0
   288   000F34                     end_of_initialization:
   289                           	callstack 0
   290   000F34                     __end_of__initialization:
   291                           	callstack 0
   292   000F34  0E00               	movlw	low (__Lmediumconst shr (0+16))
   293   000F36  6EF8               	movwf	tblptru,c
   294   000F38  0100               	movlb	0
   295   000F3A  EF1A  F007         	goto	_main	;jump to C main() function
   296                           
   297                           	psect	bssCOMRAM
   298   000001                     __pbssCOMRAM:
   299                           	callstack 0
   300   000001                     	ds	32
   301   000021                     _width:
   302                           	callstack 0
   303   000021                     	ds	2
   304   000023                     _prec:
   305                           	callstack 0
   306   000023                     	ds	2
   307   000025                     _flags:
   308                           	callstack 0
   309   000025                     	ds	1
   310   000026                     _readMessage:
   311                           	callstack 0
   312   000026                     	ds	1
   313                           
   314                           	psect	cstackCOMRAM
   315   000027                     __pcstackCOMRAM:
   316                           	callstack 0
   317   000027                     UART_Tx@dato:
   318                           	callstack 0
   319   000027                     Clock_Init@s16Timeout:
   320                           	callstack 0
   321   000027                     UART_select_baud@baudrate:
   322                           	callstack 0
   323                           
   324                           ; 4 bytes @ 0x0
   325   000027                     	ds	1
   326   000028                     putch@data:
   327                           	callstack 0
   328                           
   329                           ; 1 bytes @ 0x1
   330   000028                     	ds	1
   331   000029                     Clock_Init@bStatus:
   332                           	callstack 0
   333   000029                     fputc@c:
   334                           	callstack 0
   335                           
   336                           ; 2 bytes @ 0x2
   337   000029                     	ds	1
   338   00002A                     Clock_Init@bStatus_589:
   339                           	callstack 0
   340                           
   341                           ; 1 bytes @ 0x3
   342   00002A                     	ds	1
   343   00002B                     ??_UART_select_baud:
   344   00002B                     Clock_Init@bStatus_590:
   345                           	callstack 0
   346   00002B                     fputc@fp:
   347                           	callstack 0
   348                           
   349                           ; 2 bytes @ 0x4
   350   00002B                     	ds	1
   351   00002C                     Clock_Init@bStatus_593:
   352                           	callstack 0
   353                           
   354                           ; 1 bytes @ 0x5
   355   00002C                     	ds	1
   356   00002D                     ??_fputc:
   357   00002D                     Clock_Init@bItTimeEn:
   358                           	callstack 0
   359                           
   360                           ; 1 bytes @ 0x6
   361   00002D                     	ds	1
   362   00002E                     Clock_Init@returnCode:
   363                           	callstack 0
   364                           
   365                           ; 1 bytes @ 0x7
   366   00002E                     	ds	4
   367   000032                     vfpfcnvrt@fp:
   368                           	callstack 0
   369                           
   370                           ; 2 bytes @ 0xB
   371   000032                     	ds	2
   372   000034                     vfpfcnvrt@fmt:
   373                           	callstack 0
   374                           
   375                           ; 1 bytes @ 0xD
   376   000034                     	ds	1
   377   000035                     vfpfcnvrt@ap:
   378                           	callstack 0
   379                           
   380                           ; 1 bytes @ 0xE
   381   000035                     	ds	1
   382   000036                     ?_vfprintf:
   383                           	callstack 0
   384   000036                     vfprintf@fp:
   385                           	callstack 0
   386                           
   387                           ; 2 bytes @ 0xF
   388   000036                     	ds	2
   389   000038                     vfprintf@fmt:
   390                           	callstack 0
   391                           
   392                           ; 1 bytes @ 0x11
   393   000038                     	ds	1
   394   000039                     vfprintf@ap:
   395                           	callstack 0
   396                           
   397                           ; 1 bytes @ 0x12
   398   000039                     	ds	1
   399   00003A                     vfprintf@cfmt:
   400                           	callstack 0
   401                           
   402                           ; 1 bytes @ 0x13
   403   00003A                     	ds	1
   404   00003B                     ?_printf:
   405                           	callstack 0
   406   00003B                     printf@fmt:
   407                           	callstack 0
   408                           
   409                           ; 1 bytes @ 0x14
   410   00003B                     	ds	1
   411   00003C                     printf@ap:
   412                           	callstack 0
   413                           
   414                           ; 1 bytes @ 0x15
   415   00003C                     	ds	1
   416   00003D                     UART_Init@baudrate:
   417                           	callstack 0
   418                           
   419                           ; 4 bytes @ 0x16
   420   00003D                     	ds	4
   421   000041                     
   422                           ; 1 bytes @ 0x1A
   423 ;;
   424 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   425 ;;
   426 ;; *************** function _main *****************
   427 ;; Defined at:
   428 ;;		line 20 in file "src/main.c"
   429 ;; Parameters:    Size  Location     Type
   430 ;;		None
   431 ;; Auto vars:     Size  Location     Type
   432 ;;		None
   433 ;; Return value:  Size  Location     Type
   434 ;;                  2   18[None  ] int 
   435 ;; Registers used:
   436 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   437 ;; Tracked objects:
   438 ;;		On entry : 0/0
   439 ;;		On exit  : 0/0
   440 ;;		Unchanged: 0/0
   441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   442 ;;      Params:         0       0       0       0       0       0       0       0       0
   443 ;;      Locals:         0       0       0       0       0       0       0       0       0
   444 ;;      Temps:          0       0       0       0       0       0       0       0       0
   445 ;;      Totals:         0       0       0       0       0       0       0       0       0
   446 ;;Total ram usage:        0 bytes
   447 ;; Hardware stack levels required when called: 8
   448 ;; This function calls:
   449 ;;		_Clock_Init
   450 ;;		_UART_Init
   451 ;;		_UART_Rx
   452 ;; This function is called by:
   453 ;;		Startup code after reset
   454 ;; This function uses a non-reentrant model
   455 ;;
   456                           
   457                           	psect	text0
   458   000E34                     __ptext0:
   459                           	callstack 0
   460   000E34                     _main:
   461                           	callstack 23
   462   000E34                     
   463                           ;src/main.c: 22:     Clock_Init(16000);
   464   000E34  0E3E               	movlw	62
   465   000E36  6E28               	movwf	(Clock_Init@s16Timeout+1)^0,c
   466   000E38  0E80               	movlw	128
   467   000E3A  6E27               	movwf	Clock_Init@s16Timeout^0,c
   468   000E3C  EC54  F004         	call	_Clock_Init	;wreg free
   469   000E40                     
   470                           ;src/main.c: 23:     UART_Init(9600);
   471   000E40  0E80               	movlw	128
   472   000E42  6E3D               	movwf	UART_Init@baudrate^0,c
   473   000E44  0E25               	movlw	37
   474   000E46  6E3E               	movwf	(UART_Init@baudrate+1)^0,c
   475   000E48  0E00               	movlw	0
   476   000E4A  6E3F               	movwf	(UART_Init@baudrate+2)^0,c
   477   000E4C  0E00               	movlw	0
   478   000E4E  6E40               	movwf	(UART_Init@baudrate+3)^0,c
   479   000E50  EC6E  F007         	call	_UART_Init	;wreg free
   480   000E54                     
   481                           ;src/main.c: 24:     TRISAbits.RA1 = 0;
   482   000E54  9292               	bcf	146,1,c	;volatile
   483   000E56                     l1618:
   484                           
   485                           ;src/main.c: 27:     {;src/main.c: 28:         if(PIR1bits.RC1IF){
   486   000E56  AA9E               	btfss	158,5,c	;volatile
   487   000E58  EF30  F007         	goto	u831
   488   000E5C  EF32  F007         	goto	u830
   489   000E60                     u831:
   490   000E60  EF2B  F007         	goto	l1618
   491   000E64                     u830:
   492   000E64                     
   493                           ;src/main.c: 29:             readMessage = UART_Rx();
   494   000E64  ECAF  F007         	call	_UART_Rx	;wreg free
   495   000E68  6E26               	movwf	_readMessage^0,c
   496   000E6A                     
   497                           ;src/main.c: 30:             if(readMessage == '1') do { LATAbits.LATA1 = 1; } while(0);
   498   000E6A  0E31               	movlw	49
   499   000E6C  1826               	xorwf	_readMessage^0,w,c
   500   000E6E  A4D8               	btfss	status,2,c
   501   000E70  EF3C  F007         	goto	u841
   502   000E74  EF3E  F007         	goto	u840
   503   000E78                     u841:
   504   000E78  EF3F  F007         	goto	l1624
   505   000E7C                     u840:
   506   000E7C  8289               	bsf	137,1,c	;volatile
   507   000E7E                     l1624:
   508                           
   509                           ;src/main.c: 31:             if(readMessage == '0') do { LATAbits.LATA1 = 0; } while(0);
   510   000E7E  0E30               	movlw	48
   511   000E80  1826               	xorwf	_readMessage^0,w,c
   512   000E82  A4D8               	btfss	status,2,c
   513   000E84  EF46  F007         	goto	u851
   514   000E88  EF48  F007         	goto	u850
   515   000E8C                     u851:
   516   000E8C  EF2B  F007         	goto	l1618
   517   000E90                     u850:
   518   000E90  9289               	bcf	137,1,c	;volatile
   519   000E92  EF2B  F007         	goto	l1618
   520   000E96  EF00  F000         	goto	start
   521   000E9A                     __end_of_main:
   522                           	callstack 0
   523                           
   524 ;; *************** function _UART_Rx *****************
   525 ;; Defined at:
   526 ;;		line 97 in file "src/librerias/UART.c"
   527 ;; Parameters:    Size  Location     Type
   528 ;;		None
   529 ;; Auto vars:     Size  Location     Type
   530 ;;		None
   531 ;; Return value:  Size  Location     Type
   532 ;;                  1    wreg      unsigned char 
   533 ;; Registers used:
   534 ;;		wreg, status,2
   535 ;; Tracked objects:
   536 ;;		On entry : 0/0
   537 ;;		On exit  : 0/0
   538 ;;		Unchanged: 0/0
   539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   540 ;;      Params:         0       0       0       0       0       0       0       0       0
   541 ;;      Locals:         0       0       0       0       0       0       0       0       0
   542 ;;      Temps:          0       0       0       0       0       0       0       0       0
   543 ;;      Totals:         0       0       0       0       0       0       0       0       0
   544 ;;Total ram usage:        0 bytes
   545 ;; Hardware stack levels used: 1
   546 ;; This function calls:
   547 ;;		Nothing
   548 ;; This function is called by:
   549 ;;		_main
   550 ;; This function uses a non-reentrant model
   551 ;;
   552                           
   553                           	psect	text1
   554   000F5E                     __ptext1:
   555                           	callstack 0
   556   000F5E                     _UART_Rx:
   557                           	callstack 30
   558   000F5E                     
   559                           ;src/librerias/UART.c: 100:     return RCREG1;
   560   000F5E  50AE               	movf	174,w,c	;volatile
   561   000F60  0012               	return		;funcret
   562   000F62                     __end_of_UART_Rx:
   563                           	callstack 0
   564                           
   565 ;; *************** function _UART_Init *****************
   566 ;; Defined at:
   567 ;;		line 20 in file "src/librerias/UART.c"
   568 ;; Parameters:    Size  Location     Type
   569 ;;  baudrate        4   22[COMRAM] unsigned long 
   570 ;; Auto vars:     Size  Location     Type
   571 ;;		None
   572 ;; Return value:  Size  Location     Type
   573 ;;                  1    wreg      void 
   574 ;; Registers used:
   575 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   576 ;; Tracked objects:
   577 ;;		On entry : 0/0
   578 ;;		On exit  : 0/0
   579 ;;		Unchanged: 0/0
   580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   581 ;;      Params:         4       0       0       0       0       0       0       0       0
   582 ;;      Locals:         0       0       0       0       0       0       0       0       0
   583 ;;      Temps:          0       0       0       0       0       0       0       0       0
   584 ;;      Totals:         4       0       0       0       0       0       0       0       0
   585 ;;Total ram usage:        4 bytes
   586 ;; Hardware stack levels used: 1
   587 ;; Hardware stack levels required when called: 7
   588 ;; This function calls:
   589 ;;		_UART_config_show
   590 ;;		_UART_select_baud
   591 ;; This function is called by:
   592 ;;		_main
   593 ;; This function uses a non-reentrant model
   594 ;;
   595                           
   596                           	psect	text2
   597   000EDC                     __ptext2:
   598                           	callstack 0
   599   000EDC                     _UART_Init:
   600                           	callstack 23
   601   000EDC                     
   602                           ;src/librerias/UART.c: 21:     TXSTA1bits.SYNC1 = 0;
   603   000EDC  98AC               	bcf	172,4,c	;volatile
   604                           
   605                           ;src/librerias/UART.c: 22:     TXSTA1bits.BRGH1 = 1;
   606   000EDE  84AC               	bsf	172,2,c	;volatile
   607   000EE0                     
   608                           ;src/librerias/UART.c: 23:     BAUDCON1 = 0x4A;
   609   000EE0  0E4A               	movlw	74
   610   000EE2  6EB8               	movwf	184,c	;volatile
   611   000EE4                     
   612                           ;src/librerias/UART.c: 24:     UART_select_baud(baudrate);
   613   000EE4  C03D  F027         	movff	UART_Init@baudrate,UART_select_baud@baudrate
   614   000EE8  C03E  F028         	movff	UART_Init@baudrate+1,UART_select_baud@baudrate+1
   615   000EEC  C03F  F029         	movff	UART_Init@baudrate+2,UART_select_baud@baudrate+2
   616   000EF0  C040  F02A         	movff	UART_Init@baudrate+3,UART_select_baud@baudrate+3
   617   000EF4  EC5F  F005         	call	_UART_select_baud	;wreg free
   618   000EF8                     
   619                           ;src/librerias/UART.c: 25:     TRISC6 = 1;
   620   000EF8  8C94               	bsf	3988,6,c	;volatile
   621   000EFA                     
   622                           ;src/librerias/UART.c: 26:     TRISC7 = 1;
   623   000EFA  8E94               	bsf	3988,7,c	;volatile
   624   000EFC                     
   625                           ;src/librerias/UART.c: 27:     RCSTAbits.SPEN = 1;
   626   000EFC  8EAB               	bsf	171,7,c	;volatile
   627   000EFE                     
   628                           ;src/librerias/UART.c: 28:     TXSTAbits.TXEN1 = 1;
   629   000EFE  8AAC               	bsf	172,5,c	;volatile
   630   000F00                     
   631                           ;src/librerias/UART.c: 29:     RCSTAbits.CREN = 1;
   632   000F00  88AB               	bsf	171,4,c	;volatile
   633   000F02                     
   634                           ;src/librerias/UART.c: 30:     UART_config_show();
   635   000F02  ECFF  F005         	call	_UART_config_show	;wreg free
   636   000F06                     
   637                           ;src/librerias/UART.c: 31:     ANSELC = 0x0;
   638   000F06  0E00               	movlw	0
   639   000F08  010F               	movlb	15	; () banked
   640   000F0A  6F5D               	movwf	93,b	;volatile
   641   000F0C                     
   642                           ; BSR set to: 15
   643   000F0C  0012               	return		;funcret
   644   000F0E                     __end_of_UART_Init:
   645                           	callstack 0
   646                           
   647 ;; *************** function _UART_select_baud *****************
   648 ;; Defined at:
   649 ;;		line 34 in file "src/librerias/UART.c"
   650 ;; Parameters:    Size  Location     Type
   651 ;;  baudrate        4    0[COMRAM] unsigned long 
   652 ;; Auto vars:     Size  Location     Type
   653 ;;		None
   654 ;; Return value:  Size  Location     Type
   655 ;;                  1    wreg      void 
   656 ;; Registers used:
   657 ;;		wreg, status,2, status,0
   658 ;; Tracked objects:
   659 ;;		On entry : 0/0
   660 ;;		On exit  : 0/0
   661 ;;		Unchanged: 0/0
   662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   663 ;;      Params:         4       0       0       0       0       0       0       0       0
   664 ;;      Locals:         0       0       0       0       0       0       0       0       0
   665 ;;      Temps:          4       0       0       0       0       0       0       0       0
   666 ;;      Totals:         8       0       0       0       0       0       0       0       0
   667 ;;Total ram usage:        8 bytes
   668 ;; Hardware stack levels used: 1
   669 ;; This function calls:
   670 ;;		Nothing
   671 ;; This function is called by:
   672 ;;		_UART_Init
   673 ;; This function uses a non-reentrant model
   674 ;;
   675                           
   676                           	psect	text3
   677   000ABE                     __ptext3:
   678                           	callstack 0
   679   000ABE                     _UART_select_baud:
   680                           	callstack 29
   681   000ABE                     
   682                           ;src/librerias/UART.c: 35:     switch (baudrate){
   683   000ABE  EF91  F005         	goto	l1478
   684   000AC2                     l1460:
   685                           
   686                           ;src/librerias/UART.c: 37:             SPBRGH = 0x9C;
   687   000AC2  0E9C               	movlw	156
   688   000AC4  6EB0               	movwf	176,c	;volatile
   689                           
   690                           ;src/librerias/UART.c: 38:             SPBRG = 0x3F;
   691   000AC6  0E3F               	movlw	63
   692   000AC8  6EAF               	movwf	175,c	;volatile
   693                           
   694                           ;src/librerias/UART.c: 39:             break;
   695   000ACA  EFFE  F005         	goto	l114
   696   000ACE                     l1462:
   697                           
   698                           ;src/librerias/UART.c: 41:             SPBRGH = 0x27;
   699   000ACE  0E27               	movlw	39
   700   000AD0  6EB0               	movwf	176,c	;volatile
   701                           
   702                           ;src/librerias/UART.c: 42:             SPBRG = 0x0F;
   703   000AD2  0E0F               	movlw	15
   704   000AD4  6EAF               	movwf	175,c	;volatile
   705                           
   706                           ;src/librerias/UART.c: 43:             break;
   707   000AD6  EFFE  F005         	goto	l114
   708   000ADA                     l1464:
   709                           
   710                           ;src/librerias/UART.c: 45:             SPBRGH = 0x13;
   711   000ADA  0E13               	movlw	19
   712   000ADC  6EB0               	movwf	176,c	;volatile
   713                           
   714                           ;src/librerias/UART.c: 46:             SPBRG = 0x87;
   715   000ADE  0E87               	movlw	135
   716   000AE0  6EAF               	movwf	175,c	;volatile
   717                           
   718                           ;src/librerias/UART.c: 47:             break;
   719   000AE2  EFFE  F005         	goto	l114
   720   000AE6                     l1466:
   721                           
   722                           ;src/librerias/UART.c: 49:             SPBRGH = 0x04;
   723   000AE6  0E04               	movlw	4
   724   000AE8  6EB0               	movwf	176,c	;volatile
   725                           
   726                           ;src/librerias/UART.c: 50:             SPBRG = 0x7F;
   727   000AEA  0E7F               	movlw	127
   728   000AEC  6EAF               	movwf	175,c	;volatile
   729                           
   730                           ;src/librerias/UART.c: 51:             break;
   731   000AEE  EFFE  F005         	goto	l114
   732   000AF2                     l1468:
   733                           
   734                           ;src/librerias/UART.c: 53:             SPBRGH = 0x02;
   735   000AF2  0E02               	movlw	2
   736   000AF4  6EB0               	movwf	176,c	;volatile
   737                           
   738                           ;src/librerias/UART.c: 54:             SPBRG = 0x70;
   739   000AF6  0E70               	movlw	112
   740   000AF8  6EAF               	movwf	175,c	;volatile
   741                           
   742                           ;src/librerias/UART.c: 55:             break;
   743   000AFA  EFFE  F005         	goto	l114
   744   000AFE                     l1470:
   745                           
   746                           ;src/librerias/UART.c: 57:             SPBRGH = 0x00;
   747   000AFE  0E00               	movlw	0
   748   000B00  6EB0               	movwf	176,c	;volatile
   749                           
   750                           ;src/librerias/UART.c: 58:             SPBRG = 0xCF;
   751   000B02  0ECF               	movlw	207
   752   000B04  6EAF               	movwf	175,c	;volatile
   753                           
   754                           ;src/librerias/UART.c: 59:             break;
   755   000B06  EFFE  F005         	goto	l114
   756   000B0A                     l1472:
   757                           
   758                           ;src/librerias/UART.c: 61:             SPBRGH = 0x00;
   759   000B0A  0E00               	movlw	0
   760   000B0C  6EB0               	movwf	176,c	;volatile
   761                           
   762                           ;src/librerias/UART.c: 62:             SPBRG = 0x67;
   763   000B0E  0E67               	movlw	103
   764   000B10  6EAF               	movwf	175,c	;volatile
   765                           
   766                           ;src/librerias/UART.c: 63:             break;
   767   000B12  EFFE  F005         	goto	l114
   768   000B16                     l1474:
   769                           
   770                           ;src/librerias/UART.c: 65:             SPBRGH = 0x04;
   771   000B16  0E04               	movlw	4
   772   000B18  6EB0               	movwf	176,c	;volatile
   773                           
   774                           ;src/librerias/UART.c: 66:             SPBRG = 0xE1;
   775   000B1A  0EE1               	movlw	225
   776   000B1C  6EAF               	movwf	175,c	;volatile
   777                           
   778                           ;src/librerias/UART.c: 67:             break;
   779   000B1E  EFFE  F005         	goto	l114
   780   000B22                     l1478:
   781   000B22  C027  F02B         	movff	UART_select_baud@baudrate,??_UART_select_baud
   782   000B26  C028  F02C         	movff	UART_select_baud@baudrate+1,??_UART_select_baud+1
   783   000B2A  C029  F02D         	movff	UART_select_baud@baudrate+2,??_UART_select_baud+2
   784   000B2E  C02A  F02E         	movff	UART_select_baud@baudrate+3,??_UART_select_baud+3
   785                           
   786                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 3 sub-sw
      +                          itches
   787                           ; Switch size 1, requested type "simple"
   788                           ; Number of cases is 1, Range of values is 0 to 0
   789                           ; switch strategies available:
   790                           ; Name         Instructions Cycles
   791                           ; simple_byte            4     3 (average)
   792                           ;	Chosen strategy is simple_byte
   793   000B32  502E               	movf	(??_UART_select_baud+3)^0,w,c
   794   000B34  0A00               	xorlw	0	; case 0
   795   000B36  B4D8               	btfsc	status,2,c
   796   000B38  EFF3  F005         	goto	l1830
   797   000B3C  EF8B  F005         	goto	l1474
   798   000B40                     l1826:
   799                           
   800                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 6 sub-sw
      +                          itches
   801                           ; Switch size 1, requested type "simple"
   802                           ; Number of cases is 6, Range of values is 1 to 225
   803                           ; switch strategies available:
   804                           ; Name         Instructions Cycles
   805                           ; simple_byte           19    10 (average)
   806                           ;	Chosen strategy is simple_byte
   807   000B40  502C               	movf	(??_UART_select_baud+1)^0,w,c
   808   000B42  0A01               	xorlw	1	; case 1
   809   000B44  B4D8               	btfsc	status,2,c
   810   000B46  EFBB  F005         	goto	l1832
   811   000B4A  0A05               	xorlw	5	; case 4
   812   000B4C  B4D8               	btfsc	status,2,c
   813   000B4E  EFC2  F005         	goto	l1834
   814   000B52  0A0D               	xorlw	13	; case 9
   815   000B54  B4D8               	btfsc	status,2,c
   816   000B56  EFC9  F005         	goto	l1836
   817   000B5A  0A21               	xorlw	33	; case 40
   818   000B5C  B4D8               	btfsc	status,2,c
   819   000B5E  EFD0  F005         	goto	l1838
   820   000B62  0A63               	xorlw	99	; case 75
   821   000B64  B4D8               	btfsc	status,2,c
   822   000B66  EFD7  F005         	goto	l1840
   823   000B6A  0AAA               	xorlw	170	; case 225
   824   000B6C  B4D8               	btfsc	status,2,c
   825   000B6E  EFDE  F005         	goto	l1842
   826   000B72  EF8B  F005         	goto	l1474
   827   000B76                     l1832:
   828                           
   829                           ; Switch size 1, requested type "simple"
   830                           ; Number of cases is 1, Range of values is 44 to 44
   831                           ; switch strategies available:
   832                           ; Name         Instructions Cycles
   833                           ; simple_byte            4     3 (average)
   834                           ;	Chosen strategy is simple_byte
   835   000B76  502B               	movf	??_UART_select_baud^0,w,c
   836   000B78  0A2C               	xorlw	44	; case 44
   837   000B7A  B4D8               	btfsc	status,2,c
   838   000B7C  EF61  F005         	goto	l1460
   839   000B80  EF8B  F005         	goto	l1474
   840   000B84                     l1834:
   841                           
   842                           ; Switch size 1, requested type "simple"
   843                           ; Number of cases is 1, Range of values is 176 to 176
   844                           ; switch strategies available:
   845                           ; Name         Instructions Cycles
   846                           ; simple_byte            4     3 (average)
   847                           ;	Chosen strategy is simple_byte
   848   000B84  502B               	movf	??_UART_select_baud^0,w,c
   849   000B86  0AB0               	xorlw	176	; case 176
   850   000B88  B4D8               	btfsc	status,2,c
   851   000B8A  EF67  F005         	goto	l1462
   852   000B8E  EF8B  F005         	goto	l1474
   853   000B92                     l1836:
   854                           
   855                           ; Switch size 1, requested type "simple"
   856                           ; Number of cases is 1, Range of values is 96 to 96
   857                           ; switch strategies available:
   858                           ; Name         Instructions Cycles
   859                           ; simple_byte            4     3 (average)
   860                           ;	Chosen strategy is simple_byte
   861   000B92  502B               	movf	??_UART_select_baud^0,w,c
   862   000B94  0A60               	xorlw	96	; case 96
   863   000B96  B4D8               	btfsc	status,2,c
   864   000B98  EF6D  F005         	goto	l1464
   865   000B9C  EF8B  F005         	goto	l1474
   866   000BA0                     l1838:
   867                           
   868                           ; Switch size 1, requested type "simple"
   869                           ; Number of cases is 1, Range of values is 177 to 177
   870                           ; switch strategies available:
   871                           ; Name         Instructions Cycles
   872                           ; simple_byte            4     3 (average)
   873                           ;	Chosen strategy is simple_byte
   874   000BA0  502B               	movf	??_UART_select_baud^0,w,c
   875   000BA2  0AB1               	xorlw	177	; case 177
   876   000BA4  B4D8               	btfsc	status,2,c
   877   000BA6  EF73  F005         	goto	l1466
   878   000BAA  EF8B  F005         	goto	l1474
   879   000BAE                     l1840:
   880                           
   881                           ; Switch size 1, requested type "simple"
   882                           ; Number of cases is 1, Range of values is 0 to 0
   883                           ; switch strategies available:
   884                           ; Name         Instructions Cycles
   885                           ; simple_byte            4     3 (average)
   886                           ;	Chosen strategy is simple_byte
   887   000BAE  502B               	movf	??_UART_select_baud^0,w,c
   888   000BB0  0A00               	xorlw	0	; case 0
   889   000BB2  B4D8               	btfsc	status,2,c
   890   000BB4  EF79  F005         	goto	l1468
   891   000BB8  EF8B  F005         	goto	l1474
   892   000BBC                     l1842:
   893                           
   894                           ; Switch size 1, requested type "simple"
   895                           ; Number of cases is 1, Range of values is 0 to 0
   896                           ; switch strategies available:
   897                           ; Name         Instructions Cycles
   898                           ; simple_byte            4     3 (average)
   899                           ;	Chosen strategy is simple_byte
   900   000BBC  502B               	movf	??_UART_select_baud^0,w,c
   901   000BBE  0A00               	xorlw	0	; case 0
   902   000BC0  B4D8               	btfsc	status,2,c
   903   000BC2  EF7F  F005         	goto	l1470
   904   000BC6  EF8B  F005         	goto	l1474
   905   000BCA                     l1828:
   906                           
   907                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   908                           ; Switch size 1, requested type "simple"
   909                           ; Number of cases is 1, Range of values is 194 to 194
   910                           ; switch strategies available:
   911                           ; Name         Instructions Cycles
   912                           ; simple_byte            4     3 (average)
   913                           ;	Chosen strategy is simple_byte
   914   000BCA  502C               	movf	(??_UART_select_baud+1)^0,w,c
   915   000BCC  0AC2               	xorlw	194	; case 194
   916   000BCE  B4D8               	btfsc	status,2,c
   917   000BD0  EFEC  F005         	goto	l1844
   918   000BD4  EF8B  F005         	goto	l1474
   919   000BD8                     l1844:
   920                           
   921                           ; Switch size 1, requested type "simple"
   922                           ; Number of cases is 1, Range of values is 0 to 0
   923                           ; switch strategies available:
   924                           ; Name         Instructions Cycles
   925                           ; simple_byte            4     3 (average)
   926                           ;	Chosen strategy is simple_byte
   927   000BD8  502B               	movf	??_UART_select_baud^0,w,c
   928   000BDA  0A00               	xorlw	0	; case 0
   929   000BDC  B4D8               	btfsc	status,2,c
   930   000BDE  EF85  F005         	goto	l1472
   931   000BE2  EF8B  F005         	goto	l1474
   932   000BE6                     l1830:
   933                           
   934                           ; Switch size 1, requested type "simple"
   935                           ; Number of cases is 2, Range of values is 0 to 1
   936                           ; switch strategies available:
   937                           ; Name         Instructions Cycles
   938                           ; simple_byte            7     4 (average)
   939                           ;	Chosen strategy is simple_byte
   940   000BE6  502D               	movf	(??_UART_select_baud+2)^0,w,c
   941   000BE8  0A00               	xorlw	0	; case 0
   942   000BEA  B4D8               	btfsc	status,2,c
   943   000BEC  EFA0  F005         	goto	l1826
   944   000BF0  0A01               	xorlw	1	; case 1
   945   000BF2  B4D8               	btfsc	status,2,c
   946   000BF4  EFE5  F005         	goto	l1828
   947   000BF8  EF8B  F005         	goto	l1474
   948   000BFC                     l114:
   949   000BFC  0012               	return		;funcret
   950   000BFE                     __end_of_UART_select_baud:
   951                           	callstack 0
   952                           
   953 ;; *************** function _UART_config_show *****************
   954 ;; Defined at:
   955 ;;		line 5 in file "src/librerias/UART.c"
   956 ;; Parameters:    Size  Location     Type
   957 ;;		None
   958 ;; Auto vars:     Size  Location     Type
   959 ;;		None
   960 ;; Return value:  Size  Location     Type
   961 ;;                  1    wreg      void 
   962 ;; Registers used:
   963 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   964 ;; Tracked objects:
   965 ;;		On entry : 0/0
   966 ;;		On exit  : 0/0
   967 ;;		Unchanged: 0/0
   968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   969 ;;      Params:         0       0       0       0       0       0       0       0       0
   970 ;;      Locals:         0       0       0       0       0       0       0       0       0
   971 ;;      Temps:          0       0       0       0       0       0       0       0       0
   972 ;;      Totals:         0       0       0       0       0       0       0       0       0
   973 ;;Total ram usage:        0 bytes
   974 ;; Hardware stack levels used: 1
   975 ;; Hardware stack levels required when called: 6
   976 ;; This function calls:
   977 ;;		_printf
   978 ;; This function is called by:
   979 ;;		_UART_Init
   980 ;; This function uses a non-reentrant model
   981 ;;
   982                           
   983                           	psect	text4
   984   000BFE                     __ptext4:
   985                           	callstack 0
   986   000BFE                     _UART_config_show:
   987                           	callstack 23
   988   000BFE                     
   989                           ;src/librerias/UART.c: 6:     printf("Modo: ");
   990   000BFE  0EA0               	movlw	low STR_1
   991   000C00  6E3B               	movwf	printf@fmt^0,c
   992   000C02  EC87  F007         	call	_printf	;wreg free
   993   000C06                     
   994                           ;src/librerias/UART.c: 7:     (SYNC1) ? printf("Sincrono "):printf("Asincrono ");
   995   000C06  A8AC               	btfss	4012,4,c	;volatile
   996   000C08  EF08  F006         	goto	u511
   997   000C0C  EF0A  F006         	goto	u510
   998   000C10                     u511:
   999   000C10  EF10  F006         	goto	l1426
  1000   000C14                     u510:
  1001   000C14  0E7C               	movlw	low STR_2
  1002   000C16  6E3B               	movwf	printf@fmt^0,c
  1003   000C18  EC87  F007         	call	_printf	;wreg free
  1004   000C1C  EF14  F006         	goto	l1428
  1005   000C20                     l1426:
  1006   000C20  0E67               	movlw	low STR_3
  1007   000C22  6E3B               	movwf	printf@fmt^0,c
  1008   000C24  EC87  F007         	call	_printf	;wreg free
  1009   000C28                     l1428:
  1010                           
  1011                           ;src/librerias/UART.c: 8:     (BRGH1) ? printf("alta velocidad \r\n"):printf("baja veloc
      +                          idad \r\n");
  1012   000C28  A4AC               	btfss	4012,2,c	;volatile
  1013   000C2A  EF19  F006         	goto	u521
  1014   000C2E  EF1B  F006         	goto	u520
  1015   000C32                     u521:
  1016   000C32  EF21  F006         	goto	l1432
  1017   000C36                     u520:
  1018   000C36  0E13               	movlw	low STR_4
  1019   000C38  6E3B               	movwf	printf@fmt^0,c
  1020   000C3A  EC87  F007         	call	_printf	;wreg free
  1021   000C3E  EF25  F006         	goto	l81
  1022   000C42                     l1432:
  1023   000C42  0E01               	movlw	low STR_5
  1024   000C44  6E3B               	movwf	printf@fmt^0,c
  1025   000C46  EC87  F007         	call	_printf	;wreg free
  1026   000C4A                     l81:
  1027                           
  1028                           ;src/librerias/UART.c: 9:     printf("Baudrate: ");
  1029   000C4A  0E51               	movlw	low STR_6
  1030   000C4C  6E3B               	movwf	printf@fmt^0,c
  1031   000C4E  EC87  F007         	call	_printf	;wreg free
  1032   000C52                     
  1033                           ;src/librerias/UART.c: 10:     (BRG161) ? printf("16 bits "):printf("8 bits ");
  1034   000C52  A6B8               	btfss	4024,3,c	;volatile
  1035   000C54  EF2E  F006         	goto	u531
  1036   000C58  EF30  F006         	goto	u530
  1037   000C5C                     u531:
  1038   000C5C  EF36  F006         	goto	l1438
  1039   000C60                     u530:
  1040   000C60  0E8F               	movlw	low STR_7
  1041   000C62  6E3B               	movwf	printf@fmt^0,c
  1042   000C64  EC87  F007         	call	_printf	;wreg free
  1043   000C68  EF3A  F006         	goto	l85
  1044   000C6C                     l1438:
  1045   000C6C  0E98               	movlw	low STR_8
  1046   000C6E  6E3B               	movwf	printf@fmt^0,c
  1047   000C70  EC87  F007         	call	_printf	;wreg free
  1048   000C74                     l85:
  1049                           
  1050                           ;src/librerias/UART.c: 11:     printf("x baudios \r\n");
  1051   000C74  0E44               	movlw	low STR_9
  1052   000C76  6E3B               	movwf	printf@fmt^0,c
  1053   000C78  EC87  F007         	call	_printf	;wreg free
  1054                           
  1055                           ;src/librerias/UART.c: 12:     printf("Puerto: ");
  1056   000C7C  0E86               	movlw	low STR_10
  1057   000C7E  6E3B               	movwf	printf@fmt^0,c
  1058   000C80  EC87  F007         	call	_printf	;wreg free
  1059   000C84                     
  1060                           ;src/librerias/UART.c: 13:     (SPEN) ? printf("Habilitado \r\n"):printf("Deshabilitado 
      +                          \r\n");
  1061   000C84  AEAB               	btfss	4011,7,c	;volatile
  1062   000C86  EF47  F006         	goto	u541
  1063   000C8A  EF49  F006         	goto	u540
  1064   000C8E                     u541:
  1065   000C8E  EF4F  F006         	goto	l1444
  1066   000C92                     u540:
  1067   000C92  0E36               	movlw	low STR_11
  1068   000C94  6E3B               	movwf	printf@fmt^0,c
  1069   000C96  EC87  F007         	call	_printf	;wreg free
  1070   000C9A  EF53  F006         	goto	l89
  1071   000C9E                     l1444:
  1072   000C9E  0E25               	movlw	low STR_12
  1073   000CA0  6E3B               	movwf	printf@fmt^0,c
  1074   000CA2  EC87  F007         	call	_printf	;wreg free
  1075   000CA6                     l89:
  1076                           
  1077                           ;src/librerias/UART.c: 14:     printf("Transor: ");
  1078   000CA6  0E72               	movlw	low STR_13
  1079   000CA8  6E3B               	movwf	printf@fmt^0,c
  1080   000CAA  EC87  F007         	call	_printf	;wreg free
  1081   000CAE                     
  1082                           ;src/librerias/UART.c: 15:     (TXEN1) ? printf("Habilitado \r\n"):printf("Deshabilitado
      +                           \r\n");
  1083   000CAE  AAAC               	btfss	4012,5,c	;volatile
  1084   000CB0  EF5C  F006         	goto	u551
  1085   000CB4  EF5E  F006         	goto	u550
  1086   000CB8                     u551:
  1087   000CB8  EF64  F006         	goto	l1450
  1088   000CBC                     u550:
  1089   000CBC  0E36               	movlw	low STR_11
  1090   000CBE  6E3B               	movwf	printf@fmt^0,c
  1091   000CC0  EC87  F007         	call	_printf	;wreg free
  1092   000CC4  EF68  F006         	goto	l93
  1093   000CC8                     l1450:
  1094   000CC8  0E25               	movlw	low STR_12
  1095   000CCA  6E3B               	movwf	printf@fmt^0,c
  1096   000CCC  EC87  F007         	call	_printf	;wreg free
  1097   000CD0                     l93:
  1098                           
  1099                           ;src/librerias/UART.c: 16:     printf("Receptor: ");
  1100   000CD0  0E5C               	movlw	low STR_16
  1101   000CD2  6E3B               	movwf	printf@fmt^0,c
  1102   000CD4  EC87  F007         	call	_printf	;wreg free
  1103   000CD8                     
  1104                           ;src/librerias/UART.c: 17:     (CREN) ? printf("Habilitado \r\n"):printf("Deshabilitado 
      +                          \r\n");
  1105   000CD8  A8AB               	btfss	4011,4,c	;volatile
  1106   000CDA  EF71  F006         	goto	u561
  1107   000CDE  EF73  F006         	goto	u560
  1108   000CE2                     u561:
  1109   000CE2  EF79  F006         	goto	l1456
  1110   000CE6                     u560:
  1111   000CE6  0E36               	movlw	low STR_11
  1112   000CE8  6E3B               	movwf	printf@fmt^0,c
  1113   000CEA  EC87  F007         	call	_printf	;wreg free
  1114   000CEE  EF7D  F006         	goto	l98
  1115   000CF2                     l1456:
  1116   000CF2  0E25               	movlw	low STR_12
  1117   000CF4  6E3B               	movwf	printf@fmt^0,c
  1118   000CF6  EC87  F007         	call	_printf	;wreg free
  1119   000CFA                     l98:
  1120   000CFA  0012               	return		;funcret
  1121   000CFC                     __end_of_UART_config_show:
  1122                           	callstack 0
  1123                           
  1124 ;; *************** function _printf *****************
  1125 ;; Defined at:
  1126 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\printf.c"
  1127 ;; Parameters:    Size  Location     Type
  1128 ;;  fmt             1   20[COMRAM] PTR const unsigned char 
  1129 ;;		 -> STR_18(17), STR_17(14), STR_16(11), STR_15(17), 
  1130 ;;		 -> STR_14(14), STR_13(10), STR_12(17), STR_11(14), 
  1131 ;;		 -> STR_10(9), STR_9(13), STR_8(8), STR_7(9), 
  1132 ;;		 -> STR_6(11), STR_5(18), STR_4(18), STR_3(11), 
  1133 ;;		 -> STR_2(10), STR_1(7), 
  1134 ;; Auto vars:     Size  Location     Type
  1135 ;;  ret             2    0        int 
  1136 ;;  ap              1   21[COMRAM] PTR void [1]
  1137 ;;		 -> ?_printf(2), 
  1138 ;; Return value:  Size  Location     Type
  1139 ;;                  2   20[COMRAM] int 
  1140 ;; Registers used:
  1141 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1142 ;; Tracked objects:
  1143 ;;		On entry : 0/0
  1144 ;;		On exit  : 0/0
  1145 ;;		Unchanged: 0/0
  1146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1147 ;;      Params:         1       0       0       0       0       0       0       0       0
  1148 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1149 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1150 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1151 ;;Total ram usage:        2 bytes
  1152 ;; Hardware stack levels used: 1
  1153 ;; Hardware stack levels required when called: 5
  1154 ;; This function calls:
  1155 ;;		_vfprintf
  1156 ;; This function is called by:
  1157 ;;		_UART_config_show
  1158 ;; This function uses a non-reentrant model
  1159 ;;
  1160                           
  1161                           	psect	text5
  1162   000F0E                     __ptext5:
  1163                           	callstack 0
  1164   000F0E                     _printf:
  1165                           	callstack 23
  1166   000F0E  0E3C               	movlw	low (?_printf+1)
  1167   000F10  6E3C               	movwf	printf@ap^0,c
  1168   000F12  0E00               	movlw	0
  1169   000F14  6E36               	movwf	vfprintf@fp^0,c
  1170   000F16  0E00               	movlw	0
  1171   000F18  6E37               	movwf	(vfprintf@fp+1)^0,c
  1172   000F1A  C03B  F038         	movff	printf@fmt,vfprintf@fmt
  1173   000F1E  0E3C               	movlw	low printf@ap
  1174   000F20  6E39               	movwf	vfprintf@ap^0,c
  1175   000F22  EC4D  F007         	call	_vfprintf	;wreg free
  1176   000F26  0012               	return		;funcret
  1177   000F28                     __end_of_printf:
  1178                           	callstack 0
  1179                           
  1180 ;; *************** function _vfprintf *****************
  1181 ;; Defined at:
  1182 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  1183 ;; Parameters:    Size  Location     Type
  1184 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
  1185 ;;		 -> NULL(0), 
  1186 ;;  fmt             1   17[COMRAM] PTR const unsigned char 
  1187 ;;		 -> STR_18(17), STR_17(14), STR_16(11), STR_15(17), 
  1188 ;;		 -> STR_14(14), STR_13(10), STR_12(17), STR_11(14), 
  1189 ;;		 -> STR_10(9), STR_9(13), STR_8(8), STR_7(9), 
  1190 ;;		 -> STR_6(11), STR_5(18), STR_4(18), STR_3(11), 
  1191 ;;		 -> STR_2(10), STR_1(7), 
  1192 ;;  ap              1   18[COMRAM] PTR PTR void 
  1193 ;;		 -> printf@ap(1), 
  1194 ;; Auto vars:     Size  Location     Type
  1195 ;;  cfmt            1   19[COMRAM] PTR unsigned char 
  1196 ;;		 -> STR_18(17), STR_17(14), STR_16(11), STR_15(17), 
  1197 ;;		 -> STR_14(14), STR_13(10), STR_12(17), STR_11(14), 
  1198 ;;		 -> STR_10(9), STR_9(13), STR_8(8), STR_7(9), 
  1199 ;;		 -> STR_6(11), STR_5(18), STR_4(18), STR_3(11), 
  1200 ;;		 -> STR_2(10), STR_1(7), 
  1201 ;; Return value:  Size  Location     Type
  1202 ;;                  2   15[COMRAM] int 
  1203 ;; Registers used:
  1204 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1205 ;; Tracked objects:
  1206 ;;		On entry : 0/0
  1207 ;;		On exit  : 0/0
  1208 ;;		Unchanged: 0/0
  1209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1210 ;;      Params:         4       0       0       0       0       0       0       0       0
  1211 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1212 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1213 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1214 ;;Total ram usage:        5 bytes
  1215 ;; Hardware stack levels used: 1
  1216 ;; Hardware stack levels required when called: 4
  1217 ;; This function calls:
  1218 ;;		_vfpfcnvrt
  1219 ;; This function is called by:
  1220 ;;		_printf
  1221 ;; This function uses a non-reentrant model
  1222 ;;
  1223                           
  1224                           	psect	text6
  1225   000E9A                     __ptext6:
  1226                           	callstack 0
  1227   000E9A                     _vfprintf:
  1228                           	callstack 23
  1229   000E9A                     
  1230                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  1231   000E9A  C038  F03A         	movff	vfprintf@fmt,vfprintf@cfmt
  1232                           
  1233                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1234   000E9E  EF5B  F007         	goto	l1408
  1235   000EA2                     l1406:
  1236                           
  1237                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1238   000EA2  C036  F032         	movff	vfprintf@fp,vfpfcnvrt@fp
  1239   000EA6  C037  F033         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1240   000EAA  0E3A               	movlw	low vfprintf@cfmt
  1241   000EAC  6E34               	movwf	vfpfcnvrt@fmt^0,c
  1242   000EAE  C039  F035         	movff	vfprintf@ap,vfpfcnvrt@ap
  1243   000EB2  ECE3  F006         	call	_vfpfcnvrt	;wreg free
  1244   000EB6                     l1408:
  1245                           
  1246                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1247   000EB6  C03A  FFF6         	movff	vfprintf@cfmt,tblptrl
  1248   000EBA                     	if	1	;There is more than 1 active tblptr byte
  1249   000EBA  0E08               	movlw	high __smallconst
  1250   000EBC  6EF7               	movwf	tblptrh,c
  1251   000EBE                     	endif
  1252   000EBE                     	if	0	;tblptru may be non-zero
  1253   000EBE                     	endif
  1254   000EBE                     	if	0	;tblptru may be non-zero
  1255   000EBE                     	endif
  1256   000EBE  0008               	tblrd		*
  1257   000EC0  50F5               	movf	tablat,w,c
  1258   000EC2  0900               	iorlw	0
  1259   000EC4  A4D8               	btfss	status,2,c
  1260   000EC6  EF67  F007         	goto	u501
  1261   000ECA  EF69  F007         	goto	u500
  1262   000ECE                     u501:
  1263   000ECE  EF51  F007         	goto	l1406
  1264   000ED2                     u500:
  1265   000ED2                     
  1266                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  1267   000ED2  0E00               	movlw	0
  1268   000ED4  6E37               	movwf	(?_vfprintf+1)^0,c
  1269   000ED6  0E00               	movlw	0
  1270   000ED8  6E36               	movwf	?_vfprintf^0,c
  1271   000EDA  0012               	return		;funcret
  1272   000EDC                     __end_of_vfprintf:
  1273                           	callstack 0
  1274                           
  1275 ;; *************** function _vfpfcnvrt *****************
  1276 ;; Defined at:
  1277 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  1278 ;; Parameters:    Size  Location     Type
  1279 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  1280 ;;		 -> NULL(0), 
  1281 ;;  fmt             1   13[COMRAM] PTR PTR unsigned char 
  1282 ;;		 -> vfprintf@cfmt(1), 
  1283 ;;  ap              1   14[COMRAM] PTR PTR void 
  1284 ;;		 -> printf@ap(1), 
  1285 ;; Auto vars:     Size  Location     Type
  1286 ;;  cp              3    0        PTR unsigned char 
  1287 ;;  done            1    0        _Bool 
  1288 ;;  c               1    0        unsigned char 
  1289 ;; Return value:  Size  Location     Type
  1290 ;;                  1    wreg      void 
  1291 ;; Registers used:
  1292 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1293 ;; Tracked objects:
  1294 ;;		On entry : 0/0
  1295 ;;		On exit  : 0/0
  1296 ;;		Unchanged: 0/0
  1297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1298 ;;      Params:         4       0       0       0       0       0       0       0       0
  1299 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1300 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1301 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1302 ;;Total ram usage:        4 bytes
  1303 ;; Hardware stack levels used: 1
  1304 ;; Hardware stack levels required when called: 3
  1305 ;; This function calls:
  1306 ;;		_fputc
  1307 ;; This function is called by:
  1308 ;;		_vfprintf
  1309 ;; This function uses a non-reentrant model
  1310 ;;
  1311                           
  1312                           	psect	text7
  1313   000DC6                     __ptext7:
  1314                           	callstack 0
  1315   000DC6                     _vfpfcnvrt:
  1316                           	callstack 23
  1317   000DC6                     
  1318                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  1319   000DC6  5034               	movf	vfpfcnvrt@fmt^0,w,c
  1320   000DC8  6ED9               	movwf	fsr2l,c
  1321   000DCA  6ADA               	clrf	fsr2h,c
  1322   000DCC  CFDF FFF6          	movff	indf2,tblptrl
  1323   000DD0                     	if	1	;There is more than 1 active tblptr byte
  1324   000DD0  0E08               	movlw	high __smallconst
  1325   000DD2  6EF7               	movwf	tblptrh,c
  1326   000DD4                     	endif
  1327   000DD4                     	if	0	;tblptru may be non-zero
  1328   000DD4                     	endif
  1329   000DD4                     	if	0	;tblptru may be non-zero
  1330   000DD4                     	endif
  1331   000DD4  0008               	tblrd		*
  1332   000DD6  50F5               	movf	tablat,w,c
  1333   000DD8  0A25               	xorlw	37
  1334   000DDA  A4D8               	btfss	status,2,c
  1335   000DDC  EFF2  F006         	goto	u491
  1336   000DE0  EFF4  F006         	goto	u490
  1337   000DE4                     u491:
  1338   000DE4  EF06  F007         	goto	l1398
  1339   000DE8                     u490:
  1340   000DE8                     
  1341                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  1342   000DE8  5034               	movf	vfpfcnvrt@fmt^0,w,c
  1343   000DEA  6ED9               	movwf	fsr2l,c
  1344   000DEC  6ADA               	clrf	fsr2h,c
  1345   000DEE  2ADF               	incf	indf2,f,c
  1346   000DF0                     
  1347                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  1348   000DF0  0E00               	movlw	0
  1349   000DF2  6E22               	movwf	(_width+1)^0,c
  1350   000DF4  0E00               	movlw	0
  1351   000DF6  6E21               	movwf	_width^0,c
  1352   000DF8  C021  F025         	movff	_width,_flags
  1353   000DFC                     
  1354                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  1355   000DFC  6823               	setf	_prec^0,c
  1356   000DFE  6824               	setf	(_prec+1)^0,c
  1357   000E00                     l1394:
  1358                           
  1359                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  1360   000E00  5034               	movf	vfpfcnvrt@fmt^0,w,c
  1361   000E02  6ED9               	movwf	fsr2l,c
  1362   000E04  6ADA               	clrf	fsr2h,c
  1363   000E06  2ADF               	incf	indf2,f,c
  1364   000E08  EF19  F007         	goto	l872
  1365   000E0C                     l1398:
  1366                           
  1367                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  1368   000E0C  5034               	movf	vfpfcnvrt@fmt^0,w,c
  1369   000E0E  6ED9               	movwf	fsr2l,c
  1370   000E10  6ADA               	clrf	fsr2h,c
  1371   000E12  CFDF FFF6          	movff	indf2,tblptrl
  1372   000E16                     	if	1	;There is more than 1 active tblptr byte
  1373   000E16  0E08               	movlw	high __smallconst
  1374   000E18  6EF7               	movwf	tblptrh,c
  1375   000E1A                     	endif
  1376   000E1A                     	if	0	;tblptru may be non-zero
  1377   000E1A                     	endif
  1378   000E1A                     	if	0	;tblptru may be non-zero
  1379   000E1A                     	endif
  1380   000E1A  0008               	tblrd		*
  1381   000E1C  50F5               	movf	tablat,w,c
  1382   000E1E  6E29               	movwf	fputc@c^0,c
  1383   000E20  6A2A               	clrf	(fputc@c+1)^0,c
  1384   000E22  C032  F02B         	movff	vfpfcnvrt@fp,fputc@fp
  1385   000E26  C033  F02C         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1386   000E2A  EC7E  F006         	call	_fputc	;wreg free
  1387   000E2E  EF00  F007         	goto	l1394
  1388   000E32                     l872:
  1389   000E32  0012               	return		;funcret
  1390   000E34                     __end_of_vfpfcnvrt:
  1391                           	callstack 0
  1392                           
  1393 ;; *************** function _fputc *****************
  1394 ;; Defined at:
  1395 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_fputc.c"
  1396 ;; Parameters:    Size  Location     Type
  1397 ;;  c               2    2[COMRAM] int 
  1398 ;;  fp              2    4[COMRAM] PTR struct _IO_FILE
  1399 ;;		 -> NULL(0), 
  1400 ;; Auto vars:     Size  Location     Type
  1401 ;;		None
  1402 ;; Return value:  Size  Location     Type
  1403 ;;                  2    2[COMRAM] int 
  1404 ;; Registers used:
  1405 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1406 ;; Tracked objects:
  1407 ;;		On entry : 0/0
  1408 ;;		On exit  : 0/0
  1409 ;;		Unchanged: 0/0
  1410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1411 ;;      Params:         4       0       0       0       0       0       0       0       0
  1412 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1413 ;;      Temps:          5       0       0       0       0       0       0       0       0
  1414 ;;      Totals:         9       0       0       0       0       0       0       0       0
  1415 ;;Total ram usage:        9 bytes
  1416 ;; Hardware stack levels used: 1
  1417 ;; Hardware stack levels required when called: 2
  1418 ;; This function calls:
  1419 ;;		_putch
  1420 ;; This function is called by:
  1421 ;;		_vfpfcnvrt
  1422 ;; This function uses a non-reentrant model
  1423 ;;
  1424                           
  1425                           	psect	text8
  1426   000CFC                     __ptext8:
  1427                           	callstack 0
  1428   000CFC                     _fputc:
  1429                           	callstack 23
  1430   000CFC  502B               	movf	fputc@fp^0,w,c
  1431   000CFE  102C               	iorwf	(fputc@fp+1)^0,w,c
  1432   000D00  B4D8               	btfsc	status,2,c
  1433   000D02  EF85  F006         	goto	u451
  1434   000D06  EF87  F006         	goto	u450
  1435   000D0A                     u451:
  1436   000D0A  EF90  F006         	goto	l1376
  1437   000D0E                     u450:
  1438   000D0E  502B               	movf	fputc@fp^0,w,c
  1439   000D10  102C               	iorwf	(fputc@fp+1)^0,w,c
  1440   000D12  A4D8               	btfss	status,2,c
  1441   000D14  EF8E  F006         	goto	u461
  1442   000D18  EF90  F006         	goto	u460
  1443   000D1C                     u461:
  1444   000D1C  EF95  F006         	goto	l1378
  1445   000D20                     u460:
  1446   000D20                     l1376:
  1447   000D20  5029               	movf	fputc@c^0,w,c
  1448   000D22  ECAA  F007         	call	_putch
  1449   000D26  EFE2  F006         	goto	l890
  1450   000D2A                     l1378:
  1451   000D2A  EE20 F00A          	lfsr	2,10
  1452   000D2E  502B               	movf	fputc@fp^0,w,c
  1453   000D30  26D9               	addwf	fsr2l,f,c
  1454   000D32  502C               	movf	(fputc@fp+1)^0,w,c
  1455   000D34  22DA               	addwfc	fsr2h,f,c
  1456   000D36  50DE               	movf	postinc2,w,c
  1457   000D38  10DE               	iorwf	postinc2,w,c
  1458   000D3A  B4D8               	btfsc	status,2,c
  1459   000D3C  EFA2  F006         	goto	u471
  1460   000D40  EFA4  F006         	goto	u470
  1461   000D44                     u471:
  1462   000D44  EFBF  F006         	goto	l1382
  1463   000D48                     u470:
  1464   000D48  EE20 F00A          	lfsr	2,10
  1465   000D4C  502B               	movf	fputc@fp^0,w,c
  1466   000D4E  26D9               	addwf	fsr2l,f,c
  1467   000D50  502C               	movf	(fputc@fp+1)^0,w,c
  1468   000D52  22DA               	addwfc	fsr2h,f,c
  1469   000D54  EE10 F003          	lfsr	1,3
  1470   000D58  502B               	movf	fputc@fp^0,w,c
  1471   000D5A  26E1               	addwf	fsr1l,f,c
  1472   000D5C  502C               	movf	(fputc@fp+1)^0,w,c
  1473   000D5E  22E2               	addwfc	fsr1h,f,c
  1474   000D60  50DE               	movf	postinc2,w,c
  1475   000D62  5CE6               	subwf	postinc1,w,c
  1476   000D64  50E6               	movf	postinc1,w,c
  1477   000D66  0A80               	xorlw	128
  1478   000D68  6E31               	movwf	(??_fputc+4)^0,c
  1479   000D6A  50DE               	movf	postinc2,w,c
  1480   000D6C  0A80               	xorlw	128
  1481   000D6E  5831               	subwfb	(??_fputc+4)^0,w,c
  1482   000D70  B0D8               	btfsc	status,0,c
  1483   000D72  EFBD  F006         	goto	u481
  1484   000D76  EFBF  F006         	goto	u480
  1485   000D7A                     u481:
  1486   000D7A  EFE2  F006         	goto	l890
  1487   000D7E                     u480:
  1488   000D7E                     l1382:
  1489   000D7E  EE20 F003          	lfsr	2,3
  1490   000D82  502B               	movf	fputc@fp^0,w,c
  1491   000D84  26D9               	addwf	fsr2l,f,c
  1492   000D86  502C               	movf	(fputc@fp+1)^0,w,c
  1493   000D88  22DA               	addwfc	fsr2h,f,c
  1494   000D8A  CFDE F02D          	movff	postinc2,??_fputc
  1495   000D8E  CFDD F02E          	movff	postdec2,??_fputc+1
  1496   000D92  C02B  FFD9         	movff	fputc@fp,fsr2l
  1497   000D96  C02C  FFDA         	movff	fputc@fp+1,fsr2h
  1498   000D9A  CFDE F02F          	movff	postinc2,??_fputc+2
  1499   000D9E  CFDD F030          	movff	postdec2,??_fputc+3
  1500   000DA2  502D               	movf	??_fputc^0,w,c
  1501   000DA4  242F               	addwf	(??_fputc+2)^0,w,c
  1502   000DA6  6ED9               	movwf	fsr2l,c
  1503   000DA8  502E               	movf	(??_fputc+1)^0,w,c
  1504   000DAA  2030               	addwfc	(??_fputc+3)^0,w,c
  1505   000DAC  6EDA               	movwf	fsr2h,c
  1506   000DAE  C029  FFDF         	movff	fputc@c,indf2
  1507   000DB2  EE20 F003          	lfsr	2,3
  1508   000DB6  502B               	movf	fputc@fp^0,w,c
  1509   000DB8  26D9               	addwf	fsr2l,f,c
  1510   000DBA  502C               	movf	(fputc@fp+1)^0,w,c
  1511   000DBC  22DA               	addwfc	fsr2h,f,c
  1512   000DBE  2ADE               	incf	postinc2,f,c
  1513   000DC0  0E00               	movlw	0
  1514   000DC2  22DD               	addwfc	postdec2,f,c
  1515   000DC4                     l890:
  1516   000DC4  0012               	return		;funcret
  1517   000DC6                     __end_of_fputc:
  1518                           	callstack 0
  1519                           
  1520 ;; *************** function _putch *****************
  1521 ;; Defined at:
  1522 ;;		line 76 in file "src/librerias/UART.c"
  1523 ;; Parameters:    Size  Location     Type
  1524 ;;  data            1    wreg     unsigned char 
  1525 ;; Auto vars:     Size  Location     Type
  1526 ;;  data            1    1[COMRAM] unsigned char 
  1527 ;; Return value:  Size  Location     Type
  1528 ;;                  1    wreg      void 
  1529 ;; Registers used:
  1530 ;;		wreg, status,2, cstack
  1531 ;; Tracked objects:
  1532 ;;		On entry : 0/0
  1533 ;;		On exit  : 0/0
  1534 ;;		Unchanged: 0/0
  1535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1536 ;;      Params:         0       0       0       0       0       0       0       0       0
  1537 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1538 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1539 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1540 ;;Total ram usage:        1 bytes
  1541 ;; Hardware stack levels used: 1
  1542 ;; Hardware stack levels required when called: 1
  1543 ;; This function calls:
  1544 ;;		_UART_Tx
  1545 ;; This function is called by:
  1546 ;;		_fputc
  1547 ;; This function uses a non-reentrant model
  1548 ;;
  1549                           
  1550                           	psect	text9
  1551   000F54                     __ptext9:
  1552                           	callstack 0
  1553   000F54                     _putch:
  1554                           	callstack 23
  1555                           
  1556                           ;incstack = 0
  1557                           ;putch@data stored from wreg
  1558   000F54  6E28               	movwf	putch@data^0,c
  1559   000F56                     
  1560                           ;src/librerias/UART.c: 77:     UART_Tx(data);
  1561   000F56  5028               	movf	putch@data^0,w,c
  1562   000F58  EC9F  F007         	call	_UART_Tx
  1563   000F5C  0012               	return		;funcret
  1564   000F5E                     __end_of_putch:
  1565                           	callstack 0
  1566                           
  1567 ;; *************** function _UART_Tx *****************
  1568 ;; Defined at:
  1569 ;;		line 71 in file "src/librerias/UART.c"
  1570 ;; Parameters:    Size  Location     Type
  1571 ;;  dato            1    wreg     unsigned char 
  1572 ;; Auto vars:     Size  Location     Type
  1573 ;;  dato            1    0[COMRAM] unsigned char 
  1574 ;; Return value:  Size  Location     Type
  1575 ;;                  1    wreg      void 
  1576 ;; Registers used:
  1577 ;;		wreg
  1578 ;; Tracked objects:
  1579 ;;		On entry : 0/0
  1580 ;;		On exit  : 0/0
  1581 ;;		Unchanged: 0/0
  1582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1583 ;;      Params:         0       0       0       0       0       0       0       0       0
  1584 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1585 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1586 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1587 ;;Total ram usage:        1 bytes
  1588 ;; Hardware stack levels used: 1
  1589 ;; This function calls:
  1590 ;;		Nothing
  1591 ;; This function is called by:
  1592 ;;		_putch
  1593 ;; This function uses a non-reentrant model
  1594 ;;
  1595                           
  1596                           	psect	text10
  1597   000F3E                     __ptext10:
  1598                           	callstack 0
  1599   000F3E                     _UART_Tx:
  1600                           	callstack 23
  1601                           
  1602                           ;incstack = 0
  1603                           ;UART_Tx@dato stored from wreg
  1604   000F3E  6E27               	movwf	UART_Tx@dato^0,c
  1605   000F40                     l117:
  1606   000F40  A2AC               	btfss	4012,1,c	;volatile
  1607   000F42  EFA5  F007         	goto	u11
  1608   000F46  EFA7  F007         	goto	u10
  1609   000F4A                     u11:
  1610   000F4A  EFA0  F007         	goto	l117
  1611   000F4E                     u10:
  1612   000F4E                     
  1613                           ;src/librerias/UART.c: 73:     TXREG1 = dato;
  1614   000F4E  C027  FFAD         	movff	UART_Tx@dato,4013	;volatile
  1615   000F52  0012               	return		;funcret
  1616   000F54                     __end_of_UART_Tx:
  1617                           	callstack 0
  1618                           
  1619 ;; *************** function _Clock_Init *****************
  1620 ;; Defined at:
  1621 ;;		line 3 in file "src/librerias/clock.c"
  1622 ;; Parameters:    Size  Location     Type
  1623 ;;  s16Timeout      2    0[COMRAM] short 
  1624 ;; Auto vars:     Size  Location     Type
  1625 ;;  bStatus         1    5[COMRAM] _Bool 
  1626 ;;  bStatus         1    4[COMRAM] _Bool 
  1627 ;;  bStatus         1    3[COMRAM] _Bool 
  1628 ;;  bStatus         1    2[COMRAM] _Bool 
  1629 ;;  returnCode      1    7[COMRAM] enum E5188
  1630 ;;  bItTimeEn       1    6[COMRAM] _Bool 
  1631 ;; Return value:  Size  Location     Type
  1632 ;;                  1    wreg      enum E5188
  1633 ;; Registers used:
  1634 ;;		wreg, status,2, status,0
  1635 ;; Tracked objects:
  1636 ;;		On entry : 0/0
  1637 ;;		On exit  : 0/0
  1638 ;;		Unchanged: 0/0
  1639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1640 ;;      Params:         2       0       0       0       0       0       0       0       0
  1641 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1642 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1643 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1644 ;;Total ram usage:        8 bytes
  1645 ;; Hardware stack levels used: 1
  1646 ;; This function calls:
  1647 ;;		Nothing
  1648 ;; This function is called by:
  1649 ;;		_main
  1650 ;; This function uses a non-reentrant model
  1651 ;;
  1652                           
  1653                           	psect	text11
  1654   0008A8                     __ptext11:
  1655                           	callstack 0
  1656   0008A8                     _Clock_Init:
  1657                           	callstack 30
  1658   0008A8                     
  1659                           ;src/librerias/clock.c: 4:     CLK_ERROR_CODE returnCode = ERROR_CODE_OK;
  1660   0008A8  0E00               	movlw	0
  1661   0008AA  6E2E               	movwf	Clock_Init@returnCode^0,c
  1662   0008AC                     
  1663                           ;src/librerias/clock.c: 5:     _Bool bItTimeEn = (0 >= s16Timeout) ? 0 : 1;
  1664   0008AC  BE28               	btfsc	(Clock_Init@s16Timeout+1)^0,7,c
  1665   0008AE  EF64  F004         	goto	u570
  1666   0008B2  5028               	movf	(Clock_Init@s16Timeout+1)^0,w,c
  1667   0008B4  E106               	bnz	u571
  1668   0008B6  0427               	decf	Clock_Init@s16Timeout^0,w,c
  1669   0008B8  B0D8               	btfsc	status,0,c
  1670   0008BA  EF61  F004         	goto	u571
  1671   0008BE  EF64  F004         	goto	u570
  1672   0008C2                     u571:
  1673   0008C2  0E01               	movlw	1
  1674   0008C4  EF65  F004         	goto	u580
  1675   0008C8                     u570:
  1676   0008C8  0E00               	movlw	0
  1677   0008CA                     u580:
  1678   0008CA  6E2D               	movwf	Clock_Init@bItTimeEn^0,c
  1679   0008CC                     l144:
  1680                           
  1681                           ;src/librerias/clock.c: 10:             bStatus = OSCCON2bits.HFIOFR;
  1682   0008CC  B2D2               	btfsc	210,1,c	;volatile
  1683   0008CE  EF6B  F004         	goto	u591
  1684   0008D2  EF6E  F004         	goto	u590
  1685   0008D6                     u591:
  1686   0008D6  0E01               	movlw	1
  1687   0008D8  EF6F  F004         	goto	u596
  1688   0008DC                     u590:
  1689   0008DC  0E00               	movlw	0
  1690   0008DE                     u596:
  1691   0008DE  6E29               	movwf	Clock_Init@bStatus^0,c
  1692   0008E0                     
  1693                           ;src/librerias/clock.c: 11:             s16Timeout--;
  1694   0008E0  0627               	decf	Clock_Init@s16Timeout^0,f,c
  1695   0008E2  A0D8               	btfss	status,0,c
  1696   0008E4  0628               	decf	(Clock_Init@s16Timeout+1)^0,f,c
  1697   0008E6                     
  1698                           ;src/librerias/clock.c: 12:         }while((0 == bStatus) && ((0 < s16Timeout) || (0 == 
      +                          bItTimeEn)));
  1699   0008E6  5029               	movf	Clock_Init@bStatus^0,w,c
  1700   0008E8  A4D8               	btfss	status,2,c
  1701   0008EA  EF79  F004         	goto	u601
  1702   0008EE  EF7B  F004         	goto	u600
  1703   0008F2                     u601:
  1704   0008F2  EF90  F004         	goto	l1536
  1705   0008F6                     u600:
  1706   0008F6  BE28               	btfsc	(Clock_Init@s16Timeout+1)^0,7,c
  1707   0008F8  EF88  F004         	goto	u610
  1708   0008FC  5028               	movf	(Clock_Init@s16Timeout+1)^0,w,c
  1709   0008FE  E106               	bnz	u611
  1710   000900  0427               	decf	Clock_Init@s16Timeout^0,w,c
  1711   000902  B0D8               	btfsc	status,0,c
  1712   000904  EF86  F004         	goto	u611
  1713   000908  EF88  F004         	goto	u610
  1714   00090C                     u611:
  1715   00090C  EF66  F004         	goto	l144
  1716   000910                     u610:
  1717   000910  502D               	movf	Clock_Init@bItTimeEn^0,w,c
  1718   000912  B4D8               	btfsc	status,2,c
  1719   000914  EF8E  F004         	goto	u621
  1720   000918  EF90  F004         	goto	u620
  1721   00091C                     u621:
  1722   00091C  EF66  F004         	goto	l144
  1723   000920                     u620:
  1724   000920                     l1536:
  1725                           
  1726                           ;src/librerias/clock.c: 13:         if (0 == bStatus){
  1727   000920  5029               	movf	Clock_Init@bStatus^0,w,c
  1728   000922  A4D8               	btfss	status,2,c
  1729   000924  EF96  F004         	goto	u631
  1730   000928  EF98  F004         	goto	u630
  1731   00092C                     u631:
  1732   00092C  EF9A  F004         	goto	l143
  1733   000930                     u630:
  1734   000930                     
  1735                           ;src/librerias/clock.c: 14:             returnCode = ERROR_CODE_TIMEOUT;
  1736   000930  0E01               	movlw	1
  1737   000932  6E2E               	movwf	Clock_Init@returnCode^0,c
  1738   000934                     l143:
  1739                           
  1740                           ;src/librerias/clock.c: 18:     if(ERROR_CODE_OK == returnCode){
  1741   000934  502E               	movf	Clock_Init@returnCode^0,w,c
  1742   000936  A4D8               	btfss	status,2,c
  1743   000938  EFA0  F004         	goto	u641
  1744   00093C  EFA2  F004         	goto	u640
  1745   000940                     u641:
  1746   000940  EFD9  F004         	goto	l149
  1747   000944                     u640:
  1748   000944                     
  1749                           ;src/librerias/clock.c: 19:         OSCCON2bits.INTSRC = 1;
  1750   000944  8AD2               	bsf	210,5,c	;volatile
  1751   000946                     
  1752                           ;src/librerias/clock.c: 20:         OSCCONbits.IRCF = 7;
  1753   000946  0E70               	movlw	112
  1754   000948  12D3               	iorwf	211,f,c	;volatile
  1755   00094A                     l150:
  1756                           
  1757                           ;src/librerias/clock.c: 24:             bStatus = OSCCONbits.HFIOFS;
  1758   00094A  B4D3               	btfsc	211,2,c	;volatile
  1759   00094C  EFAA  F004         	goto	u651
  1760   000950  EFAD  F004         	goto	u650
  1761   000954                     u651:
  1762   000954  0E01               	movlw	1
  1763   000956  EFAE  F004         	goto	u656
  1764   00095A                     u650:
  1765   00095A  0E00               	movlw	0
  1766   00095C                     u656:
  1767   00095C  6E2A               	movwf	Clock_Init@bStatus_589^0,c
  1768   00095E                     
  1769                           ;src/librerias/clock.c: 25:             s16Timeout--;
  1770   00095E  0627               	decf	Clock_Init@s16Timeout^0,f,c
  1771   000960  A0D8               	btfss	status,0,c
  1772   000962  0628               	decf	(Clock_Init@s16Timeout+1)^0,f,c
  1773   000964                     
  1774                           ;src/librerias/clock.c: 26:         }while((0 == bStatus) && ((0 < s16Timeout) || (0 == 
      +                          bItTimeEn)));
  1775   000964  502A               	movf	Clock_Init@bStatus_589^0,w,c
  1776   000966  A4D8               	btfss	status,2,c
  1777   000968  EFB8  F004         	goto	u661
  1778   00096C  EFBA  F004         	goto	u660
  1779   000970                     u661:
  1780   000970  EFCF  F004         	goto	l1552
  1781   000974                     u660:
  1782   000974  BE28               	btfsc	(Clock_Init@s16Timeout+1)^0,7,c
  1783   000976  EFC7  F004         	goto	u670
  1784   00097A  5028               	movf	(Clock_Init@s16Timeout+1)^0,w,c
  1785   00097C  E106               	bnz	u671
  1786   00097E  0427               	decf	Clock_Init@s16Timeout^0,w,c
  1787   000980  B0D8               	btfsc	status,0,c
  1788   000982  EFC5  F004         	goto	u671
  1789   000986  EFC7  F004         	goto	u670
  1790   00098A                     u671:
  1791   00098A  EFA5  F004         	goto	l150
  1792   00098E                     u670:
  1793   00098E  502D               	movf	Clock_Init@bItTimeEn^0,w,c
  1794   000990  B4D8               	btfsc	status,2,c
  1795   000992  EFCD  F004         	goto	u681
  1796   000996  EFCF  F004         	goto	u680
  1797   00099A                     u681:
  1798   00099A  EFA5  F004         	goto	l150
  1799   00099E                     u680:
  1800   00099E                     l1552:
  1801                           
  1802                           ;src/librerias/clock.c: 27:         if (0 == bStatus){
  1803   00099E  502A               	movf	Clock_Init@bStatus_589^0,w,c
  1804   0009A0  A4D8               	btfss	status,2,c
  1805   0009A2  EFD5  F004         	goto	u691
  1806   0009A6  EFD7  F004         	goto	u690
  1807   0009AA                     u691:
  1808   0009AA  EFD9  F004         	goto	l149
  1809   0009AE                     u690:
  1810   0009AE                     
  1811                           ;src/librerias/clock.c: 28:             returnCode = ERROR_CODE_TIMEOUT;
  1812   0009AE  0E01               	movlw	1
  1813   0009B0  6E2E               	movwf	Clock_Init@returnCode^0,c
  1814   0009B2                     l149:
  1815                           
  1816                           ;src/librerias/clock.c: 32:     if(ERROR_CODE_OK == returnCode){
  1817   0009B2  502E               	movf	Clock_Init@returnCode^0,w,c
  1818   0009B4  A4D8               	btfss	status,2,c
  1819   0009B6  EFDF  F004         	goto	u701
  1820   0009BA  EFE1  F004         	goto	u700
  1821   0009BE                     u701:
  1822   0009BE  EF15  F005         	goto	l155
  1823   0009C2                     u700:
  1824   0009C2                     l156:
  1825                           
  1826                           ;src/librerias/clock.c: 35:             bStatus = OSCCONbits.OSTS;
  1827   0009C2  B6D3               	btfsc	211,3,c	;volatile
  1828   0009C4  EFE6  F004         	goto	u711
  1829   0009C8  EFE9  F004         	goto	u710
  1830   0009CC                     u711:
  1831   0009CC  0E01               	movlw	1
  1832   0009CE  EFEA  F004         	goto	u716
  1833   0009D2                     u710:
  1834   0009D2  0E00               	movlw	0
  1835   0009D4                     u716:
  1836   0009D4  6E2B               	movwf	Clock_Init@bStatus_590^0,c
  1837   0009D6                     
  1838                           ;src/librerias/clock.c: 36:             s16Timeout--;
  1839   0009D6  0627               	decf	Clock_Init@s16Timeout^0,f,c
  1840   0009D8  A0D8               	btfss	status,0,c
  1841   0009DA  0628               	decf	(Clock_Init@s16Timeout+1)^0,f,c
  1842   0009DC                     
  1843                           ;src/librerias/clock.c: 37:         }while((0 == bStatus) && ((0 < s16Timeout) || (0 == 
      +                          bItTimeEn)));
  1844   0009DC  502B               	movf	Clock_Init@bStatus_590^0,w,c
  1845   0009DE  A4D8               	btfss	status,2,c
  1846   0009E0  EFF4  F004         	goto	u721
  1847   0009E4  EFF6  F004         	goto	u720
  1848   0009E8                     u721:
  1849   0009E8  EF0B  F005         	goto	l1566
  1850   0009EC                     u720:
  1851   0009EC  BE28               	btfsc	(Clock_Init@s16Timeout+1)^0,7,c
  1852   0009EE  EF03  F005         	goto	u730
  1853   0009F2  5028               	movf	(Clock_Init@s16Timeout+1)^0,w,c
  1854   0009F4  E106               	bnz	u731
  1855   0009F6  0427               	decf	Clock_Init@s16Timeout^0,w,c
  1856   0009F8  B0D8               	btfsc	status,0,c
  1857   0009FA  EF01  F005         	goto	u731
  1858   0009FE  EF03  F005         	goto	u730
  1859   000A02                     u731:
  1860   000A02  EFE1  F004         	goto	l156
  1861   000A06                     u730:
  1862   000A06  502D               	movf	Clock_Init@bItTimeEn^0,w,c
  1863   000A08  B4D8               	btfsc	status,2,c
  1864   000A0A  EF09  F005         	goto	u741
  1865   000A0E  EF0B  F005         	goto	u740
  1866   000A12                     u741:
  1867   000A12  EFE1  F004         	goto	l156
  1868   000A16                     u740:
  1869   000A16                     l1566:
  1870                           
  1871                           ;src/librerias/clock.c: 38:         if (0 == bStatus){
  1872   000A16  502B               	movf	Clock_Init@bStatus_590^0,w,c
  1873   000A18  A4D8               	btfss	status,2,c
  1874   000A1A  EF11  F005         	goto	u751
  1875   000A1E  EF13  F005         	goto	u750
  1876   000A22                     u751:
  1877   000A22  EF15  F005         	goto	l155
  1878   000A26                     u750:
  1879   000A26                     
  1880                           ;src/librerias/clock.c: 39:             returnCode = ERROR_CODE_TIMEOUT;
  1881   000A26  0E01               	movlw	1
  1882   000A28  6E2E               	movwf	Clock_Init@returnCode^0,c
  1883   000A2A                     l155:
  1884                           
  1885                           ;src/librerias/clock.c: 42:         if(ERROR_CODE_OK == returnCode){
  1886   000A2A  502E               	movf	Clock_Init@returnCode^0,w,c
  1887   000A2C  A4D8               	btfss	status,2,c
  1888   000A2E  EF1B  F005         	goto	u761
  1889   000A32  EF1D  F005         	goto	u760
  1890   000A36                     u761:
  1891   000A36  EF53  F005         	goto	l161
  1892   000A3A                     u760:
  1893   000A3A                     
  1894                           ;src/librerias/clock.c: 43:         OSCTUNEbits.SPLLMULT = 1;
  1895   000A3A  8E9B               	bsf	155,7,c	;volatile
  1896                           
  1897                           ;src/librerias/clock.c: 44:         OSCCON2bits.PLLEN = 1;
  1898   000A3C  88D2               	bsf	210,4,c	;volatile
  1899   000A3E                     l162:
  1900                           
  1901                           ;src/librerias/clock.c: 47:             bStatus = OSCCON2bits.PLLRDY;
  1902   000A3E  BED2               	btfsc	210,7,c	;volatile
  1903   000A40  EF24  F005         	goto	u771
  1904   000A44  EF27  F005         	goto	u770
  1905   000A48                     u771:
  1906   000A48  0E01               	movlw	1
  1907   000A4A  EF28  F005         	goto	u776
  1908   000A4E                     u770:
  1909   000A4E  0E00               	movlw	0
  1910   000A50                     u776:
  1911   000A50  6E2C               	movwf	Clock_Init@bStatus_593^0,c
  1912   000A52                     
  1913                           ;src/librerias/clock.c: 48:             s16Timeout--;
  1914   000A52  0627               	decf	Clock_Init@s16Timeout^0,f,c
  1915   000A54  A0D8               	btfss	status,0,c
  1916   000A56  0628               	decf	(Clock_Init@s16Timeout+1)^0,f,c
  1917   000A58                     
  1918                           ;src/librerias/clock.c: 49:         }while((0 == bStatus) && ((0 < s16Timeout) || (0 == 
      +                          bItTimeEn)));
  1919   000A58  502C               	movf	Clock_Init@bStatus_593^0,w,c
  1920   000A5A  A4D8               	btfss	status,2,c
  1921   000A5C  EF32  F005         	goto	u781
  1922   000A60  EF34  F005         	goto	u780
  1923   000A64                     u781:
  1924   000A64  EF49  F005         	goto	l1582
  1925   000A68                     u780:
  1926   000A68  BE28               	btfsc	(Clock_Init@s16Timeout+1)^0,7,c
  1927   000A6A  EF41  F005         	goto	u790
  1928   000A6E  5028               	movf	(Clock_Init@s16Timeout+1)^0,w,c
  1929   000A70  E106               	bnz	u791
  1930   000A72  0427               	decf	Clock_Init@s16Timeout^0,w,c
  1931   000A74  B0D8               	btfsc	status,0,c
  1932   000A76  EF3F  F005         	goto	u791
  1933   000A7A  EF41  F005         	goto	u790
  1934   000A7E                     u791:
  1935   000A7E  EF1F  F005         	goto	l162
  1936   000A82                     u790:
  1937   000A82  502D               	movf	Clock_Init@bItTimeEn^0,w,c
  1938   000A84  B4D8               	btfsc	status,2,c
  1939   000A86  EF47  F005         	goto	u801
  1940   000A8A  EF49  F005         	goto	u800
  1941   000A8E                     u801:
  1942   000A8E  EF1F  F005         	goto	l162
  1943   000A92                     u800:
  1944   000A92                     l1582:
  1945                           
  1946                           ;src/librerias/clock.c: 50:         if (0 == bStatus){
  1947   000A92  502C               	movf	Clock_Init@bStatus_593^0,w,c
  1948   000A94  A4D8               	btfss	status,2,c
  1949   000A96  EF4F  F005         	goto	u811
  1950   000A9A  EF51  F005         	goto	u810
  1951   000A9E                     u811:
  1952   000A9E  EF53  F005         	goto	l161
  1953   000AA2                     u810:
  1954   000AA2                     
  1955                           ;src/librerias/clock.c: 51:             returnCode = ERROR_CODE_TIMEOUT;
  1956   000AA2  0E01               	movlw	1
  1957   000AA4  6E2E               	movwf	Clock_Init@returnCode^0,c
  1958   000AA6                     l161:
  1959                           
  1960                           ;src/librerias/clock.c: 56:     if(ERROR_CODE_OK == returnCode){
  1961   000AA6  502E               	movf	Clock_Init@returnCode^0,w,c
  1962   000AA8  A4D8               	btfss	status,2,c
  1963   000AAA  EF59  F005         	goto	u821
  1964   000AAE  EF5B  F005         	goto	u820
  1965   000AB2                     u821:
  1966   000AB2  EF5E  F005         	goto	l168
  1967   000AB6                     u820:
  1968   000AB6                     
  1969                           ;src/librerias/clock.c: 57:         OSCCON2bits.PRISD = 0;
  1970   000AB6  94D2               	bcf	210,2,c	;volatile
  1971   000AB8                     
  1972                           ;src/librerias/clock.c: 58:         OSCCONbits.SCS = 0;
  1973   000AB8  0EFC               	movlw	-4
  1974   000ABA  16D3               	andwf	211,f,c	;volatile
  1975   000ABC                     l168:
  1976   000ABC  0012               	return		;funcret
  1977   000ABE                     __end_of_Clock_Init:
  1978                           	callstack 0
  1979                           
  1980                           	psect	rparam
  1981   000000                     
  1982                           	psect	config
  1983                           
  1984                           ;Config register CONFIG1L @ 0x300000
  1985                           ;	PLL Selection
  1986                           ;	PLLSEL = PLL3X, 3x clock multiplier
  1987                           ;	PLL Enable Configuration bit
  1988                           ;	CFGPLLEN = ON, PLL Enabled
  1989                           ;	CPU System Clock Postscaler
  1990                           ;	CPUDIV = NOCLKDIV, CPU uses system clock (no divide)
  1991                           ;	Low Speed USB mode with 48 MHz system clock
  1992                           ;	LS48MHZ = SYS48X8, System clock at 48 MHz, USB clock divider is set to 8
  1993   300000                     	org	3145728
  1994   300000  23                 	db	35
  1995                           
  1996                           ;Config register CONFIG1H @ 0x300001
  1997                           ;	Oscillator Selection
  1998                           ;	FOSC = INTOSCCLKO, Internal oscillator, clock output on OSC2
  1999                           ;	Primary Oscillator Shutdown
  2000                           ;	PCLKEN = OFF, Primary oscillator shutdown firmware controlled
  2001                           ;	Fail-Safe Clock Monitor
  2002                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2003                           ;	Internal/External Oscillator Switchover
  2004                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2005   300001                     	org	3145729
  2006   300001  09                 	db	9
  2007                           
  2008                           ;Config register CONFIG2L @ 0x300002
  2009                           ;	Power-up Timer Enable
  2010                           ;	nPWRTEN = OFF, Power up timer disabled
  2011                           ;	Brown-out Reset Enable
  2012                           ;	BOREN = SBORDIS, BOR enabled in hardware (SBOREN is ignored)
  2013                           ;	Brown-out Reset Voltage
  2014                           ;	BORV = 190, BOR set to 1.9V nominal
  2015                           ;	Low-Power Brown-out Reset
  2016                           ;	nLPBOR = OFF, Low-Power Brown-out Reset disabled
  2017   300002                     	org	3145730
  2018   300002  5F                 	db	95
  2019                           
  2020                           ;Config register CONFIG2H @ 0x300003
  2021                           ;	Watchdog Timer Enable bits
  2022                           ;	WDTEN = OFF, WDT disabled in hardware (SWDTEN ignored)
  2023                           ;	Watchdog Timer Postscaler
  2024                           ;	WDTPS = 32768, 1:32768
  2025   300003                     	org	3145731
  2026   300003  3C                 	db	60
  2027                           
  2028                           ; Padding undefined space
  2029   300004                     	org	3145732
  2030   300004  FF                 	db	255
  2031                           
  2032                           ;Config register CONFIG3H @ 0x300005
  2033                           ;	CCP2 MUX bit
  2034                           ;	CCP2MX = RC1, CCP2 input/output is multiplexed with RC1
  2035                           ;	PORTB A/D Enable bit
  2036                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  2037                           ;	Timer3 Clock Input MUX bit
  2038                           ;	T3CMX = RC0, T3CKI function is on RC0
  2039                           ;	SDO Output MUX bit
  2040                           ;	SDOMX = RB3, SDO function is on RB3
  2041                           ;	Master Clear Reset Pin Enable
  2042                           ;	MCLRE = ON, MCLR pin enabled; RE3 input disabled
  2043   300005                     	org	3145733
  2044   300005  D3                 	db	211
  2045                           
  2046                           ;Config register CONFIG4L @ 0x300006
  2047                           ;	Stack Full/Underflow Reset
  2048                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2049                           ;	Single-Supply ICSP Enable bit
  2050                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
  2051                           ;	Dedicated In-Circuit Debug/Programming Port Enable
  2052                           ;	ICPRT = OFF, ICPORT disabled
  2053                           ;	Extended Instruction Set Enable bit
  2054                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled
  2055                           ;	Background Debugger Enable bit
  2056                           ;	DEBUG = 0x1, unprogrammed default
  2057   300006                     	org	3145734
  2058   300006  85                 	db	133
  2059                           
  2060                           ; Padding undefined space
  2061   300007                     	org	3145735
  2062   300007  FF                 	db	255
  2063                           
  2064                           ;Config register CONFIG5L @ 0x300008
  2065                           ;	Block 0 Code Protect
  2066                           ;	CP0 = OFF, Block 0 is not code-protected
  2067                           ;	Block 1 Code Protect
  2068                           ;	CP1 = OFF, Block 1 is not code-protected
  2069                           ;	Block 2 Code Protect
  2070                           ;	CP2 = OFF, Block 2 is not code-protected
  2071                           ;	Block 3 Code Protect
  2072                           ;	CP3 = OFF, Block 3 is not code-protected
  2073   300008                     	org	3145736
  2074   300008  0F                 	db	15
  2075                           
  2076                           ;Config register CONFIG5H @ 0x300009
  2077                           ;	Boot Block Code Protect
  2078                           ;	CPB = OFF, Boot block is not code-protected
  2079                           ;	Data EEPROM Code Protect
  2080                           ;	CPD = OFF, Data EEPROM is not code-protected
  2081   300009                     	org	3145737
  2082   300009  C0                 	db	192
  2083                           
  2084                           ;Config register CONFIG6L @ 0x30000A
  2085                           ;	Block 0 Write Protect
  2086                           ;	WRT0 = OFF, Block 0 (0800-1FFFh) is not write-protected
  2087                           ;	Block 1 Write Protect
  2088                           ;	WRT1 = OFF, Block 1 (2000-3FFFh) is not write-protected
  2089                           ;	Block 2 Write Protect
  2090                           ;	WRT2 = OFF, Block 2 (04000-5FFFh) is not write-protected
  2091                           ;	Block 3 Write Protect
  2092                           ;	WRT3 = OFF, Block 3 (06000-7FFFh) is not write-protected
  2093   30000A                     	org	3145738
  2094   30000A  0F                 	db	15
  2095                           
  2096                           ;Config register CONFIG6H @ 0x30000B
  2097                           ;	Configuration Registers Write Protect
  2098                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  2099                           ;	Boot Block Write Protect
  2100                           ;	WRTB = OFF, Boot block (0000-7FFh) is not write-protected
  2101                           ;	Data EEPROM Write Protect
  2102                           ;	WRTD = OFF, Data EEPROM is not write-protected
  2103   30000B                     	org	3145739
  2104   30000B  E0                 	db	224
  2105                           
  2106                           ;Config register CONFIG7L @ 0x30000C
  2107                           ;	Block 0 Table Read Protect
  2108                           ;	EBTR0 = OFF, Block 0 is not protected from table reads executed in other blocks
  2109                           ;	Block 1 Table Read Protect
  2110                           ;	EBTR1 = OFF, Block 1 is not protected from table reads executed in other blocks
  2111                           ;	Block 2 Table Read Protect
  2112                           ;	EBTR2 = OFF, Block 2 is not protected from table reads executed in other blocks
  2113                           ;	Block 3 Table Read Protect
  2114                           ;	EBTR3 = OFF, Block 3 is not protected from table reads executed in other blocks
  2115   30000C                     	org	3145740
  2116   30000C  0F                 	db	15
  2117                           
  2118                           ;Config register CONFIG7H @ 0x30000D
  2119                           ;	Boot Block Table Read Protect
  2120                           ;	EBTRB = OFF, Boot block is not protected from table reads executed in other blocks
  2121   30000D                     	org	3145741
  2122   30000D  40                 	db	64
  2123                           tosu	equ	0xFFF
  2124                           tosh	equ	0xFFE
  2125                           tosl	equ	0xFFD
  2126                           stkptr	equ	0xFFC
  2127                           pclatu	equ	0xFFB
  2128                           pclath	equ	0xFFA
  2129                           pcl	equ	0xFF9
  2130                           tblptru	equ	0xFF8
  2131                           tblptrh	equ	0xFF7
  2132                           tblptrl	equ	0xFF6
  2133                           tablat	equ	0xFF5
  2134                           prodh	equ	0xFF4
  2135                           prodl	equ	0xFF3
  2136                           indf0	equ	0xFEF
  2137                           postinc0	equ	0xFEE
  2138                           postdec0	equ	0xFED
  2139                           preinc0	equ	0xFEC
  2140                           plusw0	equ	0xFEB
  2141                           fsr0h	equ	0xFEA
  2142                           fsr0l	equ	0xFE9
  2143                           wreg	equ	0xFE8
  2144                           indf1	equ	0xFE7
  2145                           postinc1	equ	0xFE6
  2146                           postdec1	equ	0xFE5
  2147                           preinc1	equ	0xFE4
  2148                           plusw1	equ	0xFE3
  2149                           fsr1h	equ	0xFE2
  2150                           fsr1l	equ	0xFE1
  2151                           bsr	equ	0xFE0
  2152                           indf2	equ	0xFDF
  2153                           postinc2	equ	0xFDE
  2154                           postdec2	equ	0xFDD
  2155                           preinc2	equ	0xFDC
  2156                           plusw2	equ	0xFDB
  2157                           fsr2h	equ	0xFDA
  2158                           fsr2l	equ	0xFD9
  2159                           status	equ	0xFD8

Data Sizes:
    Strings     166
    Constant    0
    Data        0
    BSS         38
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     26      64
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    printf@fmt	PTR const unsigned char  size(1) Largest target is 18
		 -> STR_1(CODE[7]), STR_10(CODE[9]), STR_11(CODE[14]), STR_12(CODE[17]), 
		 -> STR_13(CODE[10]), STR_14(CODE[14]), STR_15(CODE[17]), STR_16(CODE[11]), 
		 -> STR_17(CODE[14]), STR_18(CODE[17]), STR_2(CODE[10]), STR_3(CODE[11]), 
		 -> STR_4(CODE[18]), STR_5(CODE[18]), STR_6(CODE[11]), STR_7(CODE[9]), 
		 -> STR_8(CODE[8]), STR_9(CODE[13]), 

    S1035$buffer	PTR unsigned char  size(2) Largest target is 0

    S1035$source	PTR const unsigned char  size(2) Largest target is 0

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(COMRAM[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 18
		 -> STR_1(CODE[7]), STR_10(CODE[9]), STR_11(CODE[14]), STR_12(CODE[17]), 
		 -> STR_13(CODE[10]), STR_14(CODE[14]), STR_15(CODE[17]), STR_16(CODE[11]), 
		 -> STR_17(CODE[14]), STR_18(CODE[17]), STR_2(CODE[10]), STR_3(CODE[11]), 
		 -> STR_4(CODE[18]), STR_5(CODE[18]), STR_6(CODE[11]), STR_7(CODE[9]), 
		 -> STR_8(CODE[8]), STR_9(CODE[13]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 18
		 -> STR_1(CODE[7]), STR_10(CODE[9]), STR_11(CODE[14]), STR_12(CODE[17]), 
		 -> STR_13(CODE[10]), STR_14(CODE[14]), STR_15(CODE[17]), STR_16(CODE[11]), 
		 -> STR_17(CODE[14]), STR_18(CODE[17]), STR_2(CODE[10]), STR_3(CODE[11]), 
		 -> STR_4(CODE[18]), STR_5(CODE[18]), STR_6(CODE[11]), STR_7(CODE[9]), 
		 -> STR_8(CODE[8]), STR_9(CODE[13]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _main->_UART_Init
    _UART_config_show->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_fputc
    _fputc->_putch
    _putch->_UART_Tx

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    3567
                         _Clock_Init
                          _UART_Init
                            _UART_Rx
 ---------------------------------------------------------------------------------
 (1) _UART_Rx                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            4     0      4    2983
                                             22 COMRAM     4     0      4
                   _UART_config_show
                   _UART_select_baud
 ---------------------------------------------------------------------------------
 (2) _UART_select_baud                                     8     4      4      98
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _UART_config_show                                     0     0      0    2787
                             _printf
 ---------------------------------------------------------------------------------
 (3) _printf                                               4     3      1    2787
                                             20 COMRAM     2     1      1
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             5     1      4    1367
                                             15 COMRAM     5     1      4
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                            9     5      4    1020
                                             11 COMRAM     4     0      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4     660
                                              2 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0      30
                                              1 COMRAM     1     1      0
                            _UART_Tx
 ---------------------------------------------------------------------------------
 (8) _UART_Tx                                              1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Clock_Init                                           8     6      2     584
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Clock_Init
   _UART_Init
     _UART_config_show
       _printf
         _vfprintf
           _vfpfcnvrt
             _fputc
               _putch
                 _UART_Tx
     _UART_select_baud
   _UART_Rx

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      31        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     1A      40       1       67.4%
BITBIGSFRhhhhh      2C      0       0      20        0.0%
BITBIGSFRllh        2B      0       0      28        0.0%
BITBIGSFRhhhhl      19      0       0      21        0.0%
BITBIGSFRhhl         C      0       0      23        0.0%
BITBIGSFRlll         A      0       0      29        0.0%
BITBIGSFRlh          8      0       0      27        0.0%
BITBIGSFRhhhlh       7      0       0      22        0.0%
BITBIGSFRhlhl        6      0       0      25        0.0%
BITBIGSFRhlhh        2      0       0      24        0.0%
BITBIGSFRhll         1      0       0      26        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      40      30        0.0%
DATA                 0      0      40       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Wed Oct 02 20:05:35 2024

                      l22 0E7C                        l25 0E90                        l81 0C4A  
                      l93 0CD0                        l85 0C74                        l89 0CA6  
                      l98 0CFA                        u10 0F4E                        u11 0F4A  
                     l101 0F0C                       l120 0F52                       l114 0BFC  
                     l123 0F5C                       l117 0F40                       l150 094A  
                     l134 0F60                       l143 0934                       l144 08CC  
                     l161 0AA6                       l162 0A3E                       l155 0A2A  
                     l156 09C2                       l149 09B2                       l168 0ABC  
                     l900 0F40                       l902 0F4E                       l904 0F56  
                     l872 0E32                       l849 0F26                       l890 0DC4  
                     l878 0EDA                       u500 0ED2                       u501 0ECE  
                     u510 0C14                       u511 0C10                       u600 08F6  
                     u520 0C36                       u601 08F2                       u521 0C32  
                     u610 0910                       u450 0D0E                       u530 0C60  
                     u611 090C                       u451 0D0A                       u531 0C5C  
                     u700 09C2                       u620 0920                       u460 0D20  
                     u540 0C92                       u701 09BE                       u621 091C  
                     u461 0D1C                       u541 0C8E                       u710 09D2  
                     u630 0930                       u470 0D48                       u550 0CBC  
                     u711 09CC                       u631 092C                       u471 0D44  
                     u551 0CB8                       u800 0A92                       u720 09EC  
                     u640 0944                       u480 0D7E                       u560 0CE6  
                     u801 0A8E                       u721 09E8                       u641 0940  
                     u481 0D7A                       u561 0CE2                       u810 0AA2  
                     u730 0A06                       u650 095A                       u570 08C8  
                     u490 0DE8                       u811 0A9E                       u731 0A02  
                     u651 0954                       u571 08C2                       u491 0DE4  
                     u820 0AB6                       u740 0A16                       u716 09D4  
                     u660 0974                       u580 08CA                       u821 0AB2  
                     u741 0A12                       u661 0970                       u750 0A26  
                     u670 098E                       u590 08DC                       u830 0E64  
                     u751 0A22                       u671 098A                       u591 08D6  
                     u831 0E60                       u760 0A3A                       u680 099E  
                     u656 095C                       u840 0E7C                       u761 0A36  
                     u681 099A                       u841 0E78                       u770 0A4E  
                     u690 09AE                       u850 0E90                       u771 0A48  
                     u691 09AA                       u851 0E8C                       u780 0A68  
                     u596 08DE                       u781 0A64                       u790 0A82  
                     u791 0A7E                       u776 0A50                       wreg 0FE8  
              _TXSTA1bits 0FAC                      l1410 0ED2                      l1146 0F5E  
                    l1404 0E9A                      l1420 0BFE                      l1406 0EA2  
                    l1414 0F0E                      l1430 0C36                      l1422 0C06  
                    l1520 08A8                      l1408 0EB6                      l1416 0F12  
                    l1440 0C84                      l1432 0C42                      l1424 0C14  
                    l1600 0EFA                      l1530 08E6                      l1522 08AC  
                    l1450 0CC8                      l1442 0C92                      l1434 0C52  
                    l1426 0C20                      l1610 0F06                      l1602 0EFC  
                    l1540 0944                      l1532 08F6                      l1524 08CC  
                    l1380 0D48                      l1372 0CFC                      l1452 0CD8  
                    l1444 0C9E                      l1436 0C60                      l1428 0C28  
                    l1460 0AC2                      l1604 0EFE                      l1620 0E64  
                    l1612 0E34                      l1550 098E                      l1542 0946  
                    l1534 0910                      l1526 08CC                      l1382 0D7E  
                    l1374 0D0E                      l1390 0DF0                      l1454 0CE6  
                    l1446 0CAE                      l1438 0C6C                      l1470 0AFE  
                    l1462 0ACE                      l1606 0F00                      l1622 0E6A  
                    l1614 0E40                      l1560 09DC                      l1552 099E  
                    l1544 095E                      l1536 0920                      l1528 08E0  
                    l1376 0D20                      l1392 0DFC                      l1456 0CF2  
                    l1448 0CBC                      l1472 0B0A                      l1464 0ADA  
                    l1608 0F02                      l1624 0E7E                      l1616 0E54  
                    l1570 0A3A                      l1562 09EC                      l1554 09AE  
                    l1546 0964                      l1538 0930                      l1378 0D2A  
                    l1394 0E00                      l1386 0DC6                      l1474 0B16  
                    l1466 0AE6                      l1458 0ABE                      l1618 0E56  
                    l1580 0A82                      l1572 0A3E                      l1564 0A06  
                    l1556 09C2                      l1548 0974                      l1388 0DE8  
                    l1468 0AF2                      l1582 0A92                      l1574 0A52  
                    l1566 0A16                      l1558 09D6                      l1398 0E0C  
                    l1830 0BE6                      l1478 0B22                      l1584 0AA2  
                    l1576 0A58                      l1568 0A26                      l1840 0BAE  
                    l1832 0B76                      l1592 0EDC                      l1586 0AB6  
                    l1578 0A68                      l1842 0BBC                      l1834 0B84  
                    l1826 0B40                      l1594 0EE0                      l1588 0AB8  
                    l1844 0BD8                      l1828 0BCA                      l1836 0B92  
                    l1596 0EE4                      l1838 0BA0                      l1598 0EF8  
                    STR_1 08A0                      STR_2 087C                      STR_3 0867  
                    STR_4 0813                      STR_5 0801                      STR_6 0851  
                    STR_7 088F                      STR_8 0898                      STR_9 0844  
                    _CREN 7D5C                      _SPEN 7D5F                      _TRMT 7D61  
         __end_of_UART_Rx 0F62           __end_of_UART_Tx 0F54                      _dbuf 0001  
                    _main 0E34                      _prec 0023                      fsr1h 0FE2  
                    fsr2h 0FDA                      indf2 0FDF                      fsr1l 0FE1  
                    fsr2l 0FD9                      start 0000              ___param_bank 0000  
UART_select_baud@baudrate 0027                _Clock_Init 08A8                     ?_main 0027  
                   STR_10 0886                     STR_11 0836                     STR_12 0825  
                   STR_13 0872                     STR_14 0836                     STR_15 0825  
                   STR_16 085C                     STR_17 0836                     STR_18 0825  
                   _BRGH1 7D62                     _RCREG 0FAE         Clock_Init@bStatus 0029  
            vfpfcnvrt@fmt 0034          _UART_config_show 0BFE                     _SPBRG 0FAF  
                   _TXEN1 7D65                     _SYNC1 7D64                     _flags 0025  
                   _fputc 0CFC                     _width 0021                     _putch 0F54  
                   tablat 0FF5                     status 0FD8           __initialization 0F28  
            __end_of_main 0E9A                    ??_main 0041             __activetblptr 0002  
               ??_UART_Rx 0027                 ??_UART_Tx 0027                    ?_fputc 0029  
                  _BRG161 7DC3                    ?_putch 0027                    _ANSELC 0F5D  
                  _RCREG1 0FAE                    _SPBRGH 0FB0                    _TRISC6 7CA6  
                  _TRISC7 7CA7                    _TXREG1 0FAD              vfprintf@cfmt 003A  
       __end_of_UART_Init 0F0E               ?_Clock_Init 0027                    clear_0 0F2E  
                  isa$std 0001                    _printf 0F0E                    fputc@c 0029  
            __mediumconst 0000                    tblptrh 0FF7                    tblptrl 0FF6  
                  tblptru 0FF8          __end_of_vfprintf 0EDC                __accesstop 0060  
 __end_of__initialization 0F34             ___rparam_used 0001          _UART_select_baud 0ABE  
          __pcstackCOMRAM 0027             __end_of_fputc 0DC6             __end_of_putch 0F5E  
                 ??_fputc 002D                   ??_putch 0028  __end_of_UART_config_show 0CFC  
     Clock_Init@bItTimeEn 002D                   ?_printf 003B                   _UART_Rx 0F5E  
                 _UART_Tx 0F3E                   __Hparam 0000                   __Lparam 0000  
               ?_vfprintf 0036              __psmallconst 0800                   __pcinit 0F28  
                 __ramtop 0800                   __ptext0 0E34                   __ptext1 0F5E  
                 __ptext2 0EDC                   __ptext3 0ABE                   __ptext4 0BFE  
                 __ptext5 0F0E                   __ptext6 0E9A                   __ptext7 0DC6  
                 __ptext8 0CFC                   __ptext9 0F54               UART_Tx@dato 0027  
    end_of_initialization 0F34                   fputc@fp 002B             __Lmediumconst 0000  
   Clock_Init@bStatus_590 002B     Clock_Init@bStatus_593 002C     Clock_Init@bStatus_589 002A  
       __end_of_vfpfcnvrt 0E34                 _RCSTAbits 0FAB                   postdec2 0FDD  
                 postinc0 0FEE                   postinc1 0FE6                   postinc2 0FDE  
            ??_Clock_Init 0029                ??_vfprintf 003A                 _UART_Init 0EDC  
               _TRISAbits 0F92  __end_of_UART_select_baud 0BFE        __end_of_Clock_Init 0ABE  
               _TXSTAbits 0FAC               vfpfcnvrt@ap 0035               vfpfcnvrt@fp 0032  
              ?_UART_Init 003D            __end_of_printf 0F28       start_initialization 0F28  
    Clock_Init@s16Timeout 0027         ?_UART_config_show 0027               vfprintf@fmt 0038  
      ??_UART_config_show 003D                  ??_printf 003C               __pbssCOMRAM 0001  
                ?_UART_Rx 0027                  ?_UART_Tx 0027               ??_UART_Init 0041  
             __smallconst 0800                  _BAUDCON1 0FB8                  _LATAbits 0F89  
                _PIR1bits 0F9E                 _vfpfcnvrt 0DC6         UART_Init@baudrate 003D  
       ?_UART_select_baud 0027        ??_UART_select_baud 002B                  __Hrparam 0000  
              vfprintf@ap 0039                  __Lrparam 0000                vfprintf@fp 0036  
              ?_vfpfcnvrt 0032               _readMessage 0026                  __ptext10 0F3E  
                __ptext11 08A8               _OSCCON2bits 0FD2                  isa$xinst 0000  
                _vfprintf 0E9A                 printf@fmt 003B                 putch@data 0028  
             _OSCTUNEbits 0F9B                _OSCCONbits 0FD3                  printf@ap 003C  
             ??_vfpfcnvrt 0036      Clock_Init@returnCode 002E  
