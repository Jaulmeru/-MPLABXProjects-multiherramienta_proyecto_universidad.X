

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Mon Sep 16 15:01:41 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F45K50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    27                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    28                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    29   000000                     
    30                           ; Generated 12/10/2023 GMT
    31                           ; 
    32                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution. Publication is not required when
    46                           ;        this file is used in an embedded application.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC18F45K50 Definitions
    62                           ; 
    63                           ; SFR Addresses
    64   000000                     _TRISBbits	set	3987
    65   000000                     _RCREG	set	4014
    66   000000                     _TXREG1	set	4013
    67   000000                     _SPBRG	set	4015
    68   000000                     _SPBRGH	set	4016
    69   000000                     _BRG161	set	32195
    70   000000                     _RCREG1	set	4014
    71   000000                     _TXSTAbits	set	4012
    72   000000                     _RCSTAbits	set	4011
    73   000000                     _BAUDCON1bits	set	4024
    74   000000                     _TXSTA1bits	set	4012
    75   000000                     _SSPEN	set	32309
    76   000000                     _TRMT	set	32097
    77   000000                     _TRISC7	set	31911
    78   000000                     _CREN	set	32092
    79   000000                     _TXEN1	set	32101
    80   000000                     _BRGH1	set	32098
    81   000000                     _TRISAbits	set	3986
    82   000000                     _TRISC6	set	31910
    83   000000                     _SPEN	set	32095
    84   000000                     _SYNC1	set	32100
    85   000000                     _SSPCON1bits	set	4038
    86   000000                     _OSCCON2bits	set	4050
    87   000000                     _OSCTUNEbits	set	3995
    88   000000                     _RC1IF	set	31989
    89   000000                     _OSCCONbits	set	4051
    90   000000                     _SSP1ADD	set	4040
    91   000000                     _SSPBUF	set	4041
    92                           
    93                           	psect	mediumconst
    94   007EE4                     __pmediumconst:
    95                           	callstack 0
    96   007EE4  00                 	db	0
    97   007EE5                     STR_25:
    98   007EE5  45                 	db	69	;'E'
    99   007EE6  52                 	db	82	;'R'
   100   007EE7  52                 	db	82	;'R'
   101   007EE8  4F                 	db	79	;'O'
   102   007EE9  52                 	db	82	;'R'
   103   007EEA  5F                 	db	95	;'_'
   104   007EEB  43                 	db	67	;'C'
   105   007EEC  4F                 	db	79	;'O'
   106   007EED  44                 	db	68	;'D'
   107   007EEE  45                 	db	69	;'E'
   108   007EEF  5F                 	db	95	;'_'
   109   007EF0  53                 	db	83	;'S'
   110   007EF1  50                 	db	80	;'P'
   111   007EF2  49                 	db	73	;'I'
   112   007EF3  5F                 	db	95	;'_'
   113   007EF4  42                 	db	66	;'B'
   114   007EF5  52                 	db	82	;'R'
   115   007EF6  5F                 	db	95	;'_'
   116   007EF7  4F                 	db	79	;'O'
   117   007EF8  56                 	db	86	;'V'
   118   007EF9  45                 	db	69	;'E'
   119   007EFA  52                 	db	82	;'R'
   120   007EFB  52                 	db	82	;'R'
   121   007EFC  41                 	db	65	;'A'
   122   007EFD  4E                 	db	78	;'N'
   123   007EFE  47                 	db	71	;'G'
   124   007EFF  45                 	db	69	;'E'
   125   007F00  00                 	db	0
   126   007F01  45                 	db	69	;'E'
   127   007F02  52                 	db	82	;'R'
   128   007F03  52                 	db	82	;'R'
   129   007F04  4F                 	db	79	;'O'
   130   007F05  52                 	db	82	;'R'
   131   007F06  5F                 	db	95	;'_'
   132   007F07  43                 	db	67	;'C'
   133   007F08  4F                 	db	79	;'O'
   134   007F09  44                 	db	68	;'D'
   135   007F0A  45                 	db	69	;'E'
   136   007F0B  5F                 	db	95	;'_'
   137   007F0C  55                 	db	85	;'U'
   138   007F0D  41                 	db	65	;'A'
   139   007F0E  52                 	db	82	;'R'
   140   007F0F  54                 	db	84	;'T'
   141   007F10  5F                 	db	95	;'_'
   142   007F11  43                 	db	67	;'C'
   143   007F12  4F                 	db	79	;'O'
   144   007F13  4E                 	db	78	;'N'
   145   007F14  46                 	db	70	;'F'
   146   007F15  49                 	db	73	;'I'
   147   007F16  47                 	db	71	;'G'
   148   007F17  20                 	db	32
   149   007F18  0D                 	db	13
   150   007F19  0A                 	db	10
   151   007F1A  00                 	db	0
   152   007F1B  45                 	db	69	;'E'
   153   007F1C  52                 	db	82	;'R'
   154   007F1D  52                 	db	82	;'R'
   155   007F1E  4F                 	db	79	;'O'
   156   007F1F  52                 	db	82	;'R'
   157   007F20  5F                 	db	95	;'_'
   158   007F21  43                 	db	67	;'C'
   159   007F22  4F                 	db	79	;'O'
   160   007F23  44                 	db	68	;'D'
   161   007F24  45                 	db	69	;'E'
   162   007F25  5F                 	db	95	;'_'
   163   007F26  55                 	db	85	;'U'
   164   007F27  41                 	db	65	;'A'
   165   007F28  52                 	db	82	;'R'
   166   007F29  54                 	db	84	;'T'
   167   007F2A  5F                 	db	95	;'_'
   168   007F2B  4F                 	db	79	;'O'
   169   007F2C  56                 	db	86	;'V'
   170   007F2D  45                 	db	69	;'E'
   171   007F2E  52                 	db	82	;'R'
   172   007F2F  46                 	db	70	;'F'
   173   007F30  4C                 	db	76	;'L'
   174   007F31  4F                 	db	79	;'O'
   175   007F32  57                 	db	87	;'W'
   176   007F33  00                 	db	0
   177   007F34  45                 	db	69	;'E'
   178   007F35  52                 	db	82	;'R'
   179   007F36  52                 	db	82	;'R'
   180   007F37  4F                 	db	79	;'O'
   181   007F38  52                 	db	82	;'R'
   182   007F39  5F                 	db	95	;'_'
   183   007F3A  43                 	db	67	;'C'
   184   007F3B  4F                 	db	79	;'O'
   185   007F3C  44                 	db	68	;'D'
   186   007F3D  45                 	db	69	;'E'
   187   007F3E  5F                 	db	95	;'_'
   188   007F3F  55                 	db	85	;'U'
   189   007F40  41                 	db	65	;'A'
   190   007F41  52                 	db	82	;'R'
   191   007F42  54                 	db	84	;'T'
   192   007F43  5F                 	db	95	;'_'
   193   007F44  46                 	db	70	;'F'
   194   007F45  52                 	db	82	;'R'
   195   007F46  41                 	db	65	;'A'
   196   007F47  4D                 	db	77	;'M'
   197   007F48  49                 	db	73	;'I'
   198   007F49  4E                 	db	78	;'N'
   199   007F4A  47                 	db	71	;'G'
   200   007F4B  00                 	db	0
   201   007F4C                     STR_6:
   202   007F4C  62                 	db	98	;'b'
   203   007F4D  61                 	db	97	;'a'
   204   007F4E  6A                 	db	106	;'j'
   205   007F4F  61                 	db	97	;'a'
   206   007F50  20                 	db	32
   207   007F51  76                 	db	118	;'v'
   208   007F52  65                 	db	101	;'e'
   209   007F53  6C                 	db	108	;'l'
   210   007F54  6F                 	db	111	;'o'
   211   007F55  63                 	db	99	;'c'
   212   007F56  69                 	db	105	;'i'
   213   007F57  64                 	db	100	;'d'
   214   007F58  61                 	db	97	;'a'
   215   007F59  64                 	db	100	;'d'
   216   007F5A  20                 	db	32
   217   007F5B  0D                 	db	13
   218   007F5C  0A                 	db	10
   219   007F5D  00                 	db	0
   220   007F5E                     STR_5:
   221   007F5E  61                 	db	97	;'a'
   222   007F5F  6C                 	db	108	;'l'
   223   007F60  74                 	db	116	;'t'
   224   007F61  61                 	db	97	;'a'
   225   007F62  20                 	db	32
   226   007F63  76                 	db	118	;'v'
   227   007F64  65                 	db	101	;'e'
   228   007F65  6C                 	db	108	;'l'
   229   007F66  6F                 	db	111	;'o'
   230   007F67  63                 	db	99	;'c'
   231   007F68  69                 	db	105	;'i'
   232   007F69  64                 	db	100	;'d'
   233   007F6A  61                 	db	97	;'a'
   234   007F6B  64                 	db	100	;'d'
   235   007F6C  20                 	db	32
   236   007F6D  0D                 	db	13
   237   007F6E  0A                 	db	10
   238   007F6F  00                 	db	0
   239   007F70                     STR_13:
   240   007F70  44                 	db	68	;'D'
   241   007F71  65                 	db	101	;'e'
   242   007F72  73                 	db	115	;'s'
   243   007F73  68                 	db	104	;'h'
   244   007F74  61                 	db	97	;'a'
   245   007F75  62                 	db	98	;'b'
   246   007F76  69                 	db	105	;'i'
   247   007F77  6C                 	db	108	;'l'
   248   007F78  69                 	db	105	;'i'
   249   007F79  74                 	db	116	;'t'
   250   007F7A  61                 	db	97	;'a'
   251   007F7B  64                 	db	100	;'d'
   252   007F7C  6F                 	db	111	;'o'
   253   007F7D  20                 	db	32
   254   007F7E  0D                 	db	13
   255   007F7F  0A                 	db	10
   256   007F80  00                 	db	0
   257   007F81                     STR_12:
   258   007F81  48                 	db	72	;'H'
   259   007F82  61                 	db	97	;'a'
   260   007F83  62                 	db	98	;'b'
   261   007F84  69                 	db	105	;'i'
   262   007F85  6C                 	db	108	;'l'
   263   007F86  69                 	db	105	;'i'
   264   007F87  74                 	db	116	;'t'
   265   007F88  61                 	db	97	;'a'
   266   007F89  64                 	db	100	;'d'
   267   007F8A  6F                 	db	111	;'o'
   268   007F8B  20                 	db	32
   269   007F8C  0D                 	db	13
   270   007F8D  0A                 	db	10
   271   007F8E  00                 	db	0
   272   007F8F                     STR_10:
   273   007F8F  78                 	db	120	;'x'
   274   007F90  20                 	db	32
   275   007F91  62                 	db	98	;'b'
   276   007F92  61                 	db	97	;'a'
   277   007F93  75                 	db	117	;'u'
   278   007F94  64                 	db	100	;'d'
   279   007F95  69                 	db	105	;'i'
   280   007F96  6F                 	db	111	;'o'
   281   007F97  73                 	db	115	;'s'
   282   007F98  20                 	db	32
   283   007F99  0D                 	db	13
   284   007F9A  0A                 	db	10
   285   007F9B  00                 	db	0
   286   007F9C                     STR_7:
   287   007F9C  42                 	db	66	;'B'
   288   007F9D  61                 	db	97	;'a'
   289   007F9E  75                 	db	117	;'u'
   290   007F9F  64                 	db	100	;'d'
   291   007FA0  72                 	db	114	;'r'
   292   007FA1  61                 	db	97	;'a'
   293   007FA2  74                 	db	116	;'t'
   294   007FA3  65                 	db	101	;'e'
   295   007FA4  3A                 	db	58	;':'
   296   007FA5  20                 	db	32
   297   007FA6  00                 	db	0
   298   007FA7                     STR_17:
   299   007FA7  52                 	db	82	;'R'
   300   007FA8  65                 	db	101	;'e'
   301   007FA9  63                 	db	99	;'c'
   302   007FAA  65                 	db	101	;'e'
   303   007FAB  70                 	db	112	;'p'
   304   007FAC  74                 	db	116	;'t'
   305   007FAD  6F                 	db	111	;'o'
   306   007FAE  72                 	db	114	;'r'
   307   007FAF  3A                 	db	58	;':'
   308   007FB0  20                 	db	32
   309   007FB1  00                 	db	0
   310   007FB2                     STR_4:
   311   007FB2  41                 	db	65	;'A'
   312   007FB3  73                 	db	115	;'s'
   313   007FB4  69                 	db	105	;'i'
   314   007FB5  6E                 	db	110	;'n'
   315   007FB6  63                 	db	99	;'c'
   316   007FB7  72                 	db	114	;'r'
   317   007FB8  6F                 	db	111	;'o'
   318   007FB9  6E                 	db	110	;'n'
   319   007FBA  6F                 	db	111	;'o'
   320   007FBB  20                 	db	32
   321   007FBC  00                 	db	0
   322   007FBD                     STR_14:
   323   007FBD  54                 	db	84	;'T'
   324   007FBE  72                 	db	114	;'r'
   325   007FBF  61                 	db	97	;'a'
   326   007FC0  6E                 	db	110	;'n'
   327   007FC1  73                 	db	115	;'s'
   328   007FC2  6F                 	db	111	;'o'
   329   007FC3  72                 	db	114	;'r'
   330   007FC4  3A                 	db	58	;':'
   331   007FC5  20                 	db	32
   332   007FC6  00                 	db	0
   333   007FC7                     STR_3:
   334   007FC7  53                 	db	83	;'S'
   335   007FC8  69                 	db	105	;'i'
   336   007FC9  6E                 	db	110	;'n'
   337   007FCA  63                 	db	99	;'c'
   338   007FCB  72                 	db	114	;'r'
   339   007FCC  6F                 	db	111	;'o'
   340   007FCD  6E                 	db	110	;'n'
   341   007FCE  6F                 	db	111	;'o'
   342   007FCF  20                 	db	32
   343   007FD0  00                 	db	0
   344   007FD1                     STR_11:
   345   007FD1  50                 	db	80	;'P'
   346   007FD2  75                 	db	117	;'u'
   347   007FD3  65                 	db	101	;'e'
   348   007FD4  72                 	db	114	;'r'
   349   007FD5  74                 	db	116	;'t'
   350   007FD6  6F                 	db	111	;'o'
   351   007FD7  3A                 	db	58	;':'
   352   007FD8  20                 	db	32
   353   007FD9  00                 	db	0
   354   007FDA                     STR_8:
   355   007FDA  31                 	db	49	;'1'
   356   007FDB  36                 	db	54	;'6'
   357   007FDC  20                 	db	32
   358   007FDD  62                 	db	98	;'b'
   359   007FDE  69                 	db	105	;'i'
   360   007FDF  74                 	db	116	;'t'
   361   007FE0  73                 	db	115	;'s'
   362   007FE1  20                 	db	32
   363   007FE2  00                 	db	0
   364   007FE3                     STR_20:
   365   007FE3  45                 	db	69	;'E'
   366   007FE4  72                 	db	114	;'r'
   367   007FE5  72                 	db	114	;'r'
   368   007FE6  6F                 	db	111	;'o'
   369   007FE7  72                 	db	114	;'r'
   370   007FE8  3A                 	db	58	;':'
   371   007FE9  20                 	db	32
   372   007FEA  00                 	db	0
   373   007FEB                     STR_9:
   374   007FEB  38                 	db	56	;'8'
   375   007FEC  20                 	db	32
   376   007FED  62                 	db	98	;'b'
   377   007FEE  69                 	db	105	;'i'
   378   007FEF  74                 	db	116	;'t'
   379   007FF0  73                 	db	115	;'s'
   380   007FF1  20                 	db	32
   381   007FF2  00                 	db	0
   382   007FF3                     STR_2:
   383   007FF3  4D                 	db	77	;'M'
   384   007FF4  6F                 	db	111	;'o'
   385   007FF5  64                 	db	100	;'d'
   386   007FF6  6F                 	db	111	;'o'
   387   007FF7  3A                 	db	58	;':'
   388   007FF8  20                 	db	32
   389   007FF9  00                 	db	0
   390   007FFA                     STR_1:
   391   007FFA  68                 	db	104	;'h'
   392   007FFB  6F                 	db	111	;'o'
   393   007FFC  6C                 	db	108	;'l'
   394   007FFD  61                 	db	97	;'a'
   395   007FFE  00                 	db	0
   396   007FFF  00                 	db	0	; dummy byte at the end
   397   000000                     
   398                           ; #config settings
   399                           
   400                           	psect	cinit
   401   0073E4                     __pcinit:
   402                           	callstack 0
   403   0073E4                     start_initialization:
   404                           	callstack 0
   405   0073E4                     __initialization:
   406                           	callstack 0
   407                           
   408                           ; Clear objects allocated to COMRAM (39 bytes)
   409   0073E4  EE00  F037         	lfsr	0,__pbssCOMRAM
   410   0073E8  0E27               	movlw	39
   411   0073EA                     clear_0:
   412   0073EA  6AEE               	clrf	postinc0,c
   413   0073EC  06E8               	decf	wreg,f,c
   414   0073EE  E1FD               	bnz	clear_0
   415   0073F0                     end_of_initialization:
   416                           	callstack 0
   417   0073F0                     __end_of__initialization:
   418                           	callstack 0
   419   0073F0  0E00               	movlw	low (__Lmediumconst shr (0+16))
   420   0073F2  6EF8               	movwf	tblptru,c
   421   0073F4  0100               	movlb	0
   422   0073F6  EF68  F03A         	goto	_main	;jump to C main() function
   423                           
   424                           	psect	bssCOMRAM
   425   000037                     __pbssCOMRAM:
   426                           	callstack 0
   427   000037                     	ds	32
   428   000057                     _nout:
   429                           	callstack 0
   430   000057                     	ds	2
   431   000059                     _width:
   432                           	callstack 0
   433   000059                     	ds	2
   434   00005B                     _prec:
   435                           	callstack 0
   436   00005B                     	ds	2
   437   00005D                     _flags:
   438                           	callstack 0
   439   00005D                     	ds	1
   440                           
   441                           	psect	cstackCOMRAM
   442   000001                     __pcstackCOMRAM:
   443                           	callstack 0
   444   000001                     ?___aldiv:
   445                           	callstack 0
   446   000001                     UART_Tx@dato:
   447                           	callstack 0
   448   000001                     SPI_write@dato:
   449                           	callstack 0
   450   000001                     Clock_Init@s16Timeout:
   451                           	callstack 0
   452   000001                     UART_select_baud@baudrate:
   453                           	callstack 0
   454   000001                     ___aldiv@dividend:
   455                           	callstack 0
   456                           
   457                           ; 4 bytes @ 0x0
   458   000001                     	ds	1
   459   000002                     putch@data:
   460                           	callstack 0
   461                           
   462                           ; 1 bytes @ 0x1
   463   000002                     	ds	1
   464   000003                     Clock_Init@bStatus:
   465                           	callstack 0
   466   000003                     fputc@c:
   467                           	callstack 0
   468                           
   469                           ; 2 bytes @ 0x2
   470   000003                     	ds	1
   471   000004                     Clock_Init@bStatus_555:
   472                           	callstack 0
   473                           
   474                           ; 1 bytes @ 0x3
   475   000004                     	ds	1
   476   000005                     ??_UART_select_baud:
   477   000005                     Clock_Init@bStatus_556:
   478                           	callstack 0
   479   000005                     fputc@fp:
   480                           	callstack 0
   481   000005                     ___aldiv@divisor:
   482                           	callstack 0
   483                           
   484                           ; 4 bytes @ 0x4
   485   000005                     	ds	1
   486   000006                     Clock_Init@bStatus_559:
   487                           	callstack 0
   488                           
   489                           ; 1 bytes @ 0x5
   490   000006                     	ds	1
   491   000007                     ??_fputc:
   492   000007                     Clock_Init@bItTimeEn:
   493                           	callstack 0
   494                           
   495                           ; 1 bytes @ 0x6
   496   000007                     	ds	1
   497   000008                     Clock_Init@returnCode:
   498                           	callstack 0
   499                           
   500                           ; 1 bytes @ 0x7
   501   000008                     	ds	1
   502   000009                     ___aldiv@counter:
   503                           	callstack 0
   504                           
   505                           ; 1 bytes @ 0x8
   506   000009                     	ds	1
   507   00000A                     ___aldiv@sign:
   508                           	callstack 0
   509                           
   510                           ; 1 bytes @ 0x9
   511   00000A                     	ds	1
   512   00000B                     ___aldiv@quotient:
   513                           	callstack 0
   514                           
   515                           ; 4 bytes @ 0xA
   516   00000B                     	ds	1
   517   00000C                     ?_vfpfcnvrt:
   518                           	callstack 0
   519   00000C                     vfpfcnvrt@fp:
   520                           	callstack 0
   521                           
   522                           ; 2 bytes @ 0xB
   523   00000C                     	ds	2
   524   00000E                     vfpfcnvrt@fmt:
   525                           	callstack 0
   526                           
   527                           ; 1 bytes @ 0xD
   528   00000E                     	ds	1
   529   00000F                     vfpfcnvrt@ap:
   530                           	callstack 0
   531                           
   532                           ; 1 bytes @ 0xE
   533   00000F                     	ds	1
   534   000010                     ??_vfpfcnvrt:
   535                           
   536                           ; 1 bytes @ 0xF
   537   000010                     	ds	5
   538   000015                     vfpfcnvrt@cp:
   539                           	callstack 0
   540                           
   541                           ; 3 bytes @ 0x14
   542   000015                     	ds	3
   543   000018                     ?_vfprintf:
   544                           	callstack 0
   545   000018                     vfprintf@fp:
   546                           	callstack 0
   547                           
   548                           ; 2 bytes @ 0x17
   549   000018                     	ds	2
   550   00001A                     vfprintf@fmt:
   551                           	callstack 0
   552                           
   553                           ; 3 bytes @ 0x19
   554   00001A                     	ds	3
   555   00001D                     vfprintf@ap:
   556                           	callstack 0
   557                           
   558                           ; 1 bytes @ 0x1C
   559   00001D                     	ds	1
   560   00001E                     vfprintf@cfmt:
   561                           	callstack 0
   562                           
   563                           ; 3 bytes @ 0x1D
   564   00001E                     	ds	3
   565   000021                     ?_printf:
   566                           	callstack 0
   567   000021                     printf@fmt:
   568                           	callstack 0
   569                           
   570                           ; 3 bytes @ 0x20
   571   000021                     	ds	3
   572   000024                     printf@ap:
   573                           	callstack 0
   574                           
   575                           ; 1 bytes @ 0x23
   576   000024                     	ds	1
   577   000025                     ??_SPI_ErrorHandler:
   578   000025                     UART_Init@baudrate:
   579                           	callstack 0
   580                           
   581                           ; 4 bytes @ 0x24
   582   000025                     	ds	2
   583   000027                     SPI_ErrorHandler@errorCode:
   584                           	callstack 0
   585                           
   586                           ; 1 bytes @ 0x26
   587   000027                     	ds	1
   588   000028                     SPI_BaudRateGen@FClock:
   589                           	callstack 0
   590                           
   591                           ; 4 bytes @ 0x27
   592   000028                     	ds	1
   593   000029                     
   594                           ; 1 bytes @ 0x28
   595   000029                     	ds	3
   596   00002C                     ??_SPI_BaudRateGen:
   597                           
   598                           ; 1 bytes @ 0x2B
   599   00002C                     	ds	4
   600   000030                     SPI_BaudRateGen@baudReg:
   601                           	callstack 0
   602                           
   603                           ; 4 bytes @ 0x2F
   604   000030                     	ds	4
   605   000034                     ??_main:
   606                           
   607                           ; 1 bytes @ 0x33
   608   000034                     	ds	3
   609                           
   610 ;;
   611 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   612 ;;
   613 ;; *************** function _main *****************
   614 ;; Defined at:
   615 ;;		line 15 in file "main.c"
   616 ;; Parameters:    Size  Location     Type
   617 ;;		None
   618 ;; Auto vars:     Size  Location     Type
   619 ;;		None
   620 ;; Return value:  Size  Location     Type
   621 ;;                  1    wreg      void 
   622 ;; Registers used:
   623 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   624 ;; Tracked objects:
   625 ;;		On entry : 0/0
   626 ;;		On exit  : 0/0
   627 ;;		Unchanged: 0/0
   628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   629 ;;      Params:         0       0       0       0       0       0       0       0       0
   630 ;;      Locals:         0       0       0       0       0       0       0       0       0
   631 ;;      Temps:          3       0       0       0       0       0       0       0       0
   632 ;;      Totals:         3       0       0       0       0       0       0       0       0
   633 ;;Total ram usage:        3 bytes
   634 ;; Hardware stack levels required when called: 9
   635 ;; This function calls:
   636 ;;		_Clock_Init
   637 ;;		_SPI_master_init
   638 ;;		_SPI_read
   639 ;;		_SPI_write
   640 ;;		_UART_Init
   641 ;;		_printf
   642 ;; This function is called by:
   643 ;;		Startup code after reset
   644 ;; This function uses a non-reentrant model
   645 ;;
   646                           
   647                           	psect	text0
   648   0074D0                     __ptext0:
   649                           	callstack 0
   650   0074D0                     _main:
   651                           	callstack 22
   652   0074D0                     
   653                           ;main.c: 16:     Clock_Init(16000);
   654   0074D0  0E3E               	movlw	62
   655   0074D2  6E02               	movwf	(Clock_Init@s16Timeout+1)^0,c
   656   0074D4  0E80               	movlw	128
   657   0074D6  6E01               	movwf	Clock_Init@s16Timeout^0,c
   658   0074D8  EC67  F03E         	call	_Clock_Init	;wreg free
   659   0074DC                     
   660                           ;main.c: 17:     UART_Init(9600);
   661   0074DC  0E80               	movlw	128
   662   0074DE  6E25               	movwf	UART_Init@baudrate^0,c
   663   0074E0  0E25               	movlw	37
   664   0074E2  6E26               	movwf	(UART_Init@baudrate+1)^0,c
   665   0074E4  0E00               	movlw	0
   666   0074E6  6E27               	movwf	(UART_Init@baudrate+2)^0,c
   667   0074E8  0E00               	movlw	0
   668   0074EA  6E28               	movwf	(UART_Init@baudrate+3)^0,c
   669   0074EC  EC0E  F03A         	call	_UART_Init	;wreg free
   670   0074F0                     
   671                           ;main.c: 18:     SPI_master_init();
   672   0074F0  EC23  F03A         	call	_SPI_master_init	;wreg free
   673   0074F4                     
   674                           ;main.c: 19:     SPI_write('b');
   675   0074F4  0E62               	movlw	98
   676   0074F6  ECDE  F039         	call	_SPI_write
   677   0074FA                     
   678                           ;main.c: 20:     printf("hola");
   679   0074FA  0EFA               	movlw	low STR_1
   680   0074FC  6E21               	movwf	printf@fmt^0,c
   681   0074FE  0E7F               	movlw	high STR_1
   682   007500  6E22               	movwf	(printf@fmt+1)^0,c
   683   007502  5021               	movf	printf@fmt^0,w,c
   684   007504  1022               	iorwf	(printf@fmt+1)^0,w,c
   685   007506  A4D8               	btfss	status,2,c
   686   007508  0E00               	movlw	low (__mediumconst shr (0+16))
   687   00750A  6E23               	movwf	(printf@fmt+2)^0,c
   688   00750C  ECFD  F039         	call	_printf	;wreg free
   689   007510                     
   690                           ;main.c: 21:     printf(SPI_read());
   691   007510  ECDC  F039         	call	_SPI_read	;wreg free
   692   007514  6E34               	movwf	??_main^0,c
   693   007516  6A35               	clrf	(??_main+1)^0,c
   694   007518  6A36               	clrf	(??_main+2)^0,c
   695   00751A  C034  F021         	movff	??_main,printf@fmt
   696   00751E  C035  F022         	movff	??_main+1,printf@fmt+1
   697   007522  C036  F023         	movff	??_main+2,printf@fmt+2
   698   007526  ECFD  F039         	call	_printf	;wreg free
   699   00752A                     l17:
   700   00752A  EF95  F03A         	goto	l17
   701   00752E  EF00  F000         	goto	start
   702   007532                     __end_of_main:
   703                           	callstack 0
   704                           
   705 ;; *************** function _UART_Init *****************
   706 ;; Defined at:
   707 ;;		line 20 in file "librerias/UART.c"
   708 ;; Parameters:    Size  Location     Type
   709 ;;  baudrate        4   36[COMRAM] unsigned long 
   710 ;; Auto vars:     Size  Location     Type
   711 ;;		None
   712 ;; Return value:  Size  Location     Type
   713 ;;                  1    wreg      void 
   714 ;; Registers used:
   715 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   716 ;; Tracked objects:
   717 ;;		On entry : 0/0
   718 ;;		On exit  : 0/0
   719 ;;		Unchanged: 0/0
   720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   721 ;;      Params:         4       0       0       0       0       0       0       0       0
   722 ;;      Locals:         0       0       0       0       0       0       0       0       0
   723 ;;      Temps:          0       0       0       0       0       0       0       0       0
   724 ;;      Totals:         4       0       0       0       0       0       0       0       0
   725 ;;Total ram usage:        4 bytes
   726 ;; Hardware stack levels used: 1
   727 ;; Hardware stack levels required when called: 7
   728 ;; This function calls:
   729 ;;		_UART_config_show
   730 ;;		_UART_select_baud
   731 ;; This function is called by:
   732 ;;		_main
   733 ;; This function uses a non-reentrant model
   734 ;;
   735                           
   736                           	psect	text1
   737   00741C                     __ptext1:
   738                           	callstack 0
   739   00741C                     _UART_Init:
   740                           	callstack 23
   741   00741C                     
   742                           ;librerias/UART.c: 21:     TXSTA1bits.SYNC1 = 0;
   743   00741C  98AC               	bcf	172,4,c	;volatile
   744                           
   745                           ;librerias/UART.c: 22:     TXSTA1bits.BRGH1 = 1;
   746   00741E  84AC               	bsf	172,2,c	;volatile
   747                           
   748                           ;librerias/UART.c: 23:     BAUDCON1bits.BRG161 = 1;
   749   007420  86B8               	bsf	184,3,c	;volatile
   750   007422                     
   751                           ;librerias/UART.c: 24:     UART_select_baud(baudrate);
   752   007422  C025  F001         	movff	UART_Init@baudrate,UART_select_baud@baudrate
   753   007426  C026  F002         	movff	UART_Init@baudrate+1,UART_select_baud@baudrate+1
   754   00742A  C027  F003         	movff	UART_Init@baudrate+2,UART_select_baud@baudrate+2
   755   00742E  C028  F004         	movff	UART_Init@baudrate+3,UART_select_baud@baudrate+3
   756   007432  EC01  F03C         	call	_UART_select_baud	;wreg free
   757   007436                     
   758                           ;librerias/UART.c: 25:     TRISC6 = 1;
   759   007436  8C94               	bsf	3988,6,c	;volatile
   760   007438                     
   761                           ;librerias/UART.c: 26:     TRISC7 = 1;
   762   007438  8E94               	bsf	3988,7,c	;volatile
   763   00743A                     
   764                           ;librerias/UART.c: 27:     RCSTAbits.SPEN = 1;
   765   00743A  8EAB               	bsf	171,7,c	;volatile
   766   00743C                     
   767                           ;librerias/UART.c: 28:     TXSTAbits.TXEN1 = 1;
   768   00743C  8AAC               	bsf	172,5,c	;volatile
   769   00743E                     
   770                           ;librerias/UART.c: 29:     RCSTAbits.CREN = 1;
   771   00743E  88AB               	bsf	171,4,c	;volatile
   772   007440                     
   773                           ;librerias/UART.c: 30:     UART_config_show();
   774   007440  EC6A  F03D         	call	_UART_config_show	;wreg free
   775   007444  0012               	return		;funcret
   776   007446                     __end_of_UART_Init:
   777                           	callstack 0
   778                           
   779 ;; *************** function _UART_select_baud *****************
   780 ;; Defined at:
   781 ;;		line 33 in file "librerias/UART.c"
   782 ;; Parameters:    Size  Location     Type
   783 ;;  baudrate        4    0[COMRAM] unsigned long 
   784 ;; Auto vars:     Size  Location     Type
   785 ;;		None
   786 ;; Return value:  Size  Location     Type
   787 ;;                  1    wreg      void 
   788 ;; Registers used:
   789 ;;		wreg, status,2, status,0
   790 ;; Tracked objects:
   791 ;;		On entry : 0/0
   792 ;;		On exit  : 0/0
   793 ;;		Unchanged: 0/0
   794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   795 ;;      Params:         4       0       0       0       0       0       0       0       0
   796 ;;      Locals:         0       0       0       0       0       0       0       0       0
   797 ;;      Temps:          4       0       0       0       0       0       0       0       0
   798 ;;      Totals:         8       0       0       0       0       0       0       0       0
   799 ;;Total ram usage:        8 bytes
   800 ;; Hardware stack levels used: 1
   801 ;; This function calls:
   802 ;;		Nothing
   803 ;; This function is called by:
   804 ;;		_UART_Init
   805 ;; This function uses a non-reentrant model
   806 ;;
   807                           
   808                           	psect	text2
   809   007802                     __ptext2:
   810                           	callstack 0
   811   007802                     _UART_select_baud:
   812                           	callstack 29
   813   007802                     
   814                           ;librerias/UART.c: 34:     switch (baudrate){
   815   007802  EF33  F03C         	goto	l1648
   816   007806                     l1630:
   817                           
   818                           ;librerias/UART.c: 36:             SPBRGH = 0x9C;
   819   007806  0E9C               	movlw	156
   820   007808  6EB0               	movwf	176,c	;volatile
   821                           
   822                           ;librerias/UART.c: 37:             SPBRG = 0x3F;
   823   00780A  0E3F               	movlw	63
   824   00780C  6EAF               	movwf	175,c	;volatile
   825                           
   826                           ;librerias/UART.c: 38:             break;
   827   00780E  EFA0  F03C         	goto	l107
   828   007812                     l1632:
   829                           
   830                           ;librerias/UART.c: 40:             SPBRGH = 0x27;
   831   007812  0E27               	movlw	39
   832   007814  6EB0               	movwf	176,c	;volatile
   833                           
   834                           ;librerias/UART.c: 41:             SPBRG = 0x0F;
   835   007816  0E0F               	movlw	15
   836   007818  6EAF               	movwf	175,c	;volatile
   837                           
   838                           ;librerias/UART.c: 42:             break;
   839   00781A  EFA0  F03C         	goto	l107
   840   00781E                     l1634:
   841                           
   842                           ;librerias/UART.c: 44:             SPBRGH = 0x13;
   843   00781E  0E13               	movlw	19
   844   007820  6EB0               	movwf	176,c	;volatile
   845                           
   846                           ;librerias/UART.c: 45:             SPBRG = 0x87;
   847   007822  0E87               	movlw	135
   848   007824  6EAF               	movwf	175,c	;volatile
   849                           
   850                           ;librerias/UART.c: 46:             break;
   851   007826  EFA0  F03C         	goto	l107
   852   00782A                     l1636:
   853                           
   854                           ;librerias/UART.c: 48:             SPBRGH = 0x04;
   855   00782A  0E04               	movlw	4
   856   00782C  6EB0               	movwf	176,c	;volatile
   857                           
   858                           ;librerias/UART.c: 49:             SPBRG = 0x7F;
   859   00782E  0E7F               	movlw	127
   860   007830  6EAF               	movwf	175,c	;volatile
   861                           
   862                           ;librerias/UART.c: 50:             break;
   863   007832  EFA0  F03C         	goto	l107
   864   007836                     l1638:
   865                           
   866                           ;librerias/UART.c: 52:             SPBRGH = 0x02;
   867   007836  0E02               	movlw	2
   868   007838  6EB0               	movwf	176,c	;volatile
   869                           
   870                           ;librerias/UART.c: 53:             SPBRG = 0x70;
   871   00783A  0E70               	movlw	112
   872   00783C  6EAF               	movwf	175,c	;volatile
   873                           
   874                           ;librerias/UART.c: 54:             break;
   875   00783E  EFA0  F03C         	goto	l107
   876   007842                     l1640:
   877                           
   878                           ;librerias/UART.c: 56:             SPBRGH = 0x00;
   879   007842  0E00               	movlw	0
   880   007844  6EB0               	movwf	176,c	;volatile
   881                           
   882                           ;librerias/UART.c: 57:             SPBRG = 0xCF;
   883   007846  0ECF               	movlw	207
   884   007848  6EAF               	movwf	175,c	;volatile
   885                           
   886                           ;librerias/UART.c: 58:             break;
   887   00784A  EFA0  F03C         	goto	l107
   888   00784E                     l1642:
   889                           
   890                           ;librerias/UART.c: 60:             SPBRGH = 0x00;
   891   00784E  0E00               	movlw	0
   892   007850  6EB0               	movwf	176,c	;volatile
   893                           
   894                           ;librerias/UART.c: 61:             SPBRG = 0x67;
   895   007852  0E67               	movlw	103
   896   007854  6EAF               	movwf	175,c	;volatile
   897                           
   898                           ;librerias/UART.c: 62:             break;
   899   007856  EFA0  F03C         	goto	l107
   900   00785A                     l1644:
   901                           
   902                           ;librerias/UART.c: 64:             SPBRGH = 0x04;
   903   00785A  0E04               	movlw	4
   904   00785C  6EB0               	movwf	176,c	;volatile
   905                           
   906                           ;librerias/UART.c: 65:             SPBRG = 0xE1;
   907   00785E  0EE1               	movlw	225
   908   007860  6EAF               	movwf	175,c	;volatile
   909                           
   910                           ;librerias/UART.c: 66:             break;
   911   007862  EFA0  F03C         	goto	l107
   912   007866                     l1648:
   913   007866  C001  F005         	movff	UART_select_baud@baudrate,??_UART_select_baud
   914   00786A  C002  F006         	movff	UART_select_baud@baudrate+1,??_UART_select_baud+1
   915   00786E  C003  F007         	movff	UART_select_baud@baudrate+2,??_UART_select_baud+2
   916   007872  C004  F008         	movff	UART_select_baud@baudrate+3,??_UART_select_baud+3
   917                           
   918                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 3 sub-sw
      +                          itches
   919                           ; Switch size 1, requested type "simple"
   920                           ; Number of cases is 1, Range of values is 0 to 0
   921                           ; switch strategies available:
   922                           ; Name         Instructions Cycles
   923                           ; simple_byte            4     3 (average)
   924                           ;	Chosen strategy is simple_byte
   925   007876  5008               	movf	(??_UART_select_baud+3)^0,w,c
   926   007878  0A00               	xorlw	0	; case 0
   927   00787A  B4D8               	btfsc	status,2,c
   928   00787C  EF95  F03C         	goto	l1902
   929   007880  EF2D  F03C         	goto	l1644
   930   007884                     l1898:
   931                           
   932                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 6 sub-sw
      +                          itches
   933                           ; Switch size 1, requested type "simple"
   934                           ; Number of cases is 6, Range of values is 1 to 225
   935                           ; switch strategies available:
   936                           ; Name         Instructions Cycles
   937                           ; simple_byte           19    10 (average)
   938                           ;	Chosen strategy is simple_byte
   939   007884  5006               	movf	(??_UART_select_baud+1)^0,w,c
   940   007886  0A01               	xorlw	1	; case 1
   941   007888  B4D8               	btfsc	status,2,c
   942   00788A  EF5D  F03C         	goto	l1904
   943   00788E  0A05               	xorlw	5	; case 4
   944   007890  B4D8               	btfsc	status,2,c
   945   007892  EF64  F03C         	goto	l1906
   946   007896  0A0D               	xorlw	13	; case 9
   947   007898  B4D8               	btfsc	status,2,c
   948   00789A  EF6B  F03C         	goto	l1908
   949   00789E  0A21               	xorlw	33	; case 40
   950   0078A0  B4D8               	btfsc	status,2,c
   951   0078A2  EF72  F03C         	goto	l1910
   952   0078A6  0A63               	xorlw	99	; case 75
   953   0078A8  B4D8               	btfsc	status,2,c
   954   0078AA  EF79  F03C         	goto	l1912
   955   0078AE  0AAA               	xorlw	170	; case 225
   956   0078B0  B4D8               	btfsc	status,2,c
   957   0078B2  EF80  F03C         	goto	l1914
   958   0078B6  EF2D  F03C         	goto	l1644
   959   0078BA                     l1904:
   960                           
   961                           ; Switch size 1, requested type "simple"
   962                           ; Number of cases is 1, Range of values is 44 to 44
   963                           ; switch strategies available:
   964                           ; Name         Instructions Cycles
   965                           ; simple_byte            4     3 (average)
   966                           ;	Chosen strategy is simple_byte
   967   0078BA  5005               	movf	??_UART_select_baud^0,w,c
   968   0078BC  0A2C               	xorlw	44	; case 44
   969   0078BE  B4D8               	btfsc	status,2,c
   970   0078C0  EF03  F03C         	goto	l1630
   971   0078C4  EF2D  F03C         	goto	l1644
   972   0078C8                     l1906:
   973                           
   974                           ; Switch size 1, requested type "simple"
   975                           ; Number of cases is 1, Range of values is 176 to 176
   976                           ; switch strategies available:
   977                           ; Name         Instructions Cycles
   978                           ; simple_byte            4     3 (average)
   979                           ;	Chosen strategy is simple_byte
   980   0078C8  5005               	movf	??_UART_select_baud^0,w,c
   981   0078CA  0AB0               	xorlw	176	; case 176
   982   0078CC  B4D8               	btfsc	status,2,c
   983   0078CE  EF09  F03C         	goto	l1632
   984   0078D2  EF2D  F03C         	goto	l1644
   985   0078D6                     l1908:
   986                           
   987                           ; Switch size 1, requested type "simple"
   988                           ; Number of cases is 1, Range of values is 96 to 96
   989                           ; switch strategies available:
   990                           ; Name         Instructions Cycles
   991                           ; simple_byte            4     3 (average)
   992                           ;	Chosen strategy is simple_byte
   993   0078D6  5005               	movf	??_UART_select_baud^0,w,c
   994   0078D8  0A60               	xorlw	96	; case 96
   995   0078DA  B4D8               	btfsc	status,2,c
   996   0078DC  EF0F  F03C         	goto	l1634
   997   0078E0  EF2D  F03C         	goto	l1644
   998   0078E4                     l1910:
   999                           
  1000                           ; Switch size 1, requested type "simple"
  1001                           ; Number of cases is 1, Range of values is 177 to 177
  1002                           ; switch strategies available:
  1003                           ; Name         Instructions Cycles
  1004                           ; simple_byte            4     3 (average)
  1005                           ;	Chosen strategy is simple_byte
  1006   0078E4  5005               	movf	??_UART_select_baud^0,w,c
  1007   0078E6  0AB1               	xorlw	177	; case 177
  1008   0078E8  B4D8               	btfsc	status,2,c
  1009   0078EA  EF15  F03C         	goto	l1636
  1010   0078EE  EF2D  F03C         	goto	l1644
  1011   0078F2                     l1912:
  1012                           
  1013                           ; Switch size 1, requested type "simple"
  1014                           ; Number of cases is 1, Range of values is 0 to 0
  1015                           ; switch strategies available:
  1016                           ; Name         Instructions Cycles
  1017                           ; simple_byte            4     3 (average)
  1018                           ;	Chosen strategy is simple_byte
  1019   0078F2  5005               	movf	??_UART_select_baud^0,w,c
  1020   0078F4  0A00               	xorlw	0	; case 0
  1021   0078F6  B4D8               	btfsc	status,2,c
  1022   0078F8  EF1B  F03C         	goto	l1638
  1023   0078FC  EF2D  F03C         	goto	l1644
  1024   007900                     l1914:
  1025                           
  1026                           ; Switch size 1, requested type "simple"
  1027                           ; Number of cases is 1, Range of values is 0 to 0
  1028                           ; switch strategies available:
  1029                           ; Name         Instructions Cycles
  1030                           ; simple_byte            4     3 (average)
  1031                           ;	Chosen strategy is simple_byte
  1032   007900  5005               	movf	??_UART_select_baud^0,w,c
  1033   007902  0A00               	xorlw	0	; case 0
  1034   007904  B4D8               	btfsc	status,2,c
  1035   007906  EF21  F03C         	goto	l1640
  1036   00790A  EF2D  F03C         	goto	l1644
  1037   00790E                     l1900:
  1038                           
  1039                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1040                           ; Switch size 1, requested type "simple"
  1041                           ; Number of cases is 1, Range of values is 194 to 194
  1042                           ; switch strategies available:
  1043                           ; Name         Instructions Cycles
  1044                           ; simple_byte            4     3 (average)
  1045                           ;	Chosen strategy is simple_byte
  1046   00790E  5006               	movf	(??_UART_select_baud+1)^0,w,c
  1047   007910  0AC2               	xorlw	194	; case 194
  1048   007912  B4D8               	btfsc	status,2,c
  1049   007914  EF8E  F03C         	goto	l1916
  1050   007918  EF2D  F03C         	goto	l1644
  1051   00791C                     l1916:
  1052                           
  1053                           ; Switch size 1, requested type "simple"
  1054                           ; Number of cases is 1, Range of values is 0 to 0
  1055                           ; switch strategies available:
  1056                           ; Name         Instructions Cycles
  1057                           ; simple_byte            4     3 (average)
  1058                           ;	Chosen strategy is simple_byte
  1059   00791C  5005               	movf	??_UART_select_baud^0,w,c
  1060   00791E  0A00               	xorlw	0	; case 0
  1061   007920  B4D8               	btfsc	status,2,c
  1062   007922  EF27  F03C         	goto	l1642
  1063   007926  EF2D  F03C         	goto	l1644
  1064   00792A                     l1902:
  1065                           
  1066                           ; Switch size 1, requested type "simple"
  1067                           ; Number of cases is 2, Range of values is 0 to 1
  1068                           ; switch strategies available:
  1069                           ; Name         Instructions Cycles
  1070                           ; simple_byte            7     4 (average)
  1071                           ;	Chosen strategy is simple_byte
  1072   00792A  5007               	movf	(??_UART_select_baud+2)^0,w,c
  1073   00792C  0A00               	xorlw	0	; case 0
  1074   00792E  B4D8               	btfsc	status,2,c
  1075   007930  EF42  F03C         	goto	l1898
  1076   007934  0A01               	xorlw	1	; case 1
  1077   007936  B4D8               	btfsc	status,2,c
  1078   007938  EF87  F03C         	goto	l1900
  1079   00793C  EF2D  F03C         	goto	l1644
  1080   007940                     l107:
  1081   007940  0012               	return		;funcret
  1082   007942                     __end_of_UART_select_baud:
  1083                           	callstack 0
  1084                           
  1085 ;; *************** function _UART_config_show *****************
  1086 ;; Defined at:
  1087 ;;		line 5 in file "librerias/UART.c"
  1088 ;; Parameters:    Size  Location     Type
  1089 ;;		None
  1090 ;; Auto vars:     Size  Location     Type
  1091 ;;		None
  1092 ;; Return value:  Size  Location     Type
  1093 ;;                  1    wreg      void 
  1094 ;; Registers used:
  1095 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1096 ;; Tracked objects:
  1097 ;;		On entry : 0/0
  1098 ;;		On exit  : 0/0
  1099 ;;		Unchanged: 0/0
  1100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1101 ;;      Params:         0       0       0       0       0       0       0       0       0
  1102 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1103 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1104 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1105 ;;Total ram usage:        0 bytes
  1106 ;; Hardware stack levels used: 1
  1107 ;; Hardware stack levels required when called: 6
  1108 ;; This function calls:
  1109 ;;		_printf
  1110 ;; This function is called by:
  1111 ;;		_UART_Init
  1112 ;; This function uses a non-reentrant model
  1113 ;;
  1114                           
  1115                           	psect	text3
  1116   007AD4                     __ptext3:
  1117                           	callstack 0
  1118   007AD4                     _UART_config_show:
  1119                           	callstack 23
  1120   007AD4                     
  1121                           ;librerias/UART.c: 6:     printf("Modo: ");
  1122   007AD4  0EF3               	movlw	low STR_2
  1123   007AD6  6E21               	movwf	printf@fmt^0,c
  1124   007AD8  0E7F               	movlw	high STR_2
  1125   007ADA  6E22               	movwf	(printf@fmt+1)^0,c
  1126   007ADC  5021               	movf	printf@fmt^0,w,c
  1127   007ADE  1022               	iorwf	(printf@fmt+1)^0,w,c
  1128   007AE0  A4D8               	btfss	status,2,c
  1129   007AE2  0E00               	movlw	low (__mediumconst shr (0+16))
  1130   007AE4  6E23               	movwf	(printf@fmt+2)^0,c
  1131   007AE6  ECFD  F039         	call	_printf	;wreg free
  1132   007AEA                     
  1133                           ;librerias/UART.c: 7:     (SYNC1) ? printf("Sincrono "):printf("Asincrono ");
  1134   007AEA  A8AC               	btfss	4012,4,c	;volatile
  1135   007AEC  EF7A  F03D         	goto	u711
  1136   007AF0  EF7C  F03D         	goto	u710
  1137   007AF4                     u711:
  1138   007AF4  EF89  F03D         	goto	l1596
  1139   007AF8                     u710:
  1140   007AF8  0EC7               	movlw	low STR_3
  1141   007AFA  6E21               	movwf	printf@fmt^0,c
  1142   007AFC  0E7F               	movlw	high STR_3
  1143   007AFE  6E22               	movwf	(printf@fmt+1)^0,c
  1144   007B00  5021               	movf	printf@fmt^0,w,c
  1145   007B02  1022               	iorwf	(printf@fmt+1)^0,w,c
  1146   007B04  A4D8               	btfss	status,2,c
  1147   007B06  0E00               	movlw	low (__mediumconst shr (0+16))
  1148   007B08  6E23               	movwf	(printf@fmt+2)^0,c
  1149   007B0A  ECFD  F039         	call	_printf	;wreg free
  1150   007B0E  EF94  F03D         	goto	l1598
  1151   007B12                     l1596:
  1152   007B12  0EB2               	movlw	low STR_4
  1153   007B14  6E21               	movwf	printf@fmt^0,c
  1154   007B16  0E7F               	movlw	high STR_4
  1155   007B18  6E22               	movwf	(printf@fmt+1)^0,c
  1156   007B1A  5021               	movf	printf@fmt^0,w,c
  1157   007B1C  1022               	iorwf	(printf@fmt+1)^0,w,c
  1158   007B1E  A4D8               	btfss	status,2,c
  1159   007B20  0E00               	movlw	low (__mediumconst shr (0+16))
  1160   007B22  6E23               	movwf	(printf@fmt+2)^0,c
  1161   007B24  ECFD  F039         	call	_printf	;wreg free
  1162   007B28                     l1598:
  1163                           
  1164                           ;librerias/UART.c: 8:     (BRGH1) ? printf("alta velocidad \r\n"):printf("baja velocidad
      +                           \r\n");
  1165   007B28  A4AC               	btfss	4012,2,c	;volatile
  1166   007B2A  EF99  F03D         	goto	u721
  1167   007B2E  EF9B  F03D         	goto	u720
  1168   007B32                     u721:
  1169   007B32  EFA8  F03D         	goto	l1602
  1170   007B36                     u720:
  1171   007B36  0E5E               	movlw	low STR_5
  1172   007B38  6E21               	movwf	printf@fmt^0,c
  1173   007B3A  0E7F               	movlw	high STR_5
  1174   007B3C  6E22               	movwf	(printf@fmt+1)^0,c
  1175   007B3E  5021               	movf	printf@fmt^0,w,c
  1176   007B40  1022               	iorwf	(printf@fmt+1)^0,w,c
  1177   007B42  A4D8               	btfss	status,2,c
  1178   007B44  0E00               	movlw	low (__mediumconst shr (0+16))
  1179   007B46  6E23               	movwf	(printf@fmt+2)^0,c
  1180   007B48  ECFD  F039         	call	_printf	;wreg free
  1181   007B4C  EFB3  F03D         	goto	l74
  1182   007B50                     l1602:
  1183   007B50  0E4C               	movlw	low STR_6
  1184   007B52  6E21               	movwf	printf@fmt^0,c
  1185   007B54  0E7F               	movlw	high STR_6
  1186   007B56  6E22               	movwf	(printf@fmt+1)^0,c
  1187   007B58  5021               	movf	printf@fmt^0,w,c
  1188   007B5A  1022               	iorwf	(printf@fmt+1)^0,w,c
  1189   007B5C  A4D8               	btfss	status,2,c
  1190   007B5E  0E00               	movlw	low (__mediumconst shr (0+16))
  1191   007B60  6E23               	movwf	(printf@fmt+2)^0,c
  1192   007B62  ECFD  F039         	call	_printf	;wreg free
  1193   007B66                     l74:
  1194                           
  1195                           ;librerias/UART.c: 9:     printf("Baudrate: ");
  1196   007B66  0E9C               	movlw	low STR_7
  1197   007B68  6E21               	movwf	printf@fmt^0,c
  1198   007B6A  0E7F               	movlw	high STR_7
  1199   007B6C  6E22               	movwf	(printf@fmt+1)^0,c
  1200   007B6E  5021               	movf	printf@fmt^0,w,c
  1201   007B70  1022               	iorwf	(printf@fmt+1)^0,w,c
  1202   007B72  A4D8               	btfss	status,2,c
  1203   007B74  0E00               	movlw	low (__mediumconst shr (0+16))
  1204   007B76  6E23               	movwf	(printf@fmt+2)^0,c
  1205   007B78  ECFD  F039         	call	_printf	;wreg free
  1206   007B7C                     
  1207                           ;librerias/UART.c: 10:     (BRG161) ? printf("16 bits "):printf("8 bits ");
  1208   007B7C  A6B8               	btfss	4024,3,c	;volatile
  1209   007B7E  EFC3  F03D         	goto	u731
  1210   007B82  EFC5  F03D         	goto	u730
  1211   007B86                     u731:
  1212   007B86  EFD2  F03D         	goto	l1608
  1213   007B8A                     u730:
  1214   007B8A  0EDA               	movlw	low STR_8
  1215   007B8C  6E21               	movwf	printf@fmt^0,c
  1216   007B8E  0E7F               	movlw	high STR_8
  1217   007B90  6E22               	movwf	(printf@fmt+1)^0,c
  1218   007B92  5021               	movf	printf@fmt^0,w,c
  1219   007B94  1022               	iorwf	(printf@fmt+1)^0,w,c
  1220   007B96  A4D8               	btfss	status,2,c
  1221   007B98  0E00               	movlw	low (__mediumconst shr (0+16))
  1222   007B9A  6E23               	movwf	(printf@fmt+2)^0,c
  1223   007B9C  ECFD  F039         	call	_printf	;wreg free
  1224   007BA0  EFDD  F03D         	goto	l78
  1225   007BA4                     l1608:
  1226   007BA4  0EEB               	movlw	low STR_9
  1227   007BA6  6E21               	movwf	printf@fmt^0,c
  1228   007BA8  0E7F               	movlw	high STR_9
  1229   007BAA  6E22               	movwf	(printf@fmt+1)^0,c
  1230   007BAC  5021               	movf	printf@fmt^0,w,c
  1231   007BAE  1022               	iorwf	(printf@fmt+1)^0,w,c
  1232   007BB0  A4D8               	btfss	status,2,c
  1233   007BB2  0E00               	movlw	low (__mediumconst shr (0+16))
  1234   007BB4  6E23               	movwf	(printf@fmt+2)^0,c
  1235   007BB6  ECFD  F039         	call	_printf	;wreg free
  1236   007BBA                     l78:
  1237                           
  1238                           ;librerias/UART.c: 11:     printf("x baudios \r\n");
  1239   007BBA  0E8F               	movlw	low STR_10
  1240   007BBC  6E21               	movwf	printf@fmt^0,c
  1241   007BBE  0E7F               	movlw	high STR_10
  1242   007BC0  6E22               	movwf	(printf@fmt+1)^0,c
  1243   007BC2  5021               	movf	printf@fmt^0,w,c
  1244   007BC4  1022               	iorwf	(printf@fmt+1)^0,w,c
  1245   007BC6  A4D8               	btfss	status,2,c
  1246   007BC8  0E00               	movlw	low (__mediumconst shr (0+16))
  1247   007BCA  6E23               	movwf	(printf@fmt+2)^0,c
  1248   007BCC  ECFD  F039         	call	_printf	;wreg free
  1249                           
  1250                           ;librerias/UART.c: 12:     printf("Puerto: ");
  1251   007BD0  0ED1               	movlw	low STR_11
  1252   007BD2  6E21               	movwf	printf@fmt^0,c
  1253   007BD4  0E7F               	movlw	high STR_11
  1254   007BD6  6E22               	movwf	(printf@fmt+1)^0,c
  1255   007BD8  5021               	movf	printf@fmt^0,w,c
  1256   007BDA  1022               	iorwf	(printf@fmt+1)^0,w,c
  1257   007BDC  A4D8               	btfss	status,2,c
  1258   007BDE  0E00               	movlw	low (__mediumconst shr (0+16))
  1259   007BE0  6E23               	movwf	(printf@fmt+2)^0,c
  1260   007BE2  ECFD  F039         	call	_printf	;wreg free
  1261   007BE6                     
  1262                           ;librerias/UART.c: 13:     (SPEN) ? printf("Habilitado \r\n"):printf("Deshabilitado \r\n
      +                          ");
  1263   007BE6  AEAB               	btfss	4011,7,c	;volatile
  1264   007BE8  EFF8  F03D         	goto	u741
  1265   007BEC  EFFA  F03D         	goto	u740
  1266   007BF0                     u741:
  1267   007BF0  EF07  F03E         	goto	l1614
  1268   007BF4                     u740:
  1269   007BF4  0E81               	movlw	low STR_12
  1270   007BF6  6E21               	movwf	printf@fmt^0,c
  1271   007BF8  0E7F               	movlw	high STR_12
  1272   007BFA  6E22               	movwf	(printf@fmt+1)^0,c
  1273   007BFC  5021               	movf	printf@fmt^0,w,c
  1274   007BFE  1022               	iorwf	(printf@fmt+1)^0,w,c
  1275   007C00  A4D8               	btfss	status,2,c
  1276   007C02  0E00               	movlw	low (__mediumconst shr (0+16))
  1277   007C04  6E23               	movwf	(printf@fmt+2)^0,c
  1278   007C06  ECFD  F039         	call	_printf	;wreg free
  1279   007C0A  EF12  F03E         	goto	l82
  1280   007C0E                     l1614:
  1281   007C0E  0E70               	movlw	low STR_13
  1282   007C10  6E21               	movwf	printf@fmt^0,c
  1283   007C12  0E7F               	movlw	high STR_13
  1284   007C14  6E22               	movwf	(printf@fmt+1)^0,c
  1285   007C16  5021               	movf	printf@fmt^0,w,c
  1286   007C18  1022               	iorwf	(printf@fmt+1)^0,w,c
  1287   007C1A  A4D8               	btfss	status,2,c
  1288   007C1C  0E00               	movlw	low (__mediumconst shr (0+16))
  1289   007C1E  6E23               	movwf	(printf@fmt+2)^0,c
  1290   007C20  ECFD  F039         	call	_printf	;wreg free
  1291   007C24                     l82:
  1292                           
  1293                           ;librerias/UART.c: 14:     printf("Transor: ");
  1294   007C24  0EBD               	movlw	low STR_14
  1295   007C26  6E21               	movwf	printf@fmt^0,c
  1296   007C28  0E7F               	movlw	high STR_14
  1297   007C2A  6E22               	movwf	(printf@fmt+1)^0,c
  1298   007C2C  5021               	movf	printf@fmt^0,w,c
  1299   007C2E  1022               	iorwf	(printf@fmt+1)^0,w,c
  1300   007C30  A4D8               	btfss	status,2,c
  1301   007C32  0E00               	movlw	low (__mediumconst shr (0+16))
  1302   007C34  6E23               	movwf	(printf@fmt+2)^0,c
  1303   007C36  ECFD  F039         	call	_printf	;wreg free
  1304   007C3A                     
  1305                           ;librerias/UART.c: 15:     (TXEN1) ? printf("Habilitado \r\n"):printf("Deshabilitado \r\
      +                          n");
  1306   007C3A  AAAC               	btfss	4012,5,c	;volatile
  1307   007C3C  EF22  F03E         	goto	u751
  1308   007C40  EF24  F03E         	goto	u750
  1309   007C44                     u751:
  1310   007C44  EF31  F03E         	goto	l1620
  1311   007C48                     u750:
  1312   007C48  0E81               	movlw	low STR_12
  1313   007C4A  6E21               	movwf	printf@fmt^0,c
  1314   007C4C  0E7F               	movlw	high STR_12
  1315   007C4E  6E22               	movwf	(printf@fmt+1)^0,c
  1316   007C50  5021               	movf	printf@fmt^0,w,c
  1317   007C52  1022               	iorwf	(printf@fmt+1)^0,w,c
  1318   007C54  A4D8               	btfss	status,2,c
  1319   007C56  0E00               	movlw	low (__mediumconst shr (0+16))
  1320   007C58  6E23               	movwf	(printf@fmt+2)^0,c
  1321   007C5A  ECFD  F039         	call	_printf	;wreg free
  1322   007C5E  EF3C  F03E         	goto	l86
  1323   007C62                     l1620:
  1324   007C62  0E70               	movlw	low STR_13
  1325   007C64  6E21               	movwf	printf@fmt^0,c
  1326   007C66  0E7F               	movlw	high STR_13
  1327   007C68  6E22               	movwf	(printf@fmt+1)^0,c
  1328   007C6A  5021               	movf	printf@fmt^0,w,c
  1329   007C6C  1022               	iorwf	(printf@fmt+1)^0,w,c
  1330   007C6E  A4D8               	btfss	status,2,c
  1331   007C70  0E00               	movlw	low (__mediumconst shr (0+16))
  1332   007C72  6E23               	movwf	(printf@fmt+2)^0,c
  1333   007C74  ECFD  F039         	call	_printf	;wreg free
  1334   007C78                     l86:
  1335                           
  1336                           ;librerias/UART.c: 16:     printf("Receptor: ");
  1337   007C78  0EA7               	movlw	low STR_17
  1338   007C7A  6E21               	movwf	printf@fmt^0,c
  1339   007C7C  0E7F               	movlw	high STR_17
  1340   007C7E  6E22               	movwf	(printf@fmt+1)^0,c
  1341   007C80  5021               	movf	printf@fmt^0,w,c
  1342   007C82  1022               	iorwf	(printf@fmt+1)^0,w,c
  1343   007C84  A4D8               	btfss	status,2,c
  1344   007C86  0E00               	movlw	low (__mediumconst shr (0+16))
  1345   007C88  6E23               	movwf	(printf@fmt+2)^0,c
  1346   007C8A  ECFD  F039         	call	_printf	;wreg free
  1347   007C8E                     
  1348                           ;librerias/UART.c: 17:     (CREN) ? printf("Habilitado \r\n"):printf("Deshabilitado \r\n
      +                          ");
  1349   007C8E  A8AB               	btfss	4011,4,c	;volatile
  1350   007C90  EF4C  F03E         	goto	u761
  1351   007C94  EF4E  F03E         	goto	u760
  1352   007C98                     u761:
  1353   007C98  EF5B  F03E         	goto	l1626
  1354   007C9C                     u760:
  1355   007C9C  0E81               	movlw	low STR_12
  1356   007C9E  6E21               	movwf	printf@fmt^0,c
  1357   007CA0  0E7F               	movlw	high STR_12
  1358   007CA2  6E22               	movwf	(printf@fmt+1)^0,c
  1359   007CA4  5021               	movf	printf@fmt^0,w,c
  1360   007CA6  1022               	iorwf	(printf@fmt+1)^0,w,c
  1361   007CA8  A4D8               	btfss	status,2,c
  1362   007CAA  0E00               	movlw	low (__mediumconst shr (0+16))
  1363   007CAC  6E23               	movwf	(printf@fmt+2)^0,c
  1364   007CAE  ECFD  F039         	call	_printf	;wreg free
  1365   007CB2  EF66  F03E         	goto	l91
  1366   007CB6                     l1626:
  1367   007CB6  0E70               	movlw	low STR_13
  1368   007CB8  6E21               	movwf	printf@fmt^0,c
  1369   007CBA  0E7F               	movlw	high STR_13
  1370   007CBC  6E22               	movwf	(printf@fmt+1)^0,c
  1371   007CBE  5021               	movf	printf@fmt^0,w,c
  1372   007CC0  1022               	iorwf	(printf@fmt+1)^0,w,c
  1373   007CC2  A4D8               	btfss	status,2,c
  1374   007CC4  0E00               	movlw	low (__mediumconst shr (0+16))
  1375   007CC6  6E23               	movwf	(printf@fmt+2)^0,c
  1376   007CC8  ECFD  F039         	call	_printf	;wreg free
  1377   007CCC                     l91:
  1378   007CCC  0012               	return		;funcret
  1379   007CCE                     __end_of_UART_config_show:
  1380                           	callstack 0
  1381                           
  1382 ;; *************** function _SPI_write *****************
  1383 ;; Defined at:
  1384 ;;		line 29 in file "librerias/SPI.c"
  1385 ;; Parameters:    Size  Location     Type
  1386 ;;  dato            1    wreg     unsigned char 
  1387 ;; Auto vars:     Size  Location     Type
  1388 ;;  dato            1    0[COMRAM] unsigned char 
  1389 ;; Return value:  Size  Location     Type
  1390 ;;                  1    wreg      void 
  1391 ;; Registers used:
  1392 ;;		wreg
  1393 ;; Tracked objects:
  1394 ;;		On entry : 0/0
  1395 ;;		On exit  : 0/0
  1396 ;;		Unchanged: 0/0
  1397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1398 ;;      Params:         0       0       0       0       0       0       0       0       0
  1399 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1400 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1401 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1402 ;;Total ram usage:        1 bytes
  1403 ;; Hardware stack levels used: 1
  1404 ;; This function calls:
  1405 ;;		Nothing
  1406 ;; This function is called by:
  1407 ;;		_main
  1408 ;; This function uses a non-reentrant model
  1409 ;;
  1410                           
  1411                           	psect	text4
  1412   0073BC                     __ptext4:
  1413                           	callstack 0
  1414   0073BC                     _SPI_write:
  1415                           	callstack 30
  1416                           
  1417                           ;incstack = 0
  1418                           ;SPI_write@dato stored from wreg
  1419   0073BC  6E01               	movwf	SPI_write@dato^0,c
  1420   0073BE                     
  1421                           ;librerias/SPI.c: 30:     SSPBUF = dato;
  1422   0073BE  C001  FFC9         	movff	SPI_write@dato,4041	;volatile
  1423   0073C2  0012               	return		;funcret
  1424   0073C4                     __end_of_SPI_write:
  1425                           	callstack 0
  1426                           
  1427 ;; *************** function _SPI_read *****************
  1428 ;; Defined at:
  1429 ;;		line 33 in file "librerias/SPI.c"
  1430 ;; Parameters:    Size  Location     Type
  1431 ;;		None
  1432 ;; Auto vars:     Size  Location     Type
  1433 ;;		None
  1434 ;; Return value:  Size  Location     Type
  1435 ;;                  1    wreg      unsigned char 
  1436 ;; Registers used:
  1437 ;;		wreg, status,2
  1438 ;; Tracked objects:
  1439 ;;		On entry : 0/0
  1440 ;;		On exit  : 0/0
  1441 ;;		Unchanged: 0/0
  1442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1443 ;;      Params:         0       0       0       0       0       0       0       0       0
  1444 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1445 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1446 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1447 ;;Total ram usage:        0 bytes
  1448 ;; Hardware stack levels used: 1
  1449 ;; This function calls:
  1450 ;;		Nothing
  1451 ;; This function is called by:
  1452 ;;		_main
  1453 ;; This function uses a non-reentrant model
  1454 ;;
  1455                           
  1456                           	psect	text5
  1457   0073B8                     __ptext5:
  1458                           	callstack 0
  1459   0073B8                     _SPI_read:
  1460                           	callstack 30
  1461   0073B8                     
  1462                           ;librerias/SPI.c: 34:     return SSPBUF;
  1463   0073B8  50C9               	movf	201,w,c	;volatile
  1464   0073BA  0012               	return		;funcret
  1465   0073BC                     __end_of_SPI_read:
  1466                           	callstack 0
  1467                           
  1468 ;; *************** function _SPI_master_init *****************
  1469 ;; Defined at:
  1470 ;;		line 3 in file "librerias/SPI.c"
  1471 ;; Parameters:    Size  Location     Type
  1472 ;;		None
  1473 ;; Auto vars:     Size  Location     Type
  1474 ;;		None
  1475 ;; Return value:  Size  Location     Type
  1476 ;;                  1    wreg      void 
  1477 ;; Registers used:
  1478 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1479 ;; Tracked objects:
  1480 ;;		On entry : 0/0
  1481 ;;		On exit  : 0/0
  1482 ;;		Unchanged: 0/0
  1483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1484 ;;      Params:         0       0       0       0       0       0       0       0       0
  1485 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1486 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1487 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1488 ;;Total ram usage:        0 bytes
  1489 ;; Hardware stack levels used: 1
  1490 ;; Hardware stack levels required when called: 8
  1491 ;; This function calls:
  1492 ;;		_SPI_BaudRateGen
  1493 ;; This function is called by:
  1494 ;;		_main
  1495 ;;		_SPI_master_reset
  1496 ;; This function uses a non-reentrant model
  1497 ;;
  1498                           
  1499                           	psect	text6
  1500   007446                     __ptext6:
  1501                           	callstack 0
  1502   007446                     _SPI_master_init:
  1503                           	callstack 22
  1504   007446                     
  1505                           ;librerias/SPI.c: 4:     SPI_BaudRateGen(100000);
  1506   007446  0EA0               	movlw	160
  1507   007448  6E28               	movwf	SPI_BaudRateGen@FClock^0,c
  1508   00744A  0E86               	movlw	134
  1509   00744C  6E29               	movwf	(SPI_BaudRateGen@FClock+1)^0,c
  1510   00744E  0E01               	movlw	1
  1511   007450  6E2A               	movwf	(SPI_BaudRateGen@FClock+2)^0,c
  1512   007452  0E00               	movlw	0
  1513   007454  6E2B               	movwf	(SPI_BaudRateGen@FClock+3)^0,c
  1514   007456  ECD4  F03A         	call	_SPI_BaudRateGen	;wreg free
  1515   00745A                     
  1516                           ;librerias/SPI.c: 5:     TRISAbits.RA5 = 1;
  1517   00745A  8A92               	bsf	146,5,c	;volatile
  1518   00745C                     
  1519                           ;librerias/SPI.c: 6:     TRISBbits.RB0 = 1;
  1520   00745C  8093               	bsf	147,0,c	;volatile
  1521   00745E                     
  1522                           ;librerias/SPI.c: 7:     TRISBbits.RB1 = 0;
  1523   00745E  9293               	bcf	147,1,c	;volatile
  1524   007460                     
  1525                           ;librerias/SPI.c: 8:     TRISBbits.RB3 = 0;
  1526   007460  9693               	bcf	147,3,c	;volatile
  1527   007462                     
  1528                           ;librerias/SPI.c: 9:     SSPCON1bits.SSPM = 10;
  1529   007462  50C6               	movf	198,w,c	;volatile
  1530   007464  0BF0               	andlw	-16
  1531   007466  090A               	iorlw	10
  1532   007468  6EC6               	movwf	198,c	;volatile
  1533   00746A  8AC6               	bsf	4038,5,c	;volatile
  1534   00746C  98C6               	bcf	198,4,c	;volatile
  1535   00746E  88C6               	bsf	198,4,c	;volatile
  1536   007470  0012               	return		;funcret
  1537   007472                     __end_of_SPI_master_init:
  1538                           	callstack 0
  1539                           
  1540 ;; *************** function _SPI_BaudRateGen *****************
  1541 ;; Defined at:
  1542 ;;		line 15 in file "librerias/SPI.c"
  1543 ;; Parameters:    Size  Location     Type
  1544 ;;  FClock          4   39[COMRAM] long 
  1545 ;; Auto vars:     Size  Location     Type
  1546 ;;  baudReg         4   47[COMRAM] unsigned long 
  1547 ;; Return value:  Size  Location     Type
  1548 ;;                  1    wreg      void 
  1549 ;; Registers used:
  1550 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1551 ;; Tracked objects:
  1552 ;;		On entry : 0/0
  1553 ;;		On exit  : 0/0
  1554 ;;		Unchanged: 0/0
  1555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1556 ;;      Params:         4       0       0       0       0       0       0       0       0
  1557 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1558 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1559 ;;      Totals:        12       0       0       0       0       0       0       0       0
  1560 ;;Total ram usage:       12 bytes
  1561 ;; Hardware stack levels used: 1
  1562 ;; Hardware stack levels required when called: 7
  1563 ;; This function calls:
  1564 ;;		_SPI_ErrorHandler
  1565 ;;		___aldiv
  1566 ;; This function is called by:
  1567 ;;		_SPI_master_init
  1568 ;; This function uses a non-reentrant model
  1569 ;;
  1570                           
  1571                           	psect	text7
  1572   0075A8                     __ptext7:
  1573                           	callstack 0
  1574   0075A8                     _SPI_BaudRateGen:
  1575                           	callstack 22
  1576   0075A8                     
  1577                           ;librerias/SPI.c: 16:     uint32_t baudReg = (48000000 / (FClock * 4)) - 1;
  1578   0075A8  0E00               	movlw	0
  1579   0075AA  6E01               	movwf	___aldiv@dividend^0,c
  1580   0075AC  0E6C               	movlw	108
  1581   0075AE  6E02               	movwf	(___aldiv@dividend+1)^0,c
  1582   0075B0  0EDC               	movlw	220
  1583   0075B2  6E03               	movwf	(___aldiv@dividend+2)^0,c
  1584   0075B4  0E02               	movlw	2
  1585   0075B6  6E04               	movwf	(___aldiv@dividend+3)^0,c
  1586   0075B8  C028  F02C         	movff	SPI_BaudRateGen@FClock,??_SPI_BaudRateGen
  1587   0075BC  C029  F02D         	movff	SPI_BaudRateGen@FClock+1,??_SPI_BaudRateGen+1
  1588   0075C0  C02A  F02E         	movff	SPI_BaudRateGen@FClock+2,??_SPI_BaudRateGen+2
  1589   0075C4  C02B  F02F         	movff	SPI_BaudRateGen@FClock+3,??_SPI_BaudRateGen+3
  1590   0075C8  0E02               	movlw	2
  1591   0075CA                     u775:
  1592   0075CA  90D8               	bcf	status,0,c
  1593   0075CC  362C               	rlcf	??_SPI_BaudRateGen^0,f,c
  1594   0075CE  362D               	rlcf	(??_SPI_BaudRateGen+1)^0,f,c
  1595   0075D0  362E               	rlcf	(??_SPI_BaudRateGen+2)^0,f,c
  1596   0075D2  362F               	rlcf	(??_SPI_BaudRateGen+3)^0,f,c
  1597   0075D4  2EE8               	decfsz	wreg,f,c
  1598   0075D6  EFE5  F03A         	goto	u775
  1599   0075DA  C02C  F005         	movff	??_SPI_BaudRateGen,___aldiv@divisor
  1600   0075DE  C02D  F006         	movff	??_SPI_BaudRateGen+1,___aldiv@divisor+1
  1601   0075E2  C02E  F007         	movff	??_SPI_BaudRateGen+2,___aldiv@divisor+2
  1602   0075E6  C02F  F008         	movff	??_SPI_BaudRateGen+3,___aldiv@divisor+3
  1603   0075EA  EC7B  F03B         	call	___aldiv	;wreg free
  1604   0075EE  0EFF               	movlw	255
  1605   0075F0  2401               	addwf	?___aldiv^0,w,c
  1606   0075F2  6E30               	movwf	SPI_BaudRateGen@baudReg^0,c
  1607   0075F4  0EFF               	movlw	255
  1608   0075F6  2002               	addwfc	(?___aldiv+1)^0,w,c
  1609   0075F8  6E31               	movwf	(SPI_BaudRateGen@baudReg+1)^0,c
  1610   0075FA  0EFF               	movlw	255
  1611   0075FC  2003               	addwfc	(?___aldiv+2)^0,w,c
  1612   0075FE  6E32               	movwf	(SPI_BaudRateGen@baudReg+2)^0,c
  1613   007600  0EFF               	movlw	255
  1614   007602  2004               	addwfc	(?___aldiv+3)^0,w,c
  1615   007604  6E33               	movwf	(SPI_BaudRateGen@baudReg+3)^0,c
  1616   007606                     
  1617                           ;librerias/SPI.c: 17:     if(baudReg > 0xFF){
  1618   007606  5033               	movf	(SPI_BaudRateGen@baudReg+3)^0,w,c
  1619   007608  1032               	iorwf	(SPI_BaudRateGen@baudReg+2)^0,w,c
  1620   00760A  E108               	bnz	u780
  1621   00760C  0431               	decf	(SPI_BaudRateGen@baudReg+1)^0,w,c
  1622   00760E  A0D8               	btfss	status,0,c
  1623   007610  EF0C  F03B         	goto	u781
  1624   007614  EF0E  F03B         	goto	u780
  1625   007618                     u781:
  1626   007618  EF13  F03B         	goto	l196
  1627   00761C                     u780:
  1628   00761C                     
  1629                           ;librerias/SPI.c: 18:         SPI_ErrorHandler(ERROR_CODE_SPI_BR_OVERRANGE);
  1630   00761C  0E01               	movlw	1
  1631   00761E  EC99  F03A         	call	_SPI_ErrorHandler
  1632   007622  EF15  F03B         	goto	l197
  1633   007626                     l196:
  1634                           
  1635                           ;librerias/SPI.c: 21:     SSP1ADD = baudReg;
  1636   007626  C030  FFC8         	movff	SPI_BaudRateGen@baudReg,4040	;volatile
  1637   00762A                     l197:
  1638   00762A  0012               	return		;funcret
  1639   00762C                     __end_of_SPI_BaudRateGen:
  1640                           	callstack 0
  1641                           
  1642 ;; *************** function ___aldiv *****************
  1643 ;; Defined at:
  1644 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\aldiv.c"
  1645 ;; Parameters:    Size  Location     Type
  1646 ;;  dividend        4    0[COMRAM] long 
  1647 ;;  divisor         4    4[COMRAM] long 
  1648 ;; Auto vars:     Size  Location     Type
  1649 ;;  quotient        4   10[COMRAM] long 
  1650 ;;  sign            1    9[COMRAM] unsigned char 
  1651 ;;  counter         1    8[COMRAM] unsigned char 
  1652 ;; Return value:  Size  Location     Type
  1653 ;;                  4    0[COMRAM] long 
  1654 ;; Registers used:
  1655 ;;		wreg, status,2, status,0
  1656 ;; Tracked objects:
  1657 ;;		On entry : 0/0
  1658 ;;		On exit  : 0/0
  1659 ;;		Unchanged: 0/0
  1660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1661 ;;      Params:         8       0       0       0       0       0       0       0       0
  1662 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1663 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1664 ;;      Totals:        14       0       0       0       0       0       0       0       0
  1665 ;;Total ram usage:       14 bytes
  1666 ;; Hardware stack levels used: 1
  1667 ;; This function calls:
  1668 ;;		Nothing
  1669 ;; This function is called by:
  1670 ;;		_SPI_BaudRateGen
  1671 ;; This function uses a non-reentrant model
  1672 ;;
  1673                           
  1674                           	psect	text8
  1675   0076F6                     __ptext8:
  1676                           	callstack 0
  1677   0076F6                     ___aldiv:
  1678                           	callstack 28
  1679   0076F6  0E00               	movlw	0
  1680   0076F8  6E0A               	movwf	___aldiv@sign^0,c
  1681   0076FA  BE08               	btfsc	(___aldiv@divisor+3)^0,7,c
  1682   0076FC  EF84  F03B         	goto	u650
  1683   007700  EF82  F03B         	goto	u651
  1684   007704                     u651:
  1685   007704  EF8E  F03B         	goto	l1554
  1686   007708                     u650:
  1687   007708  1E08               	comf	(___aldiv@divisor+3)^0,f,c
  1688   00770A  1E07               	comf	(___aldiv@divisor+2)^0,f,c
  1689   00770C  1E06               	comf	(___aldiv@divisor+1)^0,f,c
  1690   00770E  6C05               	negf	___aldiv@divisor^0,c
  1691   007710  0E00               	movlw	0
  1692   007712  2206               	addwfc	(___aldiv@divisor+1)^0,f,c
  1693   007714  2207               	addwfc	(___aldiv@divisor+2)^0,f,c
  1694   007716  2208               	addwfc	(___aldiv@divisor+3)^0,f,c
  1695   007718  0E01               	movlw	1
  1696   00771A  6E0A               	movwf	___aldiv@sign^0,c
  1697   00771C                     l1554:
  1698   00771C  BE04               	btfsc	(___aldiv@dividend+3)^0,7,c
  1699   00771E  EF95  F03B         	goto	u660
  1700   007722  EF93  F03B         	goto	u661
  1701   007726                     u661:
  1702   007726  EF9F  F03B         	goto	l1560
  1703   00772A                     u660:
  1704   00772A  1E04               	comf	(___aldiv@dividend+3)^0,f,c
  1705   00772C  1E03               	comf	(___aldiv@dividend+2)^0,f,c
  1706   00772E  1E02               	comf	(___aldiv@dividend+1)^0,f,c
  1707   007730  6C01               	negf	___aldiv@dividend^0,c
  1708   007732  0E00               	movlw	0
  1709   007734  2202               	addwfc	(___aldiv@dividend+1)^0,f,c
  1710   007736  2203               	addwfc	(___aldiv@dividend+2)^0,f,c
  1711   007738  2204               	addwfc	(___aldiv@dividend+3)^0,f,c
  1712   00773A  0E01               	movlw	1
  1713   00773C  1A0A               	xorwf	___aldiv@sign^0,f,c
  1714   00773E                     l1560:
  1715   00773E  0E00               	movlw	0
  1716   007740  6E0B               	movwf	___aldiv@quotient^0,c
  1717   007742  0E00               	movlw	0
  1718   007744  6E0C               	movwf	(___aldiv@quotient+1)^0,c
  1719   007746  0E00               	movlw	0
  1720   007748  6E0D               	movwf	(___aldiv@quotient+2)^0,c
  1721   00774A  0E00               	movlw	0
  1722   00774C  6E0E               	movwf	(___aldiv@quotient+3)^0,c
  1723   00774E  5005               	movf	___aldiv@divisor^0,w,c
  1724   007750  1006               	iorwf	(___aldiv@divisor+1)^0,w,c
  1725   007752  1007               	iorwf	(___aldiv@divisor+2)^0,w,c
  1726   007754  1008               	iorwf	(___aldiv@divisor+3)^0,w,c
  1727   007756  B4D8               	btfsc	status,2,c
  1728   007758  EFB0  F03B         	goto	u671
  1729   00775C  EFB2  F03B         	goto	u670
  1730   007760                     u671:
  1731   007760  EFE8  F03B         	goto	l1582
  1732   007764                     u670:
  1733   007764  0E01               	movlw	1
  1734   007766  6E09               	movwf	___aldiv@counter^0,c
  1735   007768  EFBC  F03B         	goto	l1568
  1736   00776C                     l1566:
  1737   00776C  90D8               	bcf	status,0,c
  1738   00776E  3605               	rlcf	___aldiv@divisor^0,f,c
  1739   007770  3606               	rlcf	(___aldiv@divisor+1)^0,f,c
  1740   007772  3607               	rlcf	(___aldiv@divisor+2)^0,f,c
  1741   007774  3608               	rlcf	(___aldiv@divisor+3)^0,f,c
  1742   007776  2A09               	incf	___aldiv@counter^0,f,c
  1743   007778                     l1568:
  1744   007778  AE08               	btfss	(___aldiv@divisor+3)^0,7,c
  1745   00777A  EFC1  F03B         	goto	u681
  1746   00777E  EFC3  F03B         	goto	u680
  1747   007782                     u681:
  1748   007782  EFB6  F03B         	goto	l1566
  1749   007786                     u680:
  1750   007786                     l1570:
  1751   007786  90D8               	bcf	status,0,c
  1752   007788  360B               	rlcf	___aldiv@quotient^0,f,c
  1753   00778A  360C               	rlcf	(___aldiv@quotient+1)^0,f,c
  1754   00778C  360D               	rlcf	(___aldiv@quotient+2)^0,f,c
  1755   00778E  360E               	rlcf	(___aldiv@quotient+3)^0,f,c
  1756   007790  5005               	movf	___aldiv@divisor^0,w,c
  1757   007792  5C01               	subwf	___aldiv@dividend^0,w,c
  1758   007794  5006               	movf	(___aldiv@divisor+1)^0,w,c
  1759   007796  5802               	subwfb	(___aldiv@dividend+1)^0,w,c
  1760   007798  5007               	movf	(___aldiv@divisor+2)^0,w,c
  1761   00779A  5803               	subwfb	(___aldiv@dividend+2)^0,w,c
  1762   00779C  5008               	movf	(___aldiv@divisor+3)^0,w,c
  1763   00779E  5804               	subwfb	(___aldiv@dividend+3)^0,w,c
  1764   0077A0  A0D8               	btfss	status,0,c
  1765   0077A2  EFD5  F03B         	goto	u691
  1766   0077A6  EFD7  F03B         	goto	u690
  1767   0077AA                     u691:
  1768   0077AA  EFE0  F03B         	goto	l1578
  1769   0077AE                     u690:
  1770   0077AE  5005               	movf	___aldiv@divisor^0,w,c
  1771   0077B0  5E01               	subwf	___aldiv@dividend^0,f,c
  1772   0077B2  5006               	movf	(___aldiv@divisor+1)^0,w,c
  1773   0077B4  5A02               	subwfb	(___aldiv@dividend+1)^0,f,c
  1774   0077B6  5007               	movf	(___aldiv@divisor+2)^0,w,c
  1775   0077B8  5A03               	subwfb	(___aldiv@dividend+2)^0,f,c
  1776   0077BA  5008               	movf	(___aldiv@divisor+3)^0,w,c
  1777   0077BC  5A04               	subwfb	(___aldiv@dividend+3)^0,f,c
  1778   0077BE  800B               	bsf	___aldiv@quotient^0,0,c
  1779   0077C0                     l1578:
  1780   0077C0  90D8               	bcf	status,0,c
  1781   0077C2  3208               	rrcf	(___aldiv@divisor+3)^0,f,c
  1782   0077C4  3207               	rrcf	(___aldiv@divisor+2)^0,f,c
  1783   0077C6  3206               	rrcf	(___aldiv@divisor+1)^0,f,c
  1784   0077C8  3205               	rrcf	___aldiv@divisor^0,f,c
  1785   0077CA  2E09               	decfsz	___aldiv@counter^0,f,c
  1786   0077CC  EFC3  F03B         	goto	l1570
  1787   0077D0                     l1582:
  1788   0077D0  500A               	movf	___aldiv@sign^0,w,c
  1789   0077D2  B4D8               	btfsc	status,2,c
  1790   0077D4  EFEE  F03B         	goto	u701
  1791   0077D8  EFF0  F03B         	goto	u700
  1792   0077DC                     u701:
  1793   0077DC  EFF8  F03B         	goto	l1586
  1794   0077E0                     u700:
  1795   0077E0  1E0E               	comf	(___aldiv@quotient+3)^0,f,c
  1796   0077E2  1E0D               	comf	(___aldiv@quotient+2)^0,f,c
  1797   0077E4  1E0C               	comf	(___aldiv@quotient+1)^0,f,c
  1798   0077E6  6C0B               	negf	___aldiv@quotient^0,c
  1799   0077E8  0E00               	movlw	0
  1800   0077EA  220C               	addwfc	(___aldiv@quotient+1)^0,f,c
  1801   0077EC  220D               	addwfc	(___aldiv@quotient+2)^0,f,c
  1802   0077EE  220E               	addwfc	(___aldiv@quotient+3)^0,f,c
  1803   0077F0                     l1586:
  1804   0077F0  C00B  F001         	movff	___aldiv@quotient,?___aldiv
  1805   0077F4  C00C  F002         	movff	___aldiv@quotient+1,?___aldiv+1
  1806   0077F8  C00D  F003         	movff	___aldiv@quotient+2,?___aldiv+2
  1807   0077FC  C00E  F004         	movff	___aldiv@quotient+3,?___aldiv+3
  1808   007800  0012               	return		;funcret
  1809   007802                     __end_of___aldiv:
  1810                           	callstack 0
  1811                           
  1812 ;; *************** function _SPI_ErrorHandler *****************
  1813 ;; Defined at:
  1814 ;;		line 24 in file "librerias/variables.c"
  1815 ;; Parameters:    Size  Location     Type
  1816 ;;  errorCode       1    wreg     enum E5200
  1817 ;; Auto vars:     Size  Location     Type
  1818 ;;  errorCode       1   38[COMRAM] enum E5200
  1819 ;; Return value:  Size  Location     Type
  1820 ;;                  1    wreg      void 
  1821 ;; Registers used:
  1822 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1823 ;; Tracked objects:
  1824 ;;		On entry : 0/0
  1825 ;;		On exit  : 0/0
  1826 ;;		Unchanged: 0/0
  1827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1828 ;;      Params:         0       0       0       0       0       0       0       0       0
  1829 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1830 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1831 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1832 ;;Total ram usage:        3 bytes
  1833 ;; Hardware stack levels used: 1
  1834 ;; Hardware stack levels required when called: 6
  1835 ;; This function calls:
  1836 ;;		_printf
  1837 ;; This function is called by:
  1838 ;;		_SPI_BaudRateGen
  1839 ;; This function uses a non-reentrant model
  1840 ;;
  1841                           
  1842                           	psect	text9
  1843   007532                     __ptext9:
  1844                           	callstack 0
  1845   007532                     _SPI_ErrorHandler:
  1846                           	callstack 22
  1847                           
  1848                           ;incstack = 0
  1849                           ;SPI_ErrorHandler@errorCode stored from wreg
  1850   007532  6E27               	movwf	SPI_ErrorHandler@errorCode^0,c
  1851   007534                     
  1852                           ;librerias/variables.c: 25:     if(errorCode != ERROR_CODE_SPI_OK) return;
  1853   007534  5027               	movf	SPI_ErrorHandler@errorCode^0,w,c
  1854   007536  B4D8               	btfsc	status,2,c
  1855   007538  EFA0  F03A         	goto	u641
  1856   00753C  EFA2  F03A         	goto	u640
  1857   007540                     u641:
  1858   007540  EFA4  F03A         	goto	l1534
  1859   007544                     u640:
  1860   007544  EFD3  F03A         	goto	l224
  1861   007548                     l1534:
  1862                           
  1863                           ;librerias/variables.c: 26:     printf("Error: ");
  1864   007548  0EE3               	movlw	low STR_20
  1865   00754A  6E21               	movwf	printf@fmt^0,c
  1866   00754C  0E7F               	movlw	high STR_20
  1867   00754E  6E22               	movwf	(printf@fmt+1)^0,c
  1868   007550  5021               	movf	printf@fmt^0,w,c
  1869   007552  1022               	iorwf	(printf@fmt+1)^0,w,c
  1870   007554  A4D8               	btfss	status,2,c
  1871   007556  0E00               	movlw	low (__mediumconst shr (0+16))
  1872   007558  6E23               	movwf	(printf@fmt+2)^0,c
  1873   00755A  ECFD  F039         	call	_printf	;wreg free
  1874                           
  1875                           ;librerias/variables.c: 27:     switch(errorCode){
  1876   00755E  EFBE  F03A         	goto	l1540
  1877   007562                     l1536:
  1878                           
  1879                           ;librerias/variables.c: 32:             printf("ERROR_CODE_SPI_BR_OVERRANGE");
  1880   007562  0EE5               	movlw	low STR_25
  1881   007564  6E21               	movwf	printf@fmt^0,c
  1882   007566  0E7E               	movlw	high STR_25
  1883   007568  6E22               	movwf	(printf@fmt+1)^0,c
  1884   00756A  5021               	movf	printf@fmt^0,w,c
  1885   00756C  1022               	iorwf	(printf@fmt+1)^0,w,c
  1886   00756E  A4D8               	btfss	status,2,c
  1887   007570  0E00               	movlw	low (__mediumconst shr (0+16))
  1888   007572  6E23               	movwf	(printf@fmt+2)^0,c
  1889   007574  ECFD  F039         	call	_printf	;wreg free
  1890                           
  1891                           ;librerias/variables.c: 33:         break;
  1892   007578  EFD3  F03A         	goto	l224
  1893   00757C                     l1540:
  1894   00757C  5027               	movf	SPI_ErrorHandler@errorCode^0,w,c
  1895   00757E  6E25               	movwf	??_SPI_ErrorHandler^0,c
  1896   007580  6A26               	clrf	(??_SPI_ErrorHandler+1)^0,c
  1897                           
  1898                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1899                           ; Switch size 1, requested type "simple"
  1900                           ; Number of cases is 1, Range of values is 0 to 0
  1901                           ; switch strategies available:
  1902                           ; Name         Instructions Cycles
  1903                           ; simple_byte            4     3 (average)
  1904                           ;	Chosen strategy is simple_byte
  1905   007582  5026               	movf	(??_SPI_ErrorHandler+1)^0,w,c
  1906   007584  0A00               	xorlw	0	; case 0
  1907   007586  B4D8               	btfsc	status,2,c
  1908   007588  EFC8  F03A         	goto	l1918
  1909   00758C  EFD3  F03A         	goto	l224
  1910   007590                     l1918:
  1911                           
  1912                           ; Switch size 1, requested type "simple"
  1913                           ; Number of cases is 2, Range of values is 0 to 1
  1914                           ; switch strategies available:
  1915                           ; Name         Instructions Cycles
  1916                           ; simple_byte            7     4 (average)
  1917                           ;	Chosen strategy is simple_byte
  1918   007590  5025               	movf	??_SPI_ErrorHandler^0,w,c
  1919   007592  0A00               	xorlw	0	; case 0
  1920   007594  B4D8               	btfsc	status,2,c
  1921   007596  EFD3  F03A         	goto	l224
  1922   00759A  0A01               	xorlw	1	; case 1
  1923   00759C  B4D8               	btfsc	status,2,c
  1924   00759E  EFB1  F03A         	goto	l1536
  1925   0075A2  EFD3  F03A         	goto	l224
  1926   0075A6                     l224:
  1927   0075A6  0012               	return		;funcret
  1928   0075A8                     __end_of_SPI_ErrorHandler:
  1929                           	callstack 0
  1930                           
  1931 ;; *************** function _printf *****************
  1932 ;; Defined at:
  1933 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\printf.c"
  1934 ;; Parameters:    Size  Location     Type
  1935 ;;  fmt             3   32[COMRAM] PTR const unsigned char 
  1936 ;;		 -> STR_25(28), STR_24(8), STR_23(26), STR_22(24), 
  1937 ;;		 -> STR_21(25), STR_20(8), STR_19(17), STR_18(14), 
  1938 ;;		 -> STR_17(11), STR_16(17), STR_15(14), STR_14(10), 
  1939 ;;		 -> STR_13(17), STR_12(14), STR_11(9), STR_10(13), 
  1940 ;;		 -> STR_9(8), STR_8(9), STR_7(11), STR_6(18), 
  1941 ;;		 -> STR_5(18), STR_4(11), STR_3(10), STR_2(7), 
  1942 ;;		 -> ROM(32767), STR_1(5), 
  1943 ;; Auto vars:     Size  Location     Type
  1944 ;;  ret             2    0        int 
  1945 ;;  ap              1   35[COMRAM] PTR void [1]
  1946 ;;		 -> ?_printf(2), 
  1947 ;; Return value:  Size  Location     Type
  1948 ;;                  2   32[COMRAM] int 
  1949 ;; Registers used:
  1950 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1951 ;; Tracked objects:
  1952 ;;		On entry : 0/0
  1953 ;;		On exit  : 0/0
  1954 ;;		Unchanged: 0/0
  1955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1956 ;;      Params:         3       0       0       0       0       0       0       0       0
  1957 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1958 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1959 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1960 ;;Total ram usage:        4 bytes
  1961 ;; Hardware stack levels used: 1
  1962 ;; Hardware stack levels required when called: 5
  1963 ;; This function calls:
  1964 ;;		_vfprintf
  1965 ;; This function is called by:
  1966 ;;		_main
  1967 ;;		_UART_config_show
  1968 ;;		_SPI_ErrorHandler
  1969 ;;		_UART_ErrorHandler
  1970 ;; This function uses a non-reentrant model
  1971 ;;
  1972                           
  1973                           	psect	text10
  1974   0073FA                     __ptext10:
  1975                           	callstack 0
  1976   0073FA                     _printf:
  1977                           	callstack 25
  1978   0073FA  0E24               	movlw	low (?_printf+3)
  1979   0073FC  6E24               	movwf	printf@ap^0,c
  1980   0073FE  0E00               	movlw	0
  1981   007400  6E18               	movwf	vfprintf@fp^0,c
  1982   007402  0E00               	movlw	0
  1983   007404  6E19               	movwf	(vfprintf@fp+1)^0,c
  1984   007406  C021  F01A         	movff	printf@fmt,vfprintf@fmt
  1985   00740A  C022  F01B         	movff	printf@fmt+1,vfprintf@fmt+1
  1986   00740E  C023  F01C         	movff	printf@fmt+2,vfprintf@fmt+2
  1987   007412  0E24               	movlw	low printf@ap
  1988   007414  6E1D               	movwf	vfprintf@ap^0,c
  1989   007416  EC39  F03A         	call	_vfprintf	;wreg free
  1990   00741A  0012               	return		;funcret
  1991   00741C                     __end_of_printf:
  1992                           	callstack 0
  1993                           
  1994 ;; *************** function _vfprintf *****************
  1995 ;; Defined at:
  1996 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  1997 ;; Parameters:    Size  Location     Type
  1998 ;;  fp              2   23[COMRAM] PTR struct _IO_FILE
  1999 ;;		 -> NULL(0), 
  2000 ;;  fmt             3   25[COMRAM] PTR const unsigned char 
  2001 ;;		 -> STR_25(28), STR_24(8), STR_23(26), STR_22(24), 
  2002 ;;		 -> STR_21(25), STR_20(8), STR_19(17), STR_18(14), 
  2003 ;;		 -> STR_17(11), STR_16(17), STR_15(14), STR_14(10), 
  2004 ;;		 -> STR_13(17), STR_12(14), STR_11(9), STR_10(13), 
  2005 ;;		 -> STR_9(8), STR_8(9), STR_7(11), STR_6(18), 
  2006 ;;		 -> STR_5(18), STR_4(11), STR_3(10), STR_2(7), 
  2007 ;;		 -> ROM(32767), STR_1(5), 
  2008 ;;  ap              1   28[COMRAM] PTR PTR void 
  2009 ;;		 -> printf@ap(1), 
  2010 ;; Auto vars:     Size  Location     Type
  2011 ;;  cfmt            3   29[COMRAM] PTR unsigned char 
  2012 ;;		 -> STR_25(28), STR_24(8), STR_23(26), STR_22(24), 
  2013 ;;		 -> STR_21(25), STR_20(8), STR_19(17), STR_18(14), 
  2014 ;;		 -> STR_17(11), STR_16(17), STR_15(14), STR_14(10), 
  2015 ;;		 -> STR_13(17), STR_12(14), STR_11(9), STR_10(13), 
  2016 ;;		 -> STR_9(8), STR_8(9), STR_7(11), STR_6(18), 
  2017 ;;		 -> STR_5(18), STR_4(11), STR_3(10), STR_2(7), 
  2018 ;;		 -> ROM(32767), STR_1(5), 
  2019 ;; Return value:  Size  Location     Type
  2020 ;;                  2   23[COMRAM] int 
  2021 ;; Registers used:
  2022 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2023 ;; Tracked objects:
  2024 ;;		On entry : 0/0
  2025 ;;		On exit  : 0/0
  2026 ;;		Unchanged: 0/0
  2027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2028 ;;      Params:         6       0       0       0       0       0       0       0       0
  2029 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2030 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2031 ;;      Totals:         9       0       0       0       0       0       0       0       0
  2032 ;;Total ram usage:        9 bytes
  2033 ;; Hardware stack levels used: 1
  2034 ;; Hardware stack levels required when called: 4
  2035 ;; This function calls:
  2036 ;;		_vfpfcnvrt
  2037 ;; This function is called by:
  2038 ;;		_printf
  2039 ;; This function uses a non-reentrant model
  2040 ;;
  2041                           
  2042                           	psect	text11
  2043   007472                     __ptext11:
  2044                           	callstack 0
  2045   007472                     _vfprintf:
  2046                           	callstack 25
  2047   007472                     
  2048                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  2049   007472  C01A  F01E         	movff	vfprintf@fmt,vfprintf@cfmt
  2050   007476  C01B  F01F         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2051   00747A  C01C  F020         	movff	vfprintf@fmt+2,vfprintf@cfmt+2
  2052   00747E                     
  2053                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1824:     nout = 
      +                          0;
  2054   00747E  0E00               	movlw	0
  2055   007480  6E58               	movwf	(_nout+1)^0,c
  2056   007482  0E00               	movlw	0
  2057   007484  6E57               	movwf	_nout^0,c
  2058                           
  2059                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2060   007486  EF53  F03A         	goto	l1518
  2061   00748A                     l1516:
  2062                           
  2063                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1828:         nou
      +                          t +=
  2064   00748A  C018  F00C         	movff	vfprintf@fp,vfpfcnvrt@fp
  2065   00748E  C019  F00D         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2066   007492  0E1E               	movlw	low vfprintf@cfmt
  2067   007494  6E0E               	movwf	vfpfcnvrt@fmt^0,c
  2068   007496  C01D  F00F         	movff	vfprintf@ap,vfpfcnvrt@ap
  2069   00749A  ECA1  F03C         	call	_vfpfcnvrt	;wreg free
  2070   00749E  500C               	movf	?_vfpfcnvrt^0,w,c
  2071   0074A0  2657               	addwf	_nout^0,f,c
  2072   0074A2  500D               	movf	(?_vfpfcnvrt+1)^0,w,c
  2073   0074A4  2258               	addwfc	(_nout+1)^0,f,c
  2074   0074A6                     l1518:
  2075                           
  2076                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2077   0074A6  C01E  FFF6         	movff	vfprintf@cfmt,tblptrl
  2078   0074AA  C01F  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2079   0074AE  C020  FFF8         	movff	vfprintf@cfmt+2,tblptru
  2080   0074B2  0008               	tblrd		*
  2081   0074B4  50F5               	movf	tablat,w,c
  2082   0074B6  0900               	iorlw	0
  2083   0074B8  A4D8               	btfss	status,2,c
  2084   0074BA  EF61  F03A         	goto	u631
  2085   0074BE  EF63  F03A         	goto	u630
  2086   0074C2                     u631:
  2087   0074C2  EF45  F03A         	goto	l1516
  2088   0074C6                     u630:
  2089   0074C6                     
  2090                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  2091   0074C6  0E00               	movlw	0
  2092   0074C8  6E19               	movwf	(?_vfprintf+1)^0,c
  2093   0074CA  0E00               	movlw	0
  2094   0074CC  6E18               	movwf	?_vfprintf^0,c
  2095   0074CE  0012               	return		;funcret
  2096   0074D0                     __end_of_vfprintf:
  2097                           	callstack 0
  2098                           
  2099 ;; *************** function _vfpfcnvrt *****************
  2100 ;; Defined at:
  2101 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  2102 ;; Parameters:    Size  Location     Type
  2103 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  2104 ;;		 -> NULL(0), 
  2105 ;;  fmt             1   13[COMRAM] PTR PTR unsigned char 
  2106 ;;		 -> vfprintf@cfmt(3), 
  2107 ;;  ap              1   14[COMRAM] PTR PTR void 
  2108 ;;		 -> printf@ap(1), 
  2109 ;; Auto vars:     Size  Location     Type
  2110 ;;  cp              3   20[COMRAM] PTR unsigned char 
  2111 ;;		 -> STR_25(28), STR_24(8), STR_23(26), STR_22(24), 
  2112 ;;		 -> STR_21(25), STR_20(8), STR_19(17), STR_18(14), 
  2113 ;;		 -> STR_17(11), STR_16(17), STR_15(14), STR_14(10), 
  2114 ;;		 -> STR_13(17), STR_12(14), STR_11(9), STR_10(13), 
  2115 ;;		 -> STR_9(8), STR_8(9), STR_7(11), STR_6(18), 
  2116 ;;		 -> STR_5(18), STR_4(11), STR_3(10), STR_2(7), 
  2117 ;;		 -> ROM(32767), STR_1(5), 
  2118 ;;  done            1    0        _Bool 
  2119 ;;  c               1    0        unsigned char 
  2120 ;; Return value:  Size  Location     Type
  2121 ;;                  2   11[COMRAM] int 
  2122 ;; Registers used:
  2123 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2124 ;; Tracked objects:
  2125 ;;		On entry : 0/0
  2126 ;;		On exit  : 0/0
  2127 ;;		Unchanged: 0/0
  2128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2129 ;;      Params:         4       0       0       0       0       0       0       0       0
  2130 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2131 ;;      Temps:          5       0       0       0       0       0       0       0       0
  2132 ;;      Totals:        12       0       0       0       0       0       0       0       0
  2133 ;;Total ram usage:       12 bytes
  2134 ;; Hardware stack levels used: 1
  2135 ;; Hardware stack levels required when called: 3
  2136 ;; This function calls:
  2137 ;;		_fputc
  2138 ;; This function is called by:
  2139 ;;		_vfprintf
  2140 ;; This function uses a non-reentrant model
  2141 ;;
  2142                           
  2143                           	psect	text12
  2144   007942                     __ptext12:
  2145                           	callstack 0
  2146   007942                     _vfpfcnvrt:
  2147                           	callstack 25
  2148   007942                     
  2149                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  2150   007942  500E               	movf	vfpfcnvrt@fmt^0,w,c
  2151   007944  6ED9               	movwf	fsr2l,c
  2152   007946  6ADA               	clrf	fsr2h,c
  2153   007948  CFDE F010          	movff	postinc2,??_vfpfcnvrt
  2154   00794C  CFDE F011          	movff	postinc2,??_vfpfcnvrt+1
  2155   007950  CFDE F012          	movff	postinc2,??_vfpfcnvrt+2
  2156   007954  C010  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2157   007958  C011  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2158   00795C  C012  FFF8         	movff	??_vfpfcnvrt+2,tblptru
  2159   007960  0008               	tblrd		*
  2160   007962  50F5               	movf	tablat,w,c
  2161   007964  0A25               	xorlw	37
  2162   007966  A4D8               	btfss	status,2,c
  2163   007968  EFB8  F03C         	goto	u601
  2164   00796C  EFBA  F03C         	goto	u600
  2165   007970                     u601:
  2166   007970  EF47  F03D         	goto	l1504
  2167   007974                     u600:
  2168   007974                     
  2169                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  2170   007974  500E               	movf	vfpfcnvrt@fmt^0,w,c
  2171   007976  6ED9               	movwf	fsr2l,c
  2172   007978  6ADA               	clrf	fsr2h,c
  2173   00797A  2ADE               	incf	postinc2,f,c
  2174   00797C  0E00               	movlw	0
  2175   00797E  22DE               	addwfc	postinc2,f,c
  2176   007980  22DE               	addwfc	postinc2,f,c
  2177   007982                     
  2178                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  2179   007982  0E00               	movlw	0
  2180   007984  6E5A               	movwf	(_width+1)^0,c
  2181   007986  0E00               	movlw	0
  2182   007988  6E59               	movwf	_width^0,c
  2183   00798A  C059  F05D         	movff	_width,_flags
  2184   00798E                     
  2185                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  2186   00798E  685B               	setf	_prec^0,c
  2187   007990  685C               	setf	(_prec+1)^0,c
  2188   007992                     
  2189                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  2190   007992  500E               	movf	vfpfcnvrt@fmt^0,w,c
  2191   007994  6ED9               	movwf	fsr2l,c
  2192   007996  6ADA               	clrf	fsr2h,c
  2193   007998  CFDE F015          	movff	postinc2,vfpfcnvrt@cp
  2194   00799C  CFDE F016          	movff	postinc2,vfpfcnvrt@cp+1
  2195   0079A0  CFDD F017          	movff	postdec2,vfpfcnvrt@cp+2
  2196   0079A4                     
  2197                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1595:   if (*cp =
      +                          = 'n') {
  2198   0079A4  C015  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2199   0079A8  C016  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2200   0079AC  C017  FFF8         	movff	vfpfcnvrt@cp+2,tblptru
  2201   0079B0  0008               	tblrd		*
  2202   0079B2  50F5               	movf	tablat,w,c
  2203   0079B4  0A6E               	xorlw	110
  2204   0079B6  A4D8               	btfss	status,2,c
  2205   0079B8  EFE0  F03C         	goto	u611
  2206   0079BC  EFE2  F03C         	goto	u610
  2207   0079C0                     u611:
  2208   0079C0  EF0E  F03D         	goto	l1488
  2209   0079C4                     u610:
  2210   0079C4                     
  2211                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1638:    *(*(int*
      +                           *)__va_arg(*(int* **)ap, (int*)0)) = (int) nout;
  2212   0079C4  500F               	movf	vfpfcnvrt@ap^0,w,c
  2213   0079C6  6ED9               	movwf	fsr2l,c
  2214   0079C8  6ADA               	clrf	fsr2h,c
  2215   0079CA  50DF               	movf	indf2,w,c
  2216   0079CC  2ADF               	incf	indf2,f,c
  2217   0079CE  6ED9               	movwf	fsr2l,c
  2218   0079D0  6ADA               	clrf	fsr2h,c
  2219   0079D2  50DF               	movf	indf2,w,c
  2220   0079D4  6ED9               	movwf	fsr2l,c
  2221   0079D6  6ADA               	clrf	fsr2h,c
  2222   0079D8  C057  FFDE         	movff	_nout,postinc2
  2223   0079DC  C058  FFDD         	movff	_nout+1,postdec2
  2224   0079E0                     
  2225                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1640:    *fmt = c
      +                          p+1;
  2226   0079E0  0E01               	movlw	1
  2227   0079E2  6E10               	movwf	??_vfpfcnvrt^0,c
  2228   0079E4  0E00               	movlw	0
  2229   0079E6  6E11               	movwf	(??_vfpfcnvrt+1)^0,c
  2230   0079E8  5010               	movf	??_vfpfcnvrt^0,w,c
  2231   0079EA  2415               	addwf	vfpfcnvrt@cp^0,w,c
  2232   0079EC  6E12               	movwf	(??_vfpfcnvrt+2)^0,c
  2233   0079EE  5011               	movf	(??_vfpfcnvrt+1)^0,w,c
  2234   0079F0  2016               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  2235   0079F2  6E13               	movwf	(??_vfpfcnvrt+3)^0,c
  2236   0079F4  0E00               	movlw	0
  2237   0079F6  BE11               	btfsc	(??_vfpfcnvrt+1)^0,7,c
  2238   0079F8  0EFF               	movlw	255
  2239   0079FA  2017               	addwfc	(vfpfcnvrt@cp+2)^0,w,c
  2240   0079FC  6E14               	movwf	(??_vfpfcnvrt+4)^0,c
  2241   0079FE  500E               	movf	vfpfcnvrt@fmt^0,w,c
  2242   007A00  6ED9               	movwf	fsr2l,c
  2243   007A02  6ADA               	clrf	fsr2h,c
  2244   007A04  C012  FFDE         	movff	??_vfpfcnvrt+2,postinc2
  2245   007A08  C013  FFDE         	movff	??_vfpfcnvrt+3,postinc2
  2246   007A0C  C014  FFDE         	movff	??_vfpfcnvrt+4,postinc2
  2247   007A10                     l1484:
  2248                           
  2249                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1641:    return (
      +                          int) 0;
  2250   007A10  0E00               	movlw	0
  2251   007A12  6E0D               	movwf	(?_vfpfcnvrt+1)^0,c
  2252   007A14  0E00               	movlw	0
  2253   007A16  6E0C               	movwf	?_vfpfcnvrt^0,c
  2254   007A18  EF69  F03D         	goto	l939
  2255   007A1C                     l1488:
  2256                           
  2257                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1798:         if 
      +                          ((*fmt)[0] == '%') {
  2258   007A1C  500E               	movf	vfpfcnvrt@fmt^0,w,c
  2259   007A1E  6ED9               	movwf	fsr2l,c
  2260   007A20  6ADA               	clrf	fsr2h,c
  2261   007A22  CFDE F010          	movff	postinc2,??_vfpfcnvrt
  2262   007A26  CFDE F011          	movff	postinc2,??_vfpfcnvrt+1
  2263   007A2A  CFDE F012          	movff	postinc2,??_vfpfcnvrt+2
  2264   007A2E  C010  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2265   007A32  C011  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2266   007A36  C012  FFF8         	movff	??_vfpfcnvrt+2,tblptru
  2267   007A3A  0008               	tblrd		*
  2268   007A3C  50F5               	movf	tablat,w,c
  2269   007A3E  0A25               	xorlw	37
  2270   007A40  A4D8               	btfss	status,2,c
  2271   007A42  EF25  F03D         	goto	u621
  2272   007A46  EF27  F03D         	goto	u620
  2273   007A4A                     u621:
  2274   007A4A  EF3E  F03D         	goto	l1498
  2275   007A4E                     u620:
  2276   007A4E                     
  2277                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1799:            
      +                           ++*fmt;
  2278   007A4E  500E               	movf	vfpfcnvrt@fmt^0,w,c
  2279   007A50  6ED9               	movwf	fsr2l,c
  2280   007A52  6ADA               	clrf	fsr2h,c
  2281   007A54  2ADE               	incf	postinc2,f,c
  2282   007A56  0E00               	movlw	0
  2283   007A58  22DE               	addwfc	postinc2,f,c
  2284   007A5A  22DE               	addwfc	postinc2,f,c
  2285   007A5C                     
  2286                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1800:            
      +                           fputc((int)'%', fp);
  2287   007A5C  0E00               	movlw	0
  2288   007A5E  6E04               	movwf	(fputc@c+1)^0,c
  2289   007A60  0E25               	movlw	37
  2290   007A62  6E03               	movwf	fputc@c^0,c
  2291   007A64  C00C  F005         	movff	vfpfcnvrt@fp,fputc@fp
  2292   007A68  C00D  F006         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2293   007A6C  EC16  F03B         	call	_fputc	;wreg free
  2294   007A70                     l1494:
  2295                           
  2296                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1801:            
      +                           return (int) 1;
  2297   007A70  0E00               	movlw	0
  2298   007A72  6E0D               	movwf	(?_vfpfcnvrt+1)^0,c
  2299   007A74  0E01               	movlw	1
  2300   007A76  6E0C               	movwf	?_vfpfcnvrt^0,c
  2301   007A78  EF69  F03D         	goto	l939
  2302   007A7C                     l1498:
  2303                           
  2304                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  2305   007A7C  500E               	movf	vfpfcnvrt@fmt^0,w,c
  2306   007A7E  6ED9               	movwf	fsr2l,c
  2307   007A80  6ADA               	clrf	fsr2h,c
  2308   007A82  2ADE               	incf	postinc2,f,c
  2309   007A84  0E00               	movlw	0
  2310   007A86  22DE               	addwfc	postinc2,f,c
  2311   007A88  22DE               	addwfc	postinc2,f,c
  2312   007A8A  EF08  F03D         	goto	l1484
  2313   007A8E                     l1504:
  2314                           
  2315                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  2316   007A8E  500E               	movf	vfpfcnvrt@fmt^0,w,c
  2317   007A90  6ED9               	movwf	fsr2l,c
  2318   007A92  6ADA               	clrf	fsr2h,c
  2319   007A94  CFDE F010          	movff	postinc2,??_vfpfcnvrt
  2320   007A98  CFDE F011          	movff	postinc2,??_vfpfcnvrt+1
  2321   007A9C  CFDE F012          	movff	postinc2,??_vfpfcnvrt+2
  2322   007AA0  C010  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2323   007AA4  C011  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2324   007AA8  C012  FFF8         	movff	??_vfpfcnvrt+2,tblptru
  2325   007AAC  0008               	tblrd		*
  2326   007AAE  50F5               	movf	tablat,w,c
  2327   007AB0  6E03               	movwf	fputc@c^0,c
  2328   007AB2  6A04               	clrf	(fputc@c+1)^0,c
  2329   007AB4  C00C  F005         	movff	vfpfcnvrt@fp,fputc@fp
  2330   007AB8  C00D  F006         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2331   007ABC  EC16  F03B         	call	_fputc	;wreg free
  2332   007AC0                     
  2333                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1812:     ++*fmt;
  2334   007AC0  500E               	movf	vfpfcnvrt@fmt^0,w,c
  2335   007AC2  6ED9               	movwf	fsr2l,c
  2336   007AC4  6ADA               	clrf	fsr2h,c
  2337   007AC6  2ADE               	incf	postinc2,f,c
  2338   007AC8  0E00               	movlw	0
  2339   007ACA  22DE               	addwfc	postinc2,f,c
  2340   007ACC  22DE               	addwfc	postinc2,f,c
  2341   007ACE  EF38  F03D         	goto	l1494
  2342   007AD2                     l939:
  2343   007AD2  0012               	return		;funcret
  2344   007AD4                     __end_of_vfpfcnvrt:
  2345                           	callstack 0
  2346                           
  2347 ;; *************** function _fputc *****************
  2348 ;; Defined at:
  2349 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_fputc.c"
  2350 ;; Parameters:    Size  Location     Type
  2351 ;;  c               2    2[COMRAM] int 
  2352 ;;  fp              2    4[COMRAM] PTR struct _IO_FILE
  2353 ;;		 -> NULL(0), 
  2354 ;; Auto vars:     Size  Location     Type
  2355 ;;		None
  2356 ;; Return value:  Size  Location     Type
  2357 ;;                  2    2[COMRAM] int 
  2358 ;; Registers used:
  2359 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2360 ;; Tracked objects:
  2361 ;;		On entry : 0/0
  2362 ;;		On exit  : 0/0
  2363 ;;		Unchanged: 0/0
  2364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2365 ;;      Params:         4       0       0       0       0       0       0       0       0
  2366 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2367 ;;      Temps:          5       0       0       0       0       0       0       0       0
  2368 ;;      Totals:         9       0       0       0       0       0       0       0       0
  2369 ;;Total ram usage:        9 bytes
  2370 ;; Hardware stack levels used: 1
  2371 ;; Hardware stack levels required when called: 2
  2372 ;; This function calls:
  2373 ;;		_putch
  2374 ;; This function is called by:
  2375 ;;		_vfpfcnvrt
  2376 ;; This function uses a non-reentrant model
  2377 ;;
  2378                           
  2379                           	psect	text13
  2380   00762C                     __ptext13:
  2381                           	callstack 0
  2382   00762C                     _fputc:
  2383                           	callstack 25
  2384   00762C  5005               	movf	fputc@fp^0,w,c
  2385   00762E  1006               	iorwf	(fputc@fp+1)^0,w,c
  2386   007630  B4D8               	btfsc	status,2,c
  2387   007632  EF1D  F03B         	goto	u561
  2388   007636  EF1F  F03B         	goto	u560
  2389   00763A                     u561:
  2390   00763A  EF28  F03B         	goto	l1458
  2391   00763E                     u560:
  2392   00763E  5005               	movf	fputc@fp^0,w,c
  2393   007640  1006               	iorwf	(fputc@fp+1)^0,w,c
  2394   007642  A4D8               	btfss	status,2,c
  2395   007644  EF26  F03B         	goto	u571
  2396   007648  EF28  F03B         	goto	u570
  2397   00764C                     u571:
  2398   00764C  EF2D  F03B         	goto	l1460
  2399   007650                     u570:
  2400   007650                     l1458:
  2401   007650  5003               	movf	fputc@c^0,w,c
  2402   007652  ECE2  F039         	call	_putch
  2403   007656  EF7A  F03B         	goto	l958
  2404   00765A                     l1460:
  2405   00765A  EE20 F00A          	lfsr	2,10
  2406   00765E  5005               	movf	fputc@fp^0,w,c
  2407   007660  26D9               	addwf	fsr2l,f,c
  2408   007662  5006               	movf	(fputc@fp+1)^0,w,c
  2409   007664  22DA               	addwfc	fsr2h,f,c
  2410   007666  50DE               	movf	postinc2,w,c
  2411   007668  10DE               	iorwf	postinc2,w,c
  2412   00766A  B4D8               	btfsc	status,2,c
  2413   00766C  EF3A  F03B         	goto	u581
  2414   007670  EF3C  F03B         	goto	u580
  2415   007674                     u581:
  2416   007674  EF57  F03B         	goto	l1464
  2417   007678                     u580:
  2418   007678  EE20 F00A          	lfsr	2,10
  2419   00767C  5005               	movf	fputc@fp^0,w,c
  2420   00767E  26D9               	addwf	fsr2l,f,c
  2421   007680  5006               	movf	(fputc@fp+1)^0,w,c
  2422   007682  22DA               	addwfc	fsr2h,f,c
  2423   007684  EE10 F003          	lfsr	1,3
  2424   007688  5005               	movf	fputc@fp^0,w,c
  2425   00768A  26E1               	addwf	fsr1l,f,c
  2426   00768C  5006               	movf	(fputc@fp+1)^0,w,c
  2427   00768E  22E2               	addwfc	fsr1h,f,c
  2428   007690  50DE               	movf	postinc2,w,c
  2429   007692  5CE6               	subwf	postinc1,w,c
  2430   007694  50E6               	movf	postinc1,w,c
  2431   007696  0A80               	xorlw	128
  2432   007698  6E0B               	movwf	(??_fputc+4)^0,c
  2433   00769A  50DE               	movf	postinc2,w,c
  2434   00769C  0A80               	xorlw	128
  2435   00769E  580B               	subwfb	(??_fputc+4)^0,w,c
  2436   0076A0  B0D8               	btfsc	status,0,c
  2437   0076A2  EF55  F03B         	goto	u591
  2438   0076A6  EF57  F03B         	goto	u590
  2439   0076AA                     u591:
  2440   0076AA  EF7A  F03B         	goto	l958
  2441   0076AE                     u590:
  2442   0076AE                     l1464:
  2443   0076AE  EE20 F003          	lfsr	2,3
  2444   0076B2  5005               	movf	fputc@fp^0,w,c
  2445   0076B4  26D9               	addwf	fsr2l,f,c
  2446   0076B6  5006               	movf	(fputc@fp+1)^0,w,c
  2447   0076B8  22DA               	addwfc	fsr2h,f,c
  2448   0076BA  CFDE F007          	movff	postinc2,??_fputc
  2449   0076BE  CFDD F008          	movff	postdec2,??_fputc+1
  2450   0076C2  C005  FFD9         	movff	fputc@fp,fsr2l
  2451   0076C6  C006  FFDA         	movff	fputc@fp+1,fsr2h
  2452   0076CA  CFDE F009          	movff	postinc2,??_fputc+2
  2453   0076CE  CFDD F00A          	movff	postdec2,??_fputc+3
  2454   0076D2  5007               	movf	??_fputc^0,w,c
  2455   0076D4  2409               	addwf	(??_fputc+2)^0,w,c
  2456   0076D6  6ED9               	movwf	fsr2l,c
  2457   0076D8  5008               	movf	(??_fputc+1)^0,w,c
  2458   0076DA  200A               	addwfc	(??_fputc+3)^0,w,c
  2459   0076DC  6EDA               	movwf	fsr2h,c
  2460   0076DE  C003  FFDF         	movff	fputc@c,indf2
  2461   0076E2  EE20 F003          	lfsr	2,3
  2462   0076E6  5005               	movf	fputc@fp^0,w,c
  2463   0076E8  26D9               	addwf	fsr2l,f,c
  2464   0076EA  5006               	movf	(fputc@fp+1)^0,w,c
  2465   0076EC  22DA               	addwfc	fsr2h,f,c
  2466   0076EE  2ADE               	incf	postinc2,f,c
  2467   0076F0  0E00               	movlw	0
  2468   0076F2  22DD               	addwfc	postdec2,f,c
  2469   0076F4                     l958:
  2470   0076F4  0012               	return		;funcret
  2471   0076F6                     __end_of_fputc:
  2472                           	callstack 0
  2473                           
  2474 ;; *************** function _putch *****************
  2475 ;; Defined at:
  2476 ;;		line 75 in file "librerias/UART.c"
  2477 ;; Parameters:    Size  Location     Type
  2478 ;;  data            1    wreg     unsigned char 
  2479 ;; Auto vars:     Size  Location     Type
  2480 ;;  data            1    1[COMRAM] unsigned char 
  2481 ;; Return value:  Size  Location     Type
  2482 ;;                  1    wreg      void 
  2483 ;; Registers used:
  2484 ;;		wreg, status,2, cstack
  2485 ;; Tracked objects:
  2486 ;;		On entry : 0/0
  2487 ;;		On exit  : 0/0
  2488 ;;		Unchanged: 0/0
  2489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2490 ;;      Params:         0       0       0       0       0       0       0       0       0
  2491 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2492 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2493 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2494 ;;Total ram usage:        1 bytes
  2495 ;; Hardware stack levels used: 1
  2496 ;; Hardware stack levels required when called: 1
  2497 ;; This function calls:
  2498 ;;		_UART_Tx
  2499 ;; This function is called by:
  2500 ;;		_fputc
  2501 ;; This function uses a non-reentrant model
  2502 ;;
  2503                           
  2504                           	psect	text14
  2505   0073C4                     __ptext14:
  2506                           	callstack 0
  2507   0073C4                     _putch:
  2508                           	callstack 25
  2509                           
  2510                           ;incstack = 0
  2511                           ;putch@data stored from wreg
  2512   0073C4  6E02               	movwf	putch@data^0,c
  2513   0073C6                     
  2514                           ;librerias/UART.c: 76:     UART_Tx(data);
  2515   0073C6  5002               	movf	putch@data^0,w,c
  2516   0073C8  ECE7  F039         	call	_UART_Tx
  2517   0073CC  0012               	return		;funcret
  2518   0073CE                     __end_of_putch:
  2519                           	callstack 0
  2520                           
  2521 ;; *************** function _UART_Tx *****************
  2522 ;; Defined at:
  2523 ;;		line 70 in file "librerias/UART.c"
  2524 ;; Parameters:    Size  Location     Type
  2525 ;;  dato            1    wreg     unsigned char 
  2526 ;; Auto vars:     Size  Location     Type
  2527 ;;  dato            1    0[COMRAM] unsigned char 
  2528 ;; Return value:  Size  Location     Type
  2529 ;;                  1    wreg      void 
  2530 ;; Registers used:
  2531 ;;		wreg
  2532 ;; Tracked objects:
  2533 ;;		On entry : 0/0
  2534 ;;		On exit  : 0/0
  2535 ;;		Unchanged: 0/0
  2536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2537 ;;      Params:         0       0       0       0       0       0       0       0       0
  2538 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2539 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2540 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2541 ;;Total ram usage:        1 bytes
  2542 ;; Hardware stack levels used: 1
  2543 ;; This function calls:
  2544 ;;		Nothing
  2545 ;; This function is called by:
  2546 ;;		_putch
  2547 ;; This function uses a non-reentrant model
  2548 ;;
  2549                           
  2550                           	psect	text15
  2551   0073CE                     __ptext15:
  2552                           	callstack 0
  2553   0073CE                     _UART_Tx:
  2554                           	callstack 25
  2555                           
  2556                           ;incstack = 0
  2557                           ;UART_Tx@dato stored from wreg
  2558   0073CE  6E01               	movwf	UART_Tx@dato^0,c
  2559   0073D0                     l110:
  2560   0073D0  A2AC               	btfss	4012,1,c	;volatile
  2561   0073D2  EFED  F039         	goto	u11
  2562   0073D6  EFEF  F039         	goto	u10
  2563   0073DA                     u11:
  2564   0073DA  EFE8  F039         	goto	l110
  2565   0073DE                     u10:
  2566   0073DE                     
  2567                           ;librerias/UART.c: 72:     TXREG1 = dato;
  2568   0073DE  C001  FFAD         	movff	UART_Tx@dato,4013	;volatile
  2569   0073E2  0012               	return		;funcret
  2570   0073E4                     __end_of_UART_Tx:
  2571                           	callstack 0
  2572                           
  2573 ;; *************** function _Clock_Init *****************
  2574 ;; Defined at:
  2575 ;;		line 3 in file "librerias/clock.c"
  2576 ;; Parameters:    Size  Location     Type
  2577 ;;  s16Timeout      2    0[COMRAM] short 
  2578 ;; Auto vars:     Size  Location     Type
  2579 ;;  bStatus         1    5[COMRAM] _Bool 
  2580 ;;  bStatus         1    4[COMRAM] _Bool 
  2581 ;;  bStatus         1    3[COMRAM] _Bool 
  2582 ;;  bStatus         1    2[COMRAM] _Bool 
  2583 ;;  returnCode      1    7[COMRAM] enum E5188
  2584 ;;  bItTimeEn       1    6[COMRAM] _Bool 
  2585 ;; Return value:  Size  Location     Type
  2586 ;;                  1    wreg      enum E5188
  2587 ;; Registers used:
  2588 ;;		wreg, status,2, status,0
  2589 ;; Tracked objects:
  2590 ;;		On entry : 0/0
  2591 ;;		On exit  : 0/0
  2592 ;;		Unchanged: 0/0
  2593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2594 ;;      Params:         2       0       0       0       0       0       0       0       0
  2595 ;;      Locals:         6       0       0       0       0       0       0       0       0
  2596 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2597 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2598 ;;Total ram usage:        8 bytes
  2599 ;; Hardware stack levels used: 1
  2600 ;; This function calls:
  2601 ;;		Nothing
  2602 ;; This function is called by:
  2603 ;;		_main
  2604 ;; This function uses a non-reentrant model
  2605 ;;
  2606                           
  2607                           	psect	text16
  2608   007CCE                     __ptext16:
  2609                           	callstack 0
  2610   007CCE                     _Clock_Init:
  2611                           	callstack 30
  2612   007CCE                     
  2613                           ;librerias/clock.c: 4:     CLK_ERROR_CODE returnCode = ERROR_CODE_OK;
  2614   007CCE  0E00               	movlw	0
  2615   007CD0  6E08               	movwf	Clock_Init@returnCode^0,c
  2616   007CD2                     
  2617                           ;librerias/clock.c: 5:     _Bool bItTimeEn = (0 >= s16Timeout) ? 0 : 1;
  2618   007CD2  BE02               	btfsc	(Clock_Init@s16Timeout+1)^0,7,c
  2619   007CD4  EF77  F03E         	goto	u790
  2620   007CD8  5002               	movf	(Clock_Init@s16Timeout+1)^0,w,c
  2621   007CDA  E106               	bnz	u791
  2622   007CDC  0401               	decf	Clock_Init@s16Timeout^0,w,c
  2623   007CDE  B0D8               	btfsc	status,0,c
  2624   007CE0  EF74  F03E         	goto	u791
  2625   007CE4  EF77  F03E         	goto	u790
  2626   007CE8                     u791:
  2627   007CE8  0E01               	movlw	1
  2628   007CEA  EF78  F03E         	goto	u800
  2629   007CEE                     u790:
  2630   007CEE  0E00               	movlw	0
  2631   007CF0                     u800:
  2632   007CF0  6E07               	movwf	Clock_Init@bItTimeEn^0,c
  2633   007CF2                     l144:
  2634                           
  2635                           ;librerias/clock.c: 10:             bStatus = OSCCON2bits.HFIOFR;
  2636   007CF2  B2D2               	btfsc	210,1,c	;volatile
  2637   007CF4  EF7E  F03E         	goto	u811
  2638   007CF8  EF81  F03E         	goto	u810
  2639   007CFC                     u811:
  2640   007CFC  0E01               	movlw	1
  2641   007CFE  EF82  F03E         	goto	u816
  2642   007D02                     u810:
  2643   007D02  0E00               	movlw	0
  2644   007D04                     u816:
  2645   007D04  6E03               	movwf	Clock_Init@bStatus^0,c
  2646   007D06                     
  2647                           ;librerias/clock.c: 11:             s16Timeout--;
  2648   007D06  0601               	decf	Clock_Init@s16Timeout^0,f,c
  2649   007D08  A0D8               	btfss	status,0,c
  2650   007D0A  0602               	decf	(Clock_Init@s16Timeout+1)^0,f,c
  2651   007D0C                     
  2652                           ;librerias/clock.c: 12:         }while((0 == bStatus) && ((0 < s16Timeout) || (0 == bItT
      +                          imeEn)));
  2653   007D0C  5003               	movf	Clock_Init@bStatus^0,w,c
  2654   007D0E  A4D8               	btfss	status,2,c
  2655   007D10  EF8C  F03E         	goto	u821
  2656   007D14  EF8E  F03E         	goto	u820
  2657   007D18                     u821:
  2658   007D18  EFA3  F03E         	goto	l1714
  2659   007D1C                     u820:
  2660   007D1C  BE02               	btfsc	(Clock_Init@s16Timeout+1)^0,7,c
  2661   007D1E  EF9B  F03E         	goto	u830
  2662   007D22  5002               	movf	(Clock_Init@s16Timeout+1)^0,w,c
  2663   007D24  E106               	bnz	u831
  2664   007D26  0401               	decf	Clock_Init@s16Timeout^0,w,c
  2665   007D28  B0D8               	btfsc	status,0,c
  2666   007D2A  EF99  F03E         	goto	u831
  2667   007D2E  EF9B  F03E         	goto	u830
  2668   007D32                     u831:
  2669   007D32  EF79  F03E         	goto	l144
  2670   007D36                     u830:
  2671   007D36  5007               	movf	Clock_Init@bItTimeEn^0,w,c
  2672   007D38  B4D8               	btfsc	status,2,c
  2673   007D3A  EFA1  F03E         	goto	u841
  2674   007D3E  EFA3  F03E         	goto	u840
  2675   007D42                     u841:
  2676   007D42  EF79  F03E         	goto	l144
  2677   007D46                     u840:
  2678   007D46                     l1714:
  2679                           
  2680                           ;librerias/clock.c: 13:         if (0 == bStatus){
  2681   007D46  5003               	movf	Clock_Init@bStatus^0,w,c
  2682   007D48  A4D8               	btfss	status,2,c
  2683   007D4A  EFA9  F03E         	goto	u851
  2684   007D4E  EFAB  F03E         	goto	u850
  2685   007D52                     u851:
  2686   007D52  EFAD  F03E         	goto	l143
  2687   007D56                     u850:
  2688   007D56                     
  2689                           ;librerias/clock.c: 14:             returnCode = ERROR_CODE_TIMEOUT;
  2690   007D56  0E01               	movlw	1
  2691   007D58  6E08               	movwf	Clock_Init@returnCode^0,c
  2692   007D5A                     l143:
  2693                           
  2694                           ;librerias/clock.c: 18:     if(ERROR_CODE_OK == returnCode){
  2695   007D5A  5008               	movf	Clock_Init@returnCode^0,w,c
  2696   007D5C  A4D8               	btfss	status,2,c
  2697   007D5E  EFB3  F03E         	goto	u861
  2698   007D62  EFB5  F03E         	goto	u860
  2699   007D66                     u861:
  2700   007D66  EFEC  F03E         	goto	l149
  2701   007D6A                     u860:
  2702   007D6A                     
  2703                           ;librerias/clock.c: 19:         OSCCON2bits.INTSRC = 1;
  2704   007D6A  8AD2               	bsf	210,5,c	;volatile
  2705   007D6C                     
  2706                           ;librerias/clock.c: 20:         OSCCONbits.IRCF = 7;
  2707   007D6C  0E70               	movlw	112
  2708   007D6E  12D3               	iorwf	211,f,c	;volatile
  2709   007D70                     l150:
  2710                           
  2711                           ;librerias/clock.c: 24:             bStatus = OSCCONbits.HFIOFS;
  2712   007D70  B4D3               	btfsc	211,2,c	;volatile
  2713   007D72  EFBD  F03E         	goto	u871
  2714   007D76  EFC0  F03E         	goto	u870
  2715   007D7A                     u871:
  2716   007D7A  0E01               	movlw	1
  2717   007D7C  EFC1  F03E         	goto	u876
  2718   007D80                     u870:
  2719   007D80  0E00               	movlw	0
  2720   007D82                     u876:
  2721   007D82  6E04               	movwf	Clock_Init@bStatus_555^0,c
  2722   007D84                     
  2723                           ;librerias/clock.c: 25:             s16Timeout--;
  2724   007D84  0601               	decf	Clock_Init@s16Timeout^0,f,c
  2725   007D86  A0D8               	btfss	status,0,c
  2726   007D88  0602               	decf	(Clock_Init@s16Timeout+1)^0,f,c
  2727   007D8A                     
  2728                           ;librerias/clock.c: 26:         }while((0 == bStatus) && ((0 < s16Timeout) || (0 == bItT
      +                          imeEn)));
  2729   007D8A  5004               	movf	Clock_Init@bStatus_555^0,w,c
  2730   007D8C  A4D8               	btfss	status,2,c
  2731   007D8E  EFCB  F03E         	goto	u881
  2732   007D92  EFCD  F03E         	goto	u880
  2733   007D96                     u881:
  2734   007D96  EFE2  F03E         	goto	l1730
  2735   007D9A                     u880:
  2736   007D9A  BE02               	btfsc	(Clock_Init@s16Timeout+1)^0,7,c
  2737   007D9C  EFDA  F03E         	goto	u890
  2738   007DA0  5002               	movf	(Clock_Init@s16Timeout+1)^0,w,c
  2739   007DA2  E106               	bnz	u891
  2740   007DA4  0401               	decf	Clock_Init@s16Timeout^0,w,c
  2741   007DA6  B0D8               	btfsc	status,0,c
  2742   007DA8  EFD8  F03E         	goto	u891
  2743   007DAC  EFDA  F03E         	goto	u890
  2744   007DB0                     u891:
  2745   007DB0  EFB8  F03E         	goto	l150
  2746   007DB4                     u890:
  2747   007DB4  5007               	movf	Clock_Init@bItTimeEn^0,w,c
  2748   007DB6  B4D8               	btfsc	status,2,c
  2749   007DB8  EFE0  F03E         	goto	u901
  2750   007DBC  EFE2  F03E         	goto	u900
  2751   007DC0                     u901:
  2752   007DC0  EFB8  F03E         	goto	l150
  2753   007DC4                     u900:
  2754   007DC4                     l1730:
  2755                           
  2756                           ;librerias/clock.c: 27:         if (0 == bStatus){
  2757   007DC4  5004               	movf	Clock_Init@bStatus_555^0,w,c
  2758   007DC6  A4D8               	btfss	status,2,c
  2759   007DC8  EFE8  F03E         	goto	u911
  2760   007DCC  EFEA  F03E         	goto	u910
  2761   007DD0                     u911:
  2762   007DD0  EFEC  F03E         	goto	l149
  2763   007DD4                     u910:
  2764   007DD4                     
  2765                           ;librerias/clock.c: 28:             returnCode = ERROR_CODE_TIMEOUT;
  2766   007DD4  0E01               	movlw	1
  2767   007DD6  6E08               	movwf	Clock_Init@returnCode^0,c
  2768   007DD8                     l149:
  2769                           
  2770                           ;librerias/clock.c: 32:     if(ERROR_CODE_OK == returnCode){
  2771   007DD8  5008               	movf	Clock_Init@returnCode^0,w,c
  2772   007DDA  A4D8               	btfss	status,2,c
  2773   007DDC  EFF2  F03E         	goto	u921
  2774   007DE0  EFF4  F03E         	goto	u920
  2775   007DE4                     u921:
  2776   007DE4  EF28  F03F         	goto	l155
  2777   007DE8                     u920:
  2778   007DE8                     l156:
  2779                           
  2780                           ;librerias/clock.c: 35:             bStatus = OSCCONbits.OSTS;
  2781   007DE8  B6D3               	btfsc	211,3,c	;volatile
  2782   007DEA  EFF9  F03E         	goto	u931
  2783   007DEE  EFFC  F03E         	goto	u930
  2784   007DF2                     u931:
  2785   007DF2  0E01               	movlw	1
  2786   007DF4  EFFD  F03E         	goto	u936
  2787   007DF8                     u930:
  2788   007DF8  0E00               	movlw	0
  2789   007DFA                     u936:
  2790   007DFA  6E05               	movwf	Clock_Init@bStatus_556^0,c
  2791   007DFC                     
  2792                           ;librerias/clock.c: 36:             s16Timeout--;
  2793   007DFC  0601               	decf	Clock_Init@s16Timeout^0,f,c
  2794   007DFE  A0D8               	btfss	status,0,c
  2795   007E00  0602               	decf	(Clock_Init@s16Timeout+1)^0,f,c
  2796   007E02                     
  2797                           ;librerias/clock.c: 37:         }while((0 == bStatus) && ((0 < s16Timeout) || (0 == bItT
      +                          imeEn)));
  2798   007E02  5005               	movf	Clock_Init@bStatus_556^0,w,c
  2799   007E04  A4D8               	btfss	status,2,c
  2800   007E06  EF07  F03F         	goto	u941
  2801   007E0A  EF09  F03F         	goto	u940
  2802   007E0E                     u941:
  2803   007E0E  EF1E  F03F         	goto	l1744
  2804   007E12                     u940:
  2805   007E12  BE02               	btfsc	(Clock_Init@s16Timeout+1)^0,7,c
  2806   007E14  EF16  F03F         	goto	u950
  2807   007E18  5002               	movf	(Clock_Init@s16Timeout+1)^0,w,c
  2808   007E1A  E106               	bnz	u951
  2809   007E1C  0401               	decf	Clock_Init@s16Timeout^0,w,c
  2810   007E1E  B0D8               	btfsc	status,0,c
  2811   007E20  EF14  F03F         	goto	u951
  2812   007E24  EF16  F03F         	goto	u950
  2813   007E28                     u951:
  2814   007E28  EFF4  F03E         	goto	l156
  2815   007E2C                     u950:
  2816   007E2C  5007               	movf	Clock_Init@bItTimeEn^0,w,c
  2817   007E2E  B4D8               	btfsc	status,2,c
  2818   007E30  EF1C  F03F         	goto	u961
  2819   007E34  EF1E  F03F         	goto	u960
  2820   007E38                     u961:
  2821   007E38  EFF4  F03E         	goto	l156
  2822   007E3C                     u960:
  2823   007E3C                     l1744:
  2824                           
  2825                           ;librerias/clock.c: 38:         if (0 == bStatus){
  2826   007E3C  5005               	movf	Clock_Init@bStatus_556^0,w,c
  2827   007E3E  A4D8               	btfss	status,2,c
  2828   007E40  EF24  F03F         	goto	u971
  2829   007E44  EF26  F03F         	goto	u970
  2830   007E48                     u971:
  2831   007E48  EF28  F03F         	goto	l155
  2832   007E4C                     u970:
  2833   007E4C                     
  2834                           ;librerias/clock.c: 39:             returnCode = ERROR_CODE_TIMEOUT;
  2835   007E4C  0E01               	movlw	1
  2836   007E4E  6E08               	movwf	Clock_Init@returnCode^0,c
  2837   007E50                     l155:
  2838                           
  2839                           ;librerias/clock.c: 42:         if(ERROR_CODE_OK == returnCode){
  2840   007E50  5008               	movf	Clock_Init@returnCode^0,w,c
  2841   007E52  A4D8               	btfss	status,2,c
  2842   007E54  EF2E  F03F         	goto	u981
  2843   007E58  EF30  F03F         	goto	u980
  2844   007E5C                     u981:
  2845   007E5C  EF66  F03F         	goto	l161
  2846   007E60                     u980:
  2847   007E60                     
  2848                           ;librerias/clock.c: 43:         OSCTUNEbits.SPLLMULT = 1;
  2849   007E60  8E9B               	bsf	155,7,c	;volatile
  2850                           
  2851                           ;librerias/clock.c: 44:         OSCCON2bits.PLLEN = 1;
  2852   007E62  88D2               	bsf	210,4,c	;volatile
  2853   007E64                     l162:
  2854                           
  2855                           ;librerias/clock.c: 47:             bStatus = OSCCON2bits.PLLRDY;
  2856   007E64  BED2               	btfsc	210,7,c	;volatile
  2857   007E66  EF37  F03F         	goto	u991
  2858   007E6A  EF3A  F03F         	goto	u990
  2859   007E6E                     u991:
  2860   007E6E  0E01               	movlw	1
  2861   007E70  EF3B  F03F         	goto	u996
  2862   007E74                     u990:
  2863   007E74  0E00               	movlw	0
  2864   007E76                     u996:
  2865   007E76  6E06               	movwf	Clock_Init@bStatus_559^0,c
  2866   007E78                     
  2867                           ;librerias/clock.c: 48:             s16Timeout--;
  2868   007E78  0601               	decf	Clock_Init@s16Timeout^0,f,c
  2869   007E7A  A0D8               	btfss	status,0,c
  2870   007E7C  0602               	decf	(Clock_Init@s16Timeout+1)^0,f,c
  2871   007E7E                     
  2872                           ;librerias/clock.c: 49:         }while((0 == bStatus) && ((0 < s16Timeout) || (0 == bItT
      +                          imeEn)));
  2873   007E7E  5006               	movf	Clock_Init@bStatus_559^0,w,c
  2874   007E80  A4D8               	btfss	status,2,c
  2875   007E82  EF45  F03F         	goto	u1001
  2876   007E86  EF47  F03F         	goto	u1000
  2877   007E8A                     u1001:
  2878   007E8A  EF5C  F03F         	goto	l1760
  2879   007E8E                     u1000:
  2880   007E8E  BE02               	btfsc	(Clock_Init@s16Timeout+1)^0,7,c
  2881   007E90  EF54  F03F         	goto	u1010
  2882   007E94  5002               	movf	(Clock_Init@s16Timeout+1)^0,w,c
  2883   007E96  E106               	bnz	u1011
  2884   007E98  0401               	decf	Clock_Init@s16Timeout^0,w,c
  2885   007E9A  B0D8               	btfsc	status,0,c
  2886   007E9C  EF52  F03F         	goto	u1011
  2887   007EA0  EF54  F03F         	goto	u1010
  2888   007EA4                     u1011:
  2889   007EA4  EF32  F03F         	goto	l162
  2890   007EA8                     u1010:
  2891   007EA8  5007               	movf	Clock_Init@bItTimeEn^0,w,c
  2892   007EAA  B4D8               	btfsc	status,2,c
  2893   007EAC  EF5A  F03F         	goto	u1021
  2894   007EB0  EF5C  F03F         	goto	u1020
  2895   007EB4                     u1021:
  2896   007EB4  EF32  F03F         	goto	l162
  2897   007EB8                     u1020:
  2898   007EB8                     l1760:
  2899                           
  2900                           ;librerias/clock.c: 50:         if (0 == bStatus){
  2901   007EB8  5006               	movf	Clock_Init@bStatus_559^0,w,c
  2902   007EBA  A4D8               	btfss	status,2,c
  2903   007EBC  EF62  F03F         	goto	u1031
  2904   007EC0  EF64  F03F         	goto	u1030
  2905   007EC4                     u1031:
  2906   007EC4  EF66  F03F         	goto	l161
  2907   007EC8                     u1030:
  2908   007EC8                     
  2909                           ;librerias/clock.c: 51:             returnCode = ERROR_CODE_TIMEOUT;
  2910   007EC8  0E01               	movlw	1
  2911   007ECA  6E08               	movwf	Clock_Init@returnCode^0,c
  2912   007ECC                     l161:
  2913                           
  2914                           ;librerias/clock.c: 56:     if(ERROR_CODE_OK == returnCode){
  2915   007ECC  5008               	movf	Clock_Init@returnCode^0,w,c
  2916   007ECE  A4D8               	btfss	status,2,c
  2917   007ED0  EF6C  F03F         	goto	u1041
  2918   007ED4  EF6E  F03F         	goto	u1040
  2919   007ED8                     u1041:
  2920   007ED8  EF71  F03F         	goto	l168
  2921   007EDC                     u1040:
  2922   007EDC                     
  2923                           ;librerias/clock.c: 57:         OSCCON2bits.PRISD = 0;
  2924   007EDC  94D2               	bcf	210,2,c	;volatile
  2925   007EDE                     
  2926                           ;librerias/clock.c: 58:         OSCCONbits.SCS = 0;
  2927   007EDE  0EFC               	movlw	-4
  2928   007EE0  16D3               	andwf	211,f,c	;volatile
  2929   007EE2                     l168:
  2930   007EE2  0012               	return		;funcret
  2931   007EE4                     __end_of_Clock_Init:
  2932                           	callstack 0
  2933                           
  2934                           	psect	rparam
  2935   000000                     
  2936                           	psect	config
  2937                           
  2938                           ;Config register CONFIG1L @ 0x300000
  2939                           ;	PLL Selection
  2940                           ;	PLLSEL = PLL3X, 3x clock multiplier
  2941                           ;	PLL Enable Configuration bit
  2942                           ;	CFGPLLEN = ON, PLL Enabled
  2943                           ;	CPU System Clock Postscaler
  2944                           ;	CPUDIV = NOCLKDIV, CPU uses system clock (no divide)
  2945                           ;	Low Speed USB mode with 48 MHz system clock
  2946                           ;	LS48MHZ = SYS48X8, System clock at 48 MHz, USB clock divider is set to 8
  2947   300000                     	org	3145728
  2948   300000  23                 	db	35
  2949                           
  2950                           ;Config register CONFIG1H @ 0x300001
  2951                           ;	Oscillator Selection
  2952                           ;	FOSC = INTOSCCLKO, Internal oscillator, clock output on OSC2
  2953                           ;	Primary Oscillator Shutdown
  2954                           ;	PCLKEN = OFF, Primary oscillator shutdown firmware controlled
  2955                           ;	Fail-Safe Clock Monitor
  2956                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2957                           ;	Internal/External Oscillator Switchover
  2958                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2959   300001                     	org	3145729
  2960   300001  09                 	db	9
  2961                           
  2962                           ;Config register CONFIG2L @ 0x300002
  2963                           ;	Power-up Timer Enable
  2964                           ;	nPWRTEN = OFF, Power up timer disabled
  2965                           ;	Brown-out Reset Enable
  2966                           ;	BOREN = SBORDIS, BOR enabled in hardware (SBOREN is ignored)
  2967                           ;	Brown-out Reset Voltage
  2968                           ;	BORV = 190, BOR set to 1.9V nominal
  2969                           ;	Low-Power Brown-out Reset
  2970                           ;	nLPBOR = OFF, Low-Power Brown-out Reset disabled
  2971   300002                     	org	3145730
  2972   300002  5F                 	db	95
  2973                           
  2974                           ;Config register CONFIG2H @ 0x300003
  2975                           ;	Watchdog Timer Enable bits
  2976                           ;	WDTEN = OFF, WDT disabled in hardware (SWDTEN ignored)
  2977                           ;	Watchdog Timer Postscaler
  2978                           ;	WDTPS = 32768, 1:32768
  2979   300003                     	org	3145731
  2980   300003  3C                 	db	60
  2981                           
  2982                           ; Padding undefined space
  2983   300004                     	org	3145732
  2984   300004  FF                 	db	255
  2985                           
  2986                           ;Config register CONFIG3H @ 0x300005
  2987                           ;	CCP2 MUX bit
  2988                           ;	CCP2MX = RC1, CCP2 input/output is multiplexed with RC1
  2989                           ;	PORTB A/D Enable bit
  2990                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  2991                           ;	Timer3 Clock Input MUX bit
  2992                           ;	T3CMX = RC0, T3CKI function is on RC0
  2993                           ;	SDO Output MUX bit
  2994                           ;	SDOMX = RB3, SDO function is on RB3
  2995                           ;	Master Clear Reset Pin Enable
  2996                           ;	MCLRE = ON, MCLR pin enabled; RE3 input disabled
  2997   300005                     	org	3145733
  2998   300005  D3                 	db	211
  2999                           
  3000                           ;Config register CONFIG4L @ 0x300006
  3001                           ;	Stack Full/Underflow Reset
  3002                           ;	STVREN = ON, Stack full/underflow will cause Reset
  3003                           ;	Single-Supply ICSP Enable bit
  3004                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
  3005                           ;	Dedicated In-Circuit Debug/Programming Port Enable
  3006                           ;	ICPRT = OFF, ICPORT disabled
  3007                           ;	Extended Instruction Set Enable bit
  3008                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled
  3009                           ;	Background Debugger Enable bit
  3010                           ;	DEBUG = 0x1, unprogrammed default
  3011   300006                     	org	3145734
  3012   300006  85                 	db	133
  3013                           
  3014                           ; Padding undefined space
  3015   300007                     	org	3145735
  3016   300007  FF                 	db	255
  3017                           
  3018                           ;Config register CONFIG5L @ 0x300008
  3019                           ;	Block 0 Code Protect
  3020                           ;	CP0 = OFF, Block 0 is not code-protected
  3021                           ;	Block 1 Code Protect
  3022                           ;	CP1 = OFF, Block 1 is not code-protected
  3023                           ;	Block 2 Code Protect
  3024                           ;	CP2 = OFF, Block 2 is not code-protected
  3025                           ;	Block 3 Code Protect
  3026                           ;	CP3 = OFF, Block 3 is not code-protected
  3027   300008                     	org	3145736
  3028   300008  0F                 	db	15
  3029                           
  3030                           ;Config register CONFIG5H @ 0x300009
  3031                           ;	Boot Block Code Protect
  3032                           ;	CPB = OFF, Boot block is not code-protected
  3033                           ;	Data EEPROM Code Protect
  3034                           ;	CPD = OFF, Data EEPROM is not code-protected
  3035   300009                     	org	3145737
  3036   300009  C0                 	db	192
  3037                           
  3038                           ;Config register CONFIG6L @ 0x30000A
  3039                           ;	Block 0 Write Protect
  3040                           ;	WRT0 = OFF, Block 0 (0800-1FFFh) is not write-protected
  3041                           ;	Block 1 Write Protect
  3042                           ;	WRT1 = OFF, Block 1 (2000-3FFFh) is not write-protected
  3043                           ;	Block 2 Write Protect
  3044                           ;	WRT2 = OFF, Block 2 (04000-5FFFh) is not write-protected
  3045                           ;	Block 3 Write Protect
  3046                           ;	WRT3 = OFF, Block 3 (06000-7FFFh) is not write-protected
  3047   30000A                     	org	3145738
  3048   30000A  0F                 	db	15
  3049                           
  3050                           ;Config register CONFIG6H @ 0x30000B
  3051                           ;	Configuration Registers Write Protect
  3052                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  3053                           ;	Boot Block Write Protect
  3054                           ;	WRTB = OFF, Boot block (0000-7FFh) is not write-protected
  3055                           ;	Data EEPROM Write Protect
  3056                           ;	WRTD = OFF, Data EEPROM is not write-protected
  3057   30000B                     	org	3145739
  3058   30000B  E0                 	db	224
  3059                           
  3060                           ;Config register CONFIG7L @ 0x30000C
  3061                           ;	Block 0 Table Read Protect
  3062                           ;	EBTR0 = OFF, Block 0 is not protected from table reads executed in other blocks
  3063                           ;	Block 1 Table Read Protect
  3064                           ;	EBTR1 = OFF, Block 1 is not protected from table reads executed in other blocks
  3065                           ;	Block 2 Table Read Protect
  3066                           ;	EBTR2 = OFF, Block 2 is not protected from table reads executed in other blocks
  3067                           ;	Block 3 Table Read Protect
  3068                           ;	EBTR3 = OFF, Block 3 is not protected from table reads executed in other blocks
  3069   30000C                     	org	3145740
  3070   30000C  0F                 	db	15
  3071                           
  3072                           ;Config register CONFIG7H @ 0x30000D
  3073                           ;	Boot Block Table Read Protect
  3074                           ;	EBTRB = OFF, Boot block is not protected from table reads executed in other blocks
  3075   30000D                     	org	3145741
  3076   30000D  40                 	db	64
  3077                           tosu	equ	0xFFF
  3078                           tosh	equ	0xFFE
  3079                           tosl	equ	0xFFD
  3080                           stkptr	equ	0xFFC
  3081                           pclatu	equ	0xFFB
  3082                           pclath	equ	0xFFA
  3083                           pcl	equ	0xFF9
  3084                           tblptru	equ	0xFF8
  3085                           tblptrh	equ	0xFF7
  3086                           tblptrl	equ	0xFF6
  3087                           tablat	equ	0xFF5
  3088                           prodh	equ	0xFF4
  3089                           prodl	equ	0xFF3
  3090                           indf0	equ	0xFEF
  3091                           postinc0	equ	0xFEE
  3092                           postdec0	equ	0xFED
  3093                           preinc0	equ	0xFEC
  3094                           plusw0	equ	0xFEB
  3095                           fsr0h	equ	0xFEA
  3096                           fsr0l	equ	0xFE9
  3097                           wreg	equ	0xFE8
  3098                           indf1	equ	0xFE7
  3099                           postinc1	equ	0xFE6
  3100                           postdec1	equ	0xFE5
  3101                           preinc1	equ	0xFE4
  3102                           plusw1	equ	0xFE3
  3103                           fsr1h	equ	0xFE2
  3104                           fsr1l	equ	0xFE1
  3105                           bsr	equ	0xFE0
  3106                           indf2	equ	0xFDF
  3107                           postinc2	equ	0xFDE
  3108                           postdec2	equ	0xFDD
  3109                           preinc2	equ	0xFDC
  3110                           plusw2	equ	0xFDB
  3111                           fsr2h	equ	0xFDA
  3112                           fsr2l	equ	0xFD9
  3113                           status	equ	0xFD8

Data Sizes:
    Strings     282
    Constant    0
    Data        0
    BSS         39
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     54      93
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    printf@fmt	PTR const unsigned char  size(3) Largest target is 32767
		 -> ROM(CODE[32767]), STR_1(CODE[5]), STR_10(CODE[13]), STR_11(CODE[9]), 
		 -> STR_12(CODE[14]), STR_13(CODE[17]), STR_14(CODE[10]), STR_15(CODE[14]), 
		 -> STR_16(CODE[17]), STR_17(CODE[11]), STR_18(CODE[14]), STR_19(CODE[17]), 
		 -> STR_2(CODE[7]), STR_20(CODE[8]), STR_21(CODE[25]), STR_22(CODE[24]), 
		 -> STR_23(CODE[26]), STR_24(CODE[8]), STR_25(CODE[28]), STR_3(CODE[10]), 
		 -> STR_4(CODE[11]), STR_5(CODE[18]), STR_6(CODE[18]), STR_7(CODE[11]), 
		 -> STR_8(CODE[9]), STR_9(CODE[8]), 

    S1190$buffer	PTR unsigned char  size(2) Largest target is 0

    S1190$source	PTR const unsigned char  size(2) Largest target is 0

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(3) Largest target is 32767
		 -> ROM(CODE[32767]), STR_1(CODE[5]), STR_10(CODE[13]), STR_11(CODE[9]), 
		 -> STR_12(CODE[14]), STR_13(CODE[17]), STR_14(CODE[10]), STR_15(CODE[14]), 
		 -> STR_16(CODE[17]), STR_17(CODE[11]), STR_18(CODE[14]), STR_19(CODE[17]), 
		 -> STR_2(CODE[7]), STR_20(CODE[8]), STR_21(CODE[25]), STR_22(CODE[24]), 
		 -> STR_23(CODE[26]), STR_24(CODE[8]), STR_25(CODE[28]), STR_3(CODE[10]), 
		 -> STR_4(CODE[11]), STR_5(CODE[18]), STR_6(CODE[18]), STR_7(CODE[11]), 
		 -> STR_8(CODE[9]), STR_9(CODE[8]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 3
		 -> vfprintf@cfmt(COMRAM[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(3) Largest target is 32767
		 -> ROM(CODE[32767]), STR_1(CODE[5]), STR_10(CODE[13]), STR_11(CODE[9]), 
		 -> STR_12(CODE[14]), STR_13(CODE[17]), STR_14(CODE[10]), STR_15(CODE[14]), 
		 -> STR_16(CODE[17]), STR_17(CODE[11]), STR_18(CODE[14]), STR_19(CODE[17]), 
		 -> STR_2(CODE[7]), STR_20(CODE[8]), STR_21(CODE[25]), STR_22(CODE[24]), 
		 -> STR_23(CODE[26]), STR_24(CODE[8]), STR_25(CODE[28]), STR_3(CODE[10]), 
		 -> STR_4(CODE[11]), STR_5(CODE[18]), STR_6(CODE[18]), STR_7(CODE[11]), 
		 -> STR_8(CODE[9]), STR_9(CODE[8]), 

    vfprintf@fmt	PTR const unsigned char  size(3) Largest target is 32767
		 -> ROM(CODE[32767]), STR_1(CODE[5]), STR_10(CODE[13]), STR_11(CODE[9]), 
		 -> STR_12(CODE[14]), STR_13(CODE[17]), STR_14(CODE[10]), STR_15(CODE[14]), 
		 -> STR_16(CODE[17]), STR_17(CODE[11]), STR_18(CODE[14]), STR_19(CODE[17]), 
		 -> STR_2(CODE[7]), STR_20(CODE[8]), STR_21(CODE[25]), STR_22(CODE[24]), 
		 -> STR_23(CODE[26]), STR_24(CODE[8]), STR_25(CODE[28]), STR_3(CODE[10]), 
		 -> STR_4(CODE[11]), STR_5(CODE[18]), STR_6(CODE[18]), STR_7(CODE[11]), 
		 -> STR_8(CODE[9]), STR_9(CODE[8]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _UART_config_show->_printf
    _SPI_master_init->_SPI_BaudRateGen
    _SPI_BaudRateGen->_SPI_ErrorHandler
    _SPI_ErrorHandler->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_fputc
    _fputc->_putch
    _putch->_UART_Tx

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   12630
                                             51 COMRAM     3     3      0
                         _Clock_Init
                    _SPI_master_init
                           _SPI_read
                          _SPI_write
                          _UART_Init
                             _printf
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            4     0      4    3928
                                             36 COMRAM     4     0      4
                   _UART_config_show
                   _UART_select_baud
 ---------------------------------------------------------------------------------
 (2) _UART_select_baud                                     8     4      4      98
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _UART_config_show                                     0     0      0    3732
                             _printf
 ---------------------------------------------------------------------------------
 (1) _SPI_write                                            1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SPI_read                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SPI_master_init                                      0     0      0    4371
                    _SPI_BaudRateGen
 ---------------------------------------------------------------------------------
 (2) _SPI_BaudRateGen                                     12     8      4    4371
                                             39 COMRAM    12     8      4
                   _SPI_ErrorHandler
                            ___aldiv
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8     452
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (3) _SPI_ErrorHandler                                     3     3      0    3776
                                             36 COMRAM     3     3      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                               6     3      3    3732
                                             32 COMRAM     4     1      3
                           _SPI_read (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             9     3      6    1702
                                             23 COMRAM     9     3      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           14    10      4    1349
                                             11 COMRAM    12     8      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     812
                                              2 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      30
                                              1 COMRAM     1     1      0
                            _UART_Tx
 ---------------------------------------------------------------------------------
 (6) _UART_Tx                                              1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Clock_Init                                           8     6      2     584
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Clock_Init
   _SPI_master_init
     _SPI_BaudRateGen
       _SPI_ErrorHandler
         _printf
           _SPI_read (ARG)
           _vfprintf (ARG)
             _vfpfcnvrt
               _fputc
                 _putch
                   _UART_Tx
       ___aldiv
   _SPI_read
   _SPI_write
   _UART_Init
     _UART_config_show
       _printf
     _UART_select_baud
   _printf

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      30        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     36      5D       1       97.9%
BITBIGSFRlll        3F      0       0      28        0.0%
BITBIGSFRhhh        2C      0       0      20        0.0%
BITBIGSFRhhll        D      0       0      23        0.0%
BITBIGSFRlhh         C      0       0      25        0.0%
BITBIGSFRhhlhh       8      0       0      21        0.0%
BITBIGSFRhlh         7      0       0      24        0.0%
BITBIGSFRlhll        6      0       0      27        0.0%
BITBIGSFRlhlh        2      0       0      26        0.0%
BITBIGSFRhhlhl       1      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      5D      29        0.0%
DATA                 0      0      5D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Mon Sep 16 15:01:41 2024

                       l17 752A                         l18 752A                         l82 7C24  
                       l74 7B66                         l91 7CCC                         l86 7C78  
                       l78 7BBA                         l94 7444                         u10 73DE  
                       u11 73DA                        l110 73D0                        l113 73E2  
                      l107 7940                        l116 73CC                        l205 73C2  
                      l150 7D70                        l310 7800                        l143 7D5A  
                      l144 7CF2                        l224 75A6                        l208 73BA  
                      l161 7ECC                        l162 7E64                        l155 7E50  
                      l156 7DE8                        l149 7DD8                        l168 7EE2  
                      l193 7470                        l196 7626                        l197 762A  
                      l909 741A                        l946 74CE                        l939 7AD2  
                      l974 73D0                        l958 76F4                        l976 73DE  
                      l978 73C6           ?_SPI_BaudRateGen 0028                        u600 7974  
                      u601 7970                        u610 79C4                        u611 79C0  
                      u620 7A4E                        u700 77E0                        u621 7A4A  
                      u701 77DC                        u630 74C6                        u710 7AF8  
                      u631 74C2                        u711 7AF4                        u800 7CF0  
                      u560 763E                        u640 7544                        u720 7B36  
                      u561 763A                        u641 7540                        u721 7B32  
                      u810 7D02                        u570 7650                        u650 7708  
                      u730 7B8A                        u811 7CFC                        u571 764C  
                      u651 7704                        u731 7B86                        u900 7DC4  
                      u820 7D1C                        u580 7678                        u660 772A  
                      u740 7BF4                        u901 7DC0                        u821 7D18  
                      u581 7674                        u661 7726                        u741 7BF0  
                      u910 7DD4                        u830 7D36                        u590 76AE  
                      u670 7764                        u750 7C48                        u911 7DD0  
                      u831 7D32                        u591 76AA                        u671 7760  
                      u751 7C44                        u920 7DE8                        u840 7D46  
                      u816 7D04                        u680 7786                        u760 7C9C  
                      u921 7DE4                        u841 7D42                        u681 7782  
                      u761 7C98                        u930 7DF8                        u850 7D56  
                      u690 77AE                        u931 7DF2                        u851 7D52  
                      u691 77AA                        u940 7E12                        u860 7D6A  
                      u780 761C                        u941 7E0E                        u861 7D66  
                      u781 7618                        u950 7E2C                        u870 7D80  
                      u790 7CEE                        u951 7E28                        u871 7D7A  
                      u791 7CE8                        u775 75CA                        u960 7E3C  
                      u936 7DFA                        u880 7D9A                        u961 7E38  
                      u881 7D96                        u970 7E4C                        u890 7DB4  
                      u971 7E48                        u891 7DB0                        u980 7E60  
                      u876 7D82                        u981 7E5C                        u990 7E74  
                      u991 7E6E                        u996 7E76                        wreg 0FE8  
               _TXSTA1bits 0FAC                       l1330 73BE                       l1332 73B8  
                     l1504 7A8E                       l1520 74C6                       l1512 7472  
                     l1600 7B36                       l1506 7AC0                       l1514 747E  
                     l1530 7534                       l1610 7BE6                       l1602 7B50  
                     l1700 7CD2                       l1460 765A                       l1516 748A  
                     l1524 73FA                       l1540 757C                       l1620 7C62  
                     l1612 7BF4                       l1604 7B7C                       l1710 7D1C  
                     l1702 7CF2                       l1462 7678                       l1454 762C  
                     l1470 7974                       l1518 74A6                       l1526 73FE  
                     l1534 7548                       l1550 7708                       l1622 7C8E  
                     l1614 7C0E                       l1606 7B8A                       l1630 7806  
                     l1720 7D6C                       l1712 7D36                       l1704 7CF2  
                     l1464 76AE                       l1456 763E                       l1480 79C4  
                     l1472 7982                       l1536 7562                       l1560 773E  
                     l1552 7718                       l1800 746C                       l1624 7C9C  
                     l1616 7C3A                       l1608 7BA4                       l1640 7842  
                     l1632 7812                       l1730 7DC4                       l1722 7D84  
                     l1714 7D46                       l1706 7D06                       l1458 7650  
                     l1490 7A4E                       l1482 79E0                       l1474 798E  
                     l1570 7786                       l1562 774E                       l1554 771C  
                     l1546 76F6                       l1802 746E                       l1626 7CB6  
                     l1618 7C48                       l1642 784E                       l1634 781E  
                     l1810 74F4                       l1740 7E12                       l1732 7DD4  
                     l1724 7D8A                       l1716 7D56                       l1708 7D0C  
                     l1492 7A5C                       l1484 7A10                       l1476 7992  
                     l1468 7942                       l1580 77CA                       l1572 7790  
                     l1564 7764                       l1556 772A                       l1548 76FA  
                     l1900 790E                       l1644 785A                       l1636 782A  
                     l1628 7802                       l1812 74FA                       l1804 74D0  
                     l1750 7E64                       l1742 7E2C                       l1734 7DE8  
                     l1726 7D9A                       l1718 7D6A                       l1494 7A70  
                     l1478 79A4                       l1574 77AE                       l1566 776C  
                     l1582 77D0                       l1558 773A                       l1590 7AD4  
                     l1910 78E4                       l1902 792A                       l1638 7836  
                     l1814 7510                       l1806 74DC                       l1760 7EB8  
                     l1752 7E78                       l1744 7E3C                       l1736 7DFC  
                     l1728 7DB4                       l1488 7A1C                       l1584 77E0  
                     l1576 77BE                       l1568 7778                       l1592 7AEA  
                     l1912 78F2                       l1904 78BA                       l1648 7866  
                     l1808 74F0                       l1762 7EC8                       l1754 7E7E  
                     l1746 7E4C                       l1738 7E02                       l1498 7A7C  
                     l1586 77F0                       l1578 77C0                       l1690 75A8  
                     l1594 7AF8                       l1914 7900                       l1906 78C8  
                     l1770 741C                       l1764 7EDC                       l1756 7E8E  
                     l1748 7E60                       l1692 7606                       l1596 7B12  
                     l1916 791C                       l1908 78D6                       l1780 743C  
                     l1772 7422                       l1766 7EDE                       l1758 7EA8  
                     l1918 7590                       l1694 761C                       l1790 745C  
                     l1598 7B28                       l1782 743E                       l1774 7436  
                     l1792 745E                       l1784 7440                       l1776 7438  
                     l1698 7CCE                       l1794 7460                       l1786 7446  
                     l1778 743A                       l1796 7462                       l1788 745A  
                     l1798 746A                       l1898 7884                       STR_1 7FFA  
                     STR_2 7FF3                       STR_3 7FC7                       STR_4 7FB2  
                     STR_5 7F5E                       STR_6 7F4C                       STR_7 7F9C  
                     STR_8 7FDA                       STR_9 7FEB                       u1000 7E8E  
                     _CREN 7D5C                       u1001 7E8A                       u1010 7EA8  
                     u1011 7EA4                       u1020 7EB8                       u1021 7EB4  
                     u1030 7EC8                       u1031 7EC4                       u1040 7EDC  
                     u1041 7ED8                       _SPEN 7D5F                       _TRMT 7D61  
          __end_of_UART_Tx 73E4                       _dbuf 0037                       _main 74D0  
                     _prec 005B                       _nout 0057                       fsr1h 0FE2  
                     fsr2h 0FDA                       indf2 0FDF                       fsr1l 0FE1  
                     fsr2l 0FD9                       start 0000               ___param_bank 0000  
 UART_select_baud@baudrate 0001                 _Clock_Init 7CCE               _BAUDCON1bits 0FB8  
          __end_of___aldiv 7802                      ?_main 0001                      STR_10 7F8F  
                    STR_11 7FD1                      STR_20 7FE3                      STR_12 7F81  
                    STR_13 7F70                      STR_21 7F1B                      STR_14 7FBD  
                    STR_22 7F34                      STR_15 7F81                      STR_23 7F01  
                    STR_16 7F70                      STR_24 7FE3                      STR_17 7FA7  
                    STR_25 7EE5                      STR_18 7F81                      STR_19 7F70  
                    _BRGH1 7D62                      _RC1IF 7CF5                      _RCREG 0FAE  
        Clock_Init@bStatus 0003               vfpfcnvrt@fmt 000E           _UART_config_show 7AD4  
                    _SPBRG 0FAF                      _SSPEN 7E35                      _TXEN1 7D65  
                    _SYNC1 7D64                      _flags 005D                      _fputc 762C  
                    _width 0059                      _putch 73C4                      tablat 0FF5  
         __end_of_SPI_read 73BC                      status 0FD8            __initialization 73E4  
             __end_of_main 7532                     ??_main 0034              __activetblptr 0002  
                ??_UART_Tx 0001                     ?_fputc 0003                     _BRG161 7DC3  
                   ?_putch 0001                     _RCREG1 0FAE                     _SPBRGH 0FB0  
                   _TRISC6 7CA6                     _TRISC7 7CA7                     _SSPBUF 0FC9  
                   _TXREG1 0FAD               vfprintf@cfmt 001E          __end_of_UART_Init 7446  
                ??___aldiv 0009                ?_Clock_Init 0001                     clear_0 73EA  
                   isa$std 0001                     _printf 73FA   __end_of_SPI_ErrorHandler 75A8  
                   fputc@c 0003               __mediumconst 7EE4                     tblptrh 0FF7  
                   tblptrl 0FF6                     tblptru 0FF8          __end_of_SPI_write 73C4  
         __end_of_vfprintf 74D0                 __accesstop 0060    __end_of__initialization 73F0  
            ___rparam_used 0001           _UART_select_baud 7802             __pcstackCOMRAM 0001  
            __end_of_fputc 76F6              __end_of_putch 73CE                  ?_SPI_read 0001  
                  ??_fputc 0007          ??_SPI_master_init 0034                    ??_putch 0002  
 __end_of_UART_config_show 7CCE        Clock_Init@bItTimeEn 0007                    ?_printf 0021  
               ??_SPI_read 0001                    _SSP1ADD 0FC8                    _UART_Tx 73CE  
                  __Hparam 0000                    __Lparam 0000                    ___aldiv 76F6  
                ?_vfprintf 0018                    __pcinit 73E4                    __ramtop 0800  
                  __ptext0 74D0                    __ptext1 741C                    __ptext2 7802  
                  __ptext3 7AD4                    __ptext4 73BC                    __ptext5 73B8  
                  __ptext6 7446                    __ptext7 75A8                    __ptext8 76F6  
                  __ptext9 7532                UART_Tx@dato 0001           ___aldiv@dividend 0001  
     end_of_initialization 73F0                    fputc@fp 0005              __Lmediumconst 7EE4  
    Clock_Init@bStatus_555 0004      Clock_Init@bStatus_556 0005      Clock_Init@bStatus_559 0006  
        __end_of_vfpfcnvrt 7AD4                  _RCSTAbits 0FAB           ___aldiv@quotient 000B  
                  postdec2 0FDD                    postinc0 0FEE                    postinc1 0FE6  
                  postinc2 0FDE               ??_Clock_Init 0003                 ??_vfprintf 001E  
                _UART_Init 741C          ?_SPI_ErrorHandler 0001                  _TRISAbits 0F92  
                _TRISBbits 0F93   __end_of_UART_select_baud 7942         ??_SPI_ErrorHandler 0025  
                _SPI_write 73BC         __end_of_Clock_Init 7EE4                  _TXSTAbits 0FAC  
        ??_SPI_BaudRateGen 002C                vfpfcnvrt@ap 000F                vfpfcnvrt@cp 0015  
              vfpfcnvrt@fp 000C                 ?_UART_Init 0025            _SPI_master_init 7446  
           __end_of_printf 741C        start_initialization 73E4     SPI_BaudRateGen@baudReg 0030  
SPI_ErrorHandler@errorCode 0027       Clock_Init@s16Timeout 0001                 ?_SPI_write 0001  
        ?_UART_config_show 0001                vfprintf@fmt 001A         ??_UART_config_show 0025  
                 ??_printf 0024                __pbssCOMRAM 0037                   ?_UART_Tx 0001  
            SPI_write@dato 0001    __end_of_SPI_master_init 7472              __pmediumconst 7EE4  
                 ?___aldiv 0001                ??_UART_Init 0029                ??_SPI_write 0001  
          ___aldiv@divisor 0005            ___aldiv@counter 0009                  _vfpfcnvrt 7942  
        UART_Init@baudrate 0025                   _SPI_read 73B8      SPI_BaudRateGen@FClock 0028  
        ?_UART_select_baud 0001            _SPI_BaudRateGen 75A8         ??_UART_select_baud 0005  
                 __Hrparam 0000                 vfprintf@ap 001D                   __Lrparam 0000  
               vfprintf@fp 0018           ?_SPI_master_init 0001                 ?_vfpfcnvrt 000C  
                 __ptext10 73FA                   __ptext11 7472                   __ptext12 7942  
                 __ptext13 762C                   __ptext14 73C4                   __ptext15 73CE  
                 __ptext16 7CCE                _OSCCON2bits 0FD2                   isa$xinst 0000  
                 _vfprintf 7472                  printf@fmt 0021    __end_of_SPI_BaudRateGen 762C  
                putch@data 0002                _OSCTUNEbits 0F9B                 _OSCCONbits 0FD3  
                 printf@ap 0024                ??_vfpfcnvrt 0010       Clock_Init@returnCode 0008  
             ___aldiv@sign 000A                _SSPCON1bits 0FC6           _SPI_ErrorHandler 7532  
