

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Sat Sep 21 19:39:07 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F45K50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    31                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    32                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    33   000000                     
    34                           ; Generated 12/10/2023 GMT
    35                           ; 
    36                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution. Publication is not required when
    50                           ;        this file is used in an embedded application.
    51                           ; 
    52                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    53                           ;        software without specific prior written permission.
    54                           ; 
    55                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    56                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    57                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    58                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    59                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    60                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    61                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    62                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    63                           ; 
    64                           ; 
    65                           ; Code-generator required, PIC18F45K50 Definitions
    66                           ; 
    67                           ; SFR Addresses
    68   000000                     _TRISBbits	set	3987
    69   000000                     _RCREG	set	4014
    70   000000                     _TXREG1	set	4013
    71   000000                     _SPBRG	set	4015
    72   000000                     _SPBRGH	set	4016
    73   000000                     _TRISC6	set	31910
    74   000000                     _SPEN	set	32095
    75   000000                     _BRG161	set	32195
    76   000000                     _SYNC1	set	32100
    77   000000                     _PIR1bits	set	3998
    78   000000                     _SSP1BUF	set	4041
    79   000000                     _SSPCON1bits	set	4038
    80   000000                     _TRISAbits	set	3986
    81   000000                     _RCREG1	set	4014
    82   000000                     _TXSTAbits	set	4012
    83   000000                     _RCSTAbits	set	4011
    84   000000                     _BAUDCON1bits	set	4024
    85   000000                     _TXSTA1bits	set	4012
    86   000000                     _WCOL	set	32311
    87   000000                     _SSPIF	set	31987
    88   000000                     _BF	set	32312
    89   000000                     _TRMT	set	32097
    90   000000                     _TRISC7	set	31911
    91   000000                     _CREN	set	32092
    92   000000                     _TXEN1	set	32101
    93   000000                     _BRGH1	set	32098
    94   000000                     _LATAbits	set	3977
    95   000000                     _TRISA1	set	31889
    96   000000                     _OSCCON2bits	set	4050
    97   000000                     _SSPEN	set	32309
    98   000000                     _OSCTUNEbits	set	3995
    99   000000                     _RC1IF	set	31989
   100   000000                     _OSCCONbits	set	4051
   101   000000                     _SSPBUF	set	4041
   102   000000                     _SSPSTATbits	set	4039
   103   000000                     _BOEN	set	32348
   104   000000                     _SSP1ADD	set	4040
   105                           
   106                           	psect	mediumconst
   107   007DDA                     __pmediumconst:
   108                           	callstack 0
   109   007DDA  00                 	db	0
   110   007DDB                     STR_51:
   111   007DDB  45                 	db	69	;'E'
   112   007DDC  52                 	db	82	;'R'
   113   007DDD  52                 	db	82	;'R'
   114   007DDE  4F                 	db	79	;'O'
   115   007DDF  52                 	db	82	;'R'
   116   007DE0  5F                 	db	95	;'_'
   117   007DE1  43                 	db	67	;'C'
   118   007DE2  4F                 	db	79	;'O'
   119   007DE3  44                 	db	68	;'D'
   120   007DE4  45                 	db	69	;'E'
   121   007DE5  5F                 	db	95	;'_'
   122   007DE6  53                 	db	83	;'S'
   123   007DE7  50                 	db	80	;'P'
   124   007DE8  49                 	db	73	;'I'
   125   007DE9  5F                 	db	95	;'_'
   126   007DEA  42                 	db	66	;'B'
   127   007DEB  52                 	db	82	;'R'
   128   007DEC  5F                 	db	95	;'_'
   129   007DED  4F                 	db	79	;'O'
   130   007DEE  56                 	db	86	;'V'
   131   007DEF  45                 	db	69	;'E'
   132   007DF0  52                 	db	82	;'R'
   133   007DF1  52                 	db	82	;'R'
   134   007DF2  41                 	db	65	;'A'
   135   007DF3  4E                 	db	78	;'N'
   136   007DF4  47                 	db	71	;'G'
   137   007DF5  45                 	db	69	;'E'
   138   007DF6  00                 	db	0
   139   007DF7                     STR_43:
   140   007DF7  4D                 	db	77	;'M'
   141   007DF8  75                 	db	117	;'u'
   142   007DF9  65                 	db	101	;'e'
   143   007DFA  73                 	db	115	;'s'
   144   007DFB  74                 	db	116	;'t'
   145   007DFC  72                 	db	114	;'r'
   146   007DFD  61                 	db	97	;'a'
   147   007DFE  20                 	db	32
   148   007DFF  64                 	db	100	;'d'
   149   007E00  65                 	db	101	;'e'
   150   007E01  20                 	db	32
   151   007E02  64                 	db	100	;'d'
   152   007E03  61                 	db	97	;'a'
   153   007E04  74                 	db	116	;'t'
   154   007E05  6F                 	db	111	;'o'
   155   007E06  20                 	db	32
   156   007E07  65                 	db	101	;'e'
   157   007E08  6E                 	db	110	;'n'
   158   007E09  74                 	db	116	;'t'
   159   007E0A  72                 	db	114	;'r'
   160   007E0B  61                 	db	97	;'a'
   161   007E0C  6E                 	db	110	;'n'
   162   007E0D  74                 	db	116	;'t'
   163   007E0E  65                 	db	101	;'e'
   164   007E0F  3A                 	db	58	;':'
   165   007E10  20                 	db	32
   166   007E11  00                 	db	0
   167   007E12  45                 	db	69	;'E'
   168   007E13  52                 	db	82	;'R'
   169   007E14  52                 	db	82	;'R'
   170   007E15  4F                 	db	79	;'O'
   171   007E16  52                 	db	82	;'R'
   172   007E17  5F                 	db	95	;'_'
   173   007E18  43                 	db	67	;'C'
   174   007E19  4F                 	db	79	;'O'
   175   007E1A  44                 	db	68	;'D'
   176   007E1B  45                 	db	69	;'E'
   177   007E1C  5F                 	db	95	;'_'
   178   007E1D  55                 	db	85	;'U'
   179   007E1E  41                 	db	65	;'A'
   180   007E1F  52                 	db	82	;'R'
   181   007E20  54                 	db	84	;'T'
   182   007E21  5F                 	db	95	;'_'
   183   007E22  43                 	db	67	;'C'
   184   007E23  4F                 	db	79	;'O'
   185   007E24  4E                 	db	78	;'N'
   186   007E25  46                 	db	70	;'F'
   187   007E26  49                 	db	73	;'I'
   188   007E27  47                 	db	71	;'G'
   189   007E28  20                 	db	32
   190   007E29  0D                 	db	13
   191   007E2A  0A                 	db	10
   192   007E2B  00                 	db	0
   193   007E2C                     STR_52:
   194   007E2C  45                 	db	69	;'E'
   195   007E2D  52                 	db	82	;'R'
   196   007E2E  52                 	db	82	;'R'
   197   007E2F  4F                 	db	79	;'O'
   198   007E30  52                 	db	82	;'R'
   199   007E31  5F                 	db	95	;'_'
   200   007E32  43                 	db	67	;'C'
   201   007E33  4F                 	db	79	;'O'
   202   007E34  44                 	db	68	;'D'
   203   007E35  45                 	db	69	;'E'
   204   007E36  5F                 	db	95	;'_'
   205   007E37  53                 	db	83	;'S'
   206   007E38  50                 	db	80	;'P'
   207   007E39  49                 	db	73	;'I'
   208   007E3A  5F                 	db	95	;'_'
   209   007E3B  43                 	db	67	;'C'
   210   007E3C  4F                 	db	79	;'O'
   211   007E3D  4C                 	db	76	;'L'
   212   007E3E  4C                 	db	76	;'L'
   213   007E3F  49                 	db	73	;'I'
   214   007E40  53                 	db	83	;'S'
   215   007E41  49                 	db	73	;'I'
   216   007E42  4F                 	db	79	;'O'
   217   007E43  4E                 	db	78	;'N'
   218   007E44  00                 	db	0
   219   007E45  45                 	db	69	;'E'
   220   007E46  52                 	db	82	;'R'
   221   007E47  52                 	db	82	;'R'
   222   007E48  4F                 	db	79	;'O'
   223   007E49  52                 	db	82	;'R'
   224   007E4A  5F                 	db	95	;'_'
   225   007E4B  43                 	db	67	;'C'
   226   007E4C  4F                 	db	79	;'O'
   227   007E4D  44                 	db	68	;'D'
   228   007E4E  45                 	db	69	;'E'
   229   007E4F  5F                 	db	95	;'_'
   230   007E50  55                 	db	85	;'U'
   231   007E51  41                 	db	65	;'A'
   232   007E52  52                 	db	82	;'R'
   233   007E53  54                 	db	84	;'T'
   234   007E54  5F                 	db	95	;'_'
   235   007E55  4F                 	db	79	;'O'
   236   007E56  56                 	db	86	;'V'
   237   007E57  45                 	db	69	;'E'
   238   007E58  52                 	db	82	;'R'
   239   007E59  46                 	db	70	;'F'
   240   007E5A  4C                 	db	76	;'L'
   241   007E5B  4F                 	db	79	;'O'
   242   007E5C  57                 	db	87	;'W'
   243   007E5D  00                 	db	0
   244   007E5E  45                 	db	69	;'E'
   245   007E5F  52                 	db	82	;'R'
   246   007E60  52                 	db	82	;'R'
   247   007E61  4F                 	db	79	;'O'
   248   007E62  52                 	db	82	;'R'
   249   007E63  5F                 	db	95	;'_'
   250   007E64  43                 	db	67	;'C'
   251   007E65  4F                 	db	79	;'O'
   252   007E66  44                 	db	68	;'D'
   253   007E67  45                 	db	69	;'E'
   254   007E68  5F                 	db	95	;'_'
   255   007E69  55                 	db	85	;'U'
   256   007E6A  41                 	db	65	;'A'
   257   007E6B  52                 	db	82	;'R'
   258   007E6C  54                 	db	84	;'T'
   259   007E6D  5F                 	db	95	;'_'
   260   007E6E  46                 	db	70	;'F'
   261   007E6F  52                 	db	82	;'R'
   262   007E70  41                 	db	65	;'A'
   263   007E71  4D                 	db	77	;'M'
   264   007E72  49                 	db	73	;'I'
   265   007E73  4E                 	db	78	;'N'
   266   007E74  47                 	db	71	;'G'
   267   007E75  00                 	db	0
   268   007E76                     STR_19:
   269   007E76  0D                 	db	13
   270   007E77  0A                 	db	10
   271   007E78  43                 	db	67	;'C'
   272   007E79  6F                 	db	111	;'o'
   273   007E7A  6E                 	db	110	;'n'
   274   007E7B  66                 	db	102	;'f'
   275   007E7C  69                 	db	105	;'i'
   276   007E7D  67                 	db	103	;'g'
   277   007E7E  75                 	db	117	;'u'
   278   007E7F  72                 	db	114	;'r'
   279   007E80  61                 	db	97	;'a'
   280   007E81  63                 	db	99	;'c'
   281   007E82  69                 	db	105	;'i'
   282   007E83  6F                 	db	111	;'o'
   283   007E84  6E                 	db	110	;'n'
   284   007E85  20                 	db	32
   285   007E86  53                 	db	83	;'S'
   286   007E87  50                 	db	80	;'P'
   287   007E88  49                 	db	73	;'I'
   288   007E89  3A                 	db	58	;':'
   289   007E8A  0D                 	db	13
   290   007E8B  0A                 	db	10
   291   007E8C  00                 	db	0
   292   007E8D                     STR_5:
   293   007E8D  62                 	db	98	;'b'
   294   007E8E  61                 	db	97	;'a'
   295   007E8F  6A                 	db	106	;'j'
   296   007E90  61                 	db	97	;'a'
   297   007E91  20                 	db	32
   298   007E92  76                 	db	118	;'v'
   299   007E93  65                 	db	101	;'e'
   300   007E94  6C                 	db	108	;'l'
   301   007E95  6F                 	db	111	;'o'
   302   007E96  63                 	db	99	;'c'
   303   007E97  69                 	db	105	;'i'
   304   007E98  64                 	db	100	;'d'
   305   007E99  61                 	db	97	;'a'
   306   007E9A  64                 	db	100	;'d'
   307   007E9B  20                 	db	32
   308   007E9C  0D                 	db	13
   309   007E9D  0A                 	db	10
   310   007E9E  00                 	db	0
   311   007E9F                     STR_4:
   312   007E9F  61                 	db	97	;'a'
   313   007EA0  6C                 	db	108	;'l'
   314   007EA1  74                 	db	116	;'t'
   315   007EA2  61                 	db	97	;'a'
   316   007EA3  20                 	db	32
   317   007EA4  76                 	db	118	;'v'
   318   007EA5  65                 	db	101	;'e'
   319   007EA6  6C                 	db	108	;'l'
   320   007EA7  6F                 	db	111	;'o'
   321   007EA8  63                 	db	99	;'c'
   322   007EA9  69                 	db	105	;'i'
   323   007EAA  64                 	db	100	;'d'
   324   007EAB  61                 	db	97	;'a'
   325   007EAC  64                 	db	100	;'d'
   326   007EAD  20                 	db	32
   327   007EAE  0D                 	db	13
   328   007EAF  0A                 	db	10
   329   007EB0  00                 	db	0
   330   007EB1                     STR_20:
   331   007EB1  46                 	db	70	;'F'
   332   007EB2  72                 	db	114	;'r'
   333   007EB3  65                 	db	101	;'e'
   334   007EB4  63                 	db	99	;'c'
   335   007EB5  75                 	db	117	;'u'
   336   007EB6  65                 	db	101	;'e'
   337   007EB7  6E                 	db	110	;'n'
   338   007EB8  63                 	db	99	;'c'
   339   007EB9  69                 	db	105	;'i'
   340   007EBA  61                 	db	97	;'a'
   341   007EBB  20                 	db	32
   342   007EBC  53                 	db	83	;'S'
   343   007EBD  50                 	db	80	;'P'
   344   007EBE  49                 	db	73	;'I'
   345   007EBF  3A                 	db	58	;':'
   346   007EC0  20                 	db	32
   347   007EC1  00                 	db	0
   348   007EC2                     STR_37:
   349   007EC2  50                 	db	80	;'P'
   350   007EC3  6F                 	db	111	;'o'
   351   007EC4  6C                 	db	108	;'l'
   352   007EC5  61                 	db	97	;'a'
   353   007EC6  72                 	db	114	;'r'
   354   007EC7  69                 	db	105	;'i'
   355   007EC8  64                 	db	100	;'d'
   356   007EC9  61                 	db	97	;'a'
   357   007ECA  64                 	db	100	;'d'
   358   007ECB  3A                 	db	58	;':'
   359   007ECC  20                 	db	32
   360   007ECD  49                 	db	73	;'I'
   361   007ECE  64                 	db	100	;'d'
   362   007ECF  6C                 	db	108	;'l'
   363   007ED0  65                 	db	101	;'e'
   364   007ED1  20                 	db	32
   365   007ED2  00                 	db	0
   366   007ED3                     STR_12:
   367   007ED3  44                 	db	68	;'D'
   368   007ED4  65                 	db	101	;'e'
   369   007ED5  73                 	db	115	;'s'
   370   007ED6  68                 	db	104	;'h'
   371   007ED7  61                 	db	97	;'a'
   372   007ED8  62                 	db	98	;'b'
   373   007ED9  69                 	db	105	;'i'
   374   007EDA  6C                 	db	108	;'l'
   375   007EDB  69                 	db	105	;'i'
   376   007EDC  74                 	db	116	;'t'
   377   007EDD  61                 	db	97	;'a'
   378   007EDE  64                 	db	100	;'d'
   379   007EDF  6F                 	db	111	;'o'
   380   007EE0  20                 	db	32
   381   007EE1  0D                 	db	13
   382   007EE2  0A                 	db	10
   383   007EE3  00                 	db	0
   384   007EE4                     STR_41:
   385   007EE4  61                 	db	97	;'a'
   386   007EE5  63                 	db	99	;'c'
   387   007EE6  74                 	db	116	;'t'
   388   007EE7  69                 	db	105	;'i'
   389   007EE8  76                 	db	118	;'v'
   390   007EE9  65                 	db	101	;'e'
   391   007EEA  20                 	db	32
   392   007EEB  61                 	db	97	;'a'
   393   007EEC  20                 	db	32
   394   007EED  69                 	db	105	;'i'
   395   007EEE  64                 	db	100	;'d'
   396   007EEF  6C                 	db	108	;'l'
   397   007EF0  65                 	db	101	;'e'
   398   007EF1  0D                 	db	13
   399   007EF2  0A                 	db	10
   400   007EF3  00                 	db	0
   401   007EF4                     STR_42:
   402   007EF4  69                 	db	105	;'i'
   403   007EF5  64                 	db	100	;'d'
   404   007EF6  6C                 	db	108	;'l'
   405   007EF7  65                 	db	101	;'e'
   406   007EF8  20                 	db	32
   407   007EF9  61                 	db	97	;'a'
   408   007EFA  20                 	db	32
   409   007EFB  61                 	db	97	;'a'
   410   007EFC  63                 	db	99	;'c'
   411   007EFD  74                 	db	116	;'t'
   412   007EFE  69                 	db	105	;'i'
   413   007EFF  76                 	db	118	;'v'
   414   007F00  65                 	db	101	;'e'
   415   007F01  0D                 	db	13
   416   007F02  0A                 	db	10
   417   007F03  00                 	db	0
   418   007F04                     STR_36:
   419   007F04  64                 	db	100	;'d'
   420   007F05  65                 	db	101	;'e'
   421   007F06  73                 	db	115	;'s'
   422   007F07  68                 	db	104	;'h'
   423   007F08  61                 	db	97	;'a'
   424   007F09  62                 	db	98	;'b'
   425   007F0A  69                 	db	105	;'i'
   426   007F0B  6C                 	db	108	;'l'
   427   007F0C  69                 	db	105	;'i'
   428   007F0D  74                 	db	116	;'t'
   429   007F0E  61                 	db	97	;'a'
   430   007F0F  64                 	db	100	;'d'
   431   007F10  6F                 	db	111	;'o'
   432   007F11  0D                 	db	13
   433   007F12  0A                 	db	10
   434   007F13  00                 	db	0
   435   007F14                     STR_34:
   436   007F14  50                 	db	80	;'P'
   437   007F15  75                 	db	117	;'u'
   438   007F16  65                 	db	101	;'e'
   439   007F17  72                 	db	114	;'r'
   440   007F18  74                 	db	116	;'t'
   441   007F19  6F                 	db	111	;'o'
   442   007F1A  20                 	db	32
   443   007F1B  73                 	db	115	;'s'
   444   007F1C  65                 	db	101	;'e'
   445   007F1D  72                 	db	114	;'r'
   446   007F1E  69                 	db	105	;'i'
   447   007F1F  61                 	db	97	;'a'
   448   007F20  6C                 	db	108	;'l'
   449   007F21  3A                 	db	58	;':'
   450   007F22  20                 	db	32
   451   007F23  00                 	db	0
   452   007F24                     STR_40:
   453   007F24  54                 	db	84	;'T'
   454   007F25  72                 	db	114	;'r'
   455   007F26  61                 	db	97	;'a'
   456   007F27  6E                 	db	110	;'n'
   457   007F28  73                 	db	115	;'s'
   458   007F29  6D                 	db	109	;'m'
   459   007F2A  69                 	db	105	;'i'
   460   007F2B  73                 	db	115	;'s'
   461   007F2C  69                 	db	105	;'i'
   462   007F2D  6F                 	db	111	;'o'
   463   007F2E  6E                 	db	110	;'n'
   464   007F2F  20                 	db	32
   465   007F30  65                 	db	101	;'e'
   466   007F31  6E                 	db	110	;'n'
   467   007F32  20                 	db	32
   468   007F33  00                 	db	0
   469   007F34                     STR_11:
   470   007F34  48                 	db	72	;'H'
   471   007F35  61                 	db	97	;'a'
   472   007F36  62                 	db	98	;'b'
   473   007F37  69                 	db	105	;'i'
   474   007F38  6C                 	db	108	;'l'
   475   007F39  69                 	db	105	;'i'
   476   007F3A  74                 	db	116	;'t'
   477   007F3B  61                 	db	97	;'a'
   478   007F3C  64                 	db	100	;'d'
   479   007F3D  6F                 	db	111	;'o'
   480   007F3E  20                 	db	32
   481   007F3F  0D                 	db	13
   482   007F40  0A                 	db	10
   483   007F41  00                 	db	0
   484   007F42                     STR_9:
   485   007F42  78                 	db	120	;'x'
   486   007F43  20                 	db	32
   487   007F44  62                 	db	98	;'b'
   488   007F45  61                 	db	97	;'a'
   489   007F46  75                 	db	117	;'u'
   490   007F47  64                 	db	100	;'d'
   491   007F48  69                 	db	105	;'i'
   492   007F49  6F                 	db	111	;'o'
   493   007F4A  73                 	db	115	;'s'
   494   007F4B  20                 	db	32
   495   007F4C  0D                 	db	13
   496   007F4D  0A                 	db	10
   497   007F4E  00                 	db	0
   498   007F4F                     STR_44:
   499   007F4F  61                 	db	97	;'a'
   500   007F50  6C                 	db	108	;'l'
   501   007F51  20                 	db	32
   502   007F52  66                 	db	102	;'f'
   503   007F53  69                 	db	105	;'i'
   504   007F54  6E                 	db	110	;'n'
   505   007F55  61                 	db	97	;'a'
   506   007F56  6C                 	db	108	;'l'
   507   007F57  0D                 	db	13
   508   007F58  0A                 	db	10
   509   007F59  00                 	db	0
   510   007F5A                     STR_45:
   511   007F5A  65                 	db	101	;'e'
   512   007F5B  6E                 	db	110	;'n'
   513   007F5C  20                 	db	32
   514   007F5D  6D                 	db	109	;'m'
   515   007F5E  65                 	db	101	;'e'
   516   007F5F  64                 	db	100	;'d'
   517   007F60  69                 	db	105	;'i'
   518   007F61  6F                 	db	111	;'o'
   519   007F62  0D                 	db	13
   520   007F63  0A                 	db	10
   521   007F64  00                 	db	0
   522   007F65                     STR_6:
   523   007F65  42                 	db	66	;'B'
   524   007F66  61                 	db	97	;'a'
   525   007F67  75                 	db	117	;'u'
   526   007F68  64                 	db	100	;'d'
   527   007F69  72                 	db	114	;'r'
   528   007F6A  61                 	db	97	;'a'
   529   007F6B  74                 	db	116	;'t'
   530   007F6C  65                 	db	101	;'e'
   531   007F6D  3A                 	db	58	;':'
   532   007F6E  20                 	db	32
   533   007F6F  00                 	db	0
   534   007F70                     STR_16:
   535   007F70  52                 	db	82	;'R'
   536   007F71  65                 	db	101	;'e'
   537   007F72  63                 	db	99	;'c'
   538   007F73  65                 	db	101	;'e'
   539   007F74  70                 	db	112	;'p'
   540   007F75  74                 	db	116	;'t'
   541   007F76  6F                 	db	111	;'o'
   542   007F77  72                 	db	114	;'r'
   543   007F78  3A                 	db	58	;':'
   544   007F79  20                 	db	32
   545   007F7A  00                 	db	0
   546   007F7B                     STR_3:
   547   007F7B  41                 	db	65	;'A'
   548   007F7C  73                 	db	115	;'s'
   549   007F7D  69                 	db	105	;'i'
   550   007F7E  6E                 	db	110	;'n'
   551   007F7F  63                 	db	99	;'c'
   552   007F80  72                 	db	114	;'r'
   553   007F81  6F                 	db	111	;'o'
   554   007F82  6E                 	db	110	;'n'
   555   007F83  6F                 	db	111	;'o'
   556   007F84  20                 	db	32
   557   007F85  00                 	db	0
   558   007F86                     STR_13:
   559   007F86  54                 	db	84	;'T'
   560   007F87  72                 	db	114	;'r'
   561   007F88  61                 	db	97	;'a'
   562   007F89  6E                 	db	110	;'n'
   563   007F8A  73                 	db	115	;'s'
   564   007F8B  6F                 	db	111	;'o'
   565   007F8C  72                 	db	114	;'r'
   566   007F8D  3A                 	db	58	;':'
   567   007F8E  20                 	db	32
   568   007F8F  00                 	db	0
   569   007F90                     STR_2:
   570   007F90  53                 	db	83	;'S'
   571   007F91  69                 	db	105	;'i'
   572   007F92  6E                 	db	110	;'n'
   573   007F93  63                 	db	99	;'c'
   574   007F94  72                 	db	114	;'r'
   575   007F95  6F                 	db	111	;'o'
   576   007F96  6E                 	db	110	;'n'
   577   007F97  6F                 	db	111	;'o'
   578   007F98  20                 	db	32
   579   007F99  00                 	db	0
   580   007F9A                     STR_23:
   581   007F9A  49                 	db	73	;'I'
   582   007F9B  6E                 	db	110	;'n'
   583   007F9C  70                 	db	112	;'p'
   584   007F9D  75                 	db	117	;'u'
   585   007F9E  74                 	db	116	;'t'
   586   007F9F  20                 	db	32
   587   007FA0  0D                 	db	13
   588   007FA1  09                 	db	9
   589   007FA2  00                 	db	0
   590   007FA3                     STR_24:
   591   007FA3  4F                 	db	79	;'O'
   592   007FA4  75                 	db	117	;'u'
   593   007FA5  74                 	db	116	;'t'
   594   007FA6  70                 	db	112	;'p'
   595   007FA7  75                 	db	117	;'u'
   596   007FA8  74                 	db	116	;'t'
   597   007FA9  0D                 	db	13
   598   007FAA  09                 	db	9
   599   007FAB  00                 	db	0
   600   007FAC                     STR_10:
   601   007FAC  50                 	db	80	;'P'
   602   007FAD  75                 	db	117	;'u'
   603   007FAE  65                 	db	101	;'e'
   604   007FAF  72                 	db	114	;'r'
   605   007FB0  74                 	db	116	;'t'
   606   007FB1  6F                 	db	111	;'o'
   607   007FB2  3A                 	db	58	;':'
   608   007FB3  20                 	db	32
   609   007FB4  00                 	db	0
   610   007FB5                     STR_7:
   611   007FB5  31                 	db	49	;'1'
   612   007FB6  36                 	db	54	;'6'
   613   007FB7  20                 	db	32
   614   007FB8  62                 	db	98	;'b'
   615   007FB9  69                 	db	105	;'i'
   616   007FBA  74                 	db	116	;'t'
   617   007FBB  73                 	db	115	;'s'
   618   007FBC  20                 	db	32
   619   007FBD  00                 	db	0
   620   007FBE                     STR_46:
   621   007FBE  45                 	db	69	;'E'
   622   007FBF  72                 	db	114	;'r'
   623   007FC0  72                 	db	114	;'r'
   624   007FC1  6F                 	db	111	;'o'
   625   007FC2  72                 	db	114	;'r'
   626   007FC3  3A                 	db	58	;':'
   627   007FC4  20                 	db	32
   628   007FC5  00                 	db	0
   629   007FC6                     STR_8:
   630   007FC6  38                 	db	56	;'8'
   631   007FC7  20                 	db	32
   632   007FC8  62                 	db	98	;'b'
   633   007FC9  69                 	db	105	;'i'
   634   007FCA  74                 	db	116	;'t'
   635   007FCB  73                 	db	115	;'s'
   636   007FCC  20                 	db	32
   637   007FCD  00                 	db	0
   638   007FCE                     STR_38:
   639   007FCE  68                 	db	104	;'h'
   640   007FCF  69                 	db	105	;'i'
   641   007FD0  67                 	db	103	;'g'
   642   007FD1  68                 	db	104	;'h'
   643   007FD2  0D                 	db	13
   644   007FD3  0A                 	db	10
   645   007FD4  00                 	db	0
   646   007FD5                     STR_1:
   647   007FD5  4D                 	db	77	;'M'
   648   007FD6  6F                 	db	111	;'o'
   649   007FD7  64                 	db	100	;'d'
   650   007FD8  6F                 	db	111	;'o'
   651   007FD9  3A                 	db	58	;':'
   652   007FDA  20                 	db	32
   653   007FDB  00                 	db	0
   654   007FDC                     STR_21:
   655   007FDC  25                 	db	37
   656   007FDD  6C                 	db	108	;'l'
   657   007FDE  64                 	db	100	;'d'
   658   007FDF  0D                 	db	13
   659   007FE0  0A                 	db	10
   660   007FE1  00                 	db	0
   661   007FE2                     STR_39:
   662   007FE2  6C                 	db	108	;'l'
   663   007FE3  6F                 	db	111	;'o'
   664   007FE4  77                 	db	119	;'w'
   665   007FE5  0D                 	db	13
   666   007FE6  0A                 	db	10
   667   007FE7  00                 	db	0
   668   007FE8                     STR_22:
   669   007FE8  53                 	db	83	;'S'
   670   007FE9  44                 	db	68	;'D'
   671   007FEA  49                 	db	73	;'I'
   672   007FEB  3A                 	db	58	;':'
   673   007FEC  20                 	db	32
   674   007FED  00                 	db	0
   675   007FEE                     STR_28:
   676   007FEE  53                 	db	83	;'S'
   677   007FEF  43                 	db	67	;'C'
   678   007FF0  4B                 	db	75	;'K'
   679   007FF1  3A                 	db	58	;':'
   680   007FF2  20                 	db	32
   681   007FF3  00                 	db	0
   682   007FF4                     STR_25:
   683   007FF4  53                 	db	83	;'S'
   684   007FF5  44                 	db	68	;'D'
   685   007FF6  4F                 	db	79	;'O'
   686   007FF7  3A                 	db	58	;':'
   687   007FF8  20                 	db	32
   688   007FF9  00                 	db	0
   689   007FFA                     STR_31:
   690   007FFA  53                 	db	83	;'S'
   691   007FFB  53                 	db	83	;'S'
   692   007FFC  3A                 	db	58	;':'
   693   007FFD  20                 	db	32
   694   007FFE  00                 	db	0
   695   007FFF  00                 	db	0	; dummy byte at the end
   696   000000                     
   697                           ; #config settings
   698                           
   699                           	psect	cinit
   700   006EDC                     __pcinit:
   701                           	callstack 0
   702   006EDC                     start_initialization:
   703                           	callstack 0
   704   006EDC                     __initialization:
   705                           	callstack 0
   706                           
   707                           ; Clear objects allocated to BANK0 (32 bytes)
   708   006EDC  EE00  F060         	lfsr	0,__pbssBANK0
   709   006EE0  0E20               	movlw	32
   710   006EE2                     clear_0:
   711   006EE2  6AEE               	clrf	postinc0,c
   712   006EE4  06E8               	decf	wreg,f,c
   713   006EE6  E1FD               	bnz	clear_0
   714                           
   715                           ; Clear objects allocated to COMRAM (5 bytes)
   716   006EE8  6A42               	clrf	(__pbssCOMRAM+4)& (0+255),c
   717   006EEA  6A41               	clrf	(__pbssCOMRAM+3)& (0+255),c
   718   006EEC  6A40               	clrf	(__pbssCOMRAM+2)& (0+255),c
   719   006EEE  6A3F               	clrf	(__pbssCOMRAM+1)& (0+255),c
   720   006EF0  6A3E               	clrf	__pbssCOMRAM& (0+255),c
   721   006EF2                     end_of_initialization:
   722                           	callstack 0
   723   006EF2                     __end_of__initialization:
   724                           	callstack 0
   725   006EF2  0E00               	movlw	low (__Lmediumconst shr (0+16))
   726   006EF4  6EF8               	movwf	tblptru,c
   727   006EF6  0100               	movlb	0
   728   006EF8  EF9B  F038         	goto	_main	;jump to C main() function
   729                           
   730                           	psect	bssCOMRAM
   731   00003E                     __pbssCOMRAM:
   732                           	callstack 0
   733   00003E                     _width:
   734                           	callstack 0
   735   00003E                     	ds	2
   736   000040                     _prec:
   737                           	callstack 0
   738   000040                     	ds	2
   739   000042                     _flags:
   740                           	callstack 0
   741   000042                     	ds	1
   742                           
   743                           	psect	bssBANK0
   744   000060                     __pbssBANK0:
   745                           	callstack 0
   746   000060                     _dbuf:
   747                           	callstack 0
   748   000060                     	ds	32
   749                           
   750                           	psect	cstackCOMRAM
   751   000001                     __pcstackCOMRAM:
   752                           	callstack 0
   753   000001                     ?___aldiv:
   754                           	callstack 0
   755   000001                     ?___almod:
   756                           	callstack 0
   757   000001                     UART_Tx@dato:
   758                           	callstack 0
   759   000001                     SPI1_ByteExchange@byteData:
   760                           	callstack 0
   761   000001                     Clock_Init@s16Timeout:
   762                           	callstack 0
   763   000001                     UART_select_baud@baudrate:
   764                           	callstack 0
   765   000001                     ___aldiv@dividend:
   766                           	callstack 0
   767   000001                     ___almod@dividend:
   768                           	callstack 0
   769                           
   770                           ; 4 bytes @ 0x0
   771   000001                     	ds	1
   772   000002                     putch@data:
   773                           	callstack 0
   774                           
   775                           ; 1 bytes @ 0x1
   776   000002                     	ds	1
   777   000003                     Clock_Init@bStatus:
   778                           	callstack 0
   779   000003                     fputc@c:
   780                           	callstack 0
   781                           
   782                           ; 2 bytes @ 0x2
   783   000003                     	ds	1
   784   000004                     Clock_Init@bStatus_605:
   785                           	callstack 0
   786                           
   787                           ; 1 bytes @ 0x3
   788   000004                     	ds	1
   789   000005                     ??_UART_select_baud:
   790   000005                     Clock_Init@bStatus_606:
   791                           	callstack 0
   792   000005                     fputc@fp:
   793                           	callstack 0
   794   000005                     ___aldiv@divisor:
   795                           	callstack 0
   796   000005                     ___almod@divisor:
   797                           	callstack 0
   798                           
   799                           ; 4 bytes @ 0x4
   800   000005                     	ds	1
   801   000006                     Clock_Init@bStatus_609:
   802                           	callstack 0
   803                           
   804                           ; 1 bytes @ 0x5
   805   000006                     	ds	1
   806   000007                     ??_fputc:
   807   000007                     Clock_Init@bItTimeEn:
   808                           	callstack 0
   809                           
   810                           ; 1 bytes @ 0x6
   811   000007                     	ds	1
   812   000008                     Clock_Init@returnCode:
   813                           	callstack 0
   814                           
   815                           ; 1 bytes @ 0x7
   816   000008                     	ds	1
   817   000009                     ___aldiv@counter:
   818                           	callstack 0
   819   000009                     ___almod@counter:
   820                           	callstack 0
   821                           
   822                           ; 1 bytes @ 0x8
   823   000009                     	ds	1
   824   00000A                     ___aldiv@sign:
   825                           	callstack 0
   826   00000A                     ___almod@sign:
   827                           	callstack 0
   828                           
   829                           ; 1 bytes @ 0x9
   830   00000A                     	ds	1
   831   00000B                     ?_abs:
   832                           	callstack 0
   833   00000B                     abs@a:
   834                           	callstack 0
   835   00000B                     ___aldiv@quotient:
   836                           	callstack 0
   837                           
   838                           ; 4 bytes @ 0xA
   839   00000B                     	ds	2
   840   00000D                     ??_abs:
   841                           
   842                           ; 1 bytes @ 0xC
   843   00000D                     	ds	2
   844   00000F                     ?_SPI_actual_frec:
   845                           	callstack 0
   846   00000F                     vfpfcnvrt@fp:
   847                           	callstack 0
   848                           
   849                           ; 2 bytes @ 0xE
   850   00000F                     	ds	2
   851   000011                     vfpfcnvrt@fmt:
   852                           	callstack 0
   853                           
   854                           ; 1 bytes @ 0x10
   855   000011                     	ds	1
   856   000012                     vfpfcnvrt@ap:
   857                           	callstack 0
   858                           
   859                           ; 1 bytes @ 0x11
   860   000012                     	ds	1
   861   000013                     ??_SPI_actual_frec:
   862   000013                     ??_vfpfcnvrt:
   863                           
   864                           ; 1 bytes @ 0x12
   865   000013                     	ds	2
   866   000015                     vfpfcnvrt@done:
   867                           	callstack 0
   868   000015                     SPI_actual_frec@baud:
   869                           	callstack 0
   870                           
   871                           ; 4 bytes @ 0x14
   872   000015                     	ds	1
   873   000016                     vfpfcnvrt@cp:
   874                           	callstack 0
   875                           
   876                           ; 2 bytes @ 0x15
   877   000016                     	ds	2
   878   000018                     vfpfcnvrt@convarg:
   879                           	callstack 0
   880                           
   881                           ; 4 bytes @ 0x17
   882   000018                     	ds	4
   883   00001C                     vfpfcnvrt@c:
   884                           	callstack 0
   885                           
   886                           ; 1 bytes @ 0x1B
   887   00001C                     	ds	1
   888   00001D                     ?_vfprintf:
   889                           	callstack 0
   890   00001D                     vfprintf@fp:
   891                           	callstack 0
   892                           
   893                           ; 2 bytes @ 0x1C
   894   00001D                     	ds	2
   895   00001F                     vfprintf@fmt:
   896                           	callstack 0
   897                           
   898                           ; 2 bytes @ 0x1E
   899   00001F                     	ds	2
   900   000021                     vfprintf@ap:
   901                           	callstack 0
   902                           
   903                           ; 1 bytes @ 0x20
   904   000021                     	ds	1
   905   000022                     vfprintf@cfmt:
   906                           	callstack 0
   907                           
   908                           ; 2 bytes @ 0x21
   909   000022                     	ds	2
   910   000024                     ?_printf:
   911                           	callstack 0
   912   000024                     printf@fmt:
   913                           	callstack 0
   914                           
   915                           ; 2 bytes @ 0x23
   916   000024                     	ds	6
   917   00002A                     printf@ap:
   918                           	callstack 0
   919                           
   920                           ; 1 bytes @ 0x29
   921   00002A                     	ds	1
   922   00002B                     ??_SPI_ErrorHandler:
   923   00002B                     UART_Init@baudrate:
   924                           	callstack 0
   925                           
   926                           ; 4 bytes @ 0x2A
   927   00002B                     	ds	2
   928   00002D                     SPI_ErrorHandler@errorCode:
   929                           	callstack 0
   930                           
   931                           ; 1 bytes @ 0x2C
   932   00002D                     	ds	1
   933   00002E                     SPI_BaudRateGen@FClock:
   934                           	callstack 0
   935                           
   936                           ; 4 bytes @ 0x2D
   937   00002E                     	ds	1
   938   00002F                     
   939                           ; 1 bytes @ 0x2E
   940   00002F                     	ds	3
   941   000032                     ??_SPI_BaudRateGen:
   942                           
   943                           ; 1 bytes @ 0x31
   944   000032                     	ds	4
   945   000036                     SPI_BaudRateGen@baudReg:
   946                           	callstack 0
   947                           
   948                           ; 4 bytes @ 0x35
   949   000036                     	ds	4
   950   00003A                     ??_main:
   951                           
   952                           ; 1 bytes @ 0x39
   953   00003A                     	ds	2
   954   00003C                     main@c1:
   955                           	callstack 0
   956                           
   957                           ; 1 bytes @ 0x3B
   958   00003C                     	ds	1
   959   00003D                     main@c2:
   960                           	callstack 0
   961                           
   962                           ; 1 bytes @ 0x3C
   963   00003D                     	ds	1
   964                           
   965 ;;
   966 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   967 ;;
   968 ;; *************** function _main *****************
   969 ;; Defined at:
   970 ;;		line 15 in file "main.c"
   971 ;; Parameters:    Size  Location     Type
   972 ;;		None
   973 ;; Auto vars:     Size  Location     Type
   974 ;;  c2              1   60[COMRAM] unsigned char 
   975 ;;  c1              1   59[COMRAM] unsigned char 
   976 ;; Return value:  Size  Location     Type
   977 ;;                  1    wreg      void 
   978 ;; Registers used:
   979 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   980 ;; Tracked objects:
   981 ;;		On entry : 0/0
   982 ;;		On exit  : 0/0
   983 ;;		Unchanged: 0/0
   984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   985 ;;      Params:         0       0       0       0       0       0       0       0       0
   986 ;;      Locals:         2       0       0       0       0       0       0       0       0
   987 ;;      Temps:          2       0       0       0       0       0       0       0       0
   988 ;;      Totals:         4       0       0       0       0       0       0       0       0
   989 ;;Total ram usage:        4 bytes
   990 ;; Hardware stack levels required when called: 9
   991 ;; This function calls:
   992 ;;		_Clock_Init
   993 ;;		_SPI1_ByteExchange
   994 ;;		_SPI_master_init
   995 ;;		_UART_Init
   996 ;; This function is called by:
   997 ;;		Startup code after reset
   998 ;; This function uses a non-reentrant model
   999 ;;
  1000                           
  1001                           	psect	text0
  1002   007136                     __ptext0:
  1003                           	callstack 0
  1004   007136                     _main:
  1005                           	callstack 22
  1006   007136                     
  1007                           ;main.c: 16:     Clock_Init(16000);
  1008   007136  0E3E               	movlw	62
  1009   007138  6E02               	movwf	(Clock_Init@s16Timeout+1)^0,c
  1010   00713A  0E80               	movlw	128
  1011   00713C  6E01               	movwf	Clock_Init@s16Timeout^0,c
  1012   00713E  EC94  F03C         	call	_Clock_Init	;wreg free
  1013   007142                     
  1014                           ;main.c: 17:     UART_Init(9600);
  1015   007142  0E80               	movlw	128
  1016   007144  6E2B               	movwf	UART_Init@baudrate^0,c
  1017   007146  0E25               	movlw	37
  1018   007148  6E2C               	movwf	(UART_Init@baudrate+1)^0,c
  1019   00714A  0E00               	movlw	0
  1020   00714C  6E2D               	movwf	(UART_Init@baudrate+2)^0,c
  1021   00714E  0E00               	movlw	0
  1022   007150  6E2E               	movwf	(UART_Init@baudrate+3)^0,c
  1023   007152  EC7E  F037         	call	_UART_Init	;wreg free
  1024   007156                     
  1025                           ;main.c: 18:     SPI_master_init();
  1026   007156  ECAD  F037         	call	_SPI_master_init	;wreg free
  1027   00715A                     
  1028                           ;main.c: 21:     TRISA1 = 0;
  1029   00715A  9292               	bcf	3986,1,c	;volatile
  1030   00715C                     
  1031                           ;main.c: 22:     LATAbits.LATA1 = 1;
  1032   00715C  8289               	bsf	137,1,c	;volatile
  1033   00715E                     
  1034                           ;main.c: 23:     _delay((unsigned long)((500)*(48000000/4000.0)));
  1035   00715E  0E1F               	movlw	31
  1036   007160  6E3B               	movwf	(??_main+1)^0,c
  1037   007162  0E71               	movlw	113
  1038   007164  6E3A               	movwf	??_main^0,c
  1039   007166  0E1E               	movlw	30
  1040   007168                     u1617:
  1041   007168  2EE8               	decfsz	wreg,f,c
  1042   00716A  D7FE               	bra	u1617
  1043   00716C  2E3A               	decfsz	??_main^0,f,c
  1044   00716E  D7FC               	bra	u1617
  1045   007170  2E3B               	decfsz	(??_main+1)^0,f,c
  1046   007172  D7FA               	bra	u1617
  1047   007174  D000               	nop2	
  1048   007176                     
  1049                           ;main.c: 24:     LATAbits.LATA1 = 0;
  1050   007176  9289               	bcf	137,1,c	;volatile
  1051   007178                     
  1052                           ;main.c: 25:     _delay((unsigned long)((500)*(48000000/4000.0)));
  1053   007178  0E1F               	movlw	31
  1054   00717A  6E3B               	movwf	(??_main+1)^0,c
  1055   00717C  0E71               	movlw	113
  1056   00717E  6E3A               	movwf	??_main^0,c
  1057   007180  0E1E               	movlw	30
  1058   007182                     u1627:
  1059   007182  2EE8               	decfsz	wreg,f,c
  1060   007184  D7FE               	bra	u1627
  1061   007186  2E3A               	decfsz	??_main^0,f,c
  1062   007188  D7FC               	bra	u1627
  1063   00718A  2E3B               	decfsz	(??_main+1)^0,f,c
  1064   00718C  D7FA               	bra	u1627
  1065   00718E  D000               	nop2	
  1066   007190                     
  1067                           ;main.c: 26:     LATAbits.LATA1 = 1;
  1068   007190  8289               	bsf	137,1,c	;volatile
  1069   007192                     
  1070                           ;main.c: 27:     _delay((unsigned long)((500)*(48000000/4000.0)));
  1071   007192  0E1F               	movlw	31
  1072   007194  6E3B               	movwf	(??_main+1)^0,c
  1073   007196  0E71               	movlw	113
  1074   007198  6E3A               	movwf	??_main^0,c
  1075   00719A  0E1E               	movlw	30
  1076   00719C                     u1637:
  1077   00719C  2EE8               	decfsz	wreg,f,c
  1078   00719E  D7FE               	bra	u1637
  1079   0071A0  2E3A               	decfsz	??_main^0,f,c
  1080   0071A2  D7FC               	bra	u1637
  1081   0071A4  2E3B               	decfsz	(??_main+1)^0,f,c
  1082   0071A6  D7FA               	bra	u1637
  1083   0071A8  D000               	nop2	
  1084   0071AA                     
  1085                           ;main.c: 28:     LATAbits.LATA1 = 0;
  1086   0071AA  9289               	bcf	137,1,c	;volatile
  1087   0071AC                     
  1088                           ;main.c: 29:     _delay((unsigned long)((500)*(48000000/4000.0)));
  1089   0071AC  0E1F               	movlw	31
  1090   0071AE  6E3B               	movwf	(??_main+1)^0,c
  1091   0071B0  0E71               	movlw	113
  1092   0071B2  6E3A               	movwf	??_main^0,c
  1093   0071B4  0E1E               	movlw	30
  1094   0071B6                     u1647:
  1095   0071B6  2EE8               	decfsz	wreg,f,c
  1096   0071B8  D7FE               	bra	u1647
  1097   0071BA  2E3A               	decfsz	??_main^0,f,c
  1098   0071BC  D7FC               	bra	u1647
  1099   0071BE  2E3B               	decfsz	(??_main+1)^0,f,c
  1100   0071C0  D7FA               	bra	u1647
  1101   0071C2  D000               	nop2	
  1102   0071C4                     
  1103                           ;main.c: 32:     uint8_t c2 = 0;
  1104   0071C4  0E00               	movlw	0
  1105   0071C6  6E3D               	movwf	main@c2^0,c
  1106   0071C8                     l2249:
  1107                           
  1108                           ;main.c: 35:         LATAbits.LATA1 = 0;
  1109   0071C8  9289               	bcf	137,1,c	;volatile
  1110   0071CA                     
  1111                           ;main.c: 36:         c1 = SPI1_ByteExchange(c2);
  1112   0071CA  503D               	movf	main@c2^0,w,c
  1113   0071CC  EC52  F037         	call	_SPI1_ByteExchange
  1114   0071D0  6E3C               	movwf	main@c1^0,c
  1115   0071D2                     
  1116                           ;main.c: 37:         LATAbits.LATA1 = 1;
  1117   0071D2  8289               	bsf	137,1,c	;volatile
  1118   0071D4                     
  1119                           ;main.c: 39:         c2 = c1 + 1;
  1120   0071D4  283C               	incf	main@c1^0,w,c
  1121   0071D6  6E3D               	movwf	main@c2^0,c
  1122   0071D8                     
  1123                           ;main.c: 40:         _delay((unsigned long)((1000)*(48000000/4000.0)));
  1124   0071D8  0E3D               	movlw	61
  1125   0071DA  6E3B               	movwf	(??_main+1)^0,c
  1126   0071DC  0EE1               	movlw	225
  1127   0071DE  6E3A               	movwf	??_main^0,c
  1128   0071E0  0E40               	movlw	64
  1129   0071E2                     u1657:
  1130   0071E2  2EE8               	decfsz	wreg,f,c
  1131   0071E4  D7FE               	bra	u1657
  1132   0071E6  2E3A               	decfsz	??_main^0,f,c
  1133   0071E8  D7FC               	bra	u1657
  1134   0071EA  2E3B               	decfsz	(??_main+1)^0,f,c
  1135   0071EC  D7FA               	bra	u1657
  1136   0071EE  EFE4  F038         	goto	l2249
  1137   0071F2  EF00  F000         	goto	start
  1138   0071F6                     __end_of_main:
  1139                           	callstack 0
  1140                           
  1141 ;; *************** function _UART_Init *****************
  1142 ;; Defined at:
  1143 ;;		line 20 in file "librerias/UART.c"
  1144 ;; Parameters:    Size  Location     Type
  1145 ;;  baudrate        4   42[COMRAM] unsigned long 
  1146 ;; Auto vars:     Size  Location     Type
  1147 ;;		None
  1148 ;; Return value:  Size  Location     Type
  1149 ;;                  1    wreg      void 
  1150 ;; Registers used:
  1151 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1152 ;; Tracked objects:
  1153 ;;		On entry : 0/0
  1154 ;;		On exit  : 0/0
  1155 ;;		Unchanged: 0/0
  1156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1157 ;;      Params:         4       0       0       0       0       0       0       0       0
  1158 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1159 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1160 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1161 ;;Total ram usage:        4 bytes
  1162 ;; Hardware stack levels used: 1
  1163 ;; Hardware stack levels required when called: 7
  1164 ;; This function calls:
  1165 ;;		_UART_config_show
  1166 ;;		_UART_select_baud
  1167 ;; This function is called by:
  1168 ;;		_main
  1169 ;; This function uses a non-reentrant model
  1170 ;;
  1171                           
  1172                           	psect	text1
  1173   006EFC                     __ptext1:
  1174                           	callstack 0
  1175   006EFC                     _UART_Init:
  1176                           	callstack 23
  1177   006EFC                     
  1178                           ;librerias/UART.c: 21:     TXSTA1bits.SYNC1 = 0;
  1179   006EFC  98AC               	bcf	172,4,c	;volatile
  1180                           
  1181                           ;librerias/UART.c: 22:     TXSTA1bits.BRGH1 = 1;
  1182   006EFE  84AC               	bsf	172,2,c	;volatile
  1183                           
  1184                           ;librerias/UART.c: 23:     BAUDCON1bits.BRG161 = 1;
  1185   006F00  86B8               	bsf	184,3,c	;volatile
  1186   006F02                     
  1187                           ;librerias/UART.c: 24:     UART_select_baud(baudrate);
  1188   006F02  C02B  F001         	movff	UART_Init@baudrate,UART_select_baud@baudrate
  1189   006F06  C02C  F002         	movff	UART_Init@baudrate+1,UART_select_baud@baudrate+1
  1190   006F0A  C02D  F003         	movff	UART_Init@baudrate+2,UART_select_baud@baudrate+2
  1191   006F0E  C02E  F004         	movff	UART_Init@baudrate+3,UART_select_baud@baudrate+3
  1192   006F12  EC5C  F03A         	call	_UART_select_baud	;wreg free
  1193   006F16                     
  1194                           ;librerias/UART.c: 25:     TRISC6 = 1;
  1195   006F16  8C94               	bsf	3988,6,c	;volatile
  1196   006F18                     
  1197                           ;librerias/UART.c: 26:     TRISC7 = 1;
  1198   006F18  8E94               	bsf	3988,7,c	;volatile
  1199   006F1A                     
  1200                           ;librerias/UART.c: 27:     RCSTAbits.SPEN = 1;
  1201   006F1A  8EAB               	bsf	171,7,c	;volatile
  1202   006F1C                     
  1203                           ;librerias/UART.c: 28:     TXSTAbits.TXEN1 = 1;
  1204   006F1C  8AAC               	bsf	172,5,c	;volatile
  1205   006F1E                     
  1206                           ;librerias/UART.c: 29:     RCSTAbits.CREN = 1;
  1207   006F1E  88AB               	bsf	171,4,c	;volatile
  1208   006F20                     
  1209                           ;librerias/UART.c: 30:     UART_config_show();
  1210   006F20  ECFC  F03A         	call	_UART_config_show	;wreg free
  1211   006F24  0012               	return		;funcret
  1212   006F26                     __end_of_UART_Init:
  1213                           	callstack 0
  1214                           
  1215 ;; *************** function _UART_select_baud *****************
  1216 ;; Defined at:
  1217 ;;		line 33 in file "librerias/UART.c"
  1218 ;; Parameters:    Size  Location     Type
  1219 ;;  baudrate        4    0[COMRAM] unsigned long 
  1220 ;; Auto vars:     Size  Location     Type
  1221 ;;		None
  1222 ;; Return value:  Size  Location     Type
  1223 ;;                  1    wreg      void 
  1224 ;; Registers used:
  1225 ;;		wreg, status,2, status,0
  1226 ;; Tracked objects:
  1227 ;;		On entry : 0/0
  1228 ;;		On exit  : 0/0
  1229 ;;		Unchanged: 0/0
  1230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1231 ;;      Params:         4       0       0       0       0       0       0       0       0
  1232 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1233 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1234 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1235 ;;Total ram usage:        8 bytes
  1236 ;; Hardware stack levels used: 1
  1237 ;; This function calls:
  1238 ;;		Nothing
  1239 ;; This function is called by:
  1240 ;;		_UART_Init
  1241 ;; This function uses a non-reentrant model
  1242 ;;
  1243                           
  1244                           	psect	text2
  1245   0074B8                     __ptext2:
  1246                           	callstack 0
  1247   0074B8                     _UART_select_baud:
  1248                           	callstack 29
  1249   0074B8                     
  1250                           ;librerias/UART.c: 34:     switch (baudrate){
  1251   0074B8  EF8E  F03A         	goto	l2007
  1252   0074BC                     l1989:
  1253                           
  1254                           ;librerias/UART.c: 36:             SPBRGH = 0x9C;
  1255   0074BC  0E9C               	movlw	156
  1256   0074BE  6EB0               	movwf	176,c	;volatile
  1257                           
  1258                           ;librerias/UART.c: 37:             SPBRG = 0x3F;
  1259   0074C0  0E3F               	movlw	63
  1260   0074C2  6EAF               	movwf	175,c	;volatile
  1261                           
  1262                           ;librerias/UART.c: 38:             break;
  1263   0074C4  EFFB  F03A         	goto	l109
  1264   0074C8                     l1991:
  1265                           
  1266                           ;librerias/UART.c: 40:             SPBRGH = 0x27;
  1267   0074C8  0E27               	movlw	39
  1268   0074CA  6EB0               	movwf	176,c	;volatile
  1269                           
  1270                           ;librerias/UART.c: 41:             SPBRG = 0x0F;
  1271   0074CC  0E0F               	movlw	15
  1272   0074CE  6EAF               	movwf	175,c	;volatile
  1273                           
  1274                           ;librerias/UART.c: 42:             break;
  1275   0074D0  EFFB  F03A         	goto	l109
  1276   0074D4                     l1993:
  1277                           
  1278                           ;librerias/UART.c: 44:             SPBRGH = 0x13;
  1279   0074D4  0E13               	movlw	19
  1280   0074D6  6EB0               	movwf	176,c	;volatile
  1281                           
  1282                           ;librerias/UART.c: 45:             SPBRG = 0x87;
  1283   0074D8  0E87               	movlw	135
  1284   0074DA  6EAF               	movwf	175,c	;volatile
  1285                           
  1286                           ;librerias/UART.c: 46:             break;
  1287   0074DC  EFFB  F03A         	goto	l109
  1288   0074E0                     l1995:
  1289                           
  1290                           ;librerias/UART.c: 48:             SPBRGH = 0x04;
  1291   0074E0  0E04               	movlw	4
  1292   0074E2  6EB0               	movwf	176,c	;volatile
  1293                           
  1294                           ;librerias/UART.c: 49:             SPBRG = 0x7F;
  1295   0074E4  0E7F               	movlw	127
  1296   0074E6  6EAF               	movwf	175,c	;volatile
  1297                           
  1298                           ;librerias/UART.c: 50:             break;
  1299   0074E8  EFFB  F03A         	goto	l109
  1300   0074EC                     l1997:
  1301                           
  1302                           ;librerias/UART.c: 52:             SPBRGH = 0x02;
  1303   0074EC  0E02               	movlw	2
  1304   0074EE  6EB0               	movwf	176,c	;volatile
  1305                           
  1306                           ;librerias/UART.c: 53:             SPBRG = 0x70;
  1307   0074F0  0E70               	movlw	112
  1308   0074F2  6EAF               	movwf	175,c	;volatile
  1309                           
  1310                           ;librerias/UART.c: 54:             break;
  1311   0074F4  EFFB  F03A         	goto	l109
  1312   0074F8                     l1999:
  1313                           
  1314                           ;librerias/UART.c: 56:             SPBRGH = 0x00;
  1315   0074F8  0E00               	movlw	0
  1316   0074FA  6EB0               	movwf	176,c	;volatile
  1317                           
  1318                           ;librerias/UART.c: 57:             SPBRG = 0xCF;
  1319   0074FC  0ECF               	movlw	207
  1320   0074FE  6EAF               	movwf	175,c	;volatile
  1321                           
  1322                           ;librerias/UART.c: 58:             break;
  1323   007500  EFFB  F03A         	goto	l109
  1324   007504                     l2001:
  1325                           
  1326                           ;librerias/UART.c: 60:             SPBRGH = 0x00;
  1327   007504  0E00               	movlw	0
  1328   007506  6EB0               	movwf	176,c	;volatile
  1329                           
  1330                           ;librerias/UART.c: 61:             SPBRG = 0x67;
  1331   007508  0E67               	movlw	103
  1332   00750A  6EAF               	movwf	175,c	;volatile
  1333                           
  1334                           ;librerias/UART.c: 62:             break;
  1335   00750C  EFFB  F03A         	goto	l109
  1336   007510                     l2003:
  1337                           
  1338                           ;librerias/UART.c: 64:             SPBRGH = 0x04;
  1339   007510  0E04               	movlw	4
  1340   007512  6EB0               	movwf	176,c	;volatile
  1341                           
  1342                           ;librerias/UART.c: 65:             SPBRG = 0xE1;
  1343   007514  0EE1               	movlw	225
  1344   007516  6EAF               	movwf	175,c	;volatile
  1345                           
  1346                           ;librerias/UART.c: 66:             break;
  1347   007518  EFFB  F03A         	goto	l109
  1348   00751C                     l2007:
  1349   00751C  C001  F005         	movff	UART_select_baud@baudrate,??_UART_select_baud
  1350   007520  C002  F006         	movff	UART_select_baud@baudrate+1,??_UART_select_baud+1
  1351   007524  C003  F007         	movff	UART_select_baud@baudrate+2,??_UART_select_baud+2
  1352   007528  C004  F008         	movff	UART_select_baud@baudrate+3,??_UART_select_baud+3
  1353                           
  1354                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 3 sub-sw
      +                          itches
  1355                           ; Switch size 1, requested type "simple"
  1356                           ; Number of cases is 1, Range of values is 0 to 0
  1357                           ; switch strategies available:
  1358                           ; Name         Instructions Cycles
  1359                           ; simple_byte            4     3 (average)
  1360                           ;	Chosen strategy is simple_byte
  1361   00752C  5008               	movf	(??_UART_select_baud+3)^0,w,c
  1362   00752E  0A00               	xorlw	0	; case 0
  1363   007530  B4D8               	btfsc	status,2,c
  1364   007532  EFF0  F03A         	goto	l2353
  1365   007536  EF88  F03A         	goto	l2003
  1366   00753A                     l2349:
  1367                           
  1368                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 6 sub-sw
      +                          itches
  1369                           ; Switch size 1, requested type "simple"
  1370                           ; Number of cases is 6, Range of values is 1 to 225
  1371                           ; switch strategies available:
  1372                           ; Name         Instructions Cycles
  1373                           ; simple_byte           19    10 (average)
  1374                           ;	Chosen strategy is simple_byte
  1375   00753A  5006               	movf	(??_UART_select_baud+1)^0,w,c
  1376   00753C  0A01               	xorlw	1	; case 1
  1377   00753E  B4D8               	btfsc	status,2,c
  1378   007540  EFB8  F03A         	goto	l2355
  1379   007544  0A05               	xorlw	5	; case 4
  1380   007546  B4D8               	btfsc	status,2,c
  1381   007548  EFBF  F03A         	goto	l2357
  1382   00754C  0A0D               	xorlw	13	; case 9
  1383   00754E  B4D8               	btfsc	status,2,c
  1384   007550  EFC6  F03A         	goto	l2359
  1385   007554  0A21               	xorlw	33	; case 40
  1386   007556  B4D8               	btfsc	status,2,c
  1387   007558  EFCD  F03A         	goto	l2361
  1388   00755C  0A63               	xorlw	99	; case 75
  1389   00755E  B4D8               	btfsc	status,2,c
  1390   007560  EFD4  F03A         	goto	l2363
  1391   007564  0AAA               	xorlw	170	; case 225
  1392   007566  B4D8               	btfsc	status,2,c
  1393   007568  EFDB  F03A         	goto	l2365
  1394   00756C  EF88  F03A         	goto	l2003
  1395   007570                     l2355:
  1396                           
  1397                           ; Switch size 1, requested type "simple"
  1398                           ; Number of cases is 1, Range of values is 44 to 44
  1399                           ; switch strategies available:
  1400                           ; Name         Instructions Cycles
  1401                           ; simple_byte            4     3 (average)
  1402                           ;	Chosen strategy is simple_byte
  1403   007570  5005               	movf	??_UART_select_baud^0,w,c
  1404   007572  0A2C               	xorlw	44	; case 44
  1405   007574  B4D8               	btfsc	status,2,c
  1406   007576  EF5E  F03A         	goto	l1989
  1407   00757A  EF88  F03A         	goto	l2003
  1408   00757E                     l2357:
  1409                           
  1410                           ; Switch size 1, requested type "simple"
  1411                           ; Number of cases is 1, Range of values is 176 to 176
  1412                           ; switch strategies available:
  1413                           ; Name         Instructions Cycles
  1414                           ; simple_byte            4     3 (average)
  1415                           ;	Chosen strategy is simple_byte
  1416   00757E  5005               	movf	??_UART_select_baud^0,w,c
  1417   007580  0AB0               	xorlw	176	; case 176
  1418   007582  B4D8               	btfsc	status,2,c
  1419   007584  EF64  F03A         	goto	l1991
  1420   007588  EF88  F03A         	goto	l2003
  1421   00758C                     l2359:
  1422                           
  1423                           ; Switch size 1, requested type "simple"
  1424                           ; Number of cases is 1, Range of values is 96 to 96
  1425                           ; switch strategies available:
  1426                           ; Name         Instructions Cycles
  1427                           ; simple_byte            4     3 (average)
  1428                           ;	Chosen strategy is simple_byte
  1429   00758C  5005               	movf	??_UART_select_baud^0,w,c
  1430   00758E  0A60               	xorlw	96	; case 96
  1431   007590  B4D8               	btfsc	status,2,c
  1432   007592  EF6A  F03A         	goto	l1993
  1433   007596  EF88  F03A         	goto	l2003
  1434   00759A                     l2361:
  1435                           
  1436                           ; Switch size 1, requested type "simple"
  1437                           ; Number of cases is 1, Range of values is 177 to 177
  1438                           ; switch strategies available:
  1439                           ; Name         Instructions Cycles
  1440                           ; simple_byte            4     3 (average)
  1441                           ;	Chosen strategy is simple_byte
  1442   00759A  5005               	movf	??_UART_select_baud^0,w,c
  1443   00759C  0AB1               	xorlw	177	; case 177
  1444   00759E  B4D8               	btfsc	status,2,c
  1445   0075A0  EF70  F03A         	goto	l1995
  1446   0075A4  EF88  F03A         	goto	l2003
  1447   0075A8                     l2363:
  1448                           
  1449                           ; Switch size 1, requested type "simple"
  1450                           ; Number of cases is 1, Range of values is 0 to 0
  1451                           ; switch strategies available:
  1452                           ; Name         Instructions Cycles
  1453                           ; simple_byte            4     3 (average)
  1454                           ;	Chosen strategy is simple_byte
  1455   0075A8  5005               	movf	??_UART_select_baud^0,w,c
  1456   0075AA  0A00               	xorlw	0	; case 0
  1457   0075AC  B4D8               	btfsc	status,2,c
  1458   0075AE  EF76  F03A         	goto	l1997
  1459   0075B2  EF88  F03A         	goto	l2003
  1460   0075B6                     l2365:
  1461                           
  1462                           ; Switch size 1, requested type "simple"
  1463                           ; Number of cases is 1, Range of values is 0 to 0
  1464                           ; switch strategies available:
  1465                           ; Name         Instructions Cycles
  1466                           ; simple_byte            4     3 (average)
  1467                           ;	Chosen strategy is simple_byte
  1468   0075B6  5005               	movf	??_UART_select_baud^0,w,c
  1469   0075B8  0A00               	xorlw	0	; case 0
  1470   0075BA  B4D8               	btfsc	status,2,c
  1471   0075BC  EF7C  F03A         	goto	l1999
  1472   0075C0  EF88  F03A         	goto	l2003
  1473   0075C4                     l2351:
  1474                           
  1475                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1476                           ; Switch size 1, requested type "simple"
  1477                           ; Number of cases is 1, Range of values is 194 to 194
  1478                           ; switch strategies available:
  1479                           ; Name         Instructions Cycles
  1480                           ; simple_byte            4     3 (average)
  1481                           ;	Chosen strategy is simple_byte
  1482   0075C4  5006               	movf	(??_UART_select_baud+1)^0,w,c
  1483   0075C6  0AC2               	xorlw	194	; case 194
  1484   0075C8  B4D8               	btfsc	status,2,c
  1485   0075CA  EFE9  F03A         	goto	l2367
  1486   0075CE  EF88  F03A         	goto	l2003
  1487   0075D2                     l2367:
  1488                           
  1489                           ; Switch size 1, requested type "simple"
  1490                           ; Number of cases is 1, Range of values is 0 to 0
  1491                           ; switch strategies available:
  1492                           ; Name         Instructions Cycles
  1493                           ; simple_byte            4     3 (average)
  1494                           ;	Chosen strategy is simple_byte
  1495   0075D2  5005               	movf	??_UART_select_baud^0,w,c
  1496   0075D4  0A00               	xorlw	0	; case 0
  1497   0075D6  B4D8               	btfsc	status,2,c
  1498   0075D8  EF82  F03A         	goto	l2001
  1499   0075DC  EF88  F03A         	goto	l2003
  1500   0075E0                     l2353:
  1501                           
  1502                           ; Switch size 1, requested type "simple"
  1503                           ; Number of cases is 2, Range of values is 0 to 1
  1504                           ; switch strategies available:
  1505                           ; Name         Instructions Cycles
  1506                           ; simple_byte            7     4 (average)
  1507                           ;	Chosen strategy is simple_byte
  1508   0075E0  5007               	movf	(??_UART_select_baud+2)^0,w,c
  1509   0075E2  0A00               	xorlw	0	; case 0
  1510   0075E4  B4D8               	btfsc	status,2,c
  1511   0075E6  EF9D  F03A         	goto	l2349
  1512   0075EA  0A01               	xorlw	1	; case 1
  1513   0075EC  B4D8               	btfsc	status,2,c
  1514   0075EE  EFE2  F03A         	goto	l2351
  1515   0075F2  EF88  F03A         	goto	l2003
  1516   0075F6                     l109:
  1517   0075F6  0012               	return		;funcret
  1518   0075F8                     __end_of_UART_select_baud:
  1519                           	callstack 0
  1520                           
  1521 ;; *************** function _UART_config_show *****************
  1522 ;; Defined at:
  1523 ;;		line 5 in file "librerias/UART.c"
  1524 ;; Parameters:    Size  Location     Type
  1525 ;;		None
  1526 ;; Auto vars:     Size  Location     Type
  1527 ;;		None
  1528 ;; Return value:  Size  Location     Type
  1529 ;;                  1    wreg      void 
  1530 ;; Registers used:
  1531 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1532 ;; Tracked objects:
  1533 ;;		On entry : 0/0
  1534 ;;		On exit  : 0/0
  1535 ;;		Unchanged: 0/0
  1536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1537 ;;      Params:         0       0       0       0       0       0       0       0       0
  1538 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1539 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1540 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1541 ;;Total ram usage:        0 bytes
  1542 ;; Hardware stack levels used: 1
  1543 ;; Hardware stack levels required when called: 6
  1544 ;; This function calls:
  1545 ;;		_printf
  1546 ;; This function is called by:
  1547 ;;		_UART_Init
  1548 ;; This function uses a non-reentrant model
  1549 ;;
  1550                           
  1551                           	psect	text3
  1552   0075F8                     __ptext3:
  1553                           	callstack 0
  1554   0075F8                     _UART_config_show:
  1555                           	callstack 23
  1556   0075F8                     
  1557                           ;librerias/UART.c: 6:     printf("Modo: ");
  1558   0075F8  0ED5               	movlw	low STR_1
  1559   0075FA  6E24               	movwf	printf@fmt^0,c
  1560   0075FC  0E7F               	movlw	high STR_1
  1561   0075FE  6E25               	movwf	(printf@fmt+1)^0,c
  1562   007600  EC5F  F037         	call	_printf	;wreg free
  1563   007604                     
  1564                           ;librerias/UART.c: 7:     (SYNC1) ? printf("Sincrono "):printf("Asincrono ");
  1565   007604  A8AC               	btfss	4012,4,c	;volatile
  1566   007606  EF07  F03B         	goto	u1131
  1567   00760A  EF09  F03B         	goto	u1130
  1568   00760E                     u1131:
  1569   00760E  EF11  F03B         	goto	l1955
  1570   007612                     u1130:
  1571   007612  0E90               	movlw	low STR_2
  1572   007614  6E24               	movwf	printf@fmt^0,c
  1573   007616  0E7F               	movlw	high STR_2
  1574   007618  6E25               	movwf	(printf@fmt+1)^0,c
  1575   00761A  EC5F  F037         	call	_printf	;wreg free
  1576   00761E  EF17  F03B         	goto	l1957
  1577   007622                     l1955:
  1578   007622  0E7B               	movlw	low STR_3
  1579   007624  6E24               	movwf	printf@fmt^0,c
  1580   007626  0E7F               	movlw	high STR_3
  1581   007628  6E25               	movwf	(printf@fmt+1)^0,c
  1582   00762A  EC5F  F037         	call	_printf	;wreg free
  1583   00762E                     l1957:
  1584                           
  1585                           ;librerias/UART.c: 8:     (BRGH1) ? printf("alta velocidad \r\n"):printf("baja velocidad
      +                           \r\n");
  1586   00762E  A4AC               	btfss	4012,2,c	;volatile
  1587   007630  EF1C  F03B         	goto	u1141
  1588   007634  EF1E  F03B         	goto	u1140
  1589   007638                     u1141:
  1590   007638  EF26  F03B         	goto	l1961
  1591   00763C                     u1140:
  1592   00763C  0E9F               	movlw	low STR_4
  1593   00763E  6E24               	movwf	printf@fmt^0,c
  1594   007640  0E7E               	movlw	high STR_4
  1595   007642  6E25               	movwf	(printf@fmt+1)^0,c
  1596   007644  EC5F  F037         	call	_printf	;wreg free
  1597   007648  EF2C  F03B         	goto	l76
  1598   00764C                     l1961:
  1599   00764C  0E8D               	movlw	low STR_5
  1600   00764E  6E24               	movwf	printf@fmt^0,c
  1601   007650  0E7E               	movlw	high STR_5
  1602   007652  6E25               	movwf	(printf@fmt+1)^0,c
  1603   007654  EC5F  F037         	call	_printf	;wreg free
  1604   007658                     l76:
  1605                           
  1606                           ;librerias/UART.c: 9:     printf("Baudrate: ");
  1607   007658  0E65               	movlw	low STR_6
  1608   00765A  6E24               	movwf	printf@fmt^0,c
  1609   00765C  0E7F               	movlw	high STR_6
  1610   00765E  6E25               	movwf	(printf@fmt+1)^0,c
  1611   007660  EC5F  F037         	call	_printf	;wreg free
  1612   007664                     
  1613                           ;librerias/UART.c: 10:     (BRG161) ? printf("16 bits "):printf("8 bits ");
  1614   007664  A6B8               	btfss	4024,3,c	;volatile
  1615   007666  EF37  F03B         	goto	u1151
  1616   00766A  EF39  F03B         	goto	u1150
  1617   00766E                     u1151:
  1618   00766E  EF41  F03B         	goto	l1967
  1619   007672                     u1150:
  1620   007672  0EB5               	movlw	low STR_7
  1621   007674  6E24               	movwf	printf@fmt^0,c
  1622   007676  0E7F               	movlw	high STR_7
  1623   007678  6E25               	movwf	(printf@fmt+1)^0,c
  1624   00767A  EC5F  F037         	call	_printf	;wreg free
  1625   00767E  EF47  F03B         	goto	l80
  1626   007682                     l1967:
  1627   007682  0EC6               	movlw	low STR_8
  1628   007684  6E24               	movwf	printf@fmt^0,c
  1629   007686  0E7F               	movlw	high STR_8
  1630   007688  6E25               	movwf	(printf@fmt+1)^0,c
  1631   00768A  EC5F  F037         	call	_printf	;wreg free
  1632   00768E                     l80:
  1633                           
  1634                           ;librerias/UART.c: 11:     printf("x baudios \r\n");
  1635   00768E  0E42               	movlw	low STR_9
  1636   007690  6E24               	movwf	printf@fmt^0,c
  1637   007692  0E7F               	movlw	high STR_9
  1638   007694  6E25               	movwf	(printf@fmt+1)^0,c
  1639   007696  EC5F  F037         	call	_printf	;wreg free
  1640                           
  1641                           ;librerias/UART.c: 12:     printf("Puerto: ");
  1642   00769A  0EAC               	movlw	low STR_10
  1643   00769C  6E24               	movwf	printf@fmt^0,c
  1644   00769E  0E7F               	movlw	high STR_10
  1645   0076A0  6E25               	movwf	(printf@fmt+1)^0,c
  1646   0076A2  EC5F  F037         	call	_printf	;wreg free
  1647   0076A6                     
  1648                           ;librerias/UART.c: 13:     (SPEN) ? printf("Habilitado \r\n"):printf("Deshabilitado \r\n
      +                          ");
  1649   0076A6  AEAB               	btfss	4011,7,c	;volatile
  1650   0076A8  EF58  F03B         	goto	u1161
  1651   0076AC  EF5A  F03B         	goto	u1160
  1652   0076B0                     u1161:
  1653   0076B0  EF62  F03B         	goto	l1973
  1654   0076B4                     u1160:
  1655   0076B4  0E34               	movlw	low STR_11
  1656   0076B6  6E24               	movwf	printf@fmt^0,c
  1657   0076B8  0E7F               	movlw	high STR_11
  1658   0076BA  6E25               	movwf	(printf@fmt+1)^0,c
  1659   0076BC  EC5F  F037         	call	_printf	;wreg free
  1660   0076C0  EF68  F03B         	goto	l84
  1661   0076C4                     l1973:
  1662   0076C4  0ED3               	movlw	low STR_12
  1663   0076C6  6E24               	movwf	printf@fmt^0,c
  1664   0076C8  0E7E               	movlw	high STR_12
  1665   0076CA  6E25               	movwf	(printf@fmt+1)^0,c
  1666   0076CC  EC5F  F037         	call	_printf	;wreg free
  1667   0076D0                     l84:
  1668                           
  1669                           ;librerias/UART.c: 14:     printf("Transor: ");
  1670   0076D0  0E86               	movlw	low STR_13
  1671   0076D2  6E24               	movwf	printf@fmt^0,c
  1672   0076D4  0E7F               	movlw	high STR_13
  1673   0076D6  6E25               	movwf	(printf@fmt+1)^0,c
  1674   0076D8  EC5F  F037         	call	_printf	;wreg free
  1675   0076DC                     
  1676                           ;librerias/UART.c: 15:     (TXEN1) ? printf("Habilitado \r\n"):printf("Deshabilitado \r\
      +                          n");
  1677   0076DC  AAAC               	btfss	4012,5,c	;volatile
  1678   0076DE  EF73  F03B         	goto	u1171
  1679   0076E2  EF75  F03B         	goto	u1170
  1680   0076E6                     u1171:
  1681   0076E6  EF7D  F03B         	goto	l1979
  1682   0076EA                     u1170:
  1683   0076EA  0E34               	movlw	low STR_11
  1684   0076EC  6E24               	movwf	printf@fmt^0,c
  1685   0076EE  0E7F               	movlw	high STR_11
  1686   0076F0  6E25               	movwf	(printf@fmt+1)^0,c
  1687   0076F2  EC5F  F037         	call	_printf	;wreg free
  1688   0076F6  EF83  F03B         	goto	l88
  1689   0076FA                     l1979:
  1690   0076FA  0ED3               	movlw	low STR_12
  1691   0076FC  6E24               	movwf	printf@fmt^0,c
  1692   0076FE  0E7E               	movlw	high STR_12
  1693   007700  6E25               	movwf	(printf@fmt+1)^0,c
  1694   007702  EC5F  F037         	call	_printf	;wreg free
  1695   007706                     l88:
  1696                           
  1697                           ;librerias/UART.c: 16:     printf("Receptor: ");
  1698   007706  0E70               	movlw	low STR_16
  1699   007708  6E24               	movwf	printf@fmt^0,c
  1700   00770A  0E7F               	movlw	high STR_16
  1701   00770C  6E25               	movwf	(printf@fmt+1)^0,c
  1702   00770E  EC5F  F037         	call	_printf	;wreg free
  1703   007712                     
  1704                           ;librerias/UART.c: 17:     (CREN) ? printf("Habilitado \r\n"):printf("Deshabilitado \r\n
      +                          ");
  1705   007712  A8AB               	btfss	4011,4,c	;volatile
  1706   007714  EF8E  F03B         	goto	u1181
  1707   007718  EF90  F03B         	goto	u1180
  1708   00771C                     u1181:
  1709   00771C  EF98  F03B         	goto	l1985
  1710   007720                     u1180:
  1711   007720  0E34               	movlw	low STR_11
  1712   007722  6E24               	movwf	printf@fmt^0,c
  1713   007724  0E7F               	movlw	high STR_11
  1714   007726  6E25               	movwf	(printf@fmt+1)^0,c
  1715   007728  EC5F  F037         	call	_printf	;wreg free
  1716   00772C  EF9E  F03B         	goto	l93
  1717   007730                     l1985:
  1718   007730  0ED3               	movlw	low STR_12
  1719   007732  6E24               	movwf	printf@fmt^0,c
  1720   007734  0E7E               	movlw	high STR_12
  1721   007736  6E25               	movwf	(printf@fmt+1)^0,c
  1722   007738  EC5F  F037         	call	_printf	;wreg free
  1723   00773C                     l93:
  1724   00773C  0012               	return		;funcret
  1725   00773E                     __end_of_UART_config_show:
  1726                           	callstack 0
  1727                           
  1728 ;; *************** function _SPI_master_init *****************
  1729 ;; Defined at:
  1730 ;;		line 28 in file "librerias/SPI.c"
  1731 ;; Parameters:    Size  Location     Type
  1732 ;;		None
  1733 ;; Auto vars:     Size  Location     Type
  1734 ;;		None
  1735 ;; Return value:  Size  Location     Type
  1736 ;;                  1    wreg      void 
  1737 ;; Registers used:
  1738 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1739 ;; Tracked objects:
  1740 ;;		On entry : 0/0
  1741 ;;		On exit  : 0/0
  1742 ;;		Unchanged: 0/0
  1743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1744 ;;      Params:         0       0       0       0       0       0       0       0       0
  1745 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1746 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1747 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1748 ;;Total ram usage:        0 bytes
  1749 ;; Hardware stack levels used: 1
  1750 ;; Hardware stack levels required when called: 8
  1751 ;; This function calls:
  1752 ;;		_SPI_BaudRateGen
  1753 ;;		_SPI_config_show
  1754 ;; This function is called by:
  1755 ;;		_main
  1756 ;;		_SPI_master_reset
  1757 ;; This function uses a non-reentrant model
  1758 ;;
  1759                           
  1760                           	psect	text4
  1761   006F5A                     __ptext4:
  1762                           	callstack 0
  1763   006F5A                     _SPI_master_init:
  1764                           	callstack 22
  1765   006F5A                     
  1766                           ;librerias/SPI.c: 29:     SPI_BaudRateGen(60000);
  1767   006F5A  0E60               	movlw	96
  1768   006F5C  6E2E               	movwf	SPI_BaudRateGen@FClock^0,c
  1769   006F5E  0EEA               	movlw	234
  1770   006F60  6E2F               	movwf	(SPI_BaudRateGen@FClock+1)^0,c
  1771   006F62  0E00               	movlw	0
  1772   006F64  6E30               	movwf	(SPI_BaudRateGen@FClock+2)^0,c
  1773   006F66  0E00               	movlw	0
  1774   006F68  6E31               	movwf	(SPI_BaudRateGen@FClock+3)^0,c
  1775   006F6A  EC59  F038         	call	_SPI_BaudRateGen	;wreg free
  1776   006F6E                     
  1777                           ;librerias/SPI.c: 30:     TRISAbits.RA5 = 0;
  1778   006F6E  9A92               	bcf	146,5,c	;volatile
  1779   006F70                     
  1780                           ;librerias/SPI.c: 31:     TRISBbits.RB0 = 1;
  1781   006F70  8093               	bsf	147,0,c	;volatile
  1782   006F72                     
  1783                           ;librerias/SPI.c: 32:     TRISBbits.RB1 = 0;
  1784   006F72  9293               	bcf	147,1,c	;volatile
  1785   006F74                     
  1786                           ;librerias/SPI.c: 33:     TRISBbits.RB3 = 0;
  1787   006F74  9693               	bcf	147,3,c	;volatile
  1788   006F76                     
  1789                           ;librerias/SPI.c: 34:     SSPCON1bits.SSPM = 0xA;
  1790   006F76  50C6               	movf	198,w,c	;volatile
  1791   006F78  0BF0               	andlw	-16
  1792   006F7A  090A               	iorlw	10
  1793   006F7C  6EC6               	movwf	198,c	;volatile
  1794   006F7E                     
  1795                           ;librerias/SPI.c: 35:     BOEN = 1;
  1796   006F7E  88CB               	bsf	4043,4,c	;volatile
  1797   006F80  8AC6               	bsf	4038,5,c	;volatile
  1798   006F82  98C6               	bcf	198,4,c	;volatile
  1799   006F84  9CC7               	bcf	199,6,c	;volatile
  1800   006F86  8EC7               	bsf	199,7,c	;volatile
  1801   006F88                     
  1802                           ;librerias/SPI.c: 41:     LATAbits.LA5 = 1;
  1803   006F88  8A89               	bsf	137,5,c	;volatile
  1804   006F8A                     
  1805                           ;librerias/SPI.c: 42:     SPI_config_show();
  1806   006F8A  EC9F  F03B         	call	_SPI_config_show	;wreg free
  1807   006F8E  0012               	return		;funcret
  1808   006F90                     __end_of_SPI_master_init:
  1809                           	callstack 0
  1810                           
  1811 ;; *************** function _SPI_config_show *****************
  1812 ;; Defined at:
  1813 ;;		line 3 in file "librerias/SPI.c"
  1814 ;; Parameters:    Size  Location     Type
  1815 ;;		None
  1816 ;; Auto vars:     Size  Location     Type
  1817 ;;		None
  1818 ;; Return value:  Size  Location     Type
  1819 ;;                  1    wreg      void 
  1820 ;; Registers used:
  1821 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1822 ;; Tracked objects:
  1823 ;;		On entry : 0/0
  1824 ;;		On exit  : 0/0
  1825 ;;		Unchanged: 0/0
  1826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1827 ;;      Params:         0       0       0       0       0       0       0       0       0
  1828 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1829 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1830 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1831 ;;Total ram usage:        0 bytes
  1832 ;; Hardware stack levels used: 1
  1833 ;; Hardware stack levels required when called: 6
  1834 ;; This function calls:
  1835 ;;		_SPI_actual_frec
  1836 ;;		_printf
  1837 ;; This function is called by:
  1838 ;;		_SPI_master_init
  1839 ;; This function uses a non-reentrant model
  1840 ;;
  1841                           
  1842                           	psect	text5
  1843   00773E                     __ptext5:
  1844                           	callstack 0
  1845   00773E                     _SPI_config_show:
  1846                           	callstack 23
  1847   00773E                     
  1848                           ;librerias/SPI.c: 4:     printf("\r\nConfiguracion SPI:\r\n");
  1849   00773E  0E76               	movlw	low STR_19
  1850   007740  6E24               	movwf	printf@fmt^0,c
  1851   007742  0E7E               	movlw	high STR_19
  1852   007744  6E25               	movwf	(printf@fmt+1)^0,c
  1853   007746  EC5F  F037         	call	_printf	;wreg free
  1854                           
  1855                           ;librerias/SPI.c: 6:     printf("Frecuencia SPI: ");
  1856   00774A  0EB1               	movlw	low STR_20
  1857   00774C  6E24               	movwf	printf@fmt^0,c
  1858   00774E  0E7E               	movlw	high STR_20
  1859   007750  6E25               	movwf	(printf@fmt+1)^0,c
  1860   007752  EC5F  F037         	call	_printf	;wreg free
  1861                           
  1862                           ;librerias/SPI.c: 7:     printf("%""l" "d" "\r\n",SPI_actual_frec());
  1863   007756  0EDC               	movlw	low STR_21
  1864   007758  6E24               	movwf	printf@fmt^0,c
  1865   00775A  0E7F               	movlw	high STR_21
  1866   00775C  6E25               	movwf	(printf@fmt+1)^0,c
  1867   00775E  ECEB  F037         	call	_SPI_actual_frec	;wreg free
  1868   007762  C00F  F026         	movff	?_SPI_actual_frec,?_printf+2
  1869   007766  C010  F027         	movff	?_SPI_actual_frec+1,?_printf+3
  1870   00776A  C011  F028         	movff	?_SPI_actual_frec+2,?_printf+4
  1871   00776E  C012  F029         	movff	?_SPI_actual_frec+3,?_printf+5
  1872   007772  EC5F  F037         	call	_printf	;wreg free
  1873                           
  1874                           ;librerias/SPI.c: 9:     printf("SDI: ");
  1875   007776  0EE8               	movlw	low STR_22
  1876   007778  6E24               	movwf	printf@fmt^0,c
  1877   00777A  0E7F               	movlw	high STR_22
  1878   00777C  6E25               	movwf	(printf@fmt+1)^0,c
  1879   00777E  EC5F  F037         	call	_printf	;wreg free
  1880   007782                     
  1881                           ;librerias/SPI.c: 10:     (TRISBbits.RB0) ? printf("Input \r\t"):printf("Output\r\t");
  1882   007782  A093               	btfss	147,0,c	;volatile
  1883   007784  EFC6  F03B         	goto	u1191
  1884   007788  EFC8  F03B         	goto	u1190
  1885   00778C                     u1191:
  1886   00778C  EFD0  F03B         	goto	l2055
  1887   007790                     u1190:
  1888   007790  0E9A               	movlw	low STR_23
  1889   007792  6E24               	movwf	printf@fmt^0,c
  1890   007794  0E7F               	movlw	high STR_23
  1891   007796  6E25               	movwf	(printf@fmt+1)^0,c
  1892   007798  EC5F  F037         	call	_printf	;wreg free
  1893   00779C  EFD6  F03B         	goto	l212
  1894   0077A0                     l2055:
  1895   0077A0  0EA3               	movlw	low STR_24
  1896   0077A2  6E24               	movwf	printf@fmt^0,c
  1897   0077A4  0E7F               	movlw	high STR_24
  1898   0077A6  6E25               	movwf	(printf@fmt+1)^0,c
  1899   0077A8  EC5F  F037         	call	_printf	;wreg free
  1900   0077AC                     l212:
  1901                           
  1902                           ;librerias/SPI.c: 11:     printf("SDO: ");
  1903   0077AC  0EF4               	movlw	low STR_25
  1904   0077AE  6E24               	movwf	printf@fmt^0,c
  1905   0077B0  0E7F               	movlw	high STR_25
  1906   0077B2  6E25               	movwf	(printf@fmt+1)^0,c
  1907   0077B4  EC5F  F037         	call	_printf	;wreg free
  1908   0077B8                     
  1909                           ;librerias/SPI.c: 12:     (TRISBbits.RB3) ? printf("Input \r\t"):printf("Output\r\t");
  1910   0077B8  A693               	btfss	147,3,c	;volatile
  1911   0077BA  EFE1  F03B         	goto	u1201
  1912   0077BE  EFE3  F03B         	goto	u1200
  1913   0077C2                     u1201:
  1914   0077C2  EFEB  F03B         	goto	l2061
  1915   0077C6                     u1200:
  1916   0077C6  0E9A               	movlw	low STR_23
  1917   0077C8  6E24               	movwf	printf@fmt^0,c
  1918   0077CA  0E7F               	movlw	high STR_23
  1919   0077CC  6E25               	movwf	(printf@fmt+1)^0,c
  1920   0077CE  EC5F  F037         	call	_printf	;wreg free
  1921   0077D2  EFF1  F03B         	goto	l216
  1922   0077D6                     l2061:
  1923   0077D6  0EA3               	movlw	low STR_24
  1924   0077D8  6E24               	movwf	printf@fmt^0,c
  1925   0077DA  0E7F               	movlw	high STR_24
  1926   0077DC  6E25               	movwf	(printf@fmt+1)^0,c
  1927   0077DE  EC5F  F037         	call	_printf	;wreg free
  1928   0077E2                     l216:
  1929                           
  1930                           ;librerias/SPI.c: 13:     printf("SCK: ");
  1931   0077E2  0EEE               	movlw	low STR_28
  1932   0077E4  6E24               	movwf	printf@fmt^0,c
  1933   0077E6  0E7F               	movlw	high STR_28
  1934   0077E8  6E25               	movwf	(printf@fmt+1)^0,c
  1935   0077EA  EC5F  F037         	call	_printf	;wreg free
  1936   0077EE                     
  1937                           ;librerias/SPI.c: 14:     (TRISBbits.RB1) ? printf("Input \r\t"):printf("Output\r\t");
  1938   0077EE  A293               	btfss	147,1,c	;volatile
  1939   0077F0  EFFC  F03B         	goto	u1211
  1940   0077F4  EFFE  F03B         	goto	u1210
  1941   0077F8                     u1211:
  1942   0077F8  EF06  F03C         	goto	l2067
  1943   0077FC                     u1210:
  1944   0077FC  0E9A               	movlw	low STR_23
  1945   0077FE  6E24               	movwf	printf@fmt^0,c
  1946   007800  0E7F               	movlw	high STR_23
  1947   007802  6E25               	movwf	(printf@fmt+1)^0,c
  1948   007804  EC5F  F037         	call	_printf	;wreg free
  1949   007808  EF0C  F03C         	goto	l220
  1950   00780C                     l2067:
  1951   00780C  0EA3               	movlw	low STR_24
  1952   00780E  6E24               	movwf	printf@fmt^0,c
  1953   007810  0E7F               	movlw	high STR_24
  1954   007812  6E25               	movwf	(printf@fmt+1)^0,c
  1955   007814  EC5F  F037         	call	_printf	;wreg free
  1956   007818                     l220:
  1957                           
  1958                           ;librerias/SPI.c: 15:     printf("SS: ");
  1959   007818  0EFA               	movlw	low STR_31
  1960   00781A  6E24               	movwf	printf@fmt^0,c
  1961   00781C  0E7F               	movlw	high STR_31
  1962   00781E  6E25               	movwf	(printf@fmt+1)^0,c
  1963   007820  EC5F  F037         	call	_printf	;wreg free
  1964   007824                     
  1965                           ;librerias/SPI.c: 16:     (TRISAbits.RA5) ? printf("Input \r\t"):printf("Output\r\t");
  1966   007824  AA92               	btfss	146,5,c	;volatile
  1967   007826  EF17  F03C         	goto	u1221
  1968   00782A  EF19  F03C         	goto	u1220
  1969   00782E                     u1221:
  1970   00782E  EF21  F03C         	goto	l2073
  1971   007832                     u1220:
  1972   007832  0E9A               	movlw	low STR_23
  1973   007834  6E24               	movwf	printf@fmt^0,c
  1974   007836  0E7F               	movlw	high STR_23
  1975   007838  6E25               	movwf	(printf@fmt+1)^0,c
  1976   00783A  EC5F  F037         	call	_printf	;wreg free
  1977   00783E  EF27  F03C         	goto	l224
  1978   007842                     l2073:
  1979   007842  0EA3               	movlw	low STR_24
  1980   007844  6E24               	movwf	printf@fmt^0,c
  1981   007846  0E7F               	movlw	high STR_24
  1982   007848  6E25               	movwf	(printf@fmt+1)^0,c
  1983   00784A  EC5F  F037         	call	_printf	;wreg free
  1984   00784E                     l224:
  1985                           
  1986                           ;librerias/SPI.c: 18:     printf("Puerto serial: ");
  1987   00784E  0E14               	movlw	low STR_34
  1988   007850  6E24               	movwf	printf@fmt^0,c
  1989   007852  0E7F               	movlw	high STR_34
  1990   007854  6E25               	movwf	(printf@fmt+1)^0,c
  1991   007856  EC5F  F037         	call	_printf	;wreg free
  1992   00785A                     
  1993                           ;librerias/SPI.c: 19:     (SSPEN) ? printf("habilitado\r\n"):printf("deshabilitado\r\n")
      +                          ;
  1994   00785A  AAC6               	btfss	4038,5,c	;volatile
  1995   00785C  EF32  F03C         	goto	u1231
  1996   007860  EF34  F03C         	goto	u1230
  1997   007864                     u1231:
  1998   007864  EF3C  F03C         	goto	l2079
  1999   007868                     u1230:
  2000   007868  0E07               	movlw	low (STR_36+3)
  2001   00786A  6E24               	movwf	printf@fmt^0,c
  2002   00786C  0E7F               	movlw	high (STR_36+3)
  2003   00786E  6E25               	movwf	(printf@fmt+1)^0,c
  2004   007870  EC5F  F037         	call	_printf	;wreg free
  2005   007874  EF42  F03C         	goto	l228
  2006   007878                     l2079:
  2007   007878  0E04               	movlw	low STR_36
  2008   00787A  6E24               	movwf	printf@fmt^0,c
  2009   00787C  0E7F               	movlw	high STR_36
  2010   00787E  6E25               	movwf	(printf@fmt+1)^0,c
  2011   007880  EC5F  F037         	call	_printf	;wreg free
  2012   007884                     l228:
  2013                           
  2014                           ;librerias/SPI.c: 20:     printf("Polaridad: Idle ");
  2015   007884  0EC2               	movlw	low STR_37
  2016   007886  6E24               	movwf	printf@fmt^0,c
  2017   007888  0E7E               	movlw	high STR_37
  2018   00788A  6E25               	movwf	(printf@fmt+1)^0,c
  2019   00788C  EC5F  F037         	call	_printf	;wreg free
  2020   007890                     
  2021                           ;librerias/SPI.c: 21:     (SSPCON1bits.CKP) ? printf("high\r\n"):printf("low\r\n");
  2022   007890  A8C6               	btfss	198,4,c	;volatile
  2023   007892  EF4D  F03C         	goto	u1241
  2024   007896  EF4F  F03C         	goto	u1240
  2025   00789A                     u1241:
  2026   00789A  EF57  F03C         	goto	l2085
  2027   00789E                     u1240:
  2028   00789E  0ECE               	movlw	low STR_38
  2029   0078A0  6E24               	movwf	printf@fmt^0,c
  2030   0078A2  0E7F               	movlw	high STR_38
  2031   0078A4  6E25               	movwf	(printf@fmt+1)^0,c
  2032   0078A6  EC5F  F037         	call	_printf	;wreg free
  2033   0078AA  EF5D  F03C         	goto	l232
  2034   0078AE                     l2085:
  2035   0078AE  0EE2               	movlw	low STR_39
  2036   0078B0  6E24               	movwf	printf@fmt^0,c
  2037   0078B2  0E7F               	movlw	high STR_39
  2038   0078B4  6E25               	movwf	(printf@fmt+1)^0,c
  2039   0078B6  EC5F  F037         	call	_printf	;wreg free
  2040   0078BA                     l232:
  2041                           
  2042                           ;librerias/SPI.c: 22:     printf("Transmision en ");
  2043   0078BA  0E24               	movlw	low STR_40
  2044   0078BC  6E24               	movwf	printf@fmt^0,c
  2045   0078BE  0E7F               	movlw	high STR_40
  2046   0078C0  6E25               	movwf	(printf@fmt+1)^0,c
  2047   0078C2  EC5F  F037         	call	_printf	;wreg free
  2048   0078C6                     
  2049                           ;librerias/SPI.c: 23:     (SSPSTATbits.CKE) ? printf("active a idle\r\n"):printf("idle a
      +                           active\r\n");
  2050   0078C6  ACC7               	btfss	199,6,c	;volatile
  2051   0078C8  EF68  F03C         	goto	u1251
  2052   0078CC  EF6A  F03C         	goto	u1250
  2053   0078D0                     u1251:
  2054   0078D0  EF72  F03C         	goto	l2091
  2055   0078D4                     u1250:
  2056   0078D4  0EE4               	movlw	low STR_41
  2057   0078D6  6E24               	movwf	printf@fmt^0,c
  2058   0078D8  0E7E               	movlw	high STR_41
  2059   0078DA  6E25               	movwf	(printf@fmt+1)^0,c
  2060   0078DC  EC5F  F037         	call	_printf	;wreg free
  2061   0078E0  EF78  F03C         	goto	l236
  2062   0078E4                     l2091:
  2063   0078E4  0EF4               	movlw	low STR_42
  2064   0078E6  6E24               	movwf	printf@fmt^0,c
  2065   0078E8  0E7E               	movlw	high STR_42
  2066   0078EA  6E25               	movwf	(printf@fmt+1)^0,c
  2067   0078EC  EC5F  F037         	call	_printf	;wreg free
  2068   0078F0                     l236:
  2069                           
  2070                           ;librerias/SPI.c: 24:     printf("Muestra de dato entrante: ");
  2071   0078F0  0EF7               	movlw	low STR_43
  2072   0078F2  6E24               	movwf	printf@fmt^0,c
  2073   0078F4  0E7D               	movlw	high STR_43
  2074   0078F6  6E25               	movwf	(printf@fmt+1)^0,c
  2075   0078F8  EC5F  F037         	call	_printf	;wreg free
  2076   0078FC                     
  2077                           ;librerias/SPI.c: 25:     (SSPSTATbits.SMP) ? printf("al final\r\n"):printf("en medio\r\
      +                          n");
  2078   0078FC  AEC7               	btfss	199,7,c	;volatile
  2079   0078FE  EF83  F03C         	goto	u1261
  2080   007902  EF85  F03C         	goto	u1260
  2081   007906                     u1261:
  2082   007906  EF8D  F03C         	goto	l2097
  2083   00790A                     u1260:
  2084   00790A  0E4F               	movlw	low STR_44
  2085   00790C  6E24               	movwf	printf@fmt^0,c
  2086   00790E  0E7F               	movlw	high STR_44
  2087   007910  6E25               	movwf	(printf@fmt+1)^0,c
  2088   007912  EC5F  F037         	call	_printf	;wreg free
  2089   007916  EF93  F03C         	goto	l241
  2090   00791A                     l2097:
  2091   00791A  0E5A               	movlw	low STR_45
  2092   00791C  6E24               	movwf	printf@fmt^0,c
  2093   00791E  0E7F               	movlw	high STR_45
  2094   007920  6E25               	movwf	(printf@fmt+1)^0,c
  2095   007922  EC5F  F037         	call	_printf	;wreg free
  2096   007926                     l241:
  2097   007926  0012               	return		;funcret
  2098   007928                     __end_of_SPI_config_show:
  2099                           	callstack 0
  2100                           
  2101 ;; *************** function _SPI_actual_frec *****************
  2102 ;; Defined at:
  2103 ;;		line 87 in file "librerias/SPI.c"
  2104 ;; Parameters:    Size  Location     Type
  2105 ;;		None
  2106 ;; Auto vars:     Size  Location     Type
  2107 ;;  baud            4   20[COMRAM] long 
  2108 ;; Return value:  Size  Location     Type
  2109 ;;                  4   14[COMRAM] long 
  2110 ;; Registers used:
  2111 ;;		wreg, status,2, status,0, cstack
  2112 ;; Tracked objects:
  2113 ;;		On entry : 0/0
  2114 ;;		On exit  : 0/0
  2115 ;;		Unchanged: 0/0
  2116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2117 ;;      Params:         4       0       0       0       0       0       0       0       0
  2118 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2119 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2120 ;;      Totals:        10       0       0       0       0       0       0       0       0
  2121 ;;Total ram usage:       10 bytes
  2122 ;; Hardware stack levels used: 1
  2123 ;; Hardware stack levels required when called: 1
  2124 ;; This function calls:
  2125 ;;		___aldiv
  2126 ;; This function is called by:
  2127 ;;		_SPI_config_show
  2128 ;; This function uses a non-reentrant model
  2129 ;;
  2130                           
  2131                           	psect	text6
  2132   006FD6                     __ptext6:
  2133                           	callstack 0
  2134   006FD6                     _SPI_actual_frec:
  2135                           	callstack 27
  2136   006FD6                     
  2137                           ;librerias/SPI.c: 88:     int32_t baud = 48000000/((SSP1ADD+1)*4);
  2138   006FD6  0E00               	movlw	0
  2139   006FD8  6E01               	movwf	___aldiv@dividend^0,c
  2140   006FDA  0E6C               	movlw	108
  2141   006FDC  6E02               	movwf	(___aldiv@dividend+1)^0,c
  2142   006FDE  0EDC               	movlw	220
  2143   006FE0  6E03               	movwf	(___aldiv@dividend+2)^0,c
  2144   006FE2  0E02               	movlw	2
  2145   006FE4  6E04               	movwf	(___aldiv@dividend+3)^0,c
  2146   006FE6  50C8               	movf	200,w,c	;volatile
  2147   006FE8  6E13               	movwf	??_SPI_actual_frec^0,c
  2148   006FEA  6A14               	clrf	(??_SPI_actual_frec+1)^0,c
  2149   006FEC  90D8               	bcf	status,0,c
  2150   006FEE  3613               	rlcf	??_SPI_actual_frec^0,f,c
  2151   006FF0  3614               	rlcf	(??_SPI_actual_frec+1)^0,f,c
  2152   006FF2  90D8               	bcf	status,0,c
  2153   006FF4  3613               	rlcf	??_SPI_actual_frec^0,f,c
  2154   006FF6  3614               	rlcf	(??_SPI_actual_frec+1)^0,f,c
  2155   006FF8  0E04               	movlw	4
  2156   006FFA  2613               	addwf	??_SPI_actual_frec^0,f,c
  2157   006FFC  0E00               	movlw	0
  2158   006FFE  2214               	addwfc	(??_SPI_actual_frec+1)^0,f,c
  2159   007000  C013  F005         	movff	??_SPI_actual_frec,___aldiv@divisor
  2160   007004  C014  F006         	movff	??_SPI_actual_frec+1,___aldiv@divisor+1
  2161   007008  0E00               	movlw	0
  2162   00700A  BE06               	btfsc	(___aldiv@divisor+1)^0,7,c
  2163   00700C  0EFF               	movlw	-1
  2164   00700E  6E07               	movwf	(___aldiv@divisor+2)^0,c
  2165   007010  6E08               	movwf	(___aldiv@divisor+3)^0,c
  2166   007012  ECD6  F039         	call	___aldiv	;wreg free
  2167   007016  C001  F015         	movff	?___aldiv,SPI_actual_frec@baud
  2168   00701A  C002  F016         	movff	?___aldiv+1,SPI_actual_frec@baud+1
  2169   00701E  C003  F017         	movff	?___aldiv+2,SPI_actual_frec@baud+2
  2170   007022  C004  F018         	movff	?___aldiv+3,SPI_actual_frec@baud+3
  2171   007026                     
  2172                           ;librerias/SPI.c: 89:     return baud;
  2173   007026  C015  F00F         	movff	SPI_actual_frec@baud,?_SPI_actual_frec
  2174   00702A  C016  F010         	movff	SPI_actual_frec@baud+1,?_SPI_actual_frec+1
  2175   00702E  C017  F011         	movff	SPI_actual_frec@baud+2,?_SPI_actual_frec+2
  2176   007032  C018  F012         	movff	SPI_actual_frec@baud+3,?_SPI_actual_frec+3
  2177   007036  0012               	return		;funcret
  2178   007038                     __end_of_SPI_actual_frec:
  2179                           	callstack 0
  2180                           
  2181 ;; *************** function _SPI_BaudRateGen *****************
  2182 ;; Defined at:
  2183 ;;		line 45 in file "librerias/SPI.c"
  2184 ;; Parameters:    Size  Location     Type
  2185 ;;  FClock          4   45[COMRAM] long 
  2186 ;; Auto vars:     Size  Location     Type
  2187 ;;  baudReg         4   53[COMRAM] unsigned long 
  2188 ;; Return value:  Size  Location     Type
  2189 ;;                  1    wreg      void 
  2190 ;; Registers used:
  2191 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2192 ;; Tracked objects:
  2193 ;;		On entry : 0/0
  2194 ;;		On exit  : 0/0
  2195 ;;		Unchanged: 0/0
  2196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2197 ;;      Params:         4       0       0       0       0       0       0       0       0
  2198 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2199 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2200 ;;      Totals:        12       0       0       0       0       0       0       0       0
  2201 ;;Total ram usage:       12 bytes
  2202 ;; Hardware stack levels used: 1
  2203 ;; Hardware stack levels required when called: 7
  2204 ;; This function calls:
  2205 ;;		_SPI_ErrorHandler
  2206 ;;		___aldiv
  2207 ;; This function is called by:
  2208 ;;		_SPI_master_init
  2209 ;; This function uses a non-reentrant model
  2210 ;;
  2211                           
  2212                           	psect	text7
  2213   0070B2                     __ptext7:
  2214                           	callstack 0
  2215   0070B2                     _SPI_BaudRateGen:
  2216                           	callstack 22
  2217   0070B2                     
  2218                           ;librerias/SPI.c: 46:     uint32_t baudReg = (48000000 / (FClock * 4)) - 1;
  2219   0070B2  0E00               	movlw	0
  2220   0070B4  6E01               	movwf	___aldiv@dividend^0,c
  2221   0070B6  0E6C               	movlw	108
  2222   0070B8  6E02               	movwf	(___aldiv@dividend+1)^0,c
  2223   0070BA  0EDC               	movlw	220
  2224   0070BC  6E03               	movwf	(___aldiv@dividend+2)^0,c
  2225   0070BE  0E02               	movlw	2
  2226   0070C0  6E04               	movwf	(___aldiv@dividend+3)^0,c
  2227   0070C2  C02E  F032         	movff	SPI_BaudRateGen@FClock,??_SPI_BaudRateGen
  2228   0070C6  C02F  F033         	movff	SPI_BaudRateGen@FClock+1,??_SPI_BaudRateGen+1
  2229   0070CA  C030  F034         	movff	SPI_BaudRateGen@FClock+2,??_SPI_BaudRateGen+2
  2230   0070CE  C031  F035         	movff	SPI_BaudRateGen@FClock+3,??_SPI_BaudRateGen+3
  2231   0070D2  0E02               	movlw	2
  2232   0070D4                     u1275:
  2233   0070D4  90D8               	bcf	status,0,c
  2234   0070D6  3632               	rlcf	??_SPI_BaudRateGen^0,f,c
  2235   0070D8  3633               	rlcf	(??_SPI_BaudRateGen+1)^0,f,c
  2236   0070DA  3634               	rlcf	(??_SPI_BaudRateGen+2)^0,f,c
  2237   0070DC  3635               	rlcf	(??_SPI_BaudRateGen+3)^0,f,c
  2238   0070DE  2EE8               	decfsz	wreg,f,c
  2239   0070E0  EF6A  F038         	goto	u1275
  2240   0070E4  C032  F005         	movff	??_SPI_BaudRateGen,___aldiv@divisor
  2241   0070E8  C033  F006         	movff	??_SPI_BaudRateGen+1,___aldiv@divisor+1
  2242   0070EC  C034  F007         	movff	??_SPI_BaudRateGen+2,___aldiv@divisor+2
  2243   0070F0  C035  F008         	movff	??_SPI_BaudRateGen+3,___aldiv@divisor+3
  2244   0070F4  ECD6  F039         	call	___aldiv	;wreg free
  2245   0070F8  0EFF               	movlw	255
  2246   0070FA  2401               	addwf	?___aldiv^0,w,c
  2247   0070FC  6E36               	movwf	SPI_BaudRateGen@baudReg^0,c
  2248   0070FE  0EFF               	movlw	255
  2249   007100  2002               	addwfc	(?___aldiv+1)^0,w,c
  2250   007102  6E37               	movwf	(SPI_BaudRateGen@baudReg+1)^0,c
  2251   007104  0EFF               	movlw	255
  2252   007106  2003               	addwfc	(?___aldiv+2)^0,w,c
  2253   007108  6E38               	movwf	(SPI_BaudRateGen@baudReg+2)^0,c
  2254   00710A  0EFF               	movlw	255
  2255   00710C  2004               	addwfc	(?___aldiv+3)^0,w,c
  2256   00710E  6E39               	movwf	(SPI_BaudRateGen@baudReg+3)^0,c
  2257   007110                     
  2258                           ;librerias/SPI.c: 47:     if(baudReg > 0xFF){
  2259   007110  5039               	movf	(SPI_BaudRateGen@baudReg+3)^0,w,c
  2260   007112  1038               	iorwf	(SPI_BaudRateGen@baudReg+2)^0,w,c
  2261   007114  E108               	bnz	u1280
  2262   007116  0437               	decf	(SPI_BaudRateGen@baudReg+1)^0,w,c
  2263   007118  A0D8               	btfss	status,0,c
  2264   00711A  EF91  F038         	goto	u1281
  2265   00711E  EF93  F038         	goto	u1280
  2266   007122                     u1281:
  2267   007122  EF98  F038         	goto	l255
  2268   007126                     u1280:
  2269   007126                     
  2270                           ;librerias/SPI.c: 48:         SPI_ErrorHandler(EC_SPI_BR_OVERRANGE);
  2271   007126  0E01               	movlw	1
  2272   007128  EC1C  F038         	call	_SPI_ErrorHandler
  2273   00712C  EF9A  F038         	goto	l256
  2274   007130                     l255:
  2275                           
  2276                           ;librerias/SPI.c: 51:     SSP1ADD = baudReg;
  2277   007130  C036  FFC8         	movff	SPI_BaudRateGen@baudReg,4040	;volatile
  2278   007134                     l256:
  2279   007134  0012               	return		;funcret
  2280   007136                     __end_of_SPI_BaudRateGen:
  2281                           	callstack 0
  2282                           
  2283 ;; *************** function _SPI_ErrorHandler *****************
  2284 ;; Defined at:
  2285 ;;		line 24 in file "librerias/variables.c"
  2286 ;; Parameters:    Size  Location     Type
  2287 ;;  errorCode       1    wreg     enum E5225
  2288 ;; Auto vars:     Size  Location     Type
  2289 ;;  errorCode       1   44[COMRAM] enum E5225
  2290 ;; Return value:  Size  Location     Type
  2291 ;;                  1    wreg      void 
  2292 ;; Registers used:
  2293 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2294 ;; Tracked objects:
  2295 ;;		On entry : 0/0
  2296 ;;		On exit  : 0/0
  2297 ;;		Unchanged: 0/0
  2298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2299 ;;      Params:         0       0       0       0       0       0       0       0       0
  2300 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2301 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2302 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2303 ;;Total ram usage:        3 bytes
  2304 ;; Hardware stack levels used: 1
  2305 ;; Hardware stack levels required when called: 6
  2306 ;; This function calls:
  2307 ;;		_printf
  2308 ;; This function is called by:
  2309 ;;		_SPI_BaudRateGen
  2310 ;;		_SPI_write
  2311 ;; This function uses a non-reentrant model
  2312 ;;
  2313                           
  2314                           	psect	text8
  2315   007038                     __ptext8:
  2316                           	callstack 0
  2317   007038                     _SPI_ErrorHandler:
  2318                           	callstack 22
  2319                           
  2320                           ;incstack = 0
  2321                           ;SPI_ErrorHandler@errorCode stored from wreg
  2322   007038  6E2D               	movwf	SPI_ErrorHandler@errorCode^0,c
  2323   00703A                     
  2324                           ;librerias/variables.c: 25:     if(errorCode != EC_SPI_OK) return;
  2325   00703A  502D               	movf	SPI_ErrorHandler@errorCode^0,w,c
  2326   00703C  B4D8               	btfsc	status,2,c
  2327   00703E  EF23  F038         	goto	u1121
  2328   007042  EF25  F038         	goto	u1120
  2329   007046                     u1121:
  2330   007046  EF27  F038         	goto	l1935
  2331   00704A                     u1120:
  2332   00704A  EF58  F038         	goto	l300
  2333   00704E                     l1935:
  2334                           
  2335                           ;librerias/variables.c: 26:     printf("Error: ");
  2336   00704E  0EBE               	movlw	low STR_46
  2337   007050  6E24               	movwf	printf@fmt^0,c
  2338   007052  0E7F               	movlw	high STR_46
  2339   007054  6E25               	movwf	(printf@fmt+1)^0,c
  2340   007056  EC5F  F037         	call	_printf	;wreg free
  2341                           
  2342                           ;librerias/variables.c: 27:     switch(errorCode){
  2343   00705A  EF3F  F038         	goto	l1943
  2344   00705E                     l1937:
  2345                           
  2346                           ;librerias/variables.c: 32:             printf("ERROR_CODE_SPI_BR_OVERRANGE");
  2347   00705E  0EDB               	movlw	low STR_51
  2348   007060  6E24               	movwf	printf@fmt^0,c
  2349   007062  0E7D               	movlw	high STR_51
  2350   007064  6E25               	movwf	(printf@fmt+1)^0,c
  2351   007066  EC5F  F037         	call	_printf	;wreg free
  2352                           
  2353                           ;librerias/variables.c: 33:         break;
  2354   00706A  EF58  F038         	goto	l300
  2355   00706E                     l1939:
  2356                           
  2357                           ;librerias/variables.c: 35:             printf("ERROR_CODE_SPI_COLLISION");
  2358   00706E  0E2C               	movlw	low STR_52
  2359   007070  6E24               	movwf	printf@fmt^0,c
  2360   007072  0E7E               	movlw	high STR_52
  2361   007074  6E25               	movwf	(printf@fmt+1)^0,c
  2362   007076  EC5F  F037         	call	_printf	;wreg free
  2363                           
  2364                           ;librerias/variables.c: 36:         break;
  2365   00707A  EF58  F038         	goto	l300
  2366   00707E                     l1943:
  2367   00707E  502D               	movf	SPI_ErrorHandler@errorCode^0,w,c
  2368   007080  6E2B               	movwf	??_SPI_ErrorHandler^0,c
  2369   007082  6A2C               	clrf	(??_SPI_ErrorHandler+1)^0,c
  2370                           
  2371                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2372                           ; Switch size 1, requested type "simple"
  2373                           ; Number of cases is 1, Range of values is 0 to 0
  2374                           ; switch strategies available:
  2375                           ; Name         Instructions Cycles
  2376                           ; simple_byte            4     3 (average)
  2377                           ;	Chosen strategy is simple_byte
  2378   007084  502C               	movf	(??_SPI_ErrorHandler+1)^0,w,c
  2379   007086  0A00               	xorlw	0	; case 0
  2380   007088  B4D8               	btfsc	status,2,c
  2381   00708A  EF49  F038         	goto	l2369
  2382   00708E  EF58  F038         	goto	l300
  2383   007092                     l2369:
  2384                           
  2385                           ; Switch size 1, requested type "simple"
  2386                           ; Number of cases is 3, Range of values is 0 to 2
  2387                           ; switch strategies available:
  2388                           ; Name         Instructions Cycles
  2389                           ; simple_byte           10     6 (average)
  2390                           ;	Chosen strategy is simple_byte
  2391   007092  502B               	movf	??_SPI_ErrorHandler^0,w,c
  2392   007094  0A00               	xorlw	0	; case 0
  2393   007096  B4D8               	btfsc	status,2,c
  2394   007098  EF58  F038         	goto	l300
  2395   00709C  0A01               	xorlw	1	; case 1
  2396   00709E  B4D8               	btfsc	status,2,c
  2397   0070A0  EF2F  F038         	goto	l1937
  2398   0070A4  0A03               	xorlw	3	; case 2
  2399   0070A6  B4D8               	btfsc	status,2,c
  2400   0070A8  EF37  F038         	goto	l1939
  2401   0070AC  EF58  F038         	goto	l300
  2402   0070B0                     l300:
  2403   0070B0  0012               	return		;funcret
  2404   0070B2                     __end_of_SPI_ErrorHandler:
  2405                           	callstack 0
  2406                           
  2407 ;; *************** function _printf *****************
  2408 ;; Defined at:
  2409 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\printf.c"
  2410 ;; Parameters:    Size  Location     Type
  2411 ;;  fmt             2   35[COMRAM] PTR const unsigned char 
  2412 ;;		 -> STR_52(25), STR_51(28), STR_50(8), STR_49(26), 
  2413 ;;		 -> STR_48(24), STR_47(25), STR_46(8), STR_45(11), 
  2414 ;;		 -> STR_44(11), STR_43(27), STR_42(16), STR_41(16), 
  2415 ;;		 -> STR_40(16), STR_39(6), STR_38(7), STR_37(17), 
  2416 ;;		 -> STR_36(16), STR_35(13), STR_34(16), STR_33(9), 
  2417 ;;		 -> STR_32(9), STR_31(5), STR_30(9), STR_29(9), 
  2418 ;;		 -> STR_28(6), STR_27(9), STR_26(9), STR_25(6), 
  2419 ;;		 -> STR_24(9), STR_23(9), STR_22(6), STR_21(6), 
  2420 ;;		 -> STR_20(17), STR_19(23), STR_18(17), STR_17(14), 
  2421 ;;		 -> STR_16(11), STR_15(17), STR_14(14), STR_13(10), 
  2422 ;;		 -> STR_12(17), STR_11(14), STR_10(9), STR_9(13), 
  2423 ;;		 -> STR_8(8), STR_7(9), STR_6(11), STR_5(18), 
  2424 ;;		 -> STR_4(18), STR_3(11), STR_2(10), STR_1(7), 
  2425 ;; Auto vars:     Size  Location     Type
  2426 ;;  ret             2    0        int 
  2427 ;;  ap              1   41[COMRAM] PTR void [1]
  2428 ;;		 -> ?_printf(2), 
  2429 ;; Return value:  Size  Location     Type
  2430 ;;                  2   35[COMRAM] int 
  2431 ;; Registers used:
  2432 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2433 ;; Tracked objects:
  2434 ;;		On entry : 0/0
  2435 ;;		On exit  : 0/0
  2436 ;;		Unchanged: 0/0
  2437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2438 ;;      Params:         6       0       0       0       0       0       0       0       0
  2439 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2440 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2441 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2442 ;;Total ram usage:        7 bytes
  2443 ;; Hardware stack levels used: 1
  2444 ;; Hardware stack levels required when called: 5
  2445 ;; This function calls:
  2446 ;;		_vfprintf
  2447 ;; This function is called by:
  2448 ;;		_UART_config_show
  2449 ;;		_SPI_config_show
  2450 ;;		_SPI_ErrorHandler
  2451 ;;		_UART_ErrorHandler
  2452 ;; This function uses a non-reentrant model
  2453 ;;
  2454                           
  2455                           	psect	text9
  2456   006EBE                     __ptext9:
  2457                           	callstack 0
  2458   006EBE                     _printf:
  2459                           	callstack 23
  2460   006EBE  0E26               	movlw	low (?_printf+2)
  2461   006EC0  6E2A               	movwf	printf@ap^0,c
  2462   006EC2  0E00               	movlw	0
  2463   006EC4  6E1D               	movwf	vfprintf@fp^0,c
  2464   006EC6  0E00               	movlw	0
  2465   006EC8  6E1E               	movwf	(vfprintf@fp+1)^0,c
  2466   006ECA  C024  F01F         	movff	printf@fmt,vfprintf@fmt
  2467   006ECE  C025  F020         	movff	printf@fmt+1,vfprintf@fmt+1
  2468   006ED2  0E2A               	movlw	low printf@ap
  2469   006ED4  6E21               	movwf	vfprintf@ap^0,c
  2470   006ED6  ECC8  F037         	call	_vfprintf	;wreg free
  2471   006EDA  0012               	return		;funcret
  2472   006EDC                     __end_of_printf:
  2473                           	callstack 0
  2474                           
  2475 ;; *************** function _vfprintf *****************
  2476 ;; Defined at:
  2477 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  2478 ;; Parameters:    Size  Location     Type
  2479 ;;  fp              2   28[COMRAM] PTR struct _IO_FILE
  2480 ;;		 -> NULL(0), 
  2481 ;;  fmt             2   30[COMRAM] PTR const unsigned char 
  2482 ;;		 -> STR_52(25), STR_51(28), STR_50(8), STR_49(26), 
  2483 ;;		 -> STR_48(24), STR_47(25), STR_46(8), STR_45(11), 
  2484 ;;		 -> STR_44(11), STR_43(27), STR_42(16), STR_41(16), 
  2485 ;;		 -> STR_40(16), STR_39(6), STR_38(7), STR_37(17), 
  2486 ;;		 -> STR_36(16), STR_35(13), STR_34(16), STR_33(9), 
  2487 ;;		 -> STR_32(9), STR_31(5), STR_30(9), STR_29(9), 
  2488 ;;		 -> STR_28(6), STR_27(9), STR_26(9), STR_25(6), 
  2489 ;;		 -> STR_24(9), STR_23(9), STR_22(6), STR_21(6), 
  2490 ;;		 -> STR_20(17), STR_19(23), STR_18(17), STR_17(14), 
  2491 ;;		 -> STR_16(11), STR_15(17), STR_14(14), STR_13(10), 
  2492 ;;		 -> STR_12(17), STR_11(14), STR_10(9), STR_9(13), 
  2493 ;;		 -> STR_8(8), STR_7(9), STR_6(11), STR_5(18), 
  2494 ;;		 -> STR_4(18), STR_3(11), STR_2(10), STR_1(7), 
  2495 ;;  ap              1   32[COMRAM] PTR PTR void 
  2496 ;;		 -> printf@ap(1), 
  2497 ;; Auto vars:     Size  Location     Type
  2498 ;;  cfmt            2   33[COMRAM] PTR unsigned char 
  2499 ;;		 -> STR_52(25), STR_51(28), STR_50(8), STR_49(26), 
  2500 ;;		 -> STR_48(24), STR_47(25), STR_46(8), STR_45(11), 
  2501 ;;		 -> STR_44(11), STR_43(27), STR_42(16), STR_41(16), 
  2502 ;;		 -> STR_40(16), STR_39(6), STR_38(7), STR_37(17), 
  2503 ;;		 -> STR_36(16), STR_35(13), STR_34(16), STR_33(9), 
  2504 ;;		 -> STR_32(9), STR_31(5), STR_30(9), STR_29(9), 
  2505 ;;		 -> STR_28(6), STR_27(9), STR_26(9), STR_25(6), 
  2506 ;;		 -> STR_24(9), STR_23(9), STR_22(6), STR_21(6), 
  2507 ;;		 -> STR_20(17), STR_19(23), STR_18(17), STR_17(14), 
  2508 ;;		 -> STR_16(11), STR_15(17), STR_14(14), STR_13(10), 
  2509 ;;		 -> STR_12(17), STR_11(14), STR_10(9), STR_9(13), 
  2510 ;;		 -> STR_8(8), STR_7(9), STR_6(11), STR_5(18), 
  2511 ;;		 -> STR_4(18), STR_3(11), STR_2(10), STR_1(7), 
  2512 ;; Return value:  Size  Location     Type
  2513 ;;                  2   28[COMRAM] int 
  2514 ;; Registers used:
  2515 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2516 ;; Tracked objects:
  2517 ;;		On entry : 0/0
  2518 ;;		On exit  : 0/0
  2519 ;;		Unchanged: 0/0
  2520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2521 ;;      Params:         5       0       0       0       0       0       0       0       0
  2522 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2523 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2524 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2525 ;;Total ram usage:        7 bytes
  2526 ;; Hardware stack levels used: 1
  2527 ;; Hardware stack levels required when called: 4
  2528 ;; This function calls:
  2529 ;;		_vfpfcnvrt
  2530 ;; This function is called by:
  2531 ;;		_printf
  2532 ;; This function uses a non-reentrant model
  2533 ;;
  2534                           
  2535                           	psect	text10
  2536   006F90                     __ptext10:
  2537                           	callstack 0
  2538   006F90                     _vfprintf:
  2539                           	callstack 23
  2540   006F90                     
  2541                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  2542   006F90  C01F  F022         	movff	vfprintf@fmt,vfprintf@cfmt
  2543   006F94  C020  F023         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2544                           
  2545                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2546   006F98  EFD8  F037         	goto	l1913
  2547   006F9C                     l1911:
  2548                           
  2549                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2550   006F9C  C01D  F00F         	movff	vfprintf@fp,vfpfcnvrt@fp
  2551   006FA0  C01E  F010         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2552   006FA4  0E22               	movlw	low vfprintf@cfmt
  2553   006FA6  6E11               	movwf	vfpfcnvrt@fmt^0,c
  2554   006FA8  C021  F012         	movff	vfprintf@ap,vfpfcnvrt@ap
  2555   006FAC  EC9F  F03D         	call	_vfpfcnvrt	;wreg free
  2556   006FB0                     l1913:
  2557                           
  2558                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2559   006FB0  C022  FFF6         	movff	vfprintf@cfmt,tblptrl
  2560   006FB4  C023  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2561   006FB8                     	if	0	;tblptru may be non-zero
  2562   006FB8                     	endif
  2563   006FB8                     	if	0	;tblptru may be non-zero
  2564   006FB8                     	endif
  2565   006FB8  0008               	tblrd		*
  2566   006FBA  50F5               	movf	tablat,w,c
  2567   006FBC  0900               	iorlw	0
  2568   006FBE  A4D8               	btfss	status,2,c
  2569   006FC0  EFE4  F037         	goto	u1111
  2570   006FC4  EFE6  F037         	goto	u1110
  2571   006FC8                     u1111:
  2572   006FC8  EFCE  F037         	goto	l1911
  2573   006FCC                     u1110:
  2574   006FCC                     
  2575                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  2576   006FCC  0E00               	movlw	0
  2577   006FCE  6E1E               	movwf	(?_vfprintf+1)^0,c
  2578   006FD0  0E00               	movlw	0
  2579   006FD2  6E1D               	movwf	?_vfprintf^0,c
  2580   006FD4  0012               	return		;funcret
  2581   006FD6                     __end_of_vfprintf:
  2582                           	callstack 0
  2583                           
  2584 ;; *************** function _vfpfcnvrt *****************
  2585 ;; Defined at:
  2586 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  2587 ;; Parameters:    Size  Location     Type
  2588 ;;  fp              2   14[COMRAM] PTR struct _IO_FILE
  2589 ;;		 -> NULL(0), 
  2590 ;;  fmt             1   16[COMRAM] PTR PTR unsigned char 
  2591 ;;		 -> vfprintf@cfmt(2), 
  2592 ;;  ap              1   17[COMRAM] PTR PTR void 
  2593 ;;		 -> printf@ap(1), 
  2594 ;; Auto vars:     Size  Location     Type
  2595 ;;  convarg         4   23[COMRAM] struct .
  2596 ;;  cp              2   21[COMRAM] PTR unsigned char 
  2597 ;;		 -> STR_52(25), STR_51(28), STR_50(8), STR_49(26), 
  2598 ;;		 -> STR_48(24), STR_47(25), STR_46(8), STR_45(11), 
  2599 ;;		 -> STR_44(11), STR_43(27), STR_42(16), STR_41(16), 
  2600 ;;		 -> STR_40(16), STR_39(6), STR_38(7), STR_37(17), 
  2601 ;;		 -> STR_36(16), STR_35(13), STR_34(16), STR_33(9), 
  2602 ;;		 -> STR_32(9), STR_31(5), STR_30(9), STR_29(9), 
  2603 ;;		 -> STR_28(6), STR_27(9), STR_26(9), STR_25(6), 
  2604 ;;		 -> STR_24(9), STR_23(9), STR_22(6), STR_21(6), 
  2605 ;;		 -> STR_20(17), STR_19(23), STR_18(17), STR_17(14), 
  2606 ;;		 -> STR_16(11), STR_15(17), STR_14(14), STR_13(10), 
  2607 ;;		 -> STR_12(17), STR_11(14), STR_10(9), STR_9(13), 
  2608 ;;		 -> STR_8(8), STR_7(9), STR_6(11), STR_5(18), 
  2609 ;;		 -> STR_4(18), STR_3(11), STR_2(10), STR_1(7), 
  2610 ;;  c               1   27[COMRAM] unsigned char 
  2611 ;;  done            1   20[COMRAM] _Bool 
  2612 ;; Return value:  Size  Location     Type
  2613 ;;                  1    wreg      void 
  2614 ;; Registers used:
  2615 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2616 ;; Tracked objects:
  2617 ;;		On entry : 0/0
  2618 ;;		On exit  : 0/0
  2619 ;;		Unchanged: 0/0
  2620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2621 ;;      Params:         4       0       0       0       0       0       0       0       0
  2622 ;;      Locals:         8       0       0       0       0       0       0       0       0
  2623 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2624 ;;      Totals:        14       0       0       0       0       0       0       0       0
  2625 ;;Total ram usage:       14 bytes
  2626 ;; Hardware stack levels used: 1
  2627 ;; Hardware stack levels required when called: 3
  2628 ;; This function calls:
  2629 ;;		___aldiv
  2630 ;;		___almod
  2631 ;;		_abs
  2632 ;;		_fputc
  2633 ;; This function is called by:
  2634 ;;		_vfprintf
  2635 ;; This function uses a non-reentrant model
  2636 ;;
  2637                           
  2638                           	psect	text11
  2639   007B3E                     __ptext11:
  2640                           	callstack 0
  2641   007B3E                     _vfpfcnvrt:
  2642                           	callstack 23
  2643   007B3E                     
  2644                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  2645   007B3E  5011               	movf	vfpfcnvrt@fmt^0,w,c
  2646   007B40  6ED9               	movwf	fsr2l,c
  2647   007B42  6ADA               	clrf	fsr2h,c
  2648   007B44  CFDE FFF6          	movff	postinc2,tblptrl
  2649   007B48  CFDD FFF7          	movff	postdec2,tblptrh
  2650   007B4C                     	if	0	;tblptru may be non-zero
  2651   007B4C                     	endif
  2652   007B4C                     	if	0	;tblptru may be non-zero
  2653   007B4C                     	endif
  2654   007B4C  0008               	tblrd		*
  2655   007B4E  50F5               	movf	tablat,w,c
  2656   007B50  0A25               	xorlw	37
  2657   007B52  A4D8               	btfss	status,2,c
  2658   007B54  EFAE  F03D         	goto	u1011
  2659   007B58  EFB0  F03D         	goto	u1010
  2660   007B5C                     u1011:
  2661   007B5C  EFD9  F03E         	goto	l1903
  2662   007B60                     u1010:
  2663   007B60                     
  2664                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  2665   007B60  5011               	movf	vfpfcnvrt@fmt^0,w,c
  2666   007B62  6ED9               	movwf	fsr2l,c
  2667   007B64  6ADA               	clrf	fsr2h,c
  2668   007B66  2ADE               	incf	postinc2,f,c
  2669   007B68  0E00               	movlw	0
  2670   007B6A  22DD               	addwfc	postdec2,f,c
  2671   007B6C                     
  2672                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  2673   007B6C  0E00               	movlw	0
  2674   007B6E  6E3F               	movwf	(_width+1)^0,c
  2675   007B70  0E00               	movlw	0
  2676   007B72  6E3E               	movwf	_width^0,c
  2677   007B74  C03E  F042         	movff	_width,_flags
  2678   007B78                     
  2679                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  2680   007B78  6840               	setf	_prec^0,c
  2681   007B7A  6841               	setf	(_prec+1)^0,c
  2682   007B7C                     
  2683                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  2684   007B7C  5011               	movf	vfpfcnvrt@fmt^0,w,c
  2685   007B7E  6ED9               	movwf	fsr2l,c
  2686   007B80  6ADA               	clrf	fsr2h,c
  2687   007B82  CFDE F016          	movff	postinc2,vfpfcnvrt@cp
  2688   007B86  CFDD F017          	movff	postdec2,vfpfcnvrt@cp+1
  2689   007B8A                     
  2690                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1293:   c = *cp;
  2691   007B8A  C016  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2692   007B8E  C017  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2693   007B92                     	if	0	;tblptru may be non-zero
  2694   007B92                     	endif
  2695   007B92                     	if	0	;tblptru may be non-zero
  2696   007B92                     	endif
  2697   007B92  0008               	tblrd		*
  2698   007B94  CFF5 F01C          	movff	tablat,vfpfcnvrt@c
  2699                           
  2700                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1294:   switch(c)
      +                           {
  2701   007B98  EFDA  F03D         	goto	l1859
  2702   007B9C                     l1851:
  2703                           
  2704                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1309:     cp++;
  2705   007B9C  4A16               	infsnz	vfpfcnvrt@cp^0,f,c
  2706   007B9E  2A17               	incf	(vfpfcnvrt@cp+1)^0,f,c
  2707                           
  2708                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1316:     break;
  2709   007BA0  EFE9  F03D         	goto	l1861
  2710   007BA4                     l1853:
  2711                           
  2712                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1350:     c = 'i'
      +                          ;
  2713   007BA4  0E69               	movlw	105
  2714   007BA6  6E1C               	movwf	vfpfcnvrt@c^0,c
  2715                           
  2716                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1351:     break;
  2717   007BA8  EFE9  F03D         	goto	l1861
  2718   007BAC                     l1855:
  2719                           
  2720                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1353:     c = 0;
  2721   007BAC  0E00               	movlw	0
  2722   007BAE  6E1C               	movwf	vfpfcnvrt@c^0,c
  2723                           
  2724                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1354:     break;
  2725   007BB0  EFE9  F03D         	goto	l1861
  2726   007BB4                     l1859:
  2727   007BB4  501C               	movf	vfpfcnvrt@c^0,w,c
  2728                           
  2729                           ; Switch size 1, requested type "simple"
  2730                           ; Number of cases is 3, Range of values is 100 to 108
  2731                           ; switch strategies available:
  2732                           ; Name         Instructions Cycles
  2733                           ; simple_byte           10     6 (average)
  2734                           ;	Chosen strategy is simple_byte
  2735   007BB6  0A64               	xorlw	100	; case 100
  2736   007BB8  B4D8               	btfsc	status,2,c
  2737   007BBA  EFD2  F03D         	goto	l1853
  2738   007BBE  0A0D               	xorlw	13	; case 105
  2739   007BC0  B4D8               	btfsc	status,2,c
  2740   007BC2  EFD2  F03D         	goto	l1853
  2741   007BC6  0A05               	xorlw	5	; case 108
  2742   007BC8  B4D8               	btfsc	status,2,c
  2743   007BCA  EFCE  F03D         	goto	l1851
  2744   007BCE  EFD6  F03D         	goto	l1855
  2745   007BD2                     l1861:
  2746                           
  2747                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2748   007BD2  C016  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2749   007BD6  C017  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2750   007BDA                     	if	0	;tblptru may be non-zero
  2751   007BDA                     	endif
  2752   007BDA                     	if	0	;tblptru may be non-zero
  2753   007BDA                     	endif
  2754   007BDA  0008               	tblrd		*
  2755   007BDC  50F5               	movf	tablat,w,c
  2756   007BDE  0A64               	xorlw	100
  2757   007BE0  B4D8               	btfsc	status,2,c
  2758   007BE2  EFF5  F03D         	goto	u1021
  2759   007BE6  EFF7  F03D         	goto	u1020
  2760   007BEA                     u1021:
  2761   007BEA  EF2C  F03E         	goto	l1871
  2762   007BEE                     u1020:
  2763   007BEE  C016  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2764   007BF2  C017  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2765   007BF6                     	if	0	;tblptru may be non-zero
  2766   007BF6                     	endif
  2767   007BF6                     	if	0	;tblptru may be non-zero
  2768   007BF6                     	endif
  2769   007BF6  0008               	tblrd		*
  2770   007BF8  50F5               	movf	tablat,w,c
  2771   007BFA  0A69               	xorlw	105
  2772   007BFC  A4D8               	btfss	status,2,c
  2773   007BFE  EF03  F03E         	goto	u1031
  2774   007C02  EF05  F03E         	goto	u1030
  2775   007C06                     u1031:
  2776   007C06  EFD1  F03E         	goto	l1899
  2777   007C0A                     u1030:
  2778   007C0A  EF2C  F03E         	goto	l1871
  2779   007C0E                     l1865:
  2780                           
  2781                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1365:      convar
      +                          g.sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2782   007C0E  5012               	movf	vfpfcnvrt@ap^0,w,c
  2783   007C10  6ED9               	movwf	fsr2l,c
  2784   007C12  6ADA               	clrf	fsr2h,c
  2785   007C14  50DF               	movf	indf2,w,c
  2786   007C16  2ADF               	incf	indf2,f,c
  2787   007C18  2ADF               	incf	indf2,f,c
  2788   007C1A  6ED9               	movwf	fsr2l,c
  2789   007C1C  6ADA               	clrf	fsr2h,c
  2790   007C1E  CFDE F018          	movff	postinc2,vfpfcnvrt@convarg
  2791   007C22  CFDD F019          	movff	postdec2,vfpfcnvrt@convarg+1
  2792   007C26  0E00               	movlw	0
  2793   007C28  BE19               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  2794   007C2A  0EFF               	movlw	-1
  2795   007C2C  6E1A               	movwf	(vfpfcnvrt@convarg+2)^0,c
  2796   007C2E  6E1B               	movwf	(vfpfcnvrt@convarg+3)^0,c
  2797                           
  2798                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1366:      break;
  2799   007C30  EF37  F03E         	goto	l1873
  2800   007C34                     l1867:
  2801                           
  2802                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1379:      convar
      +                          g.sint = (vfpf_sint_t)(*(long *)__va_arg(*(long **)ap, (long)0));
  2803   007C34  5012               	movf	vfpfcnvrt@ap^0,w,c
  2804   007C36  6ED9               	movwf	fsr2l,c
  2805   007C38  6ADA               	clrf	fsr2h,c
  2806   007C3A  0E04               	movlw	4
  2807   007C3C  26DF               	addwf	indf2,f,c
  2808   007C3E  5CDF               	subwf	indf2,w,c
  2809   007C40  6ED9               	movwf	fsr2l,c
  2810   007C42  6ADA               	clrf	fsr2h,c
  2811   007C44  CFDE F018          	movff	postinc2,vfpfcnvrt@convarg
  2812   007C48  CFDE F019          	movff	postinc2,vfpfcnvrt@convarg+1
  2813   007C4C  CFDE F01A          	movff	postinc2,vfpfcnvrt@convarg+2
  2814   007C50  CFDE F01B          	movff	postinc2,vfpfcnvrt@convarg+3
  2815                           
  2816                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1380:      break;
  2817   007C54  EF37  F03E         	goto	l1873
  2818   007C58                     l1871:
  2819   007C58  501C               	movf	vfpfcnvrt@c^0,w,c
  2820                           
  2821                           ; Switch size 1, requested type "simple"
  2822                           ; Number of cases is 2, Range of values is 105 to 108
  2823                           ; switch strategies available:
  2824                           ; Name         Instructions Cycles
  2825                           ; simple_byte            7     4 (average)
  2826                           ;	Chosen strategy is simple_byte
  2827   007C5A  0A69               	xorlw	105	; case 105
  2828   007C5C  B4D8               	btfsc	status,2,c
  2829   007C5E  EF07  F03E         	goto	l1865
  2830   007C62  0A05               	xorlw	5	; case 108
  2831   007C64  B4D8               	btfsc	status,2,c
  2832   007C66  EF1A  F03E         	goto	l1867
  2833   007C6A  EF37  F03E         	goto	l1873
  2834   007C6E                     l1873:
  2835                           
  2836                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  2837   007C6E  0E01               	movlw	1
  2838   007C70  2416               	addwf	vfpfcnvrt@cp^0,w,c
  2839   007C72  6E13               	movwf	??_vfpfcnvrt^0,c
  2840   007C74  0E00               	movlw	0
  2841   007C76  2017               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  2842   007C78  6E14               	movwf	(??_vfpfcnvrt+1)^0,c
  2843   007C7A  5011               	movf	vfpfcnvrt@fmt^0,w,c
  2844   007C7C  6ED9               	movwf	fsr2l,c
  2845   007C7E  6ADA               	clrf	fsr2h,c
  2846   007C80  C013  FFDE         	movff	??_vfpfcnvrt,postinc2
  2847   007C84  C014  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  2848   007C88                     
  2849                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  2850   007C88  0E20               	movlw	32
  2851   007C8A  6E1C               	movwf	vfpfcnvrt@c^0,c
  2852   007C8C                     
  2853                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  2854   007C8C  BE1B               	btfsc	(vfpfcnvrt@convarg+3)^0,7,c
  2855   007C8E  EF4B  F03E         	goto	u1041
  2856   007C92  EF4E  F03E         	goto	u1040
  2857   007C96                     u1041:
  2858   007C96  0E01               	movlw	1
  2859   007C98  EF4F  F03E         	goto	u1050
  2860   007C9C                     u1040:
  2861   007C9C  0E00               	movlw	0
  2862   007C9E                     u1050:
  2863   007C9E  6E15               	movwf	vfpfcnvrt@done^0,c
  2864   007CA0                     l1879:
  2865                           
  2866                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  2867   007CA0  061C               	decf	vfpfcnvrt@c^0,f,c
  2868   007CA2  501C               	movf	vfpfcnvrt@c^0,w,c
  2869   007CA4  0F60               	addlw	low _dbuf
  2870   007CA6  6ED9               	movwf	fsr2l,c
  2871   007CA8  6ADA               	clrf	fsr2h,c
  2872   007CAA  C018  F001         	movff	vfpfcnvrt@convarg,___almod@dividend
  2873   007CAE  C019  F002         	movff	vfpfcnvrt@convarg+1,___almod@dividend+1
  2874   007CB2  C01A  F003         	movff	vfpfcnvrt@convarg+2,___almod@dividend+2
  2875   007CB6  C01B  F004         	movff	vfpfcnvrt@convarg+3,___almod@dividend+3
  2876   007CBA  0E0A               	movlw	10
  2877   007CBC  6E05               	movwf	___almod@divisor^0,c
  2878   007CBE  0E00               	movlw	0
  2879   007CC0  6E06               	movwf	(___almod@divisor+1)^0,c
  2880   007CC2  0E00               	movlw	0
  2881   007CC4  6E07               	movwf	(___almod@divisor+2)^0,c
  2882   007CC6  0E00               	movlw	0
  2883   007CC8  6E08               	movwf	(___almod@divisor+3)^0,c
  2884   007CCA  EC60  F039         	call	___almod	;wreg free
  2885   007CCE  C001  F00B         	movff	?___almod,abs@a
  2886   007CD2  C002  F00C         	movff	?___almod+1,abs@a+1
  2887   007CD6  EC93  F037         	call	_abs	;wreg free
  2888   007CDA  500B               	movf	?_abs^0,w,c
  2889   007CDC  0F30               	addlw	48
  2890   007CDE  6EDF               	movwf	indf2,c
  2891   007CE0                     
  2892                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  2893   007CE0  C018  F001         	movff	vfpfcnvrt@convarg,___aldiv@dividend
  2894   007CE4  C019  F002         	movff	vfpfcnvrt@convarg+1,___aldiv@dividend+1
  2895   007CE8  C01A  F003         	movff	vfpfcnvrt@convarg+2,___aldiv@dividend+2
  2896   007CEC  C01B  F004         	movff	vfpfcnvrt@convarg+3,___aldiv@dividend+3
  2897   007CF0  0E0A               	movlw	10
  2898   007CF2  6E05               	movwf	___aldiv@divisor^0,c
  2899   007CF4  0E00               	movlw	0
  2900   007CF6  6E06               	movwf	(___aldiv@divisor+1)^0,c
  2901   007CF8  0E00               	movlw	0
  2902   007CFA  6E07               	movwf	(___aldiv@divisor+2)^0,c
  2903   007CFC  0E00               	movlw	0
  2904   007CFE  6E08               	movwf	(___aldiv@divisor+3)^0,c
  2905   007D00  ECD6  F039         	call	___aldiv	;wreg free
  2906   007D04  C001  F018         	movff	?___aldiv,vfpfcnvrt@convarg
  2907   007D08  C002  F019         	movff	?___aldiv+1,vfpfcnvrt@convarg+1
  2908   007D0C  C003  F01A         	movff	?___aldiv+2,vfpfcnvrt@convarg+2
  2909   007D10  C004  F01B         	movff	?___aldiv+3,vfpfcnvrt@convarg+3
  2910   007D14                     
  2911                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  2912   007D14  5018               	movf	vfpfcnvrt@convarg^0,w,c
  2913   007D16  1019               	iorwf	(vfpfcnvrt@convarg+1)^0,w,c
  2914   007D18  101A               	iorwf	(vfpfcnvrt@convarg+2)^0,w,c
  2915   007D1A  101B               	iorwf	(vfpfcnvrt@convarg+3)^0,w,c
  2916   007D1C  B4D8               	btfsc	status,2,c
  2917   007D1E  EF93  F03E         	goto	u1061
  2918   007D22  EF95  F03E         	goto	u1060
  2919   007D26                     u1061:
  2920   007D26  EF9D  F03E         	goto	l1887
  2921   007D2A                     u1060:
  2922   007D2A  501C               	movf	vfpfcnvrt@c^0,w,c
  2923   007D2C  A4D8               	btfss	status,2,c
  2924   007D2E  EF9B  F03E         	goto	u1071
  2925   007D32  EF9D  F03E         	goto	u1070
  2926   007D36                     u1071:
  2927   007D36  EF50  F03E         	goto	l1879
  2928   007D3A                     u1070:
  2929   007D3A                     l1887:
  2930                           
  2931                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  2932   007D3A  501C               	movf	vfpfcnvrt@c^0,w,c
  2933   007D3C  B4D8               	btfsc	status,2,c
  2934   007D3E  EFA3  F03E         	goto	u1081
  2935   007D42  EFA5  F03E         	goto	u1080
  2936   007D46                     u1081:
  2937   007D46  EFC6  F03E         	goto	l1897
  2938   007D4A                     u1080:
  2939   007D4A  5015               	movf	vfpfcnvrt@done^0,w,c
  2940   007D4C  B4D8               	btfsc	status,2,c
  2941   007D4E  EFAB  F03E         	goto	u1091
  2942   007D52  EFAD  F03E         	goto	u1090
  2943   007D56                     u1091:
  2944   007D56  EFC6  F03E         	goto	l1897
  2945   007D5A                     u1090:
  2946   007D5A                     
  2947                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  2948   007D5A  061C               	decf	vfpfcnvrt@c^0,f,c
  2949   007D5C  501C               	movf	vfpfcnvrt@c^0,w,c
  2950   007D5E  0F60               	addlw	low _dbuf
  2951   007D60  6ED9               	movwf	fsr2l,c
  2952   007D62  6ADA               	clrf	fsr2h,c
  2953   007D64  0E2D               	movlw	45
  2954   007D66  6EDF               	movwf	indf2,c
  2955   007D68  EFC6  F03E         	goto	l1897
  2956   007D6C                     l1893:
  2957                           
  2958                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  2959   007D6C  501C               	movf	vfpfcnvrt@c^0,w,c
  2960   007D6E  0F60               	addlw	low _dbuf
  2961   007D70  6ED9               	movwf	fsr2l,c
  2962   007D72  6ADA               	clrf	fsr2h,c
  2963   007D74  50DF               	movf	indf2,w,c
  2964   007D76  6E13               	movwf	??_vfpfcnvrt^0,c
  2965   007D78  5013               	movf	??_vfpfcnvrt^0,w,c
  2966   007D7A  6E03               	movwf	fputc@c^0,c
  2967   007D7C  6A04               	clrf	(fputc@c+1)^0,c
  2968   007D7E  C00F  F005         	movff	vfpfcnvrt@fp,fputc@fp
  2969   007D82  C010  F006         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2970   007D86  ECFB  F038         	call	_fputc	;wreg free
  2971   007D8A  2A1C               	incf	vfpfcnvrt@c^0,f,c
  2972   007D8C                     l1897:
  2973                           
  2974                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  2975   007D8C  0E20               	movlw	32
  2976   007D8E  181C               	xorwf	vfpfcnvrt@c^0,w,c
  2977   007D90  A4D8               	btfss	status,2,c
  2978   007D92  EFCD  F03E         	goto	u1101
  2979   007D96  EFCF  F03E         	goto	u1100
  2980   007D9A                     u1101:
  2981   007D9A  EFB6  F03E         	goto	l1893
  2982   007D9E                     u1100:
  2983   007D9E  EFEC  F03E         	goto	l1042
  2984   007DA2                     l1899:
  2985                           
  2986                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  2987   007DA2  5011               	movf	vfpfcnvrt@fmt^0,w,c
  2988   007DA4  6ED9               	movwf	fsr2l,c
  2989   007DA6  6ADA               	clrf	fsr2h,c
  2990   007DA8  2ADE               	incf	postinc2,f,c
  2991   007DAA  0E00               	movlw	0
  2992   007DAC  22DD               	addwfc	postdec2,f,c
  2993   007DAE  EFEC  F03E         	goto	l1042
  2994   007DB2                     l1903:
  2995                           
  2996                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  2997   007DB2  5011               	movf	vfpfcnvrt@fmt^0,w,c
  2998   007DB4  6ED9               	movwf	fsr2l,c
  2999   007DB6  6ADA               	clrf	fsr2h,c
  3000   007DB8  CFDE FFF6          	movff	postinc2,tblptrl
  3001   007DBC  CFDD FFF7          	movff	postdec2,tblptrh
  3002   007DC0                     	if	0	;tblptru may be non-zero
  3003   007DC0                     	endif
  3004   007DC0                     	if	0	;tblptru may be non-zero
  3005   007DC0                     	endif
  3006   007DC0  0008               	tblrd		*
  3007   007DC2  50F5               	movf	tablat,w,c
  3008   007DC4  6E03               	movwf	fputc@c^0,c
  3009   007DC6  6A04               	clrf	(fputc@c+1)^0,c
  3010   007DC8  C00F  F005         	movff	vfpfcnvrt@fp,fputc@fp
  3011   007DCC  C010  F006         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3012   007DD0  ECFB  F038         	call	_fputc	;wreg free
  3013   007DD4  EFD1  F03E         	goto	l1899
  3014   007DD8                     l1042:
  3015   007DD8  0012               	return		;funcret
  3016   007DDA                     __end_of_vfpfcnvrt:
  3017                           	callstack 0
  3018                           
  3019 ;; *************** function _fputc *****************
  3020 ;; Defined at:
  3021 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_fputc.c"
  3022 ;; Parameters:    Size  Location     Type
  3023 ;;  c               2    2[COMRAM] int 
  3024 ;;  fp              2    4[COMRAM] PTR struct _IO_FILE
  3025 ;;		 -> NULL(0), 
  3026 ;; Auto vars:     Size  Location     Type
  3027 ;;		None
  3028 ;; Return value:  Size  Location     Type
  3029 ;;                  2    2[COMRAM] int 
  3030 ;; Registers used:
  3031 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3032 ;; Tracked objects:
  3033 ;;		On entry : 0/0
  3034 ;;		On exit  : 0/0
  3035 ;;		Unchanged: 0/0
  3036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3037 ;;      Params:         4       0       0       0       0       0       0       0       0
  3038 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3039 ;;      Temps:          5       0       0       0       0       0       0       0       0
  3040 ;;      Totals:         9       0       0       0       0       0       0       0       0
  3041 ;;Total ram usage:        9 bytes
  3042 ;; Hardware stack levels used: 1
  3043 ;; Hardware stack levels required when called: 2
  3044 ;; This function calls:
  3045 ;;		_putch
  3046 ;; This function is called by:
  3047 ;;		_vfpfcnvrt
  3048 ;; This function uses a non-reentrant model
  3049 ;;
  3050                           
  3051                           	psect	text12
  3052   0071F6                     __ptext12:
  3053                           	callstack 0
  3054   0071F6                     _fputc:
  3055                           	callstack 23
  3056   0071F6  5005               	movf	fputc@fp^0,w,c
  3057   0071F8  1006               	iorwf	(fputc@fp+1)^0,w,c
  3058   0071FA  B4D8               	btfsc	status,2,c
  3059   0071FC  EF02  F039         	goto	u961
  3060   007200  EF04  F039         	goto	u960
  3061   007204                     u961:
  3062   007204  EF0D  F039         	goto	l1825
  3063   007208                     u960:
  3064   007208  5005               	movf	fputc@fp^0,w,c
  3065   00720A  1006               	iorwf	(fputc@fp+1)^0,w,c
  3066   00720C  A4D8               	btfss	status,2,c
  3067   00720E  EF0B  F039         	goto	u971
  3068   007212  EF0D  F039         	goto	u970
  3069   007216                     u971:
  3070   007216  EF12  F039         	goto	l1827
  3071   00721A                     u970:
  3072   00721A                     l1825:
  3073   00721A  5003               	movf	fputc@c^0,w,c
  3074   00721C  EC42  F037         	call	_putch
  3075   007220  EF5F  F039         	goto	l1067
  3076   007224                     l1827:
  3077   007224  EE20 F00A          	lfsr	2,10
  3078   007228  5005               	movf	fputc@fp^0,w,c
  3079   00722A  26D9               	addwf	fsr2l,f,c
  3080   00722C  5006               	movf	(fputc@fp+1)^0,w,c
  3081   00722E  22DA               	addwfc	fsr2h,f,c
  3082   007230  50DE               	movf	postinc2,w,c
  3083   007232  10DE               	iorwf	postinc2,w,c
  3084   007234  B4D8               	btfsc	status,2,c
  3085   007236  EF1F  F039         	goto	u981
  3086   00723A  EF21  F039         	goto	u980
  3087   00723E                     u981:
  3088   00723E  EF3C  F039         	goto	l1831
  3089   007242                     u980:
  3090   007242  EE20 F00A          	lfsr	2,10
  3091   007246  5005               	movf	fputc@fp^0,w,c
  3092   007248  26D9               	addwf	fsr2l,f,c
  3093   00724A  5006               	movf	(fputc@fp+1)^0,w,c
  3094   00724C  22DA               	addwfc	fsr2h,f,c
  3095   00724E  EE10 F003          	lfsr	1,3
  3096   007252  5005               	movf	fputc@fp^0,w,c
  3097   007254  26E1               	addwf	fsr1l,f,c
  3098   007256  5006               	movf	(fputc@fp+1)^0,w,c
  3099   007258  22E2               	addwfc	fsr1h,f,c
  3100   00725A  50DE               	movf	postinc2,w,c
  3101   00725C  5CE6               	subwf	postinc1,w,c
  3102   00725E  50E6               	movf	postinc1,w,c
  3103   007260  0A80               	xorlw	128
  3104   007262  6E0B               	movwf	(??_fputc+4)^0,c
  3105   007264  50DE               	movf	postinc2,w,c
  3106   007266  0A80               	xorlw	128
  3107   007268  580B               	subwfb	(??_fputc+4)^0,w,c
  3108   00726A  B0D8               	btfsc	status,0,c
  3109   00726C  EF3A  F039         	goto	u991
  3110   007270  EF3C  F039         	goto	u990
  3111   007274                     u991:
  3112   007274  EF5F  F039         	goto	l1067
  3113   007278                     u990:
  3114   007278                     l1831:
  3115   007278  EE20 F003          	lfsr	2,3
  3116   00727C  5005               	movf	fputc@fp^0,w,c
  3117   00727E  26D9               	addwf	fsr2l,f,c
  3118   007280  5006               	movf	(fputc@fp+1)^0,w,c
  3119   007282  22DA               	addwfc	fsr2h,f,c
  3120   007284  CFDE F007          	movff	postinc2,??_fputc
  3121   007288  CFDD F008          	movff	postdec2,??_fputc+1
  3122   00728C  C005  FFD9         	movff	fputc@fp,fsr2l
  3123   007290  C006  FFDA         	movff	fputc@fp+1,fsr2h
  3124   007294  CFDE F009          	movff	postinc2,??_fputc+2
  3125   007298  CFDD F00A          	movff	postdec2,??_fputc+3
  3126   00729C  5007               	movf	??_fputc^0,w,c
  3127   00729E  2409               	addwf	(??_fputc+2)^0,w,c
  3128   0072A0  6ED9               	movwf	fsr2l,c
  3129   0072A2  5008               	movf	(??_fputc+1)^0,w,c
  3130   0072A4  200A               	addwfc	(??_fputc+3)^0,w,c
  3131   0072A6  6EDA               	movwf	fsr2h,c
  3132   0072A8  C003  FFDF         	movff	fputc@c,indf2
  3133   0072AC  EE20 F003          	lfsr	2,3
  3134   0072B0  5005               	movf	fputc@fp^0,w,c
  3135   0072B2  26D9               	addwf	fsr2l,f,c
  3136   0072B4  5006               	movf	(fputc@fp+1)^0,w,c
  3137   0072B6  22DA               	addwfc	fsr2h,f,c
  3138   0072B8  2ADE               	incf	postinc2,f,c
  3139   0072BA  0E00               	movlw	0
  3140   0072BC  22DD               	addwfc	postdec2,f,c
  3141   0072BE                     l1067:
  3142   0072BE  0012               	return		;funcret
  3143   0072C0                     __end_of_fputc:
  3144                           	callstack 0
  3145                           
  3146 ;; *************** function _putch *****************
  3147 ;; Defined at:
  3148 ;;		line 75 in file "librerias/UART.c"
  3149 ;; Parameters:    Size  Location     Type
  3150 ;;  data            1    wreg     unsigned char 
  3151 ;; Auto vars:     Size  Location     Type
  3152 ;;  data            1    1[COMRAM] unsigned char 
  3153 ;; Return value:  Size  Location     Type
  3154 ;;                  1    wreg      void 
  3155 ;; Registers used:
  3156 ;;		wreg, status,2, cstack
  3157 ;; Tracked objects:
  3158 ;;		On entry : 0/0
  3159 ;;		On exit  : 0/0
  3160 ;;		Unchanged: 0/0
  3161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3162 ;;      Params:         0       0       0       0       0       0       0       0       0
  3163 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3164 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3165 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3166 ;;Total ram usage:        1 bytes
  3167 ;; Hardware stack levels used: 1
  3168 ;; Hardware stack levels required when called: 1
  3169 ;; This function calls:
  3170 ;;		_UART_Tx
  3171 ;; This function is called by:
  3172 ;;		_fputc
  3173 ;; This function uses a non-reentrant model
  3174 ;;
  3175                           
  3176                           	psect	text13
  3177   006E84                     __ptext13:
  3178                           	callstack 0
  3179   006E84                     _putch:
  3180                           	callstack 23
  3181                           
  3182                           ;incstack = 0
  3183                           ;putch@data stored from wreg
  3184   006E84  6E02               	movwf	putch@data^0,c
  3185   006E86                     
  3186                           ;librerias/UART.c: 76:     UART_Tx(data);
  3187   006E86  5002               	movf	putch@data^0,w,c
  3188   006E88  EC47  F037         	call	_UART_Tx
  3189   006E8C  0012               	return		;funcret
  3190   006E8E                     __end_of_putch:
  3191                           	callstack 0
  3192                           
  3193 ;; *************** function _UART_Tx *****************
  3194 ;; Defined at:
  3195 ;;		line 70 in file "librerias/UART.c"
  3196 ;; Parameters:    Size  Location     Type
  3197 ;;  dato            1    wreg     unsigned char 
  3198 ;; Auto vars:     Size  Location     Type
  3199 ;;  dato            1    0[COMRAM] unsigned char 
  3200 ;; Return value:  Size  Location     Type
  3201 ;;                  1    wreg      void 
  3202 ;; Registers used:
  3203 ;;		wreg
  3204 ;; Tracked objects:
  3205 ;;		On entry : 0/0
  3206 ;;		On exit  : 0/0
  3207 ;;		Unchanged: 0/0
  3208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3209 ;;      Params:         0       0       0       0       0       0       0       0       0
  3210 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3211 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3212 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3213 ;;Total ram usage:        1 bytes
  3214 ;; Hardware stack levels used: 1
  3215 ;; This function calls:
  3216 ;;		Nothing
  3217 ;; This function is called by:
  3218 ;;		_putch
  3219 ;; This function uses a non-reentrant model
  3220 ;;
  3221                           
  3222                           	psect	text14
  3223   006E8E                     __ptext14:
  3224                           	callstack 0
  3225   006E8E                     _UART_Tx:
  3226                           	callstack 23
  3227                           
  3228                           ;incstack = 0
  3229                           ;UART_Tx@dato stored from wreg
  3230   006E8E  6E01               	movwf	UART_Tx@dato^0,c
  3231   006E90                     l112:
  3232   006E90  A2AC               	btfss	4012,1,c	;volatile
  3233   006E92  EF4D  F037         	goto	u831
  3234   006E96  EF4F  F037         	goto	u830
  3235   006E9A                     u831:
  3236   006E9A  EF48  F037         	goto	l112
  3237   006E9E                     u830:
  3238   006E9E                     
  3239                           ;librerias/UART.c: 72:     TXREG1 = dato;
  3240   006E9E  C001  FFAD         	movff	UART_Tx@dato,4013	;volatile
  3241   006EA2  0012               	return		;funcret
  3242   006EA4                     __end_of_UART_Tx:
  3243                           	callstack 0
  3244                           
  3245 ;; *************** function _abs *****************
  3246 ;; Defined at:
  3247 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\abs.c"
  3248 ;; Parameters:    Size  Location     Type
  3249 ;;  a               2   10[COMRAM] int 
  3250 ;; Auto vars:     Size  Location     Type
  3251 ;;		None
  3252 ;; Return value:  Size  Location     Type
  3253 ;;                  2   10[COMRAM] int 
  3254 ;; Registers used:
  3255 ;;		wreg, status,2, status,0
  3256 ;; Tracked objects:
  3257 ;;		On entry : 0/0
  3258 ;;		On exit  : 0/0
  3259 ;;		Unchanged: 0/0
  3260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3261 ;;      Params:         2       0       0       0       0       0       0       0       0
  3262 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3263 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3264 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3265 ;;Total ram usage:        4 bytes
  3266 ;; Hardware stack levels used: 1
  3267 ;; This function calls:
  3268 ;;		Nothing
  3269 ;; This function is called by:
  3270 ;;		_vfpfcnvrt
  3271 ;; This function uses a non-reentrant model
  3272 ;;
  3273                           
  3274                           	psect	text15
  3275   006F26                     __ptext15:
  3276                           	callstack 0
  3277   006F26                     _abs:
  3278                           	callstack 25
  3279   006F26  BE0C               	btfsc	(abs@a+1)^0,7,c
  3280   006F28  EF98  F037         	goto	u1001
  3281   006F2C  EF9A  F037         	goto	u1000
  3282   006F30                     u1001:
  3283   006F30  EFA0  F037         	goto	l1052
  3284   006F34                     u1000:
  3285   006F34  C00B  F00B         	movff	abs@a,?_abs
  3286   006F38  C00C  F00C         	movff	abs@a+1,?_abs+1
  3287   006F3C  EFAC  F037         	goto	l1055
  3288   006F40                     l1052:
  3289   006F40  C00B  F00D         	movff	abs@a,??_abs
  3290   006F44  C00C  F00E         	movff	abs@a+1,??_abs+1
  3291   006F48  1E0D               	comf	??_abs^0,f,c
  3292   006F4A  1E0E               	comf	(??_abs+1)^0,f,c
  3293   006F4C  4A0D               	infsnz	??_abs^0,f,c
  3294   006F4E  2A0E               	incf	(??_abs+1)^0,f,c
  3295   006F50  C00D  F00B         	movff	??_abs,?_abs
  3296   006F54  C00E  F00C         	movff	??_abs+1,?_abs+1
  3297   006F58                     l1055:
  3298   006F58  0012               	return		;funcret
  3299   006F5A                     __end_of_abs:
  3300                           	callstack 0
  3301                           
  3302 ;; *************** function ___almod *****************
  3303 ;; Defined at:
  3304 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\almod.c"
  3305 ;; Parameters:    Size  Location     Type
  3306 ;;  dividend        4    0[COMRAM] long 
  3307 ;;  divisor         4    4[COMRAM] long 
  3308 ;; Auto vars:     Size  Location     Type
  3309 ;;  sign            1    9[COMRAM] unsigned char 
  3310 ;;  counter         1    8[COMRAM] unsigned char 
  3311 ;; Return value:  Size  Location     Type
  3312 ;;                  4    0[COMRAM] long 
  3313 ;; Registers used:
  3314 ;;		wreg, status,2, status,0
  3315 ;; Tracked objects:
  3316 ;;		On entry : 0/0
  3317 ;;		On exit  : 0/0
  3318 ;;		Unchanged: 0/0
  3319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3320 ;;      Params:         8       0       0       0       0       0       0       0       0
  3321 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3322 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3323 ;;      Totals:        10       0       0       0       0       0       0       0       0
  3324 ;;Total ram usage:       10 bytes
  3325 ;; Hardware stack levels used: 1
  3326 ;; This function calls:
  3327 ;;		Nothing
  3328 ;; This function is called by:
  3329 ;;		_vfpfcnvrt
  3330 ;; This function uses a non-reentrant model
  3331 ;;
  3332                           
  3333                           	psect	text16
  3334   0072C0                     __ptext16:
  3335                           	callstack 0
  3336   0072C0                     ___almod:
  3337                           	callstack 25
  3338   0072C0  0E00               	movlw	0
  3339   0072C2  6E0A               	movwf	___almod@sign^0,c
  3340   0072C4  BE04               	btfsc	(___almod@dividend+3)^0,7,c
  3341   0072C6  EF69  F039         	goto	u900
  3342   0072CA  EF67  F039         	goto	u901
  3343   0072CE                     u901:
  3344   0072CE  EF73  F039         	goto	l1793
  3345   0072D2                     u900:
  3346   0072D2  1E04               	comf	(___almod@dividend+3)^0,f,c
  3347   0072D4  1E03               	comf	(___almod@dividend+2)^0,f,c
  3348   0072D6  1E02               	comf	(___almod@dividend+1)^0,f,c
  3349   0072D8  6C01               	negf	___almod@dividend^0,c
  3350   0072DA  0E00               	movlw	0
  3351   0072DC  2202               	addwfc	(___almod@dividend+1)^0,f,c
  3352   0072DE  2203               	addwfc	(___almod@dividend+2)^0,f,c
  3353   0072E0  2204               	addwfc	(___almod@dividend+3)^0,f,c
  3354   0072E2  0E01               	movlw	1
  3355   0072E4  6E0A               	movwf	___almod@sign^0,c
  3356   0072E6                     l1793:
  3357   0072E6  BE08               	btfsc	(___almod@divisor+3)^0,7,c
  3358   0072E8  EF7A  F039         	goto	u910
  3359   0072EC  EF78  F039         	goto	u911
  3360   0072F0                     u911:
  3361   0072F0  EF82  F039         	goto	l1797
  3362   0072F4                     u910:
  3363   0072F4  1E08               	comf	(___almod@divisor+3)^0,f,c
  3364   0072F6  1E07               	comf	(___almod@divisor+2)^0,f,c
  3365   0072F8  1E06               	comf	(___almod@divisor+1)^0,f,c
  3366   0072FA  6C05               	negf	___almod@divisor^0,c
  3367   0072FC  0E00               	movlw	0
  3368   0072FE  2206               	addwfc	(___almod@divisor+1)^0,f,c
  3369   007300  2207               	addwfc	(___almod@divisor+2)^0,f,c
  3370   007302  2208               	addwfc	(___almod@divisor+3)^0,f,c
  3371   007304                     l1797:
  3372   007304  5005               	movf	___almod@divisor^0,w,c
  3373   007306  1006               	iorwf	(___almod@divisor+1)^0,w,c
  3374   007308  1007               	iorwf	(___almod@divisor+2)^0,w,c
  3375   00730A  1008               	iorwf	(___almod@divisor+3)^0,w,c
  3376   00730C  B4D8               	btfsc	status,2,c
  3377   00730E  EF8B  F039         	goto	u921
  3378   007312  EF8D  F039         	goto	u920
  3379   007316                     u921:
  3380   007316  EFBD  F039         	goto	l1813
  3381   00731A                     u920:
  3382   00731A  0E01               	movlw	1
  3383   00731C  6E09               	movwf	___almod@counter^0,c
  3384   00731E  EF97  F039         	goto	l1803
  3385   007322                     l1801:
  3386   007322  90D8               	bcf	status,0,c
  3387   007324  3605               	rlcf	___almod@divisor^0,f,c
  3388   007326  3606               	rlcf	(___almod@divisor+1)^0,f,c
  3389   007328  3607               	rlcf	(___almod@divisor+2)^0,f,c
  3390   00732A  3608               	rlcf	(___almod@divisor+3)^0,f,c
  3391   00732C  2A09               	incf	___almod@counter^0,f,c
  3392   00732E                     l1803:
  3393   00732E  AE08               	btfss	(___almod@divisor+3)^0,7,c
  3394   007330  EF9C  F039         	goto	u931
  3395   007334  EF9E  F039         	goto	u930
  3396   007338                     u931:
  3397   007338  EF91  F039         	goto	l1801
  3398   00733C                     u930:
  3399   00733C                     l1805:
  3400   00733C  5005               	movf	___almod@divisor^0,w,c
  3401   00733E  5C01               	subwf	___almod@dividend^0,w,c
  3402   007340  5006               	movf	(___almod@divisor+1)^0,w,c
  3403   007342  5802               	subwfb	(___almod@dividend+1)^0,w,c
  3404   007344  5007               	movf	(___almod@divisor+2)^0,w,c
  3405   007346  5803               	subwfb	(___almod@dividend+2)^0,w,c
  3406   007348  5008               	movf	(___almod@divisor+3)^0,w,c
  3407   00734A  5804               	subwfb	(___almod@dividend+3)^0,w,c
  3408   00734C  A0D8               	btfss	status,0,c
  3409   00734E  EFAB  F039         	goto	u941
  3410   007352  EFAD  F039         	goto	u940
  3411   007356                     u941:
  3412   007356  EFB5  F039         	goto	l1809
  3413   00735A                     u940:
  3414   00735A  5005               	movf	___almod@divisor^0,w,c
  3415   00735C  5E01               	subwf	___almod@dividend^0,f,c
  3416   00735E  5006               	movf	(___almod@divisor+1)^0,w,c
  3417   007360  5A02               	subwfb	(___almod@dividend+1)^0,f,c
  3418   007362  5007               	movf	(___almod@divisor+2)^0,w,c
  3419   007364  5A03               	subwfb	(___almod@dividend+2)^0,f,c
  3420   007366  5008               	movf	(___almod@divisor+3)^0,w,c
  3421   007368  5A04               	subwfb	(___almod@dividend+3)^0,f,c
  3422   00736A                     l1809:
  3423   00736A  90D8               	bcf	status,0,c
  3424   00736C  3208               	rrcf	(___almod@divisor+3)^0,f,c
  3425   00736E  3207               	rrcf	(___almod@divisor+2)^0,f,c
  3426   007370  3206               	rrcf	(___almod@divisor+1)^0,f,c
  3427   007372  3205               	rrcf	___almod@divisor^0,f,c
  3428   007374  2E09               	decfsz	___almod@counter^0,f,c
  3429   007376  EF9E  F039         	goto	l1805
  3430   00737A                     l1813:
  3431   00737A  500A               	movf	___almod@sign^0,w,c
  3432   00737C  B4D8               	btfsc	status,2,c
  3433   00737E  EFC3  F039         	goto	u951
  3434   007382  EFC5  F039         	goto	u950
  3435   007386                     u951:
  3436   007386  EFCD  F039         	goto	l1817
  3437   00738A                     u950:
  3438   00738A  1E04               	comf	(___almod@dividend+3)^0,f,c
  3439   00738C  1E03               	comf	(___almod@dividend+2)^0,f,c
  3440   00738E  1E02               	comf	(___almod@dividend+1)^0,f,c
  3441   007390  6C01               	negf	___almod@dividend^0,c
  3442   007392  0E00               	movlw	0
  3443   007394  2202               	addwfc	(___almod@dividend+1)^0,f,c
  3444   007396  2203               	addwfc	(___almod@dividend+2)^0,f,c
  3445   007398  2204               	addwfc	(___almod@dividend+3)^0,f,c
  3446   00739A                     l1817:
  3447   00739A  C001  F001         	movff	___almod@dividend,?___almod
  3448   00739E  C002  F002         	movff	___almod@dividend+1,?___almod+1
  3449   0073A2  C003  F003         	movff	___almod@dividend+2,?___almod+2
  3450   0073A6  C004  F004         	movff	___almod@dividend+3,?___almod+3
  3451   0073AA  0012               	return		;funcret
  3452   0073AC                     __end_of___almod:
  3453                           	callstack 0
  3454                           
  3455 ;; *************** function ___aldiv *****************
  3456 ;; Defined at:
  3457 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\aldiv.c"
  3458 ;; Parameters:    Size  Location     Type
  3459 ;;  dividend        4    0[COMRAM] long 
  3460 ;;  divisor         4    4[COMRAM] long 
  3461 ;; Auto vars:     Size  Location     Type
  3462 ;;  quotient        4   10[COMRAM] long 
  3463 ;;  sign            1    9[COMRAM] unsigned char 
  3464 ;;  counter         1    8[COMRAM] unsigned char 
  3465 ;; Return value:  Size  Location     Type
  3466 ;;                  4    0[COMRAM] long 
  3467 ;; Registers used:
  3468 ;;		wreg, status,2, status,0
  3469 ;; Tracked objects:
  3470 ;;		On entry : 0/0
  3471 ;;		On exit  : 0/0
  3472 ;;		Unchanged: 0/0
  3473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3474 ;;      Params:         8       0       0       0       0       0       0       0       0
  3475 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3476 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3477 ;;      Totals:        14       0       0       0       0       0       0       0       0
  3478 ;;Total ram usage:       14 bytes
  3479 ;; Hardware stack levels used: 1
  3480 ;; This function calls:
  3481 ;;		Nothing
  3482 ;; This function is called by:
  3483 ;;		_SPI_BaudRateGen
  3484 ;;		_SPI_actual_frec
  3485 ;;		_vfpfcnvrt
  3486 ;; This function uses a non-reentrant model
  3487 ;;
  3488                           
  3489                           	psect	text17
  3490   0073AC                     __ptext17:
  3491                           	callstack 0
  3492   0073AC                     ___aldiv:
  3493                           	callstack 25
  3494   0073AC  0E00               	movlw	0
  3495   0073AE  6E0A               	movwf	___aldiv@sign^0,c
  3496   0073B0  BE08               	btfsc	(___aldiv@divisor+3)^0,7,c
  3497   0073B2  EFDF  F039         	goto	u840
  3498   0073B6  EFDD  F039         	goto	u841
  3499   0073BA                     u841:
  3500   0073BA  EFE9  F039         	goto	l1749
  3501   0073BE                     u840:
  3502   0073BE  1E08               	comf	(___aldiv@divisor+3)^0,f,c
  3503   0073C0  1E07               	comf	(___aldiv@divisor+2)^0,f,c
  3504   0073C2  1E06               	comf	(___aldiv@divisor+1)^0,f,c
  3505   0073C4  6C05               	negf	___aldiv@divisor^0,c
  3506   0073C6  0E00               	movlw	0
  3507   0073C8  2206               	addwfc	(___aldiv@divisor+1)^0,f,c
  3508   0073CA  2207               	addwfc	(___aldiv@divisor+2)^0,f,c
  3509   0073CC  2208               	addwfc	(___aldiv@divisor+3)^0,f,c
  3510   0073CE  0E01               	movlw	1
  3511   0073D0  6E0A               	movwf	___aldiv@sign^0,c
  3512   0073D2                     l1749:
  3513   0073D2  BE04               	btfsc	(___aldiv@dividend+3)^0,7,c
  3514   0073D4  EFF0  F039         	goto	u850
  3515   0073D8  EFEE  F039         	goto	u851
  3516   0073DC                     u851:
  3517   0073DC  EFFA  F039         	goto	l1755
  3518   0073E0                     u850:
  3519   0073E0  1E04               	comf	(___aldiv@dividend+3)^0,f,c
  3520   0073E2  1E03               	comf	(___aldiv@dividend+2)^0,f,c
  3521   0073E4  1E02               	comf	(___aldiv@dividend+1)^0,f,c
  3522   0073E6  6C01               	negf	___aldiv@dividend^0,c
  3523   0073E8  0E00               	movlw	0
  3524   0073EA  2202               	addwfc	(___aldiv@dividend+1)^0,f,c
  3525   0073EC  2203               	addwfc	(___aldiv@dividend+2)^0,f,c
  3526   0073EE  2204               	addwfc	(___aldiv@dividend+3)^0,f,c
  3527   0073F0  0E01               	movlw	1
  3528   0073F2  1A0A               	xorwf	___aldiv@sign^0,f,c
  3529   0073F4                     l1755:
  3530   0073F4  0E00               	movlw	0
  3531   0073F6  6E0B               	movwf	___aldiv@quotient^0,c
  3532   0073F8  0E00               	movlw	0
  3533   0073FA  6E0C               	movwf	(___aldiv@quotient+1)^0,c
  3534   0073FC  0E00               	movlw	0
  3535   0073FE  6E0D               	movwf	(___aldiv@quotient+2)^0,c
  3536   007400  0E00               	movlw	0
  3537   007402  6E0E               	movwf	(___aldiv@quotient+3)^0,c
  3538   007404  5005               	movf	___aldiv@divisor^0,w,c
  3539   007406  1006               	iorwf	(___aldiv@divisor+1)^0,w,c
  3540   007408  1007               	iorwf	(___aldiv@divisor+2)^0,w,c
  3541   00740A  1008               	iorwf	(___aldiv@divisor+3)^0,w,c
  3542   00740C  B4D8               	btfsc	status,2,c
  3543   00740E  EF0B  F03A         	goto	u861
  3544   007412  EF0D  F03A         	goto	u860
  3545   007416                     u861:
  3546   007416  EF43  F03A         	goto	l1777
  3547   00741A                     u860:
  3548   00741A  0E01               	movlw	1
  3549   00741C  6E09               	movwf	___aldiv@counter^0,c
  3550   00741E  EF17  F03A         	goto	l1763
  3551   007422                     l1761:
  3552   007422  90D8               	bcf	status,0,c
  3553   007424  3605               	rlcf	___aldiv@divisor^0,f,c
  3554   007426  3606               	rlcf	(___aldiv@divisor+1)^0,f,c
  3555   007428  3607               	rlcf	(___aldiv@divisor+2)^0,f,c
  3556   00742A  3608               	rlcf	(___aldiv@divisor+3)^0,f,c
  3557   00742C  2A09               	incf	___aldiv@counter^0,f,c
  3558   00742E                     l1763:
  3559   00742E  AE08               	btfss	(___aldiv@divisor+3)^0,7,c
  3560   007430  EF1C  F03A         	goto	u871
  3561   007434  EF1E  F03A         	goto	u870
  3562   007438                     u871:
  3563   007438  EF11  F03A         	goto	l1761
  3564   00743C                     u870:
  3565   00743C                     l1765:
  3566   00743C  90D8               	bcf	status,0,c
  3567   00743E  360B               	rlcf	___aldiv@quotient^0,f,c
  3568   007440  360C               	rlcf	(___aldiv@quotient+1)^0,f,c
  3569   007442  360D               	rlcf	(___aldiv@quotient+2)^0,f,c
  3570   007444  360E               	rlcf	(___aldiv@quotient+3)^0,f,c
  3571   007446  5005               	movf	___aldiv@divisor^0,w,c
  3572   007448  5C01               	subwf	___aldiv@dividend^0,w,c
  3573   00744A  5006               	movf	(___aldiv@divisor+1)^0,w,c
  3574   00744C  5802               	subwfb	(___aldiv@dividend+1)^0,w,c
  3575   00744E  5007               	movf	(___aldiv@divisor+2)^0,w,c
  3576   007450  5803               	subwfb	(___aldiv@dividend+2)^0,w,c
  3577   007452  5008               	movf	(___aldiv@divisor+3)^0,w,c
  3578   007454  5804               	subwfb	(___aldiv@dividend+3)^0,w,c
  3579   007456  A0D8               	btfss	status,0,c
  3580   007458  EF30  F03A         	goto	u881
  3581   00745C  EF32  F03A         	goto	u880
  3582   007460                     u881:
  3583   007460  EF3B  F03A         	goto	l1773
  3584   007464                     u880:
  3585   007464  5005               	movf	___aldiv@divisor^0,w,c
  3586   007466  5E01               	subwf	___aldiv@dividend^0,f,c
  3587   007468  5006               	movf	(___aldiv@divisor+1)^0,w,c
  3588   00746A  5A02               	subwfb	(___aldiv@dividend+1)^0,f,c
  3589   00746C  5007               	movf	(___aldiv@divisor+2)^0,w,c
  3590   00746E  5A03               	subwfb	(___aldiv@dividend+2)^0,f,c
  3591   007470  5008               	movf	(___aldiv@divisor+3)^0,w,c
  3592   007472  5A04               	subwfb	(___aldiv@dividend+3)^0,f,c
  3593   007474  800B               	bsf	___aldiv@quotient^0,0,c
  3594   007476                     l1773:
  3595   007476  90D8               	bcf	status,0,c
  3596   007478  3208               	rrcf	(___aldiv@divisor+3)^0,f,c
  3597   00747A  3207               	rrcf	(___aldiv@divisor+2)^0,f,c
  3598   00747C  3206               	rrcf	(___aldiv@divisor+1)^0,f,c
  3599   00747E  3205               	rrcf	___aldiv@divisor^0,f,c
  3600   007480  2E09               	decfsz	___aldiv@counter^0,f,c
  3601   007482  EF1E  F03A         	goto	l1765
  3602   007486                     l1777:
  3603   007486  500A               	movf	___aldiv@sign^0,w,c
  3604   007488  B4D8               	btfsc	status,2,c
  3605   00748A  EF49  F03A         	goto	u891
  3606   00748E  EF4B  F03A         	goto	u890
  3607   007492                     u891:
  3608   007492  EF53  F03A         	goto	l1781
  3609   007496                     u890:
  3610   007496  1E0E               	comf	(___aldiv@quotient+3)^0,f,c
  3611   007498  1E0D               	comf	(___aldiv@quotient+2)^0,f,c
  3612   00749A  1E0C               	comf	(___aldiv@quotient+1)^0,f,c
  3613   00749C  6C0B               	negf	___aldiv@quotient^0,c
  3614   00749E  0E00               	movlw	0
  3615   0074A0  220C               	addwfc	(___aldiv@quotient+1)^0,f,c
  3616   0074A2  220D               	addwfc	(___aldiv@quotient+2)^0,f,c
  3617   0074A4  220E               	addwfc	(___aldiv@quotient+3)^0,f,c
  3618   0074A6                     l1781:
  3619   0074A6  C00B  F001         	movff	___aldiv@quotient,?___aldiv
  3620   0074AA  C00C  F002         	movff	___aldiv@quotient+1,?___aldiv+1
  3621   0074AE  C00D  F003         	movff	___aldiv@quotient+2,?___aldiv+2
  3622   0074B2  C00E  F004         	movff	___aldiv@quotient+3,?___aldiv+3
  3623   0074B6  0012               	return		;funcret
  3624   0074B8                     __end_of___aldiv:
  3625                           	callstack 0
  3626                           
  3627 ;; *************** function _SPI1_ByteExchange *****************
  3628 ;; Defined at:
  3629 ;;		line 94 in file "librerias/SPI.c"
  3630 ;; Parameters:    Size  Location     Type
  3631 ;;  byteData        1    wreg     unsigned char 
  3632 ;; Auto vars:     Size  Location     Type
  3633 ;;  byteData        1    0[COMRAM] unsigned char 
  3634 ;; Return value:  Size  Location     Type
  3635 ;;                  1    wreg      unsigned char 
  3636 ;; Registers used:
  3637 ;;		wreg, status,2
  3638 ;; Tracked objects:
  3639 ;;		On entry : 0/0
  3640 ;;		On exit  : 0/0
  3641 ;;		Unchanged: 0/0
  3642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3643 ;;      Params:         0       0       0       0       0       0       0       0       0
  3644 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3645 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3646 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3647 ;;Total ram usage:        1 bytes
  3648 ;; Hardware stack levels used: 1
  3649 ;; This function calls:
  3650 ;;		Nothing
  3651 ;; This function is called by:
  3652 ;;		_main
  3653 ;; This function uses a non-reentrant model
  3654 ;;
  3655                           
  3656                           	psect	text18
  3657   006EA4                     __ptext18:
  3658                           	callstack 0
  3659   006EA4                     _SPI1_ByteExchange:
  3660                           	callstack 30
  3661                           
  3662                           ;incstack = 0
  3663                           ;SPI1_ByteExchange@byteData stored from wreg
  3664   006EA4  6E01               	movwf	SPI1_ByteExchange@byteData^0,c
  3665   006EA6                     
  3666                           ;librerias/SPI.c: 94: uint8_t SPI1_ByteExchange(uint8_t byteData);librerias/SPI.c: 95: {
      +                          ;librerias/SPI.c: 96:     SSP1BUF = byteData;
  3667   006EA6  C001  FFC9         	movff	SPI1_ByteExchange@byteData,4041	;volatile
  3668   006EAA                     l281:
  3669                           
  3670                           ;librerias/SPI.c: 97:     while (!PIR1bits.SSP1IF)
  3671   006EAA  A69E               	btfss	158,3,c	;volatile
  3672   006EAC  EF5A  F037         	goto	u731
  3673   006EB0  EF5C  F037         	goto	u730
  3674   006EB4                     u731:
  3675   006EB4  EF55  F037         	goto	l281
  3676   006EB8                     u730:
  3677   006EB8                     
  3678                           ;librerias/SPI.c: 101:     PIR1bits.SSP1IF = 0;
  3679   006EB8  969E               	bcf	158,3,c	;volatile
  3680                           
  3681                           ;librerias/SPI.c: 102:     return SSP1BUF;
  3682   006EBA  50C9               	movf	201,w,c	;volatile
  3683   006EBC  0012               	return		;funcret
  3684   006EBE                     __end_of_SPI1_ByteExchange:
  3685                           	callstack 0
  3686                           
  3687 ;; *************** function _Clock_Init *****************
  3688 ;; Defined at:
  3689 ;;		line 3 in file "librerias/clock.c"
  3690 ;; Parameters:    Size  Location     Type
  3691 ;;  s16Timeout      2    0[COMRAM] short 
  3692 ;; Auto vars:     Size  Location     Type
  3693 ;;  bStatus         1    5[COMRAM] _Bool 
  3694 ;;  bStatus         1    4[COMRAM] _Bool 
  3695 ;;  bStatus         1    3[COMRAM] _Bool 
  3696 ;;  bStatus         1    2[COMRAM] _Bool 
  3697 ;;  returnCode      1    7[COMRAM] enum E5188
  3698 ;;  bItTimeEn       1    6[COMRAM] _Bool 
  3699 ;; Return value:  Size  Location     Type
  3700 ;;                  1    wreg      enum E5188
  3701 ;; Registers used:
  3702 ;;		wreg, status,2, status,0
  3703 ;; Tracked objects:
  3704 ;;		On entry : 0/0
  3705 ;;		On exit  : 0/0
  3706 ;;		Unchanged: 0/0
  3707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3708 ;;      Params:         2       0       0       0       0       0       0       0       0
  3709 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3710 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3711 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3712 ;;Total ram usage:        8 bytes
  3713 ;; Hardware stack levels used: 1
  3714 ;; This function calls:
  3715 ;;		Nothing
  3716 ;; This function is called by:
  3717 ;;		_main
  3718 ;; This function uses a non-reentrant model
  3719 ;;
  3720                           
  3721                           	psect	text19
  3722   007928                     __ptext19:
  3723                           	callstack 0
  3724   007928                     _Clock_Init:
  3725                           	callstack 30
  3726   007928                     
  3727                           ;librerias/clock.c: 4:     CLK_ERROR_CODE returnCode = ERROR_CODE_OK;
  3728   007928  0E00               	movlw	0
  3729   00792A  6E08               	movwf	Clock_Init@returnCode^0,c
  3730   00792C                     
  3731                           ;librerias/clock.c: 5:     _Bool bItTimeEn = (0 >= s16Timeout) ? 0 : 1;
  3732   00792C  BE02               	btfsc	(Clock_Init@s16Timeout+1)^0,7,c
  3733   00792E  EFA4  F03C         	goto	u1290
  3734   007932  5002               	movf	(Clock_Init@s16Timeout+1)^0,w,c
  3735   007934  E106               	bnz	u1291
  3736   007936  0401               	decf	Clock_Init@s16Timeout^0,w,c
  3737   007938  B0D8               	btfsc	status,0,c
  3738   00793A  EFA1  F03C         	goto	u1291
  3739   00793E  EFA4  F03C         	goto	u1290
  3740   007942                     u1291:
  3741   007942  0E01               	movlw	1
  3742   007944  EFA5  F03C         	goto	u1300
  3743   007948                     u1290:
  3744   007948  0E00               	movlw	0
  3745   00794A                     u1300:
  3746   00794A  6E07               	movwf	Clock_Init@bItTimeEn^0,c
  3747   00794C                     l146:
  3748                           
  3749                           ;librerias/clock.c: 10:             bStatus = OSCCON2bits.HFIOFR;
  3750   00794C  B2D2               	btfsc	210,1,c	;volatile
  3751   00794E  EFAB  F03C         	goto	u1311
  3752   007952  EFAE  F03C         	goto	u1310
  3753   007956                     u1311:
  3754   007956  0E01               	movlw	1
  3755   007958  EFAF  F03C         	goto	u1316
  3756   00795C                     u1310:
  3757   00795C  0E00               	movlw	0
  3758   00795E                     u1316:
  3759   00795E  6E03               	movwf	Clock_Init@bStatus^0,c
  3760   007960                     
  3761                           ;librerias/clock.c: 11:             s16Timeout--;
  3762   007960  0601               	decf	Clock_Init@s16Timeout^0,f,c
  3763   007962  A0D8               	btfss	status,0,c
  3764   007964  0602               	decf	(Clock_Init@s16Timeout+1)^0,f,c
  3765   007966                     
  3766                           ;librerias/clock.c: 12:         }while((0 == bStatus) && ((0 < s16Timeout) || (0 == bItT
      +                          imeEn)));
  3767   007966  5003               	movf	Clock_Init@bStatus^0,w,c
  3768   007968  A4D8               	btfss	status,2,c
  3769   00796A  EFB9  F03C         	goto	u1321
  3770   00796E  EFBB  F03C         	goto	u1320
  3771   007972                     u1321:
  3772   007972  EFD0  F03C         	goto	l2123
  3773   007976                     u1320:
  3774   007976  BE02               	btfsc	(Clock_Init@s16Timeout+1)^0,7,c
  3775   007978  EFC8  F03C         	goto	u1330
  3776   00797C  5002               	movf	(Clock_Init@s16Timeout+1)^0,w,c
  3777   00797E  E106               	bnz	u1331
  3778   007980  0401               	decf	Clock_Init@s16Timeout^0,w,c
  3779   007982  B0D8               	btfsc	status,0,c
  3780   007984  EFC6  F03C         	goto	u1331
  3781   007988  EFC8  F03C         	goto	u1330
  3782   00798C                     u1331:
  3783   00798C  EFA6  F03C         	goto	l146
  3784   007990                     u1330:
  3785   007990  5007               	movf	Clock_Init@bItTimeEn^0,w,c
  3786   007992  B4D8               	btfsc	status,2,c
  3787   007994  EFCE  F03C         	goto	u1341
  3788   007998  EFD0  F03C         	goto	u1340
  3789   00799C                     u1341:
  3790   00799C  EFA6  F03C         	goto	l146
  3791   0079A0                     u1340:
  3792   0079A0                     l2123:
  3793                           
  3794                           ;librerias/clock.c: 13:         if (0 == bStatus){
  3795   0079A0  5003               	movf	Clock_Init@bStatus^0,w,c
  3796   0079A2  A4D8               	btfss	status,2,c
  3797   0079A4  EFD6  F03C         	goto	u1351
  3798   0079A8  EFD8  F03C         	goto	u1350
  3799   0079AC                     u1351:
  3800   0079AC  EFDA  F03C         	goto	l145
  3801   0079B0                     u1350:
  3802   0079B0                     
  3803                           ;librerias/clock.c: 14:             returnCode = ERROR_CODE_TIMEOUT;
  3804   0079B0  0E01               	movlw	1
  3805   0079B2  6E08               	movwf	Clock_Init@returnCode^0,c
  3806   0079B4                     l145:
  3807                           
  3808                           ;librerias/clock.c: 18:     if(ERROR_CODE_OK == returnCode){
  3809   0079B4  5008               	movf	Clock_Init@returnCode^0,w,c
  3810   0079B6  A4D8               	btfss	status,2,c
  3811   0079B8  EFE0  F03C         	goto	u1361
  3812   0079BC  EFE2  F03C         	goto	u1360
  3813   0079C0                     u1361:
  3814   0079C0  EF19  F03D         	goto	l151
  3815   0079C4                     u1360:
  3816   0079C4                     
  3817                           ;librerias/clock.c: 19:         OSCCON2bits.INTSRC = 1;
  3818   0079C4  8AD2               	bsf	210,5,c	;volatile
  3819   0079C6                     
  3820                           ;librerias/clock.c: 20:         OSCCONbits.IRCF = 7;
  3821   0079C6  0E70               	movlw	112
  3822   0079C8  12D3               	iorwf	211,f,c	;volatile
  3823   0079CA                     l152:
  3824                           
  3825                           ;librerias/clock.c: 24:             bStatus = OSCCONbits.HFIOFS;
  3826   0079CA  B4D3               	btfsc	211,2,c	;volatile
  3827   0079CC  EFEA  F03C         	goto	u1371
  3828   0079D0  EFED  F03C         	goto	u1370
  3829   0079D4                     u1371:
  3830   0079D4  0E01               	movlw	1
  3831   0079D6  EFEE  F03C         	goto	u1376
  3832   0079DA                     u1370:
  3833   0079DA  0E00               	movlw	0
  3834   0079DC                     u1376:
  3835   0079DC  6E04               	movwf	Clock_Init@bStatus_605^0,c
  3836   0079DE                     
  3837                           ;librerias/clock.c: 25:             s16Timeout--;
  3838   0079DE  0601               	decf	Clock_Init@s16Timeout^0,f,c
  3839   0079E0  A0D8               	btfss	status,0,c
  3840   0079E2  0602               	decf	(Clock_Init@s16Timeout+1)^0,f,c
  3841   0079E4                     
  3842                           ;librerias/clock.c: 26:         }while((0 == bStatus) && ((0 < s16Timeout) || (0 == bItT
      +                          imeEn)));
  3843   0079E4  5004               	movf	Clock_Init@bStatus_605^0,w,c
  3844   0079E6  A4D8               	btfss	status,2,c
  3845   0079E8  EFF8  F03C         	goto	u1381
  3846   0079EC  EFFA  F03C         	goto	u1380
  3847   0079F0                     u1381:
  3848   0079F0  EF0F  F03D         	goto	l2139
  3849   0079F4                     u1380:
  3850   0079F4  BE02               	btfsc	(Clock_Init@s16Timeout+1)^0,7,c
  3851   0079F6  EF07  F03D         	goto	u1390
  3852   0079FA  5002               	movf	(Clock_Init@s16Timeout+1)^0,w,c
  3853   0079FC  E106               	bnz	u1391
  3854   0079FE  0401               	decf	Clock_Init@s16Timeout^0,w,c
  3855   007A00  B0D8               	btfsc	status,0,c
  3856   007A02  EF05  F03D         	goto	u1391
  3857   007A06  EF07  F03D         	goto	u1390
  3858   007A0A                     u1391:
  3859   007A0A  EFE5  F03C         	goto	l152
  3860   007A0E                     u1390:
  3861   007A0E  5007               	movf	Clock_Init@bItTimeEn^0,w,c
  3862   007A10  B4D8               	btfsc	status,2,c
  3863   007A12  EF0D  F03D         	goto	u1401
  3864   007A16  EF0F  F03D         	goto	u1400
  3865   007A1A                     u1401:
  3866   007A1A  EFE5  F03C         	goto	l152
  3867   007A1E                     u1400:
  3868   007A1E                     l2139:
  3869                           
  3870                           ;librerias/clock.c: 27:         if (0 == bStatus){
  3871   007A1E  5004               	movf	Clock_Init@bStatus_605^0,w,c
  3872   007A20  A4D8               	btfss	status,2,c
  3873   007A22  EF15  F03D         	goto	u1411
  3874   007A26  EF17  F03D         	goto	u1410
  3875   007A2A                     u1411:
  3876   007A2A  EF19  F03D         	goto	l151
  3877   007A2E                     u1410:
  3878   007A2E                     
  3879                           ;librerias/clock.c: 28:             returnCode = ERROR_CODE_TIMEOUT;
  3880   007A2E  0E01               	movlw	1
  3881   007A30  6E08               	movwf	Clock_Init@returnCode^0,c
  3882   007A32                     l151:
  3883                           
  3884                           ;librerias/clock.c: 32:     if(ERROR_CODE_OK == returnCode){
  3885   007A32  5008               	movf	Clock_Init@returnCode^0,w,c
  3886   007A34  A4D8               	btfss	status,2,c
  3887   007A36  EF1F  F03D         	goto	u1421
  3888   007A3A  EF21  F03D         	goto	u1420
  3889   007A3E                     u1421:
  3890   007A3E  EF55  F03D         	goto	l157
  3891   007A42                     u1420:
  3892   007A42                     l158:
  3893                           
  3894                           ;librerias/clock.c: 35:             bStatus = OSCCONbits.OSTS;
  3895   007A42  B6D3               	btfsc	211,3,c	;volatile
  3896   007A44  EF26  F03D         	goto	u1431
  3897   007A48  EF29  F03D         	goto	u1430
  3898   007A4C                     u1431:
  3899   007A4C  0E01               	movlw	1
  3900   007A4E  EF2A  F03D         	goto	u1436
  3901   007A52                     u1430:
  3902   007A52  0E00               	movlw	0
  3903   007A54                     u1436:
  3904   007A54  6E05               	movwf	Clock_Init@bStatus_606^0,c
  3905   007A56                     
  3906                           ;librerias/clock.c: 36:             s16Timeout--;
  3907   007A56  0601               	decf	Clock_Init@s16Timeout^0,f,c
  3908   007A58  A0D8               	btfss	status,0,c
  3909   007A5A  0602               	decf	(Clock_Init@s16Timeout+1)^0,f,c
  3910   007A5C                     
  3911                           ;librerias/clock.c: 37:         }while((0 == bStatus) && ((0 < s16Timeout) || (0 == bItT
      +                          imeEn)));
  3912   007A5C  5005               	movf	Clock_Init@bStatus_606^0,w,c
  3913   007A5E  A4D8               	btfss	status,2,c
  3914   007A60  EF34  F03D         	goto	u1441
  3915   007A64  EF36  F03D         	goto	u1440
  3916   007A68                     u1441:
  3917   007A68  EF4B  F03D         	goto	l2153
  3918   007A6C                     u1440:
  3919   007A6C  BE02               	btfsc	(Clock_Init@s16Timeout+1)^0,7,c
  3920   007A6E  EF43  F03D         	goto	u1450
  3921   007A72  5002               	movf	(Clock_Init@s16Timeout+1)^0,w,c
  3922   007A74  E106               	bnz	u1451
  3923   007A76  0401               	decf	Clock_Init@s16Timeout^0,w,c
  3924   007A78  B0D8               	btfsc	status,0,c
  3925   007A7A  EF41  F03D         	goto	u1451
  3926   007A7E  EF43  F03D         	goto	u1450
  3927   007A82                     u1451:
  3928   007A82  EF21  F03D         	goto	l158
  3929   007A86                     u1450:
  3930   007A86  5007               	movf	Clock_Init@bItTimeEn^0,w,c
  3931   007A88  B4D8               	btfsc	status,2,c
  3932   007A8A  EF49  F03D         	goto	u1461
  3933   007A8E  EF4B  F03D         	goto	u1460
  3934   007A92                     u1461:
  3935   007A92  EF21  F03D         	goto	l158
  3936   007A96                     u1460:
  3937   007A96                     l2153:
  3938                           
  3939                           ;librerias/clock.c: 38:         if (0 == bStatus){
  3940   007A96  5005               	movf	Clock_Init@bStatus_606^0,w,c
  3941   007A98  A4D8               	btfss	status,2,c
  3942   007A9A  EF51  F03D         	goto	u1471
  3943   007A9E  EF53  F03D         	goto	u1470
  3944   007AA2                     u1471:
  3945   007AA2  EF55  F03D         	goto	l157
  3946   007AA6                     u1470:
  3947   007AA6                     
  3948                           ;librerias/clock.c: 39:             returnCode = ERROR_CODE_TIMEOUT;
  3949   007AA6  0E01               	movlw	1
  3950   007AA8  6E08               	movwf	Clock_Init@returnCode^0,c
  3951   007AAA                     l157:
  3952                           
  3953                           ;librerias/clock.c: 42:         if(ERROR_CODE_OK == returnCode){
  3954   007AAA  5008               	movf	Clock_Init@returnCode^0,w,c
  3955   007AAC  A4D8               	btfss	status,2,c
  3956   007AAE  EF5B  F03D         	goto	u1481
  3957   007AB2  EF5D  F03D         	goto	u1480
  3958   007AB6                     u1481:
  3959   007AB6  EF93  F03D         	goto	l163
  3960   007ABA                     u1480:
  3961   007ABA                     
  3962                           ;librerias/clock.c: 43:         OSCTUNEbits.SPLLMULT = 1;
  3963   007ABA  8E9B               	bsf	155,7,c	;volatile
  3964                           
  3965                           ;librerias/clock.c: 44:         OSCCON2bits.PLLEN = 1;
  3966   007ABC  88D2               	bsf	210,4,c	;volatile
  3967   007ABE                     l164:
  3968                           
  3969                           ;librerias/clock.c: 47:             bStatus = OSCCON2bits.PLLRDY;
  3970   007ABE  BED2               	btfsc	210,7,c	;volatile
  3971   007AC0  EF64  F03D         	goto	u1491
  3972   007AC4  EF67  F03D         	goto	u1490
  3973   007AC8                     u1491:
  3974   007AC8  0E01               	movlw	1
  3975   007ACA  EF68  F03D         	goto	u1496
  3976   007ACE                     u1490:
  3977   007ACE  0E00               	movlw	0
  3978   007AD0                     u1496:
  3979   007AD0  6E06               	movwf	Clock_Init@bStatus_609^0,c
  3980   007AD2                     
  3981                           ;librerias/clock.c: 48:             s16Timeout--;
  3982   007AD2  0601               	decf	Clock_Init@s16Timeout^0,f,c
  3983   007AD4  A0D8               	btfss	status,0,c
  3984   007AD6  0602               	decf	(Clock_Init@s16Timeout+1)^0,f,c
  3985   007AD8                     
  3986                           ;librerias/clock.c: 49:         }while((0 == bStatus) && ((0 < s16Timeout) || (0 == bItT
      +                          imeEn)));
  3987   007AD8  5006               	movf	Clock_Init@bStatus_609^0,w,c
  3988   007ADA  A4D8               	btfss	status,2,c
  3989   007ADC  EF72  F03D         	goto	u1501
  3990   007AE0  EF74  F03D         	goto	u1500
  3991   007AE4                     u1501:
  3992   007AE4  EF89  F03D         	goto	l2169
  3993   007AE8                     u1500:
  3994   007AE8  BE02               	btfsc	(Clock_Init@s16Timeout+1)^0,7,c
  3995   007AEA  EF81  F03D         	goto	u1510
  3996   007AEE  5002               	movf	(Clock_Init@s16Timeout+1)^0,w,c
  3997   007AF0  E106               	bnz	u1511
  3998   007AF2  0401               	decf	Clock_Init@s16Timeout^0,w,c
  3999   007AF4  B0D8               	btfsc	status,0,c
  4000   007AF6  EF7F  F03D         	goto	u1511
  4001   007AFA  EF81  F03D         	goto	u1510
  4002   007AFE                     u1511:
  4003   007AFE  EF5F  F03D         	goto	l164
  4004   007B02                     u1510:
  4005   007B02  5007               	movf	Clock_Init@bItTimeEn^0,w,c
  4006   007B04  B4D8               	btfsc	status,2,c
  4007   007B06  EF87  F03D         	goto	u1521
  4008   007B0A  EF89  F03D         	goto	u1520
  4009   007B0E                     u1521:
  4010   007B0E  EF5F  F03D         	goto	l164
  4011   007B12                     u1520:
  4012   007B12                     l2169:
  4013                           
  4014                           ;librerias/clock.c: 50:         if (0 == bStatus){
  4015   007B12  5006               	movf	Clock_Init@bStatus_609^0,w,c
  4016   007B14  A4D8               	btfss	status,2,c
  4017   007B16  EF8F  F03D         	goto	u1531
  4018   007B1A  EF91  F03D         	goto	u1530
  4019   007B1E                     u1531:
  4020   007B1E  EF93  F03D         	goto	l163
  4021   007B22                     u1530:
  4022   007B22                     
  4023                           ;librerias/clock.c: 51:             returnCode = ERROR_CODE_TIMEOUT;
  4024   007B22  0E01               	movlw	1
  4025   007B24  6E08               	movwf	Clock_Init@returnCode^0,c
  4026   007B26                     l163:
  4027                           
  4028                           ;librerias/clock.c: 56:     if(ERROR_CODE_OK == returnCode){
  4029   007B26  5008               	movf	Clock_Init@returnCode^0,w,c
  4030   007B28  A4D8               	btfss	status,2,c
  4031   007B2A  EF99  F03D         	goto	u1541
  4032   007B2E  EF9B  F03D         	goto	u1540
  4033   007B32                     u1541:
  4034   007B32  EF9E  F03D         	goto	l170
  4035   007B36                     u1540:
  4036   007B36                     
  4037                           ;librerias/clock.c: 57:         OSCCON2bits.PRISD = 0;
  4038   007B36  94D2               	bcf	210,2,c	;volatile
  4039   007B38                     
  4040                           ;librerias/clock.c: 58:         OSCCONbits.SCS = 0;
  4041   007B38  0EFC               	movlw	-4
  4042   007B3A  16D3               	andwf	211,f,c	;volatile
  4043   007B3C                     l170:
  4044   007B3C  0012               	return		;funcret
  4045   007B3E                     __end_of_Clock_Init:
  4046                           	callstack 0
  4047                           
  4048                           	psect	rparam
  4049   000000                     
  4050                           	psect	config
  4051                           
  4052                           ;Config register CONFIG1L @ 0x300000
  4053                           ;	PLL Selection
  4054                           ;	PLLSEL = PLL3X, 3x clock multiplier
  4055                           ;	PLL Enable Configuration bit
  4056                           ;	CFGPLLEN = ON, PLL Enabled
  4057                           ;	CPU System Clock Postscaler
  4058                           ;	CPUDIV = NOCLKDIV, CPU uses system clock (no divide)
  4059                           ;	Low Speed USB mode with 48 MHz system clock
  4060                           ;	LS48MHZ = SYS48X8, System clock at 48 MHz, USB clock divider is set to 8
  4061   300000                     	org	3145728
  4062   300000  23                 	db	35
  4063                           
  4064                           ;Config register CONFIG1H @ 0x300001
  4065                           ;	Oscillator Selection
  4066                           ;	FOSC = INTOSCCLKO, Internal oscillator, clock output on OSC2
  4067                           ;	Primary Oscillator Shutdown
  4068                           ;	PCLKEN = OFF, Primary oscillator shutdown firmware controlled
  4069                           ;	Fail-Safe Clock Monitor
  4070                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  4071                           ;	Internal/External Oscillator Switchover
  4072                           ;	IESO = OFF, Oscillator Switchover mode disabled
  4073   300001                     	org	3145729
  4074   300001  09                 	db	9
  4075                           
  4076                           ;Config register CONFIG2L @ 0x300002
  4077                           ;	Power-up Timer Enable
  4078                           ;	nPWRTEN = OFF, Power up timer disabled
  4079                           ;	Brown-out Reset Enable
  4080                           ;	BOREN = SBORDIS, BOR enabled in hardware (SBOREN is ignored)
  4081                           ;	Brown-out Reset Voltage
  4082                           ;	BORV = 190, BOR set to 1.9V nominal
  4083                           ;	Low-Power Brown-out Reset
  4084                           ;	nLPBOR = OFF, Low-Power Brown-out Reset disabled
  4085   300002                     	org	3145730
  4086   300002  5F                 	db	95
  4087                           
  4088                           ;Config register CONFIG2H @ 0x300003
  4089                           ;	Watchdog Timer Enable bits
  4090                           ;	WDTEN = OFF, WDT disabled in hardware (SWDTEN ignored)
  4091                           ;	Watchdog Timer Postscaler
  4092                           ;	WDTPS = 32768, 1:32768
  4093   300003                     	org	3145731
  4094   300003  3C                 	db	60
  4095                           
  4096                           ; Padding undefined space
  4097   300004                     	org	3145732
  4098   300004  FF                 	db	255
  4099                           
  4100                           ;Config register CONFIG3H @ 0x300005
  4101                           ;	CCP2 MUX bit
  4102                           ;	CCP2MX = RC1, CCP2 input/output is multiplexed with RC1
  4103                           ;	PORTB A/D Enable bit
  4104                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  4105                           ;	Timer3 Clock Input MUX bit
  4106                           ;	T3CMX = RC0, T3CKI function is on RC0
  4107                           ;	SDO Output MUX bit
  4108                           ;	SDOMX = RB3, SDO function is on RB3
  4109                           ;	Master Clear Reset Pin Enable
  4110                           ;	MCLRE = ON, MCLR pin enabled; RE3 input disabled
  4111   300005                     	org	3145733
  4112   300005  D3                 	db	211
  4113                           
  4114                           ;Config register CONFIG4L @ 0x300006
  4115                           ;	Stack Full/Underflow Reset
  4116                           ;	STVREN = ON, Stack full/underflow will cause Reset
  4117                           ;	Single-Supply ICSP Enable bit
  4118                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
  4119                           ;	Dedicated In-Circuit Debug/Programming Port Enable
  4120                           ;	ICPRT = OFF, ICPORT disabled
  4121                           ;	Extended Instruction Set Enable bit
  4122                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled
  4123                           ;	Background Debugger Enable bit
  4124                           ;	DEBUG = 0x1, unprogrammed default
  4125   300006                     	org	3145734
  4126   300006  85                 	db	133
  4127                           
  4128                           ; Padding undefined space
  4129   300007                     	org	3145735
  4130   300007  FF                 	db	255
  4131                           
  4132                           ;Config register CONFIG5L @ 0x300008
  4133                           ;	Block 0 Code Protect
  4134                           ;	CP0 = OFF, Block 0 is not code-protected
  4135                           ;	Block 1 Code Protect
  4136                           ;	CP1 = OFF, Block 1 is not code-protected
  4137                           ;	Block 2 Code Protect
  4138                           ;	CP2 = OFF, Block 2 is not code-protected
  4139                           ;	Block 3 Code Protect
  4140                           ;	CP3 = OFF, Block 3 is not code-protected
  4141   300008                     	org	3145736
  4142   300008  0F                 	db	15
  4143                           
  4144                           ;Config register CONFIG5H @ 0x300009
  4145                           ;	Boot Block Code Protect
  4146                           ;	CPB = OFF, Boot block is not code-protected
  4147                           ;	Data EEPROM Code Protect
  4148                           ;	CPD = OFF, Data EEPROM is not code-protected
  4149   300009                     	org	3145737
  4150   300009  C0                 	db	192
  4151                           
  4152                           ;Config register CONFIG6L @ 0x30000A
  4153                           ;	Block 0 Write Protect
  4154                           ;	WRT0 = OFF, Block 0 (0800-1FFFh) is not write-protected
  4155                           ;	Block 1 Write Protect
  4156                           ;	WRT1 = OFF, Block 1 (2000-3FFFh) is not write-protected
  4157                           ;	Block 2 Write Protect
  4158                           ;	WRT2 = OFF, Block 2 (04000-5FFFh) is not write-protected
  4159                           ;	Block 3 Write Protect
  4160                           ;	WRT3 = OFF, Block 3 (06000-7FFFh) is not write-protected
  4161   30000A                     	org	3145738
  4162   30000A  0F                 	db	15
  4163                           
  4164                           ;Config register CONFIG6H @ 0x30000B
  4165                           ;	Configuration Registers Write Protect
  4166                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  4167                           ;	Boot Block Write Protect
  4168                           ;	WRTB = OFF, Boot block (0000-7FFh) is not write-protected
  4169                           ;	Data EEPROM Write Protect
  4170                           ;	WRTD = OFF, Data EEPROM is not write-protected
  4171   30000B                     	org	3145739
  4172   30000B  E0                 	db	224
  4173                           
  4174                           ;Config register CONFIG7L @ 0x30000C
  4175                           ;	Block 0 Table Read Protect
  4176                           ;	EBTR0 = OFF, Block 0 is not protected from table reads executed in other blocks
  4177                           ;	Block 1 Table Read Protect
  4178                           ;	EBTR1 = OFF, Block 1 is not protected from table reads executed in other blocks
  4179                           ;	Block 2 Table Read Protect
  4180                           ;	EBTR2 = OFF, Block 2 is not protected from table reads executed in other blocks
  4181                           ;	Block 3 Table Read Protect
  4182                           ;	EBTR3 = OFF, Block 3 is not protected from table reads executed in other blocks
  4183   30000C                     	org	3145740
  4184   30000C  0F                 	db	15
  4185                           
  4186                           ;Config register CONFIG7H @ 0x30000D
  4187                           ;	Boot Block Table Read Protect
  4188                           ;	EBTRB = OFF, Boot block is not protected from table reads executed in other blocks
  4189   30000D                     	org	3145741
  4190   30000D  40                 	db	64
  4191                           tosu	equ	0xFFF
  4192                           tosh	equ	0xFFE
  4193                           tosl	equ	0xFFD
  4194                           stkptr	equ	0xFFC
  4195                           pclatu	equ	0xFFB
  4196                           pclath	equ	0xFFA
  4197                           pcl	equ	0xFF9
  4198                           tblptru	equ	0xFF8
  4199                           tblptrh	equ	0xFF7
  4200                           tblptrl	equ	0xFF6
  4201                           tablat	equ	0xFF5
  4202                           prodh	equ	0xFF4
  4203                           prodl	equ	0xFF3
  4204                           indf0	equ	0xFEF
  4205                           postinc0	equ	0xFEE
  4206                           postdec0	equ	0xFED
  4207                           preinc0	equ	0xFEC
  4208                           plusw0	equ	0xFEB
  4209                           fsr0h	equ	0xFEA
  4210                           fsr0l	equ	0xFE9
  4211                           wreg	equ	0xFE8
  4212                           indf1	equ	0xFE7
  4213                           postinc1	equ	0xFE6
  4214                           postdec1	equ	0xFE5
  4215                           preinc1	equ	0xFE4
  4216                           plusw1	equ	0xFE3
  4217                           fsr1h	equ	0xFE2
  4218                           fsr1l	equ	0xFE1
  4219                           bsr	equ	0xFE0
  4220                           indf2	equ	0xFDF
  4221                           postinc2	equ	0xFDE
  4222                           postdec2	equ	0xFDD
  4223                           preinc2	equ	0xFDC
  4224                           plusw2	equ	0xFDB
  4225                           fsr2h	equ	0xFDA
  4226                           fsr2l	equ	0xFD9
  4227                           status	equ	0xFD8

Data Sizes:
    Strings     548
    Constant    0
    Data        0
    BSS         37
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     61      66
    BANK0           160      0      32
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_1(CODE[7]), STR_10(CODE[9]), STR_11(CODE[14]), STR_12(CODE[17]), 
		 -> STR_13(CODE[10]), STR_14(CODE[14]), STR_15(CODE[17]), STR_16(CODE[11]), 
		 -> STR_17(CODE[14]), STR_18(CODE[17]), STR_19(CODE[23]), STR_2(CODE[10]), 
		 -> STR_20(CODE[17]), STR_21(CODE[6]), STR_22(CODE[6]), STR_23(CODE[9]), 
		 -> STR_24(CODE[9]), STR_25(CODE[6]), STR_26(CODE[9]), STR_27(CODE[9]), 
		 -> STR_28(CODE[6]), STR_29(CODE[9]), STR_3(CODE[11]), STR_30(CODE[9]), 
		 -> STR_31(CODE[5]), STR_32(CODE[9]), STR_33(CODE[9]), STR_34(CODE[16]), 
		 -> STR_35(CODE[13]), STR_36(CODE[16]), STR_37(CODE[17]), STR_38(CODE[7]), 
		 -> STR_39(CODE[6]), STR_4(CODE[18]), STR_40(CODE[16]), STR_41(CODE[16]), 
		 -> STR_42(CODE[16]), STR_43(CODE[27]), STR_44(CODE[11]), STR_45(CODE[11]), 
		 -> STR_46(CODE[8]), STR_47(CODE[25]), STR_48(CODE[24]), STR_49(CODE[26]), 
		 -> STR_5(CODE[18]), STR_50(CODE[8]), STR_51(CODE[28]), STR_52(CODE[25]), 
		 -> STR_6(CODE[11]), STR_7(CODE[9]), STR_8(CODE[8]), STR_9(CODE[13]), 

    S1542$buffer	PTR unsigned char  size(2) Largest target is 0

    S1542$source	PTR const unsigned char  size(2) Largest target is 0

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 28
		 -> STR_1(CODE[7]), STR_10(CODE[9]), STR_11(CODE[14]), STR_12(CODE[17]), 
		 -> STR_13(CODE[10]), STR_14(CODE[14]), STR_15(CODE[17]), STR_16(CODE[11]), 
		 -> STR_17(CODE[14]), STR_18(CODE[17]), STR_19(CODE[23]), STR_2(CODE[10]), 
		 -> STR_20(CODE[17]), STR_21(CODE[6]), STR_22(CODE[6]), STR_23(CODE[9]), 
		 -> STR_24(CODE[9]), STR_25(CODE[6]), STR_26(CODE[9]), STR_27(CODE[9]), 
		 -> STR_28(CODE[6]), STR_29(CODE[9]), STR_3(CODE[11]), STR_30(CODE[9]), 
		 -> STR_31(CODE[5]), STR_32(CODE[9]), STR_33(CODE[9]), STR_34(CODE[16]), 
		 -> STR_35(CODE[13]), STR_36(CODE[16]), STR_37(CODE[17]), STR_38(CODE[7]), 
		 -> STR_39(CODE[6]), STR_4(CODE[18]), STR_40(CODE[16]), STR_41(CODE[16]), 
		 -> STR_42(CODE[16]), STR_43(CODE[27]), STR_44(CODE[11]), STR_45(CODE[11]), 
		 -> STR_46(CODE[8]), STR_47(CODE[25]), STR_48(CODE[24]), STR_49(CODE[26]), 
		 -> STR_5(CODE[18]), STR_50(CODE[8]), STR_51(CODE[28]), STR_52(CODE[25]), 
		 -> STR_6(CODE[11]), STR_7(CODE[9]), STR_8(CODE[8]), STR_9(CODE[13]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 28
		 -> STR_1(CODE[7]), STR_10(CODE[9]), STR_11(CODE[14]), STR_12(CODE[17]), 
		 -> STR_13(CODE[10]), STR_14(CODE[14]), STR_15(CODE[17]), STR_16(CODE[11]), 
		 -> STR_17(CODE[14]), STR_18(CODE[17]), STR_19(CODE[23]), STR_2(CODE[10]), 
		 -> STR_20(CODE[17]), STR_21(CODE[6]), STR_22(CODE[6]), STR_23(CODE[9]), 
		 -> STR_24(CODE[9]), STR_25(CODE[6]), STR_26(CODE[9]), STR_27(CODE[9]), 
		 -> STR_28(CODE[6]), STR_29(CODE[9]), STR_3(CODE[11]), STR_30(CODE[9]), 
		 -> STR_31(CODE[5]), STR_32(CODE[9]), STR_33(CODE[9]), STR_34(CODE[16]), 
		 -> STR_35(CODE[13]), STR_36(CODE[16]), STR_37(CODE[17]), STR_38(CODE[7]), 
		 -> STR_39(CODE[6]), STR_4(CODE[18]), STR_40(CODE[16]), STR_41(CODE[16]), 
		 -> STR_42(CODE[16]), STR_43(CODE[27]), STR_44(CODE[11]), STR_45(CODE[11]), 
		 -> STR_46(CODE[8]), STR_47(CODE[25]), STR_48(CODE[24]), STR_49(CODE[26]), 
		 -> STR_5(CODE[18]), STR_50(CODE[8]), STR_51(CODE[28]), STR_52(CODE[25]), 
		 -> STR_6(CODE[11]), STR_7(CODE[9]), STR_8(CODE[8]), STR_9(CODE[13]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_1(CODE[7]), STR_10(CODE[9]), STR_11(CODE[14]), STR_12(CODE[17]), 
		 -> STR_13(CODE[10]), STR_14(CODE[14]), STR_15(CODE[17]), STR_16(CODE[11]), 
		 -> STR_17(CODE[14]), STR_18(CODE[17]), STR_19(CODE[23]), STR_2(CODE[10]), 
		 -> STR_20(CODE[17]), STR_21(CODE[6]), STR_22(CODE[6]), STR_23(CODE[9]), 
		 -> STR_24(CODE[9]), STR_25(CODE[6]), STR_26(CODE[9]), STR_27(CODE[9]), 
		 -> STR_28(CODE[6]), STR_29(CODE[9]), STR_3(CODE[11]), STR_30(CODE[9]), 
		 -> STR_31(CODE[5]), STR_32(CODE[9]), STR_33(CODE[9]), STR_34(CODE[16]), 
		 -> STR_35(CODE[13]), STR_36(CODE[16]), STR_37(CODE[17]), STR_38(CODE[7]), 
		 -> STR_39(CODE[6]), STR_4(CODE[18]), STR_40(CODE[16]), STR_41(CODE[16]), 
		 -> STR_42(CODE[16]), STR_43(CODE[27]), STR_44(CODE[11]), STR_45(CODE[11]), 
		 -> STR_46(CODE[8]), STR_47(CODE[25]), STR_48(CODE[24]), STR_49(CODE[26]), 
		 -> STR_5(CODE[18]), STR_50(CODE[8]), STR_51(CODE[28]), STR_52(CODE[25]), 
		 -> STR_6(CODE[11]), STR_7(CODE[9]), STR_8(CODE[8]), STR_9(CODE[13]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _UART_config_show->_printf
    _SPI_master_init->_SPI_BaudRateGen
    _SPI_config_show->_printf
    _SPI_actual_frec->___aldiv
    _SPI_BaudRateGen->_SPI_ErrorHandler
    _SPI_ErrorHandler->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->___aldiv
    _vfpfcnvrt->_abs
    _fputc->_putch
    _putch->_UART_Tx
    _abs->___almod

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   24720
                                             57 COMRAM     4     4      0
                         _Clock_Init
                  _SPI1_ByteExchange
                    _SPI_master_init
                          _UART_Init
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            4     0      4    7581
                                             42 COMRAM     4     0      4
                   _UART_config_show
                   _UART_select_baud
 ---------------------------------------------------------------------------------
 (2) _UART_select_baud                                     8     4      4      98
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _UART_config_show                                     0     0      0    7385
                             _printf
 ---------------------------------------------------------------------------------
 (1) _SPI_master_init                                      0     0      0   16492
                    _SPI_BaudRateGen
                    _SPI_config_show
 ---------------------------------------------------------------------------------
 (2) _SPI_config_show                                      0     0      0    8164
                    _SPI_actual_frec
                             _printf
 ---------------------------------------------------------------------------------
 (3) _SPI_actual_frec                                     10     6      4     779
                                             14 COMRAM    10     6      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) _SPI_BaudRateGen                                     12     8      4    8328
                                             45 COMRAM    12     8      4
                   _SPI_ErrorHandler
                            ___aldiv
 ---------------------------------------------------------------------------------
 (3) _SPI_ErrorHandler                                     3     3      0    7429
                                             42 COMRAM     3     3      0
                             _printf
 ---------------------------------------------------------------------------------
 (3) _printf                                               9     3      6    7385
                                             35 COMRAM     7     1      6
                    _SPI_actual_frec (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             7     2      5    3377
                                             28 COMRAM     7     2      5
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           14    10      4    3027
                                             14 COMRAM    14    10      4
                            ___aldiv
                            ___almod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4     826
                                              2 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0      44
                                              1 COMRAM     1     1      0
                            _UART_Tx
 ---------------------------------------------------------------------------------
 (8) _UART_Tx                                              1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                             10 COMRAM     4     2      2
                            ___almod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___almod                                             10     2      8     448
                                              0 COMRAM    10     2      8
 ---------------------------------------------------------------------------------
 (6) ___aldiv                                             14     6      8     756
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _SPI1_ByteExchange                                    1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Clock_Init                                           8     6      2     584
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Clock_Init
   _SPI1_ByteExchange
   _SPI_master_init
     _SPI_BaudRateGen
       _SPI_ErrorHandler
         _printf
           _SPI_actual_frec (ARG)
             ___aldiv
           _vfprintf (ARG)
             _vfpfcnvrt
               ___aldiv
               ___almod
               _abs
                 ___almod (ARG)
               _fputc
                 _putch
                   _UART_Tx
       ___aldiv
     _SPI_config_show
       _SPI_actual_frec
       _printf
   _UART_Init
     _UART_config_show
       _printf
     _UART_select_baud

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      31        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      20       5       20.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     3D      42       1       69.5%
BITBIGSFRll         36      0       0      29        0.0%
BITBIGSFRhhhh       2C      0       0      20        0.0%
BITBIGSFRhhhll       D      0       0      23        0.0%
BITBIGSFRhlhh        C      0       0      25        0.0%
BITBIGSFRlh          8      0       0      28        0.0%
BITBIGSFRhhlh        7      0       0      24        0.0%
BITBIGSFRhhhlhh      6      0       0      21        0.0%
BITBIGSFRhlhll       6      0       0      27        0.0%
BITBIGSFRhlhlh       2      0       0      26        0.0%
BITBIGSFRhhhlhl      1      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      62      30        0.0%
DATA                 0      0      62       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Sat Sep 21 19:39:07 2024

        _SPI1_ByteExchange 6EA4                _SSPSTATbits 0FC7                         _BF 7E38  
                       l80 768E                         l84 76D0                         l76 7658  
                       l93 773C                         l88 7706                         l96 6F24  
       ?_SPI1_ByteExchange 0001                        l112 6E90                        l115 6EA2  
                      l300 70B0                        l220 7818                        l212 77AC  
                      l109 75F6                        l118 6E8C                        l151 7A32  
                      l152 79CA                        l232 78BA                        l224 784E  
                      l216 77E2                        l145 79B4                        l241 7926  
                      l170 7B3C                        l146 794C                        l163 7B26  
                      l164 7ABE                        l236 78F0                        l228 7884  
                      l252 6F8E                        l157 7AAA                        l158 7A42  
                      l255 7130                        l408 73AA                        l256 7134  
                      l281 6EAA                        l283 6EB8                        l284 6EBC  
                      l278 7036                        l395 74B6                        l994 6EDA  
         ?_SPI_BaudRateGen 002E                        u730 6EB8                        u731 6EB4  
                      u900 72D2                        u901 72CE                        u910 72F4  
                      u830 6E9E                        u911 72F0                        u831 6E9A  
                      u840 73BE                        u920 731A                        u841 73BA  
                      u921 7316                        u850 73E0                        u930 733C  
                      u851 73DC                        u931 7338                        u860 741A  
                      u940 735A                        u861 7416                        u941 7356  
                      u870 743C                        u950 738A                        u871 7438  
                      u951 7386                        u880 7464                        u960 7208  
                      u881 7460                        u961 7204                        u890 7496  
                      u970 721A                        u891 7492                        u971 7216  
                      u980 7242                        u981 723E                        u990 7278  
                      u991 7274                        _abs 6F26        ??_SPI1_ByteExchange 0001  
                      wreg 0FE8                 _TXSTA1bits 0FAC                       l2001 7504  
                     l1042 7DD8                       l2003 7510                       ?_abs 000B  
                     l1052 6F40                       l2101 7110                       l2111 794C  
                     l1055 6F58                       l2103 7126                       l2007 751C  
                     l1048 6FD4                       l2121 7990                       l2113 794C  
                     l2201 6F72                       l2131 79DE                       l2123 79A0  
                     l2115 7960                       l2107 7928                       l1067 72BE  
                     l2051 7782                       l2211 6F82                       l2203 6F74  
                     l2141 7A2E                       l2133 79E4                       l2125 79B0  
                     l2117 7966                       l2109 792C                       l2061 77D6  
                     l2053 7790                       l2213 6F84                       l2205 6F76  
                     l2221 7136                       l2151 7A86                       l2143 7A42  
                     l2135 79F4                       l2127 79C4                       l2119 7976  
                     l2071 7832                       l2063 77EE                       l2055 77A0  
                     l2215 6F86                       l2207 6F7E                       l2231 715E  
                     l2223 7142                       l2161 7AD2                       l2153 7A96  
                     l2145 7A56                       l2137 7A0E                       l2129 79C6  
                     l2081 7890                       l2073 7842                       l2065 77FC  
                     l2057 77B8                       l2049 773E                       l2217 6F88  
                     l2209 6F80                       l2241 71AA                       l2233 7176  
                     l2225 7156                       l2171 7B22                       l2163 7AD8  
                     l2155 7AA6                       l2147 7A5C                       l2139 7A1E  
                     l2091 78E4                       l2083 789E                       l2075 785A  
                     l2067 780C                       l2059 77C6                       l2219 6F8A  
                     l2251 71CA                       l2243 71AC                       l2235 7178  
                     l2227 715A                       l2173 7B36                       l2165 7AE8  
                     l2157 7ABA                       l2149 7A6C                       l2093 78FC  
                     l2085 78AE                       l2077 7868                       l2069 7824  
                     l2181 6F02                       l2253 71D2                       l2245 71C4  
                     l2237 7190                       l2229 715C                       l2175 7B38  
                     l2167 7B02                       l2159 7ABE                       l2095 790A  
                     l2087 78C6                       l2079 7878                       l2351 75C4  
                     l2191 6F1E                       l2183 6F16                       l2255 71D4  
                     l2247 71C4                       l2239 7192                       l2169 7B12  
                     l1801 7322                       l2097 791A                       l2089 78D4  
                     l2361 759A                       l2353 75E0                       l2193 6F20  
                     l2185 6F18                       l2257 71D8                       l2249 71C8  
                     l1563 6EA6                       l1811 7374                       l1803 732E  
                     l2099 70B2                       l2195 6F5A                       l2363 75A8  
                     l2355 7570                       l2187 6F1A                       l2179 6EFC  
                     l1741 73AC                       l1805 733C                       l1813 737A  
                     l1821 71F6                       l2197 6F6E                       l2365 75B6  
                     l2357 757E                       l2349 753A                       l2189 6F1C  
                     l1751 73E0                       l1743 73B0                       l1815 738A  
                     l1807 735A                       l1735 6E90                       l1831 7278  
                     l1823 7208                       l1903 7DB2                       l1911 6F9C  
                     l2199 6F70                       l2367 75D2                       l2359 758C  
                     l1761 7422                       l1753 73F0                       l1745 73BE  
                     l1817 739A                       l1809 736A                       l1737 6E9E  
                     l1825 721A                       l1841 7B60                       l1913 6FB0  
                     l1921 6EC2                       l2369 7092                       l1771 7474  
                     l1763 742E                       l1755 73F4                       l1747 73CE  
                     l1835 6F26                       l1739 6E86                       l1827 7224  
                     l1851 7B9C                       l1843 7B6C                       l1915 6FCC  
                     l1931 703A                       l1781 74A6                       l1773 7476  
                     l1765 743C                       l1757 7404                       l1749 73D2  
                     l1837 6F34                       l1829 7242                       l1853 7BA4  
                     l1861 7BD2                       l1845 7B78                       l1909 6F90  
                     l1925 6FD6                       l1775 7480                       l1767 7446  
                     l1759 741A                       l1791 72E2                       l1863 7BEE  
                     l1871 7C58                       l1855 7BAC                       l1847 7B7C  
                     l1839 7B3E                       l1919 6EBE                       l1943 707E  
                     l1935 704E                       l1927 7026                       l1951 7604  
                     l1769 7464                       l1777 7486                       l1793 72E6  
                     l1785 72C0                       l1881 7CE0                       l1873 7C6E  
                     l1865 7C0E                       l1849 7B8A                       l1937 705E  
                     l1961 764C                       l1953 7612                       l1779 7496  
                     l1795 72F4                       l1787 72C4                       l1891 7D5A  
                     l1883 7D14                       l1875 7C88                       l1867 7C34  
                     l1859 7BB4                       l1939 706E                       l1971 76B4  
                     l1963 7664                       l1955 7622                       l1797 7304  
                     l1789 72D2                       l1893 7D6C                       l1885 7D2A  
                     l1877 7C8C                       l1981 7712                       l1973 76C4  
                     l1965 7672                       l1957 762E                       l1949 75F8  
                     l1799 731A                       l1895 7D8A                       l1887 7D3A  
                     l1879 7CA0                       l1983 7720                       l1975 76DC  
                     l1967 7682                       l1959 763C                       l1991 74C8  
                     l1889 7D4A                       l1897 7D8C                       l1985 7730  
                     l1977 76EA                       l1969 76A6                       l1993 74D4  
                     l1899 7DA2                       l1979 76FA                       l1995 74E0  
                     l1987 74B8                       l1997 74EC                       l1989 74BC  
                     l1999 74F8                       STR_1 7FD5                       STR_2 7F90  
                     STR_3 7F7B                       STR_4 7E9F                       STR_5 7E8D  
                     STR_6 7F65                       STR_7 7FB5                       STR_8 7FC6  
                     STR_9 7F42                       _BOEN 7E5C                       u1000 6F34  
                     _CREN 7D5C                       u1001 6F30                       u1010 7B60  
                     u1011 7B5C                       u1100 7D9E                       u1020 7BEE  
                     u1101 7D9A                       u1021 7BEA                       u1030 7C0A  
                     u1110 6FCC                       u1031 7C06                       u1111 6FC8  
                     u1040 7C9C                       u1120 704A                       u1200 77C6  
                     u1041 7C96                       u1121 7046                       u1201 77C2  
                     u1050 7C9E                       u1210 77FC                       u1130 7612  
                     u1211 77F8                       u1131 760E                       u1300 794A  
                     u1060 7D2A                       u1220 7832                       u1140 763C  
                     u1061 7D26                       u1221 782E                       u1141 7638  
                     u1310 795C                       u1070 7D3A                       u1230 7868  
                     u1150 7672                       u1311 7956                       u1071 7D36  
                     u1231 7864                       u1151 766E                       u1400 7A1E  
                     u1320 7976                       u1080 7D4A                       u1240 789E  
                     u1160 76B4                       u1401 7A1A                       u1321 7972  
                     u1081 7D46                       u1241 789A                       u1161 76B0  
                     u1410 7A2E                       u1330 7990                       u1090 7D5A  
                     u1250 78D4                       u1170 76EA                       u1411 7A2A  
                     u1331 798C                       u1091 7D56                       u1251 78D0  
                     u1171 76E6                       u1500 7AE8                       u1420 7A42  
                     u1340 79A0                       u1316 795E                       u1260 790A  
                     u1180 7720                       u1501 7AE4                       u1421 7A3E  
                     u1341 799C                       u1261 7906                       u1181 771C  
                     u1510 7B02                       u1430 7A52                       u1350 79B0  
                     u1190 7790                       u1511 7AFE                       u1431 7A4C  
                     u1351 79AC                       u1191 778C                       u1520 7B12  
                     u1440 7A6C                       u1360 79C4                       u1280 7126  
                     u1521 7B0E                       u1441 7A68                       u1361 79C0  
                     u1281 7122                       u1530 7B22                       u1450 7A86  
                     u1370 79DA                       u1290 7948                       u1531 7B1E  
                     u1451 7A82                       u1371 79D4                       u1291 7942  
                     u1275 70D4                       u1540 7B36                       u1460 7A96  
                     u1436 7A54                       u1380 79F4                       u1541 7B32  
                     u1461 7A92                       u1381 79F0                       u1470 7AA6  
                     u1390 7A0E                       u1471 7AA2                       u1391 7A0A  
                     u1480 7ABA                       u1376 79DC                       u1481 7AB6  
                     u1617 7168                       u1490 7ACE                       u1491 7AC8  
                     u1627 7182                       u1637 719C                       u1647 71B6  
                     u1496 7AD0                       u1657 71E2                       _WCOL 7E37  
                     _SPEN 7D5F                       _TRMT 7D61            __end_of_UART_Tx 6EA4  
                     abs@a 000B                       _dbuf 0060                       _main 7136  
                     _prec 0040                       fsr1h 0FE2                       fsr2h 0FDA  
                     indf2 0FDF                       fsr1l 0FE1                       fsr2l 0FD9  
                     start 0000  __end_of_SPI1_ByteExchange 6EBE               ___param_bank 0000  
 UART_select_baud@baudrate 0001                      ??_abs 000D                 _Clock_Init 7928  
             _BAUDCON1bits 0FB8            __end_of___aldiv 74B8            __end_of___almod 73AC  
                    ?_main 0001                      STR_10 7FAC                      STR_11 7F34  
                    STR_12 7ED3                      STR_20 7EB1                      STR_21 7FDC  
                    STR_13 7F86                      STR_30 7FA3                      STR_14 7F34  
                    STR_22 7FE8                      STR_15 7ED3                      STR_31 7FFA  
                    STR_23 7F9A                      STR_32 7F9A                      STR_24 7FA3  
                    STR_16 7F70                      STR_40 7F24                      STR_33 7FA3  
                    STR_17 7F34                      STR_25 7FF4                      STR_41 7EE4  
                    STR_26 7F9A                      STR_18 7ED3                      STR_50 7FBE  
                    STR_34 7F14                      STR_42 7EF4                      STR_27 7FA3  
                    STR_35 7F07                      STR_19 7E76                      STR_43 7DF7  
                    STR_51 7DDB                      STR_28 7FEE                      STR_44 7F4F  
                    STR_36 7F04                      STR_52 7E2C                      STR_29 7F9A  
                    STR_45 7F5A                      STR_37 7EC2                      STR_38 7FCE  
                    STR_46 7FBE                      STR_39 7FE2                      STR_47 7E45  
                    STR_48 7E5E                      STR_49 7E12                      _BRGH1 7D62  
                    _RC1IF 7CF5                      _RCREG 0FAE          Clock_Init@bStatus 0003  
             vfpfcnvrt@fmt 0011           _UART_config_show 75F8                      _SPBRG 0FAF  
                    _SSPEN 7E35                      _SSPIF 7CF3                      _TXEN1 7D65  
                    _SYNC1 7D64                      _flags 0042                      _fputc 71F6  
                    _width 003E                      _putch 6E84                      tablat 0FF5  
        ??_SPI_actual_frec 0013                      status 0FD8            __initialization 6EDC  
             __end_of_main 71F6                     ??_main 003A              __activetblptr 0002  
                ??_UART_Tx 0001                     ?_fputc 0003                     _BRG161 7DC3  
                   ?_putch 0001                     _RCREG1 0FAE              vfpfcnvrt@done 0015  
                   _SPBRGH 0FB0                     _TRISA1 7C91                     _TRISC6 7CA6  
                   _TRISC7 7CA7                     _SSPBUF 0FC9                     _TXREG1 0FAD  
             vfprintf@cfmt 0022          __end_of_UART_Init 6F26          ??_SPI_config_show 002B  
                ??___aldiv 0009                  ??___almod 0009                ?_Clock_Init 0001  
                   clear_0 6EE2                     isa$std 0001                     _printf 6EBE  
                   main@c1 003C                     main@c2 003D   __end_of_SPI_ErrorHandler 70B2  
                   fputc@c 0003               __mediumconst 7DDA                     tblptrh 0FF7  
                   tblptrl 0FF6                     tblptru 0FF8           __end_of_vfprintf 6FD6  
               __accesstop 0060    __end_of__initialization 6EF2              ___rparam_used 0001  
         _UART_select_baud 74B8             __pcstackCOMRAM 0001              __end_of_fputc 72C0  
            __end_of_putch 6E8E                    ??_fputc 0007          ??_SPI_master_init 003A  
                  ??_putch 0002                 __pbssBANK0 0060   __end_of_UART_config_show 773E  
      Clock_Init@bItTimeEn 0007                    ?_printf 0024            _SPI_actual_frec 6FD6  
                  _SSP1ADD 0FC8                    _SSP1BUF 0FC9                    _UART_Tx 6E8E  
                  __Hparam 0000                    __Lparam 0000                    ___aldiv 73AC  
                  ___almod 72C0                  ?_vfprintf 001D                    __pcinit 6EDC  
                  __ramtop 0800                    __ptext0 7136                    __ptext1 6EFC  
                  __ptext2 74B8                    __ptext3 75F8                    __ptext4 6F5A  
                  __ptext5 773E                    __ptext6 6FD6                    __ptext7 70B2  
                  __ptext8 7038                    __ptext9 6EBE                UART_Tx@dato 0001  
         ___aldiv@dividend 0001       end_of_initialization 6EF2            _SPI_config_show 773E  
                  fputc@fp 0005              __Lmediumconst 7DDA      Clock_Init@bStatus_605 0004  
    Clock_Init@bStatus_606 0005      Clock_Init@bStatus_609 0006          __end_of_vfpfcnvrt 7DDA  
                _RCSTAbits 0FAB           ___aldiv@quotient 000B                    postdec2 0FDD  
                  postinc0 0FEE                    postinc1 0FE6                    postinc2 0FDE  
         vfpfcnvrt@convarg 0018               ??_Clock_Init 0003                 ??_vfprintf 0022  
  __end_of_SPI_actual_frec 7038                  _UART_Init 6EFC          ?_SPI_ErrorHandler 0001  
                _TRISAbits 0F92                  _TRISBbits 0F93   __end_of_UART_select_baud 75F8  
       ??_SPI_ErrorHandler 002B         __end_of_Clock_Init 7B3E                  _TXSTAbits 0FAC  
        ??_SPI_BaudRateGen 0032                vfpfcnvrt@ap 0012                vfpfcnvrt@cp 0016  
              vfpfcnvrt@fp 000F                 ?_UART_Init 002B            _SPI_master_init 6F5A  
           __end_of_printf 6EDC        start_initialization 6EDC    __end_of_SPI_config_show 7928  
   SPI_BaudRateGen@baudReg 0036                __end_of_abs 6F5A  SPI_ErrorHandler@errorCode 002D  
     Clock_Init@s16Timeout 0001          ?_UART_config_show 0001                vfprintf@fmt 001F  
       ??_UART_config_show 002B           ?_SPI_actual_frec 000F                   ??_printf 002A  
              __pbssCOMRAM 003E                   ?_UART_Tx 0001    __end_of_SPI_master_init 6F90  
            __pmediumconst 7DDA                   ?___aldiv 0001                   ?___almod 0001  
              ??_UART_Init 002F           ___almod@dividend 0001           ?_SPI_config_show 0001  
          ___aldiv@divisor 0005            ___aldiv@counter 0009                   _LATAbits 0F89  
                 _PIR1bits 0F9E                  _vfpfcnvrt 7B3E          UART_Init@baudrate 002B  
    SPI_BaudRateGen@FClock 002E          ?_UART_select_baud 0001            _SPI_BaudRateGen 70B2  
               vfpfcnvrt@c 001C         ??_UART_select_baud 0005                   __Hrparam 0000  
               vfprintf@ap 0021                   __Lrparam 0000                 vfprintf@fp 001D  
         ?_SPI_master_init 0001                 ?_vfpfcnvrt 000F                   __ptext10 6F90  
                 __ptext11 7B3E                   __ptext12 71F6                   __ptext13 6E84  
                 __ptext14 6E8E                   __ptext15 6F26                   __ptext16 72C0  
                 __ptext17 73AC                   __ptext18 6EA4                   __ptext19 7928  
          ___almod@divisor 0005            ___almod@counter 0009                _OSCCON2bits 0FD2  
                 isa$xinst 0000                   _vfprintf 6F90                  printf@fmt 0024  
  __end_of_SPI_BaudRateGen 7136                  putch@data 0002                _OSCTUNEbits 0F9B  
      SPI_actual_frec@baud 0015  SPI1_ByteExchange@byteData 0001                 _OSCCONbits 0FD3  
                 printf@ap 002A                ??_vfpfcnvrt 0013       Clock_Init@returnCode 0008  
             ___aldiv@sign 000A                _SSPCON1bits 0FC6               ___almod@sign 000A  
         _SPI_ErrorHandler 7038  
