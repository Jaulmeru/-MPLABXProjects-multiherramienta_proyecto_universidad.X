

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Mon Sep 16 20:53:24 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F45K50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    31                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    32                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    33   000000                     
    34                           ; Generated 12/10/2023 GMT
    35                           ; 
    36                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution. Publication is not required when
    50                           ;        this file is used in an embedded application.
    51                           ; 
    52                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    53                           ;        software without specific prior written permission.
    54                           ; 
    55                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    56                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    57                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    58                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    59                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    60                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    61                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    62                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    63                           ; 
    64                           ; 
    65                           ; Code-generator required, PIC18F45K50 Definitions
    66                           ; 
    67                           ; SFR Addresses
    68   000000                     _RCREG	set	4014
    69   000000                     _TXREG1	set	4013
    70   000000                     _SPBRG	set	4015
    71   000000                     _SPBRGH	set	4016
    72   000000                     _BRG161	set	32195
    73   000000                     _SSPCON1bits	set	4038
    74   000000                     _RCREG1	set	4014
    75   000000                     _TXSTAbits	set	4012
    76   000000                     _RCSTAbits	set	4011
    77   000000                     _BAUDCON1bits	set	4024
    78   000000                     _TXSTA1bits	set	4012
    79   000000                     _BF	set	32312
    80   000000                     _WCOL	set	32311
    81   000000                     _TRMT	set	32097
    82   000000                     _TRISC7	set	31911
    83   000000                     _CREN	set	32092
    84   000000                     _TXEN1	set	32101
    85   000000                     _BRGH1	set	32098
    86   000000                     _TRISAbits	set	3986
    87   000000                     _TRISBbits	set	3987
    88   000000                     _TRISC6	set	31910
    89   000000                     _SPEN	set	32095
    90   000000                     _SYNC1	set	32100
    91   000000                     _OSCCON2bits	set	4050
    92   000000                     _SSPEN	set	32309
    93   000000                     _OSCTUNEbits	set	3995
    94   000000                     _RC1IF	set	31989
    95   000000                     _OSCCONbits	set	4051
    96   000000                     _SSPBUF	set	4041
    97   000000                     _SSPSTATbits	set	4039
    98   000000                     _SSP1ADD	set	4040
    99                           
   100                           	psect	mediumconst
   101   007DDA                     __pmediumconst:
   102                           	callstack 0
   103   007DDA  00                 	db	0
   104   007DDB                     STR_51:
   105   007DDB  45                 	db	69	;'E'
   106   007DDC  52                 	db	82	;'R'
   107   007DDD  52                 	db	82	;'R'
   108   007DDE  4F                 	db	79	;'O'
   109   007DDF  52                 	db	82	;'R'
   110   007DE0  5F                 	db	95	;'_'
   111   007DE1  43                 	db	67	;'C'
   112   007DE2  4F                 	db	79	;'O'
   113   007DE3  44                 	db	68	;'D'
   114   007DE4  45                 	db	69	;'E'
   115   007DE5  5F                 	db	95	;'_'
   116   007DE6  53                 	db	83	;'S'
   117   007DE7  50                 	db	80	;'P'
   118   007DE8  49                 	db	73	;'I'
   119   007DE9  5F                 	db	95	;'_'
   120   007DEA  42                 	db	66	;'B'
   121   007DEB  52                 	db	82	;'R'
   122   007DEC  5F                 	db	95	;'_'
   123   007DED  4F                 	db	79	;'O'
   124   007DEE  56                 	db	86	;'V'
   125   007DEF  45                 	db	69	;'E'
   126   007DF0  52                 	db	82	;'R'
   127   007DF1  52                 	db	82	;'R'
   128   007DF2  41                 	db	65	;'A'
   129   007DF3  4E                 	db	78	;'N'
   130   007DF4  47                 	db	71	;'G'
   131   007DF5  45                 	db	69	;'E'
   132   007DF6  00                 	db	0
   133   007DF7                     STR_43:
   134   007DF7  4D                 	db	77	;'M'
   135   007DF8  75                 	db	117	;'u'
   136   007DF9  65                 	db	101	;'e'
   137   007DFA  73                 	db	115	;'s'
   138   007DFB  74                 	db	116	;'t'
   139   007DFC  72                 	db	114	;'r'
   140   007DFD  61                 	db	97	;'a'
   141   007DFE  20                 	db	32
   142   007DFF  64                 	db	100	;'d'
   143   007E00  65                 	db	101	;'e'
   144   007E01  20                 	db	32
   145   007E02  64                 	db	100	;'d'
   146   007E03  61                 	db	97	;'a'
   147   007E04  74                 	db	116	;'t'
   148   007E05  6F                 	db	111	;'o'
   149   007E06  20                 	db	32
   150   007E07  65                 	db	101	;'e'
   151   007E08  6E                 	db	110	;'n'
   152   007E09  74                 	db	116	;'t'
   153   007E0A  72                 	db	114	;'r'
   154   007E0B  61                 	db	97	;'a'
   155   007E0C  6E                 	db	110	;'n'
   156   007E0D  74                 	db	116	;'t'
   157   007E0E  65                 	db	101	;'e'
   158   007E0F  3A                 	db	58	;':'
   159   007E10  20                 	db	32
   160   007E11  00                 	db	0
   161   007E12  45                 	db	69	;'E'
   162   007E13  52                 	db	82	;'R'
   163   007E14  52                 	db	82	;'R'
   164   007E15  4F                 	db	79	;'O'
   165   007E16  52                 	db	82	;'R'
   166   007E17  5F                 	db	95	;'_'
   167   007E18  43                 	db	67	;'C'
   168   007E19  4F                 	db	79	;'O'
   169   007E1A  44                 	db	68	;'D'
   170   007E1B  45                 	db	69	;'E'
   171   007E1C  5F                 	db	95	;'_'
   172   007E1D  55                 	db	85	;'U'
   173   007E1E  41                 	db	65	;'A'
   174   007E1F  52                 	db	82	;'R'
   175   007E20  54                 	db	84	;'T'
   176   007E21  5F                 	db	95	;'_'
   177   007E22  43                 	db	67	;'C'
   178   007E23  4F                 	db	79	;'O'
   179   007E24  4E                 	db	78	;'N'
   180   007E25  46                 	db	70	;'F'
   181   007E26  49                 	db	73	;'I'
   182   007E27  47                 	db	71	;'G'
   183   007E28  20                 	db	32
   184   007E29  0D                 	db	13
   185   007E2A  0A                 	db	10
   186   007E2B  00                 	db	0
   187   007E2C                     STR_52:
   188   007E2C  45                 	db	69	;'E'
   189   007E2D  52                 	db	82	;'R'
   190   007E2E  52                 	db	82	;'R'
   191   007E2F  4F                 	db	79	;'O'
   192   007E30  52                 	db	82	;'R'
   193   007E31  5F                 	db	95	;'_'
   194   007E32  43                 	db	67	;'C'
   195   007E33  4F                 	db	79	;'O'
   196   007E34  44                 	db	68	;'D'
   197   007E35  45                 	db	69	;'E'
   198   007E36  5F                 	db	95	;'_'
   199   007E37  53                 	db	83	;'S'
   200   007E38  50                 	db	80	;'P'
   201   007E39  49                 	db	73	;'I'
   202   007E3A  5F                 	db	95	;'_'
   203   007E3B  43                 	db	67	;'C'
   204   007E3C  4F                 	db	79	;'O'
   205   007E3D  4C                 	db	76	;'L'
   206   007E3E  4C                 	db	76	;'L'
   207   007E3F  49                 	db	73	;'I'
   208   007E40  53                 	db	83	;'S'
   209   007E41  49                 	db	73	;'I'
   210   007E42  4F                 	db	79	;'O'
   211   007E43  4E                 	db	78	;'N'
   212   007E44  00                 	db	0
   213   007E45  45                 	db	69	;'E'
   214   007E46  52                 	db	82	;'R'
   215   007E47  52                 	db	82	;'R'
   216   007E48  4F                 	db	79	;'O'
   217   007E49  52                 	db	82	;'R'
   218   007E4A  5F                 	db	95	;'_'
   219   007E4B  43                 	db	67	;'C'
   220   007E4C  4F                 	db	79	;'O'
   221   007E4D  44                 	db	68	;'D'
   222   007E4E  45                 	db	69	;'E'
   223   007E4F  5F                 	db	95	;'_'
   224   007E50  55                 	db	85	;'U'
   225   007E51  41                 	db	65	;'A'
   226   007E52  52                 	db	82	;'R'
   227   007E53  54                 	db	84	;'T'
   228   007E54  5F                 	db	95	;'_'
   229   007E55  4F                 	db	79	;'O'
   230   007E56  56                 	db	86	;'V'
   231   007E57  45                 	db	69	;'E'
   232   007E58  52                 	db	82	;'R'
   233   007E59  46                 	db	70	;'F'
   234   007E5A  4C                 	db	76	;'L'
   235   007E5B  4F                 	db	79	;'O'
   236   007E5C  57                 	db	87	;'W'
   237   007E5D  00                 	db	0
   238   007E5E  45                 	db	69	;'E'
   239   007E5F  52                 	db	82	;'R'
   240   007E60  52                 	db	82	;'R'
   241   007E61  4F                 	db	79	;'O'
   242   007E62  52                 	db	82	;'R'
   243   007E63  5F                 	db	95	;'_'
   244   007E64  43                 	db	67	;'C'
   245   007E65  4F                 	db	79	;'O'
   246   007E66  44                 	db	68	;'D'
   247   007E67  45                 	db	69	;'E'
   248   007E68  5F                 	db	95	;'_'
   249   007E69  55                 	db	85	;'U'
   250   007E6A  41                 	db	65	;'A'
   251   007E6B  52                 	db	82	;'R'
   252   007E6C  54                 	db	84	;'T'
   253   007E6D  5F                 	db	95	;'_'
   254   007E6E  46                 	db	70	;'F'
   255   007E6F  52                 	db	82	;'R'
   256   007E70  41                 	db	65	;'A'
   257   007E71  4D                 	db	77	;'M'
   258   007E72  49                 	db	73	;'I'
   259   007E73  4E                 	db	78	;'N'
   260   007E74  47                 	db	71	;'G'
   261   007E75  00                 	db	0
   262   007E76                     STR_19:
   263   007E76  0D                 	db	13
   264   007E77  0A                 	db	10
   265   007E78  43                 	db	67	;'C'
   266   007E79  6F                 	db	111	;'o'
   267   007E7A  6E                 	db	110	;'n'
   268   007E7B  66                 	db	102	;'f'
   269   007E7C  69                 	db	105	;'i'
   270   007E7D  67                 	db	103	;'g'
   271   007E7E  75                 	db	117	;'u'
   272   007E7F  72                 	db	114	;'r'
   273   007E80  61                 	db	97	;'a'
   274   007E81  63                 	db	99	;'c'
   275   007E82  69                 	db	105	;'i'
   276   007E83  6F                 	db	111	;'o'
   277   007E84  6E                 	db	110	;'n'
   278   007E85  20                 	db	32
   279   007E86  53                 	db	83	;'S'
   280   007E87  50                 	db	80	;'P'
   281   007E88  49                 	db	73	;'I'
   282   007E89  3A                 	db	58	;':'
   283   007E8A  0D                 	db	13
   284   007E8B  0A                 	db	10
   285   007E8C  00                 	db	0
   286   007E8D                     STR_5:
   287   007E8D  62                 	db	98	;'b'
   288   007E8E  61                 	db	97	;'a'
   289   007E8F  6A                 	db	106	;'j'
   290   007E90  61                 	db	97	;'a'
   291   007E91  20                 	db	32
   292   007E92  76                 	db	118	;'v'
   293   007E93  65                 	db	101	;'e'
   294   007E94  6C                 	db	108	;'l'
   295   007E95  6F                 	db	111	;'o'
   296   007E96  63                 	db	99	;'c'
   297   007E97  69                 	db	105	;'i'
   298   007E98  64                 	db	100	;'d'
   299   007E99  61                 	db	97	;'a'
   300   007E9A  64                 	db	100	;'d'
   301   007E9B  20                 	db	32
   302   007E9C  0D                 	db	13
   303   007E9D  0A                 	db	10
   304   007E9E  00                 	db	0
   305   007E9F                     STR_4:
   306   007E9F  61                 	db	97	;'a'
   307   007EA0  6C                 	db	108	;'l'
   308   007EA1  74                 	db	116	;'t'
   309   007EA2  61                 	db	97	;'a'
   310   007EA3  20                 	db	32
   311   007EA4  76                 	db	118	;'v'
   312   007EA5  65                 	db	101	;'e'
   313   007EA6  6C                 	db	108	;'l'
   314   007EA7  6F                 	db	111	;'o'
   315   007EA8  63                 	db	99	;'c'
   316   007EA9  69                 	db	105	;'i'
   317   007EAA  64                 	db	100	;'d'
   318   007EAB  61                 	db	97	;'a'
   319   007EAC  64                 	db	100	;'d'
   320   007EAD  20                 	db	32
   321   007EAE  0D                 	db	13
   322   007EAF  0A                 	db	10
   323   007EB0  00                 	db	0
   324   007EB1                     STR_20:
   325   007EB1  46                 	db	70	;'F'
   326   007EB2  72                 	db	114	;'r'
   327   007EB3  65                 	db	101	;'e'
   328   007EB4  63                 	db	99	;'c'
   329   007EB5  75                 	db	117	;'u'
   330   007EB6  65                 	db	101	;'e'
   331   007EB7  6E                 	db	110	;'n'
   332   007EB8  63                 	db	99	;'c'
   333   007EB9  69                 	db	105	;'i'
   334   007EBA  61                 	db	97	;'a'
   335   007EBB  20                 	db	32
   336   007EBC  53                 	db	83	;'S'
   337   007EBD  50                 	db	80	;'P'
   338   007EBE  49                 	db	73	;'I'
   339   007EBF  3A                 	db	58	;':'
   340   007EC0  20                 	db	32
   341   007EC1  00                 	db	0
   342   007EC2                     STR_37:
   343   007EC2  50                 	db	80	;'P'
   344   007EC3  6F                 	db	111	;'o'
   345   007EC4  6C                 	db	108	;'l'
   346   007EC5  61                 	db	97	;'a'
   347   007EC6  72                 	db	114	;'r'
   348   007EC7  69                 	db	105	;'i'
   349   007EC8  64                 	db	100	;'d'
   350   007EC9  61                 	db	97	;'a'
   351   007ECA  64                 	db	100	;'d'
   352   007ECB  3A                 	db	58	;':'
   353   007ECC  20                 	db	32
   354   007ECD  49                 	db	73	;'I'
   355   007ECE  64                 	db	100	;'d'
   356   007ECF  6C                 	db	108	;'l'
   357   007ED0  65                 	db	101	;'e'
   358   007ED1  20                 	db	32
   359   007ED2  00                 	db	0
   360   007ED3                     STR_12:
   361   007ED3  44                 	db	68	;'D'
   362   007ED4  65                 	db	101	;'e'
   363   007ED5  73                 	db	115	;'s'
   364   007ED6  68                 	db	104	;'h'
   365   007ED7  61                 	db	97	;'a'
   366   007ED8  62                 	db	98	;'b'
   367   007ED9  69                 	db	105	;'i'
   368   007EDA  6C                 	db	108	;'l'
   369   007EDB  69                 	db	105	;'i'
   370   007EDC  74                 	db	116	;'t'
   371   007EDD  61                 	db	97	;'a'
   372   007EDE  64                 	db	100	;'d'
   373   007EDF  6F                 	db	111	;'o'
   374   007EE0  20                 	db	32
   375   007EE1  0D                 	db	13
   376   007EE2  0A                 	db	10
   377   007EE3  00                 	db	0
   378   007EE4                     STR_41:
   379   007EE4  61                 	db	97	;'a'
   380   007EE5  63                 	db	99	;'c'
   381   007EE6  74                 	db	116	;'t'
   382   007EE7  69                 	db	105	;'i'
   383   007EE8  76                 	db	118	;'v'
   384   007EE9  65                 	db	101	;'e'
   385   007EEA  20                 	db	32
   386   007EEB  61                 	db	97	;'a'
   387   007EEC  20                 	db	32
   388   007EED  69                 	db	105	;'i'
   389   007EEE  64                 	db	100	;'d'
   390   007EEF  6C                 	db	108	;'l'
   391   007EF0  65                 	db	101	;'e'
   392   007EF1  0D                 	db	13
   393   007EF2  0A                 	db	10
   394   007EF3  00                 	db	0
   395   007EF4                     STR_42:
   396   007EF4  69                 	db	105	;'i'
   397   007EF5  64                 	db	100	;'d'
   398   007EF6  6C                 	db	108	;'l'
   399   007EF7  65                 	db	101	;'e'
   400   007EF8  20                 	db	32
   401   007EF9  61                 	db	97	;'a'
   402   007EFA  20                 	db	32
   403   007EFB  61                 	db	97	;'a'
   404   007EFC  63                 	db	99	;'c'
   405   007EFD  74                 	db	116	;'t'
   406   007EFE  69                 	db	105	;'i'
   407   007EFF  76                 	db	118	;'v'
   408   007F00  65                 	db	101	;'e'
   409   007F01  0D                 	db	13
   410   007F02  0A                 	db	10
   411   007F03  00                 	db	0
   412   007F04                     STR_36:
   413   007F04  64                 	db	100	;'d'
   414   007F05  65                 	db	101	;'e'
   415   007F06  73                 	db	115	;'s'
   416   007F07  68                 	db	104	;'h'
   417   007F08  61                 	db	97	;'a'
   418   007F09  62                 	db	98	;'b'
   419   007F0A  69                 	db	105	;'i'
   420   007F0B  6C                 	db	108	;'l'
   421   007F0C  69                 	db	105	;'i'
   422   007F0D  74                 	db	116	;'t'
   423   007F0E  61                 	db	97	;'a'
   424   007F0F  64                 	db	100	;'d'
   425   007F10  6F                 	db	111	;'o'
   426   007F11  0D                 	db	13
   427   007F12  0A                 	db	10
   428   007F13  00                 	db	0
   429   007F14                     STR_34:
   430   007F14  50                 	db	80	;'P'
   431   007F15  75                 	db	117	;'u'
   432   007F16  65                 	db	101	;'e'
   433   007F17  72                 	db	114	;'r'
   434   007F18  74                 	db	116	;'t'
   435   007F19  6F                 	db	111	;'o'
   436   007F1A  20                 	db	32
   437   007F1B  73                 	db	115	;'s'
   438   007F1C  65                 	db	101	;'e'
   439   007F1D  72                 	db	114	;'r'
   440   007F1E  69                 	db	105	;'i'
   441   007F1F  61                 	db	97	;'a'
   442   007F20  6C                 	db	108	;'l'
   443   007F21  3A                 	db	58	;':'
   444   007F22  20                 	db	32
   445   007F23  00                 	db	0
   446   007F24                     STR_40:
   447   007F24  54                 	db	84	;'T'
   448   007F25  72                 	db	114	;'r'
   449   007F26  61                 	db	97	;'a'
   450   007F27  6E                 	db	110	;'n'
   451   007F28  73                 	db	115	;'s'
   452   007F29  6D                 	db	109	;'m'
   453   007F2A  69                 	db	105	;'i'
   454   007F2B  73                 	db	115	;'s'
   455   007F2C  69                 	db	105	;'i'
   456   007F2D  6F                 	db	111	;'o'
   457   007F2E  6E                 	db	110	;'n'
   458   007F2F  20                 	db	32
   459   007F30  65                 	db	101	;'e'
   460   007F31  6E                 	db	110	;'n'
   461   007F32  20                 	db	32
   462   007F33  00                 	db	0
   463   007F34                     STR_11:
   464   007F34  48                 	db	72	;'H'
   465   007F35  61                 	db	97	;'a'
   466   007F36  62                 	db	98	;'b'
   467   007F37  69                 	db	105	;'i'
   468   007F38  6C                 	db	108	;'l'
   469   007F39  69                 	db	105	;'i'
   470   007F3A  74                 	db	116	;'t'
   471   007F3B  61                 	db	97	;'a'
   472   007F3C  64                 	db	100	;'d'
   473   007F3D  6F                 	db	111	;'o'
   474   007F3E  20                 	db	32
   475   007F3F  0D                 	db	13
   476   007F40  0A                 	db	10
   477   007F41  00                 	db	0
   478   007F42                     STR_9:
   479   007F42  78                 	db	120	;'x'
   480   007F43  20                 	db	32
   481   007F44  62                 	db	98	;'b'
   482   007F45  61                 	db	97	;'a'
   483   007F46  75                 	db	117	;'u'
   484   007F47  64                 	db	100	;'d'
   485   007F48  69                 	db	105	;'i'
   486   007F49  6F                 	db	111	;'o'
   487   007F4A  73                 	db	115	;'s'
   488   007F4B  20                 	db	32
   489   007F4C  0D                 	db	13
   490   007F4D  0A                 	db	10
   491   007F4E  00                 	db	0
   492   007F4F                     STR_44:
   493   007F4F  61                 	db	97	;'a'
   494   007F50  6C                 	db	108	;'l'
   495   007F51  20                 	db	32
   496   007F52  66                 	db	102	;'f'
   497   007F53  69                 	db	105	;'i'
   498   007F54  6E                 	db	110	;'n'
   499   007F55  61                 	db	97	;'a'
   500   007F56  6C                 	db	108	;'l'
   501   007F57  0D                 	db	13
   502   007F58  0A                 	db	10
   503   007F59  00                 	db	0
   504   007F5A                     STR_45:
   505   007F5A  65                 	db	101	;'e'
   506   007F5B  6E                 	db	110	;'n'
   507   007F5C  20                 	db	32
   508   007F5D  6D                 	db	109	;'m'
   509   007F5E  65                 	db	101	;'e'
   510   007F5F  64                 	db	100	;'d'
   511   007F60  69                 	db	105	;'i'
   512   007F61  6F                 	db	111	;'o'
   513   007F62  0D                 	db	13
   514   007F63  0A                 	db	10
   515   007F64  00                 	db	0
   516   007F65                     STR_6:
   517   007F65  42                 	db	66	;'B'
   518   007F66  61                 	db	97	;'a'
   519   007F67  75                 	db	117	;'u'
   520   007F68  64                 	db	100	;'d'
   521   007F69  72                 	db	114	;'r'
   522   007F6A  61                 	db	97	;'a'
   523   007F6B  74                 	db	116	;'t'
   524   007F6C  65                 	db	101	;'e'
   525   007F6D  3A                 	db	58	;':'
   526   007F6E  20                 	db	32
   527   007F6F  00                 	db	0
   528   007F70                     STR_16:
   529   007F70  52                 	db	82	;'R'
   530   007F71  65                 	db	101	;'e'
   531   007F72  63                 	db	99	;'c'
   532   007F73  65                 	db	101	;'e'
   533   007F74  70                 	db	112	;'p'
   534   007F75  74                 	db	116	;'t'
   535   007F76  6F                 	db	111	;'o'
   536   007F77  72                 	db	114	;'r'
   537   007F78  3A                 	db	58	;':'
   538   007F79  20                 	db	32
   539   007F7A  00                 	db	0
   540   007F7B                     STR_3:
   541   007F7B  41                 	db	65	;'A'
   542   007F7C  73                 	db	115	;'s'
   543   007F7D  69                 	db	105	;'i'
   544   007F7E  6E                 	db	110	;'n'
   545   007F7F  63                 	db	99	;'c'
   546   007F80  72                 	db	114	;'r'
   547   007F81  6F                 	db	111	;'o'
   548   007F82  6E                 	db	110	;'n'
   549   007F83  6F                 	db	111	;'o'
   550   007F84  20                 	db	32
   551   007F85  00                 	db	0
   552   007F86                     STR_13:
   553   007F86  54                 	db	84	;'T'
   554   007F87  72                 	db	114	;'r'
   555   007F88  61                 	db	97	;'a'
   556   007F89  6E                 	db	110	;'n'
   557   007F8A  73                 	db	115	;'s'
   558   007F8B  6F                 	db	111	;'o'
   559   007F8C  72                 	db	114	;'r'
   560   007F8D  3A                 	db	58	;':'
   561   007F8E  20                 	db	32
   562   007F8F  00                 	db	0
   563   007F90                     STR_2:
   564   007F90  53                 	db	83	;'S'
   565   007F91  69                 	db	105	;'i'
   566   007F92  6E                 	db	110	;'n'
   567   007F93  63                 	db	99	;'c'
   568   007F94  72                 	db	114	;'r'
   569   007F95  6F                 	db	111	;'o'
   570   007F96  6E                 	db	110	;'n'
   571   007F97  6F                 	db	111	;'o'
   572   007F98  20                 	db	32
   573   007F99  00                 	db	0
   574   007F9A                     STR_23:
   575   007F9A  49                 	db	73	;'I'
   576   007F9B  6E                 	db	110	;'n'
   577   007F9C  70                 	db	112	;'p'
   578   007F9D  75                 	db	117	;'u'
   579   007F9E  74                 	db	116	;'t'
   580   007F9F  20                 	db	32
   581   007FA0  0D                 	db	13
   582   007FA1  09                 	db	9
   583   007FA2  00                 	db	0
   584   007FA3                     STR_24:
   585   007FA3  4F                 	db	79	;'O'
   586   007FA4  75                 	db	117	;'u'
   587   007FA5  74                 	db	116	;'t'
   588   007FA6  70                 	db	112	;'p'
   589   007FA7  75                 	db	117	;'u'
   590   007FA8  74                 	db	116	;'t'
   591   007FA9  0D                 	db	13
   592   007FAA  09                 	db	9
   593   007FAB  00                 	db	0
   594   007FAC                     STR_10:
   595   007FAC  50                 	db	80	;'P'
   596   007FAD  75                 	db	117	;'u'
   597   007FAE  65                 	db	101	;'e'
   598   007FAF  72                 	db	114	;'r'
   599   007FB0  74                 	db	116	;'t'
   600   007FB1  6F                 	db	111	;'o'
   601   007FB2  3A                 	db	58	;':'
   602   007FB3  20                 	db	32
   603   007FB4  00                 	db	0
   604   007FB5                     STR_7:
   605   007FB5  31                 	db	49	;'1'
   606   007FB6  36                 	db	54	;'6'
   607   007FB7  20                 	db	32
   608   007FB8  62                 	db	98	;'b'
   609   007FB9  69                 	db	105	;'i'
   610   007FBA  74                 	db	116	;'t'
   611   007FBB  73                 	db	115	;'s'
   612   007FBC  20                 	db	32
   613   007FBD  00                 	db	0
   614   007FBE                     STR_46:
   615   007FBE  45                 	db	69	;'E'
   616   007FBF  72                 	db	114	;'r'
   617   007FC0  72                 	db	114	;'r'
   618   007FC1  6F                 	db	111	;'o'
   619   007FC2  72                 	db	114	;'r'
   620   007FC3  3A                 	db	58	;':'
   621   007FC4  20                 	db	32
   622   007FC5  00                 	db	0
   623   007FC6                     STR_8:
   624   007FC6  38                 	db	56	;'8'
   625   007FC7  20                 	db	32
   626   007FC8  62                 	db	98	;'b'
   627   007FC9  69                 	db	105	;'i'
   628   007FCA  74                 	db	116	;'t'
   629   007FCB  73                 	db	115	;'s'
   630   007FCC  20                 	db	32
   631   007FCD  00                 	db	0
   632   007FCE                     STR_38:
   633   007FCE  68                 	db	104	;'h'
   634   007FCF  69                 	db	105	;'i'
   635   007FD0  67                 	db	103	;'g'
   636   007FD1  68                 	db	104	;'h'
   637   007FD2  0D                 	db	13
   638   007FD3  0A                 	db	10
   639   007FD4  00                 	db	0
   640   007FD5                     STR_1:
   641   007FD5  4D                 	db	77	;'M'
   642   007FD6  6F                 	db	111	;'o'
   643   007FD7  64                 	db	100	;'d'
   644   007FD8  6F                 	db	111	;'o'
   645   007FD9  3A                 	db	58	;':'
   646   007FDA  20                 	db	32
   647   007FDB  00                 	db	0
   648   007FDC                     STR_21:
   649   007FDC  25                 	db	37
   650   007FDD  6C                 	db	108	;'l'
   651   007FDE  64                 	db	100	;'d'
   652   007FDF  0D                 	db	13
   653   007FE0  0A                 	db	10
   654   007FE1  00                 	db	0
   655   007FE2                     STR_39:
   656   007FE2  6C                 	db	108	;'l'
   657   007FE3  6F                 	db	111	;'o'
   658   007FE4  77                 	db	119	;'w'
   659   007FE5  0D                 	db	13
   660   007FE6  0A                 	db	10
   661   007FE7  00                 	db	0
   662   007FE8                     STR_22:
   663   007FE8  53                 	db	83	;'S'
   664   007FE9  44                 	db	68	;'D'
   665   007FEA  49                 	db	73	;'I'
   666   007FEB  3A                 	db	58	;':'
   667   007FEC  20                 	db	32
   668   007FED  00                 	db	0
   669   007FEE                     STR_28:
   670   007FEE  53                 	db	83	;'S'
   671   007FEF  43                 	db	67	;'C'
   672   007FF0  4B                 	db	75	;'K'
   673   007FF1  3A                 	db	58	;':'
   674   007FF2  20                 	db	32
   675   007FF3  00                 	db	0
   676   007FF4                     STR_25:
   677   007FF4  53                 	db	83	;'S'
   678   007FF5  44                 	db	68	;'D'
   679   007FF6  4F                 	db	79	;'O'
   680   007FF7  3A                 	db	58	;':'
   681   007FF8  20                 	db	32
   682   007FF9  00                 	db	0
   683   007FFA                     STR_31:
   684   007FFA  53                 	db	83	;'S'
   685   007FFB  53                 	db	83	;'S'
   686   007FFC  3A                 	db	58	;':'
   687   007FFD  20                 	db	32
   688   007FFE  00                 	db	0
   689   007FFF  00                 	db	0	; dummy byte at the end
   690   000000                     
   691                           ; #config settings
   692                           
   693                           	psect	cinit
   694   006F28                     __pcinit:
   695                           	callstack 0
   696   006F28                     start_initialization:
   697                           	callstack 0
   698   006F28                     __initialization:
   699                           	callstack 0
   700                           
   701                           ; Clear objects allocated to BANK0 (32 bytes)
   702   006F28  EE00  F060         	lfsr	0,__pbssBANK0
   703   006F2C  0E20               	movlw	32
   704   006F2E                     clear_0:
   705   006F2E  6AEE               	clrf	postinc0,c
   706   006F30  06E8               	decf	wreg,f,c
   707   006F32  E1FD               	bnz	clear_0
   708                           
   709                           ; Clear objects allocated to COMRAM (5 bytes)
   710   006F34  6A40               	clrf	(__pbssCOMRAM+4)& (0+255),c
   711   006F36  6A3F               	clrf	(__pbssCOMRAM+3)& (0+255),c
   712   006F38  6A3E               	clrf	(__pbssCOMRAM+2)& (0+255),c
   713   006F3A  6A3D               	clrf	(__pbssCOMRAM+1)& (0+255),c
   714   006F3C  6A3C               	clrf	__pbssCOMRAM& (0+255),c
   715   006F3E                     end_of_initialization:
   716                           	callstack 0
   717   006F3E                     __end_of__initialization:
   718                           	callstack 0
   719   006F3E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   720   006F40  6EF8               	movwf	tblptru,c
   721   006F42  0100               	movlb	0
   722   006F44  EF25  F038         	goto	_main	;jump to C main() function
   723                           
   724                           	psect	bssCOMRAM
   725   00003C                     __pbssCOMRAM:
   726                           	callstack 0
   727   00003C                     _width:
   728                           	callstack 0
   729   00003C                     	ds	2
   730   00003E                     _prec:
   731                           	callstack 0
   732   00003E                     	ds	2
   733   000040                     _flags:
   734                           	callstack 0
   735   000040                     	ds	1
   736                           
   737                           	psect	bssBANK0
   738   000060                     __pbssBANK0:
   739                           	callstack 0
   740   000060                     _dbuf:
   741                           	callstack 0
   742   000060                     	ds	32
   743                           
   744                           	psect	cstackCOMRAM
   745   000001                     __pcstackCOMRAM:
   746                           	callstack 0
   747   000001                     ?___aldiv:
   748                           	callstack 0
   749   000001                     ?___almod:
   750                           	callstack 0
   751   000001                     UART_Tx@dato:
   752                           	callstack 0
   753   000001                     Clock_Init@s16Timeout:
   754                           	callstack 0
   755   000001                     UART_select_baud@baudrate:
   756                           	callstack 0
   757   000001                     ___aldiv@dividend:
   758                           	callstack 0
   759   000001                     ___almod@dividend:
   760                           	callstack 0
   761                           
   762                           ; 4 bytes @ 0x0
   763   000001                     	ds	1
   764   000002                     putch@data:
   765                           	callstack 0
   766                           
   767                           ; 1 bytes @ 0x1
   768   000002                     	ds	1
   769   000003                     Clock_Init@bStatus:
   770                           	callstack 0
   771   000003                     fputc@c:
   772                           	callstack 0
   773                           
   774                           ; 2 bytes @ 0x2
   775   000003                     	ds	1
   776   000004                     Clock_Init@bStatus_558:
   777                           	callstack 0
   778                           
   779                           ; 1 bytes @ 0x3
   780   000004                     	ds	1
   781   000005                     ??_UART_select_baud:
   782   000005                     Clock_Init@bStatus_559:
   783                           	callstack 0
   784   000005                     fputc@fp:
   785                           	callstack 0
   786   000005                     ___aldiv@divisor:
   787                           	callstack 0
   788   000005                     ___almod@divisor:
   789                           	callstack 0
   790                           
   791                           ; 4 bytes @ 0x4
   792   000005                     	ds	1
   793   000006                     Clock_Init@bStatus_562:
   794                           	callstack 0
   795                           
   796                           ; 1 bytes @ 0x5
   797   000006                     	ds	1
   798   000007                     ??_fputc:
   799   000007                     Clock_Init@bItTimeEn:
   800                           	callstack 0
   801                           
   802                           ; 1 bytes @ 0x6
   803   000007                     	ds	1
   804   000008                     Clock_Init@returnCode:
   805                           	callstack 0
   806                           
   807                           ; 1 bytes @ 0x7
   808   000008                     	ds	1
   809   000009                     ___aldiv@counter:
   810                           	callstack 0
   811   000009                     ___almod@counter:
   812                           	callstack 0
   813                           
   814                           ; 1 bytes @ 0x8
   815   000009                     	ds	1
   816   00000A                     ___aldiv@sign:
   817                           	callstack 0
   818   00000A                     ___almod@sign:
   819                           	callstack 0
   820                           
   821                           ; 1 bytes @ 0x9
   822   00000A                     	ds	1
   823   00000B                     ?_abs:
   824                           	callstack 0
   825   00000B                     abs@a:
   826                           	callstack 0
   827   00000B                     ___aldiv@quotient:
   828                           	callstack 0
   829                           
   830                           ; 4 bytes @ 0xA
   831   00000B                     	ds	2
   832   00000D                     ??_abs:
   833                           
   834                           ; 1 bytes @ 0xC
   835   00000D                     	ds	2
   836   00000F                     ?_SPI_actual_frec:
   837                           	callstack 0
   838   00000F                     vfpfcnvrt@fp:
   839                           	callstack 0
   840                           
   841                           ; 2 bytes @ 0xE
   842   00000F                     	ds	2
   843   000011                     vfpfcnvrt@fmt:
   844                           	callstack 0
   845                           
   846                           ; 1 bytes @ 0x10
   847   000011                     	ds	1
   848   000012                     vfpfcnvrt@ap:
   849                           	callstack 0
   850                           
   851                           ; 1 bytes @ 0x11
   852   000012                     	ds	1
   853   000013                     ??_SPI_actual_frec:
   854   000013                     ??_vfpfcnvrt:
   855                           
   856                           ; 1 bytes @ 0x12
   857   000013                     	ds	2
   858   000015                     vfpfcnvrt@done:
   859                           	callstack 0
   860   000015                     SPI_actual_frec@baud:
   861                           	callstack 0
   862                           
   863                           ; 4 bytes @ 0x14
   864   000015                     	ds	1
   865   000016                     vfpfcnvrt@cp:
   866                           	callstack 0
   867                           
   868                           ; 2 bytes @ 0x15
   869   000016                     	ds	2
   870   000018                     vfpfcnvrt@convarg:
   871                           	callstack 0
   872                           
   873                           ; 4 bytes @ 0x17
   874   000018                     	ds	4
   875   00001C                     vfpfcnvrt@c:
   876                           	callstack 0
   877                           
   878                           ; 1 bytes @ 0x1B
   879   00001C                     	ds	1
   880   00001D                     ?_vfprintf:
   881                           	callstack 0
   882   00001D                     vfprintf@fp:
   883                           	callstack 0
   884                           
   885                           ; 2 bytes @ 0x1C
   886   00001D                     	ds	2
   887   00001F                     vfprintf@fmt:
   888                           	callstack 0
   889                           
   890                           ; 2 bytes @ 0x1E
   891   00001F                     	ds	2
   892   000021                     vfprintf@ap:
   893                           	callstack 0
   894                           
   895                           ; 1 bytes @ 0x20
   896   000021                     	ds	1
   897   000022                     vfprintf@cfmt:
   898                           	callstack 0
   899                           
   900                           ; 2 bytes @ 0x21
   901   000022                     	ds	2
   902   000024                     ?_printf:
   903                           	callstack 0
   904   000024                     printf@fmt:
   905                           	callstack 0
   906                           
   907                           ; 2 bytes @ 0x23
   908   000024                     	ds	6
   909   00002A                     printf@ap:
   910                           	callstack 0
   911                           
   912                           ; 1 bytes @ 0x29
   913   00002A                     	ds	1
   914   00002B                     ??_SPI_ErrorHandler:
   915   00002B                     UART_Init@baudrate:
   916                           	callstack 0
   917                           
   918                           ; 4 bytes @ 0x2A
   919   00002B                     	ds	2
   920   00002D                     SPI_ErrorHandler@errorCode:
   921                           	callstack 0
   922                           
   923                           ; 1 bytes @ 0x2C
   924   00002D                     	ds	1
   925   00002E                     SPI_write@dato:
   926                           	callstack 0
   927   00002E                     SPI_BaudRateGen@FClock:
   928                           	callstack 0
   929                           
   930                           ; 4 bytes @ 0x2D
   931   00002E                     	ds	1
   932   00002F                     
   933                           ; 1 bytes @ 0x2E
   934   00002F                     	ds	3
   935   000032                     ??_SPI_BaudRateGen:
   936                           
   937                           ; 1 bytes @ 0x31
   938   000032                     	ds	4
   939   000036                     SPI_BaudRateGen@baudReg:
   940                           	callstack 0
   941                           
   942                           ; 4 bytes @ 0x35
   943   000036                     	ds	4
   944   00003A                     ??_main:
   945                           
   946                           ; 1 bytes @ 0x39
   947   00003A                     	ds	2
   948                           
   949 ;;
   950 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   951 ;;
   952 ;; *************** function _main *****************
   953 ;; Defined at:
   954 ;;		line 15 in file "main.c"
   955 ;; Parameters:    Size  Location     Type
   956 ;;		None
   957 ;; Auto vars:     Size  Location     Type
   958 ;;		None
   959 ;; Return value:  Size  Location     Type
   960 ;;                  1    wreg      void 
   961 ;; Registers used:
   962 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   963 ;; Tracked objects:
   964 ;;		On entry : 0/0
   965 ;;		On exit  : 0/0
   966 ;;		Unchanged: 0/0
   967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   968 ;;      Params:         0       0       0       0       0       0       0       0       0
   969 ;;      Locals:         0       0       0       0       0       0       0       0       0
   970 ;;      Temps:          2       0       0       0       0       0       0       0       0
   971 ;;      Totals:         2       0       0       0       0       0       0       0       0
   972 ;;Total ram usage:        2 bytes
   973 ;; Hardware stack levels required when called: 9
   974 ;; This function calls:
   975 ;;		_Clock_Init
   976 ;;		_SPI_master_init
   977 ;;		_SPI_write
   978 ;;		_UART_Init
   979 ;;		_UART_Tx
   980 ;; This function is called by:
   981 ;;		Startup code after reset
   982 ;; This function uses a non-reentrant model
   983 ;;
   984                           
   985                           	psect	text0
   986   00704A                     __ptext0:
   987                           	callstack 0
   988   00704A                     _main:
   989                           	callstack 22
   990   00704A                     
   991                           ;main.c: 16:     Clock_Init(16000);
   992   00704A  0E3E               	movlw	62
   993   00704C  6E02               	movwf	(Clock_Init@s16Timeout+1)^0,c
   994   00704E  0E80               	movlw	128
   995   007050  6E01               	movwf	Clock_Init@s16Timeout^0,c
   996   007052  EC94  F03C         	call	_Clock_Init	;wreg free
   997   007056                     
   998                           ;main.c: 17:     UART_Init(9600);
   999   007056  0E80               	movlw	128
  1000   007058  6E2B               	movwf	UART_Init@baudrate^0,c
  1001   00705A  0E25               	movlw	37
  1002   00705C  6E2C               	movwf	(UART_Init@baudrate+1)^0,c
  1003   00705E  0E00               	movlw	0
  1004   007060  6E2D               	movwf	(UART_Init@baudrate+2)^0,c
  1005   007062  0E00               	movlw	0
  1006   007064  6E2E               	movwf	(UART_Init@baudrate+3)^0,c
  1007   007066  ECA4  F037         	call	_UART_Init	;wreg free
  1008   00706A                     
  1009                           ;main.c: 18:     SPI_master_init();
  1010   00706A  ECCF  F037         	call	_SPI_master_init	;wreg free
  1011   00706E                     l2150:
  1012                           
  1013                           ;main.c: 20:         UART_Tx(SPI_write('b'));
  1014   00706E  0E62               	movlw	98
  1015   007070  ECB9  F037         	call	_SPI_write
  1016   007074  EC7A  F037         	call	_UART_Tx
  1017   007078                     
  1018                           ;main.c: 21:         _delay((unsigned long)((1000)*(48000000/4000.0)));
  1019   007078  0E3D               	movlw	61
  1020   00707A  6E3B               	movwf	(??_main+1)^0,c
  1021   00707C  0EE1               	movlw	225
  1022   00707E  6E3A               	movwf	??_main^0,c
  1023   007080  0E40               	movlw	64
  1024   007082                     u1577:
  1025   007082  2EE8               	decfsz	wreg,f,c
  1026   007084  D7FE               	bra	u1577
  1027   007086  2E3A               	decfsz	??_main^0,f,c
  1028   007088  D7FC               	bra	u1577
  1029   00708A  2E3B               	decfsz	(??_main+1)^0,f,c
  1030   00708C  D7FA               	bra	u1577
  1031   00708E  EF37  F038         	goto	l2150
  1032   007092  EF00  F000         	goto	start
  1033   007096                     __end_of_main:
  1034                           	callstack 0
  1035                           
  1036 ;; *************** function _UART_Init *****************
  1037 ;; Defined at:
  1038 ;;		line 20 in file "librerias/UART.c"
  1039 ;; Parameters:    Size  Location     Type
  1040 ;;  baudrate        4   42[COMRAM] unsigned long 
  1041 ;; Auto vars:     Size  Location     Type
  1042 ;;		None
  1043 ;; Return value:  Size  Location     Type
  1044 ;;                  1    wreg      void 
  1045 ;; Registers used:
  1046 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1047 ;; Tracked objects:
  1048 ;;		On entry : 0/0
  1049 ;;		On exit  : 0/0
  1050 ;;		Unchanged: 0/0
  1051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1052 ;;      Params:         4       0       0       0       0       0       0       0       0
  1053 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1054 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1055 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1056 ;;Total ram usage:        4 bytes
  1057 ;; Hardware stack levels used: 1
  1058 ;; Hardware stack levels required when called: 7
  1059 ;; This function calls:
  1060 ;;		_UART_config_show
  1061 ;;		_UART_select_baud
  1062 ;; This function is called by:
  1063 ;;		_main
  1064 ;; This function uses a non-reentrant model
  1065 ;;
  1066                           
  1067                           	psect	text1
  1068   006F48                     __ptext1:
  1069                           	callstack 0
  1070   006F48                     _UART_Init:
  1071                           	callstack 23
  1072   006F48                     
  1073                           ;librerias/UART.c: 21:     TXSTA1bits.SYNC1 = 0;
  1074   006F48  98AC               	bcf	172,4,c	;volatile
  1075                           
  1076                           ;librerias/UART.c: 22:     TXSTA1bits.BRGH1 = 1;
  1077   006F4A  84AC               	bsf	172,2,c	;volatile
  1078                           
  1079                           ;librerias/UART.c: 23:     BAUDCON1bits.BRG161 = 1;
  1080   006F4C  86B8               	bsf	184,3,c	;volatile
  1081   006F4E                     
  1082                           ;librerias/UART.c: 24:     UART_select_baud(baudrate);
  1083   006F4E  C02B  F001         	movff	UART_Init@baudrate,UART_select_baud@baudrate
  1084   006F52  C02C  F002         	movff	UART_Init@baudrate+1,UART_select_baud@baudrate+1
  1085   006F56  C02D  F003         	movff	UART_Init@baudrate+2,UART_select_baud@baudrate+2
  1086   006F5A  C02E  F004         	movff	UART_Init@baudrate+3,UART_select_baud@baudrate+3
  1087   006F5E  EC5C  F03A         	call	_UART_select_baud	;wreg free
  1088   006F62                     
  1089                           ;librerias/UART.c: 25:     TRISC6 = 1;
  1090   006F62  8C94               	bsf	3988,6,c	;volatile
  1091   006F64                     
  1092                           ;librerias/UART.c: 26:     TRISC7 = 1;
  1093   006F64  8E94               	bsf	3988,7,c	;volatile
  1094   006F66                     
  1095                           ;librerias/UART.c: 27:     RCSTAbits.SPEN = 1;
  1096   006F66  8EAB               	bsf	171,7,c	;volatile
  1097   006F68                     
  1098                           ;librerias/UART.c: 28:     TXSTAbits.TXEN1 = 1;
  1099   006F68  8AAC               	bsf	172,5,c	;volatile
  1100   006F6A                     
  1101                           ;librerias/UART.c: 29:     RCSTAbits.CREN = 1;
  1102   006F6A  88AB               	bsf	171,4,c	;volatile
  1103   006F6C                     
  1104                           ;librerias/UART.c: 30:     UART_config_show();
  1105   006F6C  ECFC  F03A         	call	_UART_config_show	;wreg free
  1106   006F70  0012               	return		;funcret
  1107   006F72                     __end_of_UART_Init:
  1108                           	callstack 0
  1109                           
  1110 ;; *************** function _UART_select_baud *****************
  1111 ;; Defined at:
  1112 ;;		line 33 in file "librerias/UART.c"
  1113 ;; Parameters:    Size  Location     Type
  1114 ;;  baudrate        4    0[COMRAM] unsigned long 
  1115 ;; Auto vars:     Size  Location     Type
  1116 ;;		None
  1117 ;; Return value:  Size  Location     Type
  1118 ;;                  1    wreg      void 
  1119 ;; Registers used:
  1120 ;;		wreg, status,2, status,0
  1121 ;; Tracked objects:
  1122 ;;		On entry : 0/0
  1123 ;;		On exit  : 0/0
  1124 ;;		Unchanged: 0/0
  1125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1126 ;;      Params:         4       0       0       0       0       0       0       0       0
  1127 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1128 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1129 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1130 ;;Total ram usage:        8 bytes
  1131 ;; Hardware stack levels used: 1
  1132 ;; This function calls:
  1133 ;;		Nothing
  1134 ;; This function is called by:
  1135 ;;		_UART_Init
  1136 ;; This function uses a non-reentrant model
  1137 ;;
  1138                           
  1139                           	psect	text2
  1140   0074B8                     __ptext2:
  1141                           	callstack 0
  1142   0074B8                     _UART_select_baud:
  1143                           	callstack 29
  1144   0074B8                     
  1145                           ;librerias/UART.c: 34:     switch (baudrate){
  1146   0074B8  EF8E  F03A         	goto	l1924
  1147   0074BC                     l1906:
  1148                           
  1149                           ;librerias/UART.c: 36:             SPBRGH = 0x9C;
  1150   0074BC  0E9C               	movlw	156
  1151   0074BE  6EB0               	movwf	176,c	;volatile
  1152                           
  1153                           ;librerias/UART.c: 37:             SPBRG = 0x3F;
  1154   0074C0  0E3F               	movlw	63
  1155   0074C2  6EAF               	movwf	175,c	;volatile
  1156                           
  1157                           ;librerias/UART.c: 38:             break;
  1158   0074C4  EFFB  F03A         	goto	l107
  1159   0074C8                     l1908:
  1160                           
  1161                           ;librerias/UART.c: 40:             SPBRGH = 0x27;
  1162   0074C8  0E27               	movlw	39
  1163   0074CA  6EB0               	movwf	176,c	;volatile
  1164                           
  1165                           ;librerias/UART.c: 41:             SPBRG = 0x0F;
  1166   0074CC  0E0F               	movlw	15
  1167   0074CE  6EAF               	movwf	175,c	;volatile
  1168                           
  1169                           ;librerias/UART.c: 42:             break;
  1170   0074D0  EFFB  F03A         	goto	l107
  1171   0074D4                     l1910:
  1172                           
  1173                           ;librerias/UART.c: 44:             SPBRGH = 0x13;
  1174   0074D4  0E13               	movlw	19
  1175   0074D6  6EB0               	movwf	176,c	;volatile
  1176                           
  1177                           ;librerias/UART.c: 45:             SPBRG = 0x87;
  1178   0074D8  0E87               	movlw	135
  1179   0074DA  6EAF               	movwf	175,c	;volatile
  1180                           
  1181                           ;librerias/UART.c: 46:             break;
  1182   0074DC  EFFB  F03A         	goto	l107
  1183   0074E0                     l1912:
  1184                           
  1185                           ;librerias/UART.c: 48:             SPBRGH = 0x04;
  1186   0074E0  0E04               	movlw	4
  1187   0074E2  6EB0               	movwf	176,c	;volatile
  1188                           
  1189                           ;librerias/UART.c: 49:             SPBRG = 0x7F;
  1190   0074E4  0E7F               	movlw	127
  1191   0074E6  6EAF               	movwf	175,c	;volatile
  1192                           
  1193                           ;librerias/UART.c: 50:             break;
  1194   0074E8  EFFB  F03A         	goto	l107
  1195   0074EC                     l1914:
  1196                           
  1197                           ;librerias/UART.c: 52:             SPBRGH = 0x02;
  1198   0074EC  0E02               	movlw	2
  1199   0074EE  6EB0               	movwf	176,c	;volatile
  1200                           
  1201                           ;librerias/UART.c: 53:             SPBRG = 0x70;
  1202   0074F0  0E70               	movlw	112
  1203   0074F2  6EAF               	movwf	175,c	;volatile
  1204                           
  1205                           ;librerias/UART.c: 54:             break;
  1206   0074F4  EFFB  F03A         	goto	l107
  1207   0074F8                     l1916:
  1208                           
  1209                           ;librerias/UART.c: 56:             SPBRGH = 0x00;
  1210   0074F8  0E00               	movlw	0
  1211   0074FA  6EB0               	movwf	176,c	;volatile
  1212                           
  1213                           ;librerias/UART.c: 57:             SPBRG = 0xCF;
  1214   0074FC  0ECF               	movlw	207
  1215   0074FE  6EAF               	movwf	175,c	;volatile
  1216                           
  1217                           ;librerias/UART.c: 58:             break;
  1218   007500  EFFB  F03A         	goto	l107
  1219   007504                     l1918:
  1220                           
  1221                           ;librerias/UART.c: 60:             SPBRGH = 0x00;
  1222   007504  0E00               	movlw	0
  1223   007506  6EB0               	movwf	176,c	;volatile
  1224                           
  1225                           ;librerias/UART.c: 61:             SPBRG = 0x67;
  1226   007508  0E67               	movlw	103
  1227   00750A  6EAF               	movwf	175,c	;volatile
  1228                           
  1229                           ;librerias/UART.c: 62:             break;
  1230   00750C  EFFB  F03A         	goto	l107
  1231   007510                     l1920:
  1232                           
  1233                           ;librerias/UART.c: 64:             SPBRGH = 0x04;
  1234   007510  0E04               	movlw	4
  1235   007512  6EB0               	movwf	176,c	;volatile
  1236                           
  1237                           ;librerias/UART.c: 65:             SPBRG = 0xE1;
  1238   007514  0EE1               	movlw	225
  1239   007516  6EAF               	movwf	175,c	;volatile
  1240                           
  1241                           ;librerias/UART.c: 66:             break;
  1242   007518  EFFB  F03A         	goto	l107
  1243   00751C                     l1924:
  1244   00751C  C001  F005         	movff	UART_select_baud@baudrate,??_UART_select_baud
  1245   007520  C002  F006         	movff	UART_select_baud@baudrate+1,??_UART_select_baud+1
  1246   007524  C003  F007         	movff	UART_select_baud@baudrate+2,??_UART_select_baud+2
  1247   007528  C004  F008         	movff	UART_select_baud@baudrate+3,??_UART_select_baud+3
  1248                           
  1249                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 3 sub-sw
      +                          itches
  1250                           ; Switch size 1, requested type "simple"
  1251                           ; Number of cases is 1, Range of values is 0 to 0
  1252                           ; switch strategies available:
  1253                           ; Name         Instructions Cycles
  1254                           ; simple_byte            4     3 (average)
  1255                           ;	Chosen strategy is simple_byte
  1256   00752C  5008               	movf	(??_UART_select_baud+3)^0,w,c
  1257   00752E  0A00               	xorlw	0	; case 0
  1258   007530  B4D8               	btfsc	status,2,c
  1259   007532  EFF0  F03A         	goto	l2240
  1260   007536  EF88  F03A         	goto	l1920
  1261   00753A                     l2236:
  1262                           
  1263                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 6 sub-sw
      +                          itches
  1264                           ; Switch size 1, requested type "simple"
  1265                           ; Number of cases is 6, Range of values is 1 to 225
  1266                           ; switch strategies available:
  1267                           ; Name         Instructions Cycles
  1268                           ; simple_byte           19    10 (average)
  1269                           ;	Chosen strategy is simple_byte
  1270   00753A  5006               	movf	(??_UART_select_baud+1)^0,w,c
  1271   00753C  0A01               	xorlw	1	; case 1
  1272   00753E  B4D8               	btfsc	status,2,c
  1273   007540  EFB8  F03A         	goto	l2242
  1274   007544  0A05               	xorlw	5	; case 4
  1275   007546  B4D8               	btfsc	status,2,c
  1276   007548  EFBF  F03A         	goto	l2244
  1277   00754C  0A0D               	xorlw	13	; case 9
  1278   00754E  B4D8               	btfsc	status,2,c
  1279   007550  EFC6  F03A         	goto	l2246
  1280   007554  0A21               	xorlw	33	; case 40
  1281   007556  B4D8               	btfsc	status,2,c
  1282   007558  EFCD  F03A         	goto	l2248
  1283   00755C  0A63               	xorlw	99	; case 75
  1284   00755E  B4D8               	btfsc	status,2,c
  1285   007560  EFD4  F03A         	goto	l2250
  1286   007564  0AAA               	xorlw	170	; case 225
  1287   007566  B4D8               	btfsc	status,2,c
  1288   007568  EFDB  F03A         	goto	l2252
  1289   00756C  EF88  F03A         	goto	l1920
  1290   007570                     l2242:
  1291                           
  1292                           ; Switch size 1, requested type "simple"
  1293                           ; Number of cases is 1, Range of values is 44 to 44
  1294                           ; switch strategies available:
  1295                           ; Name         Instructions Cycles
  1296                           ; simple_byte            4     3 (average)
  1297                           ;	Chosen strategy is simple_byte
  1298   007570  5005               	movf	??_UART_select_baud^0,w,c
  1299   007572  0A2C               	xorlw	44	; case 44
  1300   007574  B4D8               	btfsc	status,2,c
  1301   007576  EF5E  F03A         	goto	l1906
  1302   00757A  EF88  F03A         	goto	l1920
  1303   00757E                     l2244:
  1304                           
  1305                           ; Switch size 1, requested type "simple"
  1306                           ; Number of cases is 1, Range of values is 176 to 176
  1307                           ; switch strategies available:
  1308                           ; Name         Instructions Cycles
  1309                           ; simple_byte            4     3 (average)
  1310                           ;	Chosen strategy is simple_byte
  1311   00757E  5005               	movf	??_UART_select_baud^0,w,c
  1312   007580  0AB0               	xorlw	176	; case 176
  1313   007582  B4D8               	btfsc	status,2,c
  1314   007584  EF64  F03A         	goto	l1908
  1315   007588  EF88  F03A         	goto	l1920
  1316   00758C                     l2246:
  1317                           
  1318                           ; Switch size 1, requested type "simple"
  1319                           ; Number of cases is 1, Range of values is 96 to 96
  1320                           ; switch strategies available:
  1321                           ; Name         Instructions Cycles
  1322                           ; simple_byte            4     3 (average)
  1323                           ;	Chosen strategy is simple_byte
  1324   00758C  5005               	movf	??_UART_select_baud^0,w,c
  1325   00758E  0A60               	xorlw	96	; case 96
  1326   007590  B4D8               	btfsc	status,2,c
  1327   007592  EF6A  F03A         	goto	l1910
  1328   007596  EF88  F03A         	goto	l1920
  1329   00759A                     l2248:
  1330                           
  1331                           ; Switch size 1, requested type "simple"
  1332                           ; Number of cases is 1, Range of values is 177 to 177
  1333                           ; switch strategies available:
  1334                           ; Name         Instructions Cycles
  1335                           ; simple_byte            4     3 (average)
  1336                           ;	Chosen strategy is simple_byte
  1337   00759A  5005               	movf	??_UART_select_baud^0,w,c
  1338   00759C  0AB1               	xorlw	177	; case 177
  1339   00759E  B4D8               	btfsc	status,2,c
  1340   0075A0  EF70  F03A         	goto	l1912
  1341   0075A4  EF88  F03A         	goto	l1920
  1342   0075A8                     l2250:
  1343                           
  1344                           ; Switch size 1, requested type "simple"
  1345                           ; Number of cases is 1, Range of values is 0 to 0
  1346                           ; switch strategies available:
  1347                           ; Name         Instructions Cycles
  1348                           ; simple_byte            4     3 (average)
  1349                           ;	Chosen strategy is simple_byte
  1350   0075A8  5005               	movf	??_UART_select_baud^0,w,c
  1351   0075AA  0A00               	xorlw	0	; case 0
  1352   0075AC  B4D8               	btfsc	status,2,c
  1353   0075AE  EF76  F03A         	goto	l1914
  1354   0075B2  EF88  F03A         	goto	l1920
  1355   0075B6                     l2252:
  1356                           
  1357                           ; Switch size 1, requested type "simple"
  1358                           ; Number of cases is 1, Range of values is 0 to 0
  1359                           ; switch strategies available:
  1360                           ; Name         Instructions Cycles
  1361                           ; simple_byte            4     3 (average)
  1362                           ;	Chosen strategy is simple_byte
  1363   0075B6  5005               	movf	??_UART_select_baud^0,w,c
  1364   0075B8  0A00               	xorlw	0	; case 0
  1365   0075BA  B4D8               	btfsc	status,2,c
  1366   0075BC  EF7C  F03A         	goto	l1916
  1367   0075C0  EF88  F03A         	goto	l1920
  1368   0075C4                     l2238:
  1369                           
  1370                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1371                           ; Switch size 1, requested type "simple"
  1372                           ; Number of cases is 1, Range of values is 194 to 194
  1373                           ; switch strategies available:
  1374                           ; Name         Instructions Cycles
  1375                           ; simple_byte            4     3 (average)
  1376                           ;	Chosen strategy is simple_byte
  1377   0075C4  5006               	movf	(??_UART_select_baud+1)^0,w,c
  1378   0075C6  0AC2               	xorlw	194	; case 194
  1379   0075C8  B4D8               	btfsc	status,2,c
  1380   0075CA  EFE9  F03A         	goto	l2254
  1381   0075CE  EF88  F03A         	goto	l1920
  1382   0075D2                     l2254:
  1383                           
  1384                           ; Switch size 1, requested type "simple"
  1385                           ; Number of cases is 1, Range of values is 0 to 0
  1386                           ; switch strategies available:
  1387                           ; Name         Instructions Cycles
  1388                           ; simple_byte            4     3 (average)
  1389                           ;	Chosen strategy is simple_byte
  1390   0075D2  5005               	movf	??_UART_select_baud^0,w,c
  1391   0075D4  0A00               	xorlw	0	; case 0
  1392   0075D6  B4D8               	btfsc	status,2,c
  1393   0075D8  EF82  F03A         	goto	l1918
  1394   0075DC  EF88  F03A         	goto	l1920
  1395   0075E0                     l2240:
  1396                           
  1397                           ; Switch size 1, requested type "simple"
  1398                           ; Number of cases is 2, Range of values is 0 to 1
  1399                           ; switch strategies available:
  1400                           ; Name         Instructions Cycles
  1401                           ; simple_byte            7     4 (average)
  1402                           ;	Chosen strategy is simple_byte
  1403   0075E0  5007               	movf	(??_UART_select_baud+2)^0,w,c
  1404   0075E2  0A00               	xorlw	0	; case 0
  1405   0075E4  B4D8               	btfsc	status,2,c
  1406   0075E6  EF9D  F03A         	goto	l2236
  1407   0075EA  0A01               	xorlw	1	; case 1
  1408   0075EC  B4D8               	btfsc	status,2,c
  1409   0075EE  EFE2  F03A         	goto	l2238
  1410   0075F2  EF88  F03A         	goto	l1920
  1411   0075F6                     l107:
  1412   0075F6  0012               	return		;funcret
  1413   0075F8                     __end_of_UART_select_baud:
  1414                           	callstack 0
  1415                           
  1416 ;; *************** function _UART_config_show *****************
  1417 ;; Defined at:
  1418 ;;		line 5 in file "librerias/UART.c"
  1419 ;; Parameters:    Size  Location     Type
  1420 ;;		None
  1421 ;; Auto vars:     Size  Location     Type
  1422 ;;		None
  1423 ;; Return value:  Size  Location     Type
  1424 ;;                  1    wreg      void 
  1425 ;; Registers used:
  1426 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1427 ;; Tracked objects:
  1428 ;;		On entry : 0/0
  1429 ;;		On exit  : 0/0
  1430 ;;		Unchanged: 0/0
  1431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1432 ;;      Params:         0       0       0       0       0       0       0       0       0
  1433 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1434 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1435 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1436 ;;Total ram usage:        0 bytes
  1437 ;; Hardware stack levels used: 1
  1438 ;; Hardware stack levels required when called: 6
  1439 ;; This function calls:
  1440 ;;		_printf
  1441 ;; This function is called by:
  1442 ;;		_UART_Init
  1443 ;; This function uses a non-reentrant model
  1444 ;;
  1445                           
  1446                           	psect	text3
  1447   0075F8                     __ptext3:
  1448                           	callstack 0
  1449   0075F8                     _UART_config_show:
  1450                           	callstack 23
  1451   0075F8                     
  1452                           ;librerias/UART.c: 6:     printf("Modo: ");
  1453   0075F8  0ED5               	movlw	low STR_1
  1454   0075FA  6E24               	movwf	printf@fmt^0,c
  1455   0075FC  0E7F               	movlw	high STR_1
  1456   0075FE  6E25               	movwf	(printf@fmt+1)^0,c
  1457   007600  EC85  F037         	call	_printf	;wreg free
  1458   007604                     
  1459                           ;librerias/UART.c: 7:     (SYNC1) ? printf("Sincrono "):printf("Asincrono ");
  1460   007604  A8AC               	btfss	4012,4,c	;volatile
  1461   007606  EF07  F03B         	goto	u1101
  1462   00760A  EF09  F03B         	goto	u1100
  1463   00760E                     u1101:
  1464   00760E  EF11  F03B         	goto	l1872
  1465   007612                     u1100:
  1466   007612  0E90               	movlw	low STR_2
  1467   007614  6E24               	movwf	printf@fmt^0,c
  1468   007616  0E7F               	movlw	high STR_2
  1469   007618  6E25               	movwf	(printf@fmt+1)^0,c
  1470   00761A  EC85  F037         	call	_printf	;wreg free
  1471   00761E  EF17  F03B         	goto	l1874
  1472   007622                     l1872:
  1473   007622  0E7B               	movlw	low STR_3
  1474   007624  6E24               	movwf	printf@fmt^0,c
  1475   007626  0E7F               	movlw	high STR_3
  1476   007628  6E25               	movwf	(printf@fmt+1)^0,c
  1477   00762A  EC85  F037         	call	_printf	;wreg free
  1478   00762E                     l1874:
  1479                           
  1480                           ;librerias/UART.c: 8:     (BRGH1) ? printf("alta velocidad \r\n"):printf("baja velocidad
      +                           \r\n");
  1481   00762E  A4AC               	btfss	4012,2,c	;volatile
  1482   007630  EF1C  F03B         	goto	u1111
  1483   007634  EF1E  F03B         	goto	u1110
  1484   007638                     u1111:
  1485   007638  EF26  F03B         	goto	l1878
  1486   00763C                     u1110:
  1487   00763C  0E9F               	movlw	low STR_4
  1488   00763E  6E24               	movwf	printf@fmt^0,c
  1489   007640  0E7E               	movlw	high STR_4
  1490   007642  6E25               	movwf	(printf@fmt+1)^0,c
  1491   007644  EC85  F037         	call	_printf	;wreg free
  1492   007648  EF2C  F03B         	goto	l74
  1493   00764C                     l1878:
  1494   00764C  0E8D               	movlw	low STR_5
  1495   00764E  6E24               	movwf	printf@fmt^0,c
  1496   007650  0E7E               	movlw	high STR_5
  1497   007652  6E25               	movwf	(printf@fmt+1)^0,c
  1498   007654  EC85  F037         	call	_printf	;wreg free
  1499   007658                     l74:
  1500                           
  1501                           ;librerias/UART.c: 9:     printf("Baudrate: ");
  1502   007658  0E65               	movlw	low STR_6
  1503   00765A  6E24               	movwf	printf@fmt^0,c
  1504   00765C  0E7F               	movlw	high STR_6
  1505   00765E  6E25               	movwf	(printf@fmt+1)^0,c
  1506   007660  EC85  F037         	call	_printf	;wreg free
  1507   007664                     
  1508                           ;librerias/UART.c: 10:     (BRG161) ? printf("16 bits "):printf("8 bits ");
  1509   007664  A6B8               	btfss	4024,3,c	;volatile
  1510   007666  EF37  F03B         	goto	u1121
  1511   00766A  EF39  F03B         	goto	u1120
  1512   00766E                     u1121:
  1513   00766E  EF41  F03B         	goto	l1884
  1514   007672                     u1120:
  1515   007672  0EB5               	movlw	low STR_7
  1516   007674  6E24               	movwf	printf@fmt^0,c
  1517   007676  0E7F               	movlw	high STR_7
  1518   007678  6E25               	movwf	(printf@fmt+1)^0,c
  1519   00767A  EC85  F037         	call	_printf	;wreg free
  1520   00767E  EF47  F03B         	goto	l78
  1521   007682                     l1884:
  1522   007682  0EC6               	movlw	low STR_8
  1523   007684  6E24               	movwf	printf@fmt^0,c
  1524   007686  0E7F               	movlw	high STR_8
  1525   007688  6E25               	movwf	(printf@fmt+1)^0,c
  1526   00768A  EC85  F037         	call	_printf	;wreg free
  1527   00768E                     l78:
  1528                           
  1529                           ;librerias/UART.c: 11:     printf("x baudios \r\n");
  1530   00768E  0E42               	movlw	low STR_9
  1531   007690  6E24               	movwf	printf@fmt^0,c
  1532   007692  0E7F               	movlw	high STR_9
  1533   007694  6E25               	movwf	(printf@fmt+1)^0,c
  1534   007696  EC85  F037         	call	_printf	;wreg free
  1535                           
  1536                           ;librerias/UART.c: 12:     printf("Puerto: ");
  1537   00769A  0EAC               	movlw	low STR_10
  1538   00769C  6E24               	movwf	printf@fmt^0,c
  1539   00769E  0E7F               	movlw	high STR_10
  1540   0076A0  6E25               	movwf	(printf@fmt+1)^0,c
  1541   0076A2  EC85  F037         	call	_printf	;wreg free
  1542   0076A6                     
  1543                           ;librerias/UART.c: 13:     (SPEN) ? printf("Habilitado \r\n"):printf("Deshabilitado \r\n
      +                          ");
  1544   0076A6  AEAB               	btfss	4011,7,c	;volatile
  1545   0076A8  EF58  F03B         	goto	u1131
  1546   0076AC  EF5A  F03B         	goto	u1130
  1547   0076B0                     u1131:
  1548   0076B0  EF62  F03B         	goto	l1890
  1549   0076B4                     u1130:
  1550   0076B4  0E34               	movlw	low STR_11
  1551   0076B6  6E24               	movwf	printf@fmt^0,c
  1552   0076B8  0E7F               	movlw	high STR_11
  1553   0076BA  6E25               	movwf	(printf@fmt+1)^0,c
  1554   0076BC  EC85  F037         	call	_printf	;wreg free
  1555   0076C0  EF68  F03B         	goto	l82
  1556   0076C4                     l1890:
  1557   0076C4  0ED3               	movlw	low STR_12
  1558   0076C6  6E24               	movwf	printf@fmt^0,c
  1559   0076C8  0E7E               	movlw	high STR_12
  1560   0076CA  6E25               	movwf	(printf@fmt+1)^0,c
  1561   0076CC  EC85  F037         	call	_printf	;wreg free
  1562   0076D0                     l82:
  1563                           
  1564                           ;librerias/UART.c: 14:     printf("Transor: ");
  1565   0076D0  0E86               	movlw	low STR_13
  1566   0076D2  6E24               	movwf	printf@fmt^0,c
  1567   0076D4  0E7F               	movlw	high STR_13
  1568   0076D6  6E25               	movwf	(printf@fmt+1)^0,c
  1569   0076D8  EC85  F037         	call	_printf	;wreg free
  1570   0076DC                     
  1571                           ;librerias/UART.c: 15:     (TXEN1) ? printf("Habilitado \r\n"):printf("Deshabilitado \r\
      +                          n");
  1572   0076DC  AAAC               	btfss	4012,5,c	;volatile
  1573   0076DE  EF73  F03B         	goto	u1141
  1574   0076E2  EF75  F03B         	goto	u1140
  1575   0076E6                     u1141:
  1576   0076E6  EF7D  F03B         	goto	l1896
  1577   0076EA                     u1140:
  1578   0076EA  0E34               	movlw	low STR_11
  1579   0076EC  6E24               	movwf	printf@fmt^0,c
  1580   0076EE  0E7F               	movlw	high STR_11
  1581   0076F0  6E25               	movwf	(printf@fmt+1)^0,c
  1582   0076F2  EC85  F037         	call	_printf	;wreg free
  1583   0076F6  EF83  F03B         	goto	l86
  1584   0076FA                     l1896:
  1585   0076FA  0ED3               	movlw	low STR_12
  1586   0076FC  6E24               	movwf	printf@fmt^0,c
  1587   0076FE  0E7E               	movlw	high STR_12
  1588   007700  6E25               	movwf	(printf@fmt+1)^0,c
  1589   007702  EC85  F037         	call	_printf	;wreg free
  1590   007706                     l86:
  1591                           
  1592                           ;librerias/UART.c: 16:     printf("Receptor: ");
  1593   007706  0E70               	movlw	low STR_16
  1594   007708  6E24               	movwf	printf@fmt^0,c
  1595   00770A  0E7F               	movlw	high STR_16
  1596   00770C  6E25               	movwf	(printf@fmt+1)^0,c
  1597   00770E  EC85  F037         	call	_printf	;wreg free
  1598   007712                     
  1599                           ;librerias/UART.c: 17:     (CREN) ? printf("Habilitado \r\n"):printf("Deshabilitado \r\n
      +                          ");
  1600   007712  A8AB               	btfss	4011,4,c	;volatile
  1601   007714  EF8E  F03B         	goto	u1151
  1602   007718  EF90  F03B         	goto	u1150
  1603   00771C                     u1151:
  1604   00771C  EF98  F03B         	goto	l1902
  1605   007720                     u1150:
  1606   007720  0E34               	movlw	low STR_11
  1607   007722  6E24               	movwf	printf@fmt^0,c
  1608   007724  0E7F               	movlw	high STR_11
  1609   007726  6E25               	movwf	(printf@fmt+1)^0,c
  1610   007728  EC85  F037         	call	_printf	;wreg free
  1611   00772C  EF9E  F03B         	goto	l91
  1612   007730                     l1902:
  1613   007730  0ED3               	movlw	low STR_12
  1614   007732  6E24               	movwf	printf@fmt^0,c
  1615   007734  0E7E               	movlw	high STR_12
  1616   007736  6E25               	movwf	(printf@fmt+1)^0,c
  1617   007738  EC85  F037         	call	_printf	;wreg free
  1618   00773C                     l91:
  1619   00773C  0012               	return		;funcret
  1620   00773E                     __end_of_UART_config_show:
  1621                           	callstack 0
  1622                           
  1623 ;; *************** function _SPI_write *****************
  1624 ;; Defined at:
  1625 ;;		line 57 in file "librerias/SPI.c"
  1626 ;; Parameters:    Size  Location     Type
  1627 ;;  dato            1    wreg     unsigned char 
  1628 ;; Auto vars:     Size  Location     Type
  1629 ;;  dato            1   45[COMRAM] unsigned char 
  1630 ;; Return value:  Size  Location     Type
  1631 ;;                  1    wreg      unsigned char 
  1632 ;; Registers used:
  1633 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1634 ;; Tracked objects:
  1635 ;;		On entry : 0/0
  1636 ;;		On exit  : 0/0
  1637 ;;		Unchanged: 0/0
  1638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1639 ;;      Params:         0       0       0       0       0       0       0       0       0
  1640 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1641 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1642 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1643 ;;Total ram usage:        1 bytes
  1644 ;; Hardware stack levels used: 1
  1645 ;; Hardware stack levels required when called: 7
  1646 ;; This function calls:
  1647 ;;		_SPI_ErrorHandler
  1648 ;; This function is called by:
  1649 ;;		_main
  1650 ;; This function uses a non-reentrant model
  1651 ;;
  1652                           
  1653                           	psect	text4
  1654   006F72                     __ptext4:
  1655                           	callstack 0
  1656   006F72                     _SPI_write:
  1657                           	callstack 23
  1658                           
  1659                           ;incstack = 0
  1660                           ;SPI_write@dato stored from wreg
  1661   006F72  6E2E               	movwf	SPI_write@dato^0,c
  1662   006F74                     
  1663                           ;librerias/SPI.c: 58:     SSPBUF = dato;
  1664   006F74  C02E  FFC9         	movff	SPI_write@dato,4041	;volatile
  1665   006F78                     
  1666                           ;librerias/SPI.c: 59:     if(WCOL) SPI_ErrorHandler(EC_SPI_COLLISION);
  1667   006F78  AEC6               	btfss	4038,7,c	;volatile
  1668   006F7A  EFC1  F037         	goto	u1521
  1669   006F7E  EFC3  F037         	goto	u1520
  1670   006F82                     u1521:
  1671   006F82  EFC6  F037         	goto	l253
  1672   006F86                     u1520:
  1673   006F86  0E02               	movlw	2
  1674   006F88  EC7C  F038         	call	_SPI_ErrorHandler
  1675   006F8C                     l253:
  1676   006F8C  A0C7               	btfss	4039,0,c	;volatile
  1677   006F8E  EFCB  F037         	goto	u1531
  1678   006F92  EFCD  F037         	goto	u1530
  1679   006F96                     u1531:
  1680   006F96  EFC6  F037         	goto	l253
  1681   006F9A                     u1530:
  1682   006F9A                     
  1683                           ;librerias/SPI.c: 61:     return SSPBUF;
  1684   006F9A  50C9               	movf	201,w,c	;volatile
  1685   006F9C  0012               	return		;funcret
  1686   006F9E                     __end_of_SPI_write:
  1687                           	callstack 0
  1688                           
  1689 ;; *************** function _SPI_master_init *****************
  1690 ;; Defined at:
  1691 ;;		line 28 in file "librerias/SPI.c"
  1692 ;; Parameters:    Size  Location     Type
  1693 ;;		None
  1694 ;; Auto vars:     Size  Location     Type
  1695 ;;		None
  1696 ;; Return value:  Size  Location     Type
  1697 ;;                  1    wreg      void 
  1698 ;; Registers used:
  1699 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1700 ;; Tracked objects:
  1701 ;;		On entry : 0/0
  1702 ;;		On exit  : 0/0
  1703 ;;		Unchanged: 0/0
  1704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1705 ;;      Params:         0       0       0       0       0       0       0       0       0
  1706 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1707 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1708 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1709 ;;Total ram usage:        0 bytes
  1710 ;; Hardware stack levels used: 1
  1711 ;; Hardware stack levels required when called: 8
  1712 ;; This function calls:
  1713 ;;		_SPI_BaudRateGen
  1714 ;;		_SPI_config_show
  1715 ;; This function is called by:
  1716 ;;		_main
  1717 ;;		_SPI_master_reset
  1718 ;; This function uses a non-reentrant model
  1719 ;;
  1720                           
  1721                           	psect	text5
  1722   006F9E                     __ptext5:
  1723                           	callstack 0
  1724   006F9E                     _SPI_master_init:
  1725                           	callstack 22
  1726   006F9E                     
  1727                           ;librerias/SPI.c: 29:     SPI_BaudRateGen(100000);
  1728   006F9E  0EA0               	movlw	160
  1729   006FA0  6E2E               	movwf	SPI_BaudRateGen@FClock^0,c
  1730   006FA2  0E86               	movlw	134
  1731   006FA4  6E2F               	movwf	(SPI_BaudRateGen@FClock+1)^0,c
  1732   006FA6  0E01               	movlw	1
  1733   006FA8  6E30               	movwf	(SPI_BaudRateGen@FClock+2)^0,c
  1734   006FAA  0E00               	movlw	0
  1735   006FAC  6E31               	movwf	(SPI_BaudRateGen@FClock+3)^0,c
  1736   006FAE  ECB9  F038         	call	_SPI_BaudRateGen	;wreg free
  1737   006FB2                     
  1738                           ;librerias/SPI.c: 30:     TRISAbits.RA5 = 1;
  1739   006FB2  8A92               	bsf	146,5,c	;volatile
  1740   006FB4                     
  1741                           ;librerias/SPI.c: 31:     TRISBbits.RB0 = 1;
  1742   006FB4  8093               	bsf	147,0,c	;volatile
  1743   006FB6                     
  1744                           ;librerias/SPI.c: 32:     TRISBbits.RB1 = 0;
  1745   006FB6  9293               	bcf	147,1,c	;volatile
  1746   006FB8                     
  1747                           ;librerias/SPI.c: 33:     TRISBbits.RB3 = 0;
  1748   006FB8  9693               	bcf	147,3,c	;volatile
  1749   006FBA                     
  1750                           ;librerias/SPI.c: 34:     SSPCON1bits.SSPM = 10;
  1751   006FBA  50C6               	movf	198,w,c	;volatile
  1752   006FBC  0BF0               	andlw	-16
  1753   006FBE  090A               	iorlw	10
  1754   006FC0  6EC6               	movwf	198,c	;volatile
  1755   006FC2  8AC6               	bsf	4038,5,c	;volatile
  1756   006FC4  98C6               	bcf	198,4,c	;volatile
  1757   006FC6  9CC7               	bcf	199,6,c	;volatile
  1758   006FC8  8EC7               	bsf	199,7,c	;volatile
  1759   006FCA                     
  1760                           ;librerias/SPI.c: 40:     SPI_config_show();
  1761   006FCA  EC9F  F03B         	call	_SPI_config_show	;wreg free
  1762   006FCE  0012               	return		;funcret
  1763   006FD0                     __end_of_SPI_master_init:
  1764                           	callstack 0
  1765                           
  1766 ;; *************** function _SPI_config_show *****************
  1767 ;; Defined at:
  1768 ;;		line 3 in file "librerias/SPI.c"
  1769 ;; Parameters:    Size  Location     Type
  1770 ;;		None
  1771 ;; Auto vars:     Size  Location     Type
  1772 ;;		None
  1773 ;; Return value:  Size  Location     Type
  1774 ;;                  1    wreg      void 
  1775 ;; Registers used:
  1776 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1777 ;; Tracked objects:
  1778 ;;		On entry : 0/0
  1779 ;;		On exit  : 0/0
  1780 ;;		Unchanged: 0/0
  1781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1782 ;;      Params:         0       0       0       0       0       0       0       0       0
  1783 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1784 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1785 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1786 ;;Total ram usage:        0 bytes
  1787 ;; Hardware stack levels used: 1
  1788 ;; Hardware stack levels required when called: 6
  1789 ;; This function calls:
  1790 ;;		_SPI_actual_frec
  1791 ;;		_printf
  1792 ;; This function is called by:
  1793 ;;		_SPI_master_init
  1794 ;; This function uses a non-reentrant model
  1795 ;;
  1796                           
  1797                           	psect	text6
  1798   00773E                     __ptext6:
  1799                           	callstack 0
  1800   00773E                     _SPI_config_show:
  1801                           	callstack 23
  1802   00773E                     
  1803                           ;librerias/SPI.c: 4:     printf("\r\nConfiguracion SPI:\r\n");
  1804   00773E  0E76               	movlw	low STR_19
  1805   007740  6E24               	movwf	printf@fmt^0,c
  1806   007742  0E7E               	movlw	high STR_19
  1807   007744  6E25               	movwf	(printf@fmt+1)^0,c
  1808   007746  EC85  F037         	call	_printf	;wreg free
  1809                           
  1810                           ;librerias/SPI.c: 6:     printf("Frecuencia SPI: ");
  1811   00774A  0EB1               	movlw	low STR_20
  1812   00774C  6E24               	movwf	printf@fmt^0,c
  1813   00774E  0E7E               	movlw	high STR_20
  1814   007750  6E25               	movwf	(printf@fmt+1)^0,c
  1815   007752  EC85  F037         	call	_printf	;wreg free
  1816                           
  1817                           ;librerias/SPI.c: 7:     printf("%""l" "d" "\r\n",SPI_actual_frec());
  1818   007756  0EDC               	movlw	low STR_21
  1819   007758  6E24               	movwf	printf@fmt^0,c
  1820   00775A  0E7F               	movlw	high STR_21
  1821   00775C  6E25               	movwf	(printf@fmt+1)^0,c
  1822   00775E  EC4B  F038         	call	_SPI_actual_frec	;wreg free
  1823   007762  C00F  F026         	movff	?_SPI_actual_frec,?_printf+2
  1824   007766  C010  F027         	movff	?_SPI_actual_frec+1,?_printf+3
  1825   00776A  C011  F028         	movff	?_SPI_actual_frec+2,?_printf+4
  1826   00776E  C012  F029         	movff	?_SPI_actual_frec+3,?_printf+5
  1827   007772  EC85  F037         	call	_printf	;wreg free
  1828                           
  1829                           ;librerias/SPI.c: 9:     printf("SDI: ");
  1830   007776  0EE8               	movlw	low STR_22
  1831   007778  6E24               	movwf	printf@fmt^0,c
  1832   00777A  0E7F               	movlw	high STR_22
  1833   00777C  6E25               	movwf	(printf@fmt+1)^0,c
  1834   00777E  EC85  F037         	call	_printf	;wreg free
  1835   007782                     
  1836                           ;librerias/SPI.c: 10:     (TRISBbits.RB0) ? printf("Input \r\t"):printf("Output\r\t");
  1837   007782  A093               	btfss	147,0,c	;volatile
  1838   007784  EFC6  F03B         	goto	u1161
  1839   007788  EFC8  F03B         	goto	u1160
  1840   00778C                     u1161:
  1841   00778C  EFD0  F03B         	goto	l1972
  1842   007790                     u1160:
  1843   007790  0E9A               	movlw	low STR_23
  1844   007792  6E24               	movwf	printf@fmt^0,c
  1845   007794  0E7F               	movlw	high STR_23
  1846   007796  6E25               	movwf	(printf@fmt+1)^0,c
  1847   007798  EC85  F037         	call	_printf	;wreg free
  1848   00779C  EFD6  F03B         	goto	l200
  1849   0077A0                     l1972:
  1850   0077A0  0EA3               	movlw	low STR_24
  1851   0077A2  6E24               	movwf	printf@fmt^0,c
  1852   0077A4  0E7F               	movlw	high STR_24
  1853   0077A6  6E25               	movwf	(printf@fmt+1)^0,c
  1854   0077A8  EC85  F037         	call	_printf	;wreg free
  1855   0077AC                     l200:
  1856                           
  1857                           ;librerias/SPI.c: 11:     printf("SDO: ");
  1858   0077AC  0EF4               	movlw	low STR_25
  1859   0077AE  6E24               	movwf	printf@fmt^0,c
  1860   0077B0  0E7F               	movlw	high STR_25
  1861   0077B2  6E25               	movwf	(printf@fmt+1)^0,c
  1862   0077B4  EC85  F037         	call	_printf	;wreg free
  1863   0077B8                     
  1864                           ;librerias/SPI.c: 12:     (TRISBbits.RB3) ? printf("Input \r\t"):printf("Output\r\t");
  1865   0077B8  A693               	btfss	147,3,c	;volatile
  1866   0077BA  EFE1  F03B         	goto	u1171
  1867   0077BE  EFE3  F03B         	goto	u1170
  1868   0077C2                     u1171:
  1869   0077C2  EFEB  F03B         	goto	l1978
  1870   0077C6                     u1170:
  1871   0077C6  0E9A               	movlw	low STR_23
  1872   0077C8  6E24               	movwf	printf@fmt^0,c
  1873   0077CA  0E7F               	movlw	high STR_23
  1874   0077CC  6E25               	movwf	(printf@fmt+1)^0,c
  1875   0077CE  EC85  F037         	call	_printf	;wreg free
  1876   0077D2  EFF1  F03B         	goto	l204
  1877   0077D6                     l1978:
  1878   0077D6  0EA3               	movlw	low STR_24
  1879   0077D8  6E24               	movwf	printf@fmt^0,c
  1880   0077DA  0E7F               	movlw	high STR_24
  1881   0077DC  6E25               	movwf	(printf@fmt+1)^0,c
  1882   0077DE  EC85  F037         	call	_printf	;wreg free
  1883   0077E2                     l204:
  1884                           
  1885                           ;librerias/SPI.c: 13:     printf("SCK: ");
  1886   0077E2  0EEE               	movlw	low STR_28
  1887   0077E4  6E24               	movwf	printf@fmt^0,c
  1888   0077E6  0E7F               	movlw	high STR_28
  1889   0077E8  6E25               	movwf	(printf@fmt+1)^0,c
  1890   0077EA  EC85  F037         	call	_printf	;wreg free
  1891   0077EE                     
  1892                           ;librerias/SPI.c: 14:     (TRISBbits.RB1) ? printf("Input \r\t"):printf("Output\r\t");
  1893   0077EE  A293               	btfss	147,1,c	;volatile
  1894   0077F0  EFFC  F03B         	goto	u1181
  1895   0077F4  EFFE  F03B         	goto	u1180
  1896   0077F8                     u1181:
  1897   0077F8  EF06  F03C         	goto	l1984
  1898   0077FC                     u1180:
  1899   0077FC  0E9A               	movlw	low STR_23
  1900   0077FE  6E24               	movwf	printf@fmt^0,c
  1901   007800  0E7F               	movlw	high STR_23
  1902   007802  6E25               	movwf	(printf@fmt+1)^0,c
  1903   007804  EC85  F037         	call	_printf	;wreg free
  1904   007808  EF0C  F03C         	goto	l208
  1905   00780C                     l1984:
  1906   00780C  0EA3               	movlw	low STR_24
  1907   00780E  6E24               	movwf	printf@fmt^0,c
  1908   007810  0E7F               	movlw	high STR_24
  1909   007812  6E25               	movwf	(printf@fmt+1)^0,c
  1910   007814  EC85  F037         	call	_printf	;wreg free
  1911   007818                     l208:
  1912                           
  1913                           ;librerias/SPI.c: 15:     printf("SS: ");
  1914   007818  0EFA               	movlw	low STR_31
  1915   00781A  6E24               	movwf	printf@fmt^0,c
  1916   00781C  0E7F               	movlw	high STR_31
  1917   00781E  6E25               	movwf	(printf@fmt+1)^0,c
  1918   007820  EC85  F037         	call	_printf	;wreg free
  1919   007824                     
  1920                           ;librerias/SPI.c: 16:     (TRISAbits.RA5) ? printf("Input \r\t"):printf("Output\r\t");
  1921   007824  AA92               	btfss	146,5,c	;volatile
  1922   007826  EF17  F03C         	goto	u1191
  1923   00782A  EF19  F03C         	goto	u1190
  1924   00782E                     u1191:
  1925   00782E  EF21  F03C         	goto	l1990
  1926   007832                     u1190:
  1927   007832  0E9A               	movlw	low STR_23
  1928   007834  6E24               	movwf	printf@fmt^0,c
  1929   007836  0E7F               	movlw	high STR_23
  1930   007838  6E25               	movwf	(printf@fmt+1)^0,c
  1931   00783A  EC85  F037         	call	_printf	;wreg free
  1932   00783E  EF27  F03C         	goto	l212
  1933   007842                     l1990:
  1934   007842  0EA3               	movlw	low STR_24
  1935   007844  6E24               	movwf	printf@fmt^0,c
  1936   007846  0E7F               	movlw	high STR_24
  1937   007848  6E25               	movwf	(printf@fmt+1)^0,c
  1938   00784A  EC85  F037         	call	_printf	;wreg free
  1939   00784E                     l212:
  1940                           
  1941                           ;librerias/SPI.c: 18:     printf("Puerto serial: ");
  1942   00784E  0E14               	movlw	low STR_34
  1943   007850  6E24               	movwf	printf@fmt^0,c
  1944   007852  0E7F               	movlw	high STR_34
  1945   007854  6E25               	movwf	(printf@fmt+1)^0,c
  1946   007856  EC85  F037         	call	_printf	;wreg free
  1947   00785A                     
  1948                           ;librerias/SPI.c: 19:     (SSPEN) ? printf("habilitado\r\n"):printf("deshabilitado\r\n")
      +                          ;
  1949   00785A  AAC6               	btfss	4038,5,c	;volatile
  1950   00785C  EF32  F03C         	goto	u1201
  1951   007860  EF34  F03C         	goto	u1200
  1952   007864                     u1201:
  1953   007864  EF3C  F03C         	goto	l1996
  1954   007868                     u1200:
  1955   007868  0E07               	movlw	low (STR_36+3)
  1956   00786A  6E24               	movwf	printf@fmt^0,c
  1957   00786C  0E7F               	movlw	high (STR_36+3)
  1958   00786E  6E25               	movwf	(printf@fmt+1)^0,c
  1959   007870  EC85  F037         	call	_printf	;wreg free
  1960   007874  EF42  F03C         	goto	l216
  1961   007878                     l1996:
  1962   007878  0E04               	movlw	low STR_36
  1963   00787A  6E24               	movwf	printf@fmt^0,c
  1964   00787C  0E7F               	movlw	high STR_36
  1965   00787E  6E25               	movwf	(printf@fmt+1)^0,c
  1966   007880  EC85  F037         	call	_printf	;wreg free
  1967   007884                     l216:
  1968                           
  1969                           ;librerias/SPI.c: 20:     printf("Polaridad: Idle ");
  1970   007884  0EC2               	movlw	low STR_37
  1971   007886  6E24               	movwf	printf@fmt^0,c
  1972   007888  0E7E               	movlw	high STR_37
  1973   00788A  6E25               	movwf	(printf@fmt+1)^0,c
  1974   00788C  EC85  F037         	call	_printf	;wreg free
  1975   007890                     
  1976                           ;librerias/SPI.c: 21:     (SSPCON1bits.CKP) ? printf("high\r\n"):printf("low\r\n");
  1977   007890  A8C6               	btfss	198,4,c	;volatile
  1978   007892  EF4D  F03C         	goto	u1211
  1979   007896  EF4F  F03C         	goto	u1210
  1980   00789A                     u1211:
  1981   00789A  EF57  F03C         	goto	l2002
  1982   00789E                     u1210:
  1983   00789E  0ECE               	movlw	low STR_38
  1984   0078A0  6E24               	movwf	printf@fmt^0,c
  1985   0078A2  0E7F               	movlw	high STR_38
  1986   0078A4  6E25               	movwf	(printf@fmt+1)^0,c
  1987   0078A6  EC85  F037         	call	_printf	;wreg free
  1988   0078AA  EF5D  F03C         	goto	l220
  1989   0078AE                     l2002:
  1990   0078AE  0EE2               	movlw	low STR_39
  1991   0078B0  6E24               	movwf	printf@fmt^0,c
  1992   0078B2  0E7F               	movlw	high STR_39
  1993   0078B4  6E25               	movwf	(printf@fmt+1)^0,c
  1994   0078B6  EC85  F037         	call	_printf	;wreg free
  1995   0078BA                     l220:
  1996                           
  1997                           ;librerias/SPI.c: 22:     printf("Transmision en ");
  1998   0078BA  0E24               	movlw	low STR_40
  1999   0078BC  6E24               	movwf	printf@fmt^0,c
  2000   0078BE  0E7F               	movlw	high STR_40
  2001   0078C0  6E25               	movwf	(printf@fmt+1)^0,c
  2002   0078C2  EC85  F037         	call	_printf	;wreg free
  2003   0078C6                     
  2004                           ;librerias/SPI.c: 23:     (SSPSTATbits.CKE) ? printf("active a idle\r\n"):printf("idle a
      +                           active\r\n");
  2005   0078C6  ACC7               	btfss	199,6,c	;volatile
  2006   0078C8  EF68  F03C         	goto	u1221
  2007   0078CC  EF6A  F03C         	goto	u1220
  2008   0078D0                     u1221:
  2009   0078D0  EF72  F03C         	goto	l2008
  2010   0078D4                     u1220:
  2011   0078D4  0EE4               	movlw	low STR_41
  2012   0078D6  6E24               	movwf	printf@fmt^0,c
  2013   0078D8  0E7E               	movlw	high STR_41
  2014   0078DA  6E25               	movwf	(printf@fmt+1)^0,c
  2015   0078DC  EC85  F037         	call	_printf	;wreg free
  2016   0078E0  EF78  F03C         	goto	l224
  2017   0078E4                     l2008:
  2018   0078E4  0EF4               	movlw	low STR_42
  2019   0078E6  6E24               	movwf	printf@fmt^0,c
  2020   0078E8  0E7E               	movlw	high STR_42
  2021   0078EA  6E25               	movwf	(printf@fmt+1)^0,c
  2022   0078EC  EC85  F037         	call	_printf	;wreg free
  2023   0078F0                     l224:
  2024                           
  2025                           ;librerias/SPI.c: 24:     printf("Muestra de dato entrante: ");
  2026   0078F0  0EF7               	movlw	low STR_43
  2027   0078F2  6E24               	movwf	printf@fmt^0,c
  2028   0078F4  0E7D               	movlw	high STR_43
  2029   0078F6  6E25               	movwf	(printf@fmt+1)^0,c
  2030   0078F8  EC85  F037         	call	_printf	;wreg free
  2031   0078FC                     
  2032                           ;librerias/SPI.c: 25:     (SSPSTATbits.SMP) ? printf("al final\r\n"):printf("en medio\r\
      +                          n");
  2033   0078FC  AEC7               	btfss	199,7,c	;volatile
  2034   0078FE  EF83  F03C         	goto	u1231
  2035   007902  EF85  F03C         	goto	u1230
  2036   007906                     u1231:
  2037   007906  EF8D  F03C         	goto	l2014
  2038   00790A                     u1230:
  2039   00790A  0E4F               	movlw	low STR_44
  2040   00790C  6E24               	movwf	printf@fmt^0,c
  2041   00790E  0E7F               	movlw	high STR_44
  2042   007910  6E25               	movwf	(printf@fmt+1)^0,c
  2043   007912  EC85  F037         	call	_printf	;wreg free
  2044   007916  EF93  F03C         	goto	l229
  2045   00791A                     l2014:
  2046   00791A  0E5A               	movlw	low STR_45
  2047   00791C  6E24               	movwf	printf@fmt^0,c
  2048   00791E  0E7F               	movlw	high STR_45
  2049   007920  6E25               	movwf	(printf@fmt+1)^0,c
  2050   007922  EC85  F037         	call	_printf	;wreg free
  2051   007926                     l229:
  2052   007926  0012               	return		;funcret
  2053   007928                     __end_of_SPI_config_show:
  2054                           	callstack 0
  2055                           
  2056 ;; *************** function _SPI_actual_frec *****************
  2057 ;; Defined at:
  2058 ;;		line 64 in file "librerias/SPI.c"
  2059 ;; Parameters:    Size  Location     Type
  2060 ;;		None
  2061 ;; Auto vars:     Size  Location     Type
  2062 ;;  baud            4   20[COMRAM] long 
  2063 ;; Return value:  Size  Location     Type
  2064 ;;                  4   14[COMRAM] long 
  2065 ;; Registers used:
  2066 ;;		wreg, status,2, status,0, cstack
  2067 ;; Tracked objects:
  2068 ;;		On entry : 0/0
  2069 ;;		On exit  : 0/0
  2070 ;;		Unchanged: 0/0
  2071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2072 ;;      Params:         4       0       0       0       0       0       0       0       0
  2073 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2074 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2075 ;;      Totals:        10       0       0       0       0       0       0       0       0
  2076 ;;Total ram usage:       10 bytes
  2077 ;; Hardware stack levels used: 1
  2078 ;; Hardware stack levels required when called: 1
  2079 ;; This function calls:
  2080 ;;		___aldiv
  2081 ;; This function is called by:
  2082 ;;		_SPI_config_show
  2083 ;; This function uses a non-reentrant model
  2084 ;;
  2085                           
  2086                           	psect	text7
  2087   007096                     __ptext7:
  2088                           	callstack 0
  2089   007096                     _SPI_actual_frec:
  2090                           	callstack 27
  2091   007096                     
  2092                           ;librerias/SPI.c: 65:     int32_t baud = 48000000/((SSP1ADD+1)*4);
  2093   007096  0E00               	movlw	0
  2094   007098  6E01               	movwf	___aldiv@dividend^0,c
  2095   00709A  0E6C               	movlw	108
  2096   00709C  6E02               	movwf	(___aldiv@dividend+1)^0,c
  2097   00709E  0EDC               	movlw	220
  2098   0070A0  6E03               	movwf	(___aldiv@dividend+2)^0,c
  2099   0070A2  0E02               	movlw	2
  2100   0070A4  6E04               	movwf	(___aldiv@dividend+3)^0,c
  2101   0070A6  50C8               	movf	200,w,c	;volatile
  2102   0070A8  6E13               	movwf	??_SPI_actual_frec^0,c
  2103   0070AA  6A14               	clrf	(??_SPI_actual_frec+1)^0,c
  2104   0070AC  90D8               	bcf	status,0,c
  2105   0070AE  3613               	rlcf	??_SPI_actual_frec^0,f,c
  2106   0070B0  3614               	rlcf	(??_SPI_actual_frec+1)^0,f,c
  2107   0070B2  90D8               	bcf	status,0,c
  2108   0070B4  3613               	rlcf	??_SPI_actual_frec^0,f,c
  2109   0070B6  3614               	rlcf	(??_SPI_actual_frec+1)^0,f,c
  2110   0070B8  0E04               	movlw	4
  2111   0070BA  2613               	addwf	??_SPI_actual_frec^0,f,c
  2112   0070BC  0E00               	movlw	0
  2113   0070BE  2214               	addwfc	(??_SPI_actual_frec+1)^0,f,c
  2114   0070C0  C013  F005         	movff	??_SPI_actual_frec,___aldiv@divisor
  2115   0070C4  C014  F006         	movff	??_SPI_actual_frec+1,___aldiv@divisor+1
  2116   0070C8  0E00               	movlw	0
  2117   0070CA  BE06               	btfsc	(___aldiv@divisor+1)^0,7,c
  2118   0070CC  0EFF               	movlw	-1
  2119   0070CE  6E07               	movwf	(___aldiv@divisor+2)^0,c
  2120   0070D0  6E08               	movwf	(___aldiv@divisor+3)^0,c
  2121   0070D2  ECD6  F039         	call	___aldiv	;wreg free
  2122   0070D6  C001  F015         	movff	?___aldiv,SPI_actual_frec@baud
  2123   0070DA  C002  F016         	movff	?___aldiv+1,SPI_actual_frec@baud+1
  2124   0070DE  C003  F017         	movff	?___aldiv+2,SPI_actual_frec@baud+2
  2125   0070E2  C004  F018         	movff	?___aldiv+3,SPI_actual_frec@baud+3
  2126   0070E6                     
  2127                           ;librerias/SPI.c: 66:     return baud;
  2128   0070E6  C015  F00F         	movff	SPI_actual_frec@baud,?_SPI_actual_frec
  2129   0070EA  C016  F010         	movff	SPI_actual_frec@baud+1,?_SPI_actual_frec+1
  2130   0070EE  C017  F011         	movff	SPI_actual_frec@baud+2,?_SPI_actual_frec+2
  2131   0070F2  C018  F012         	movff	SPI_actual_frec@baud+3,?_SPI_actual_frec+3
  2132   0070F6  0012               	return		;funcret
  2133   0070F8                     __end_of_SPI_actual_frec:
  2134                           	callstack 0
  2135                           
  2136 ;; *************** function _SPI_BaudRateGen *****************
  2137 ;; Defined at:
  2138 ;;		line 43 in file "librerias/SPI.c"
  2139 ;; Parameters:    Size  Location     Type
  2140 ;;  FClock          4   45[COMRAM] long 
  2141 ;; Auto vars:     Size  Location     Type
  2142 ;;  baudReg         4   53[COMRAM] unsigned long 
  2143 ;; Return value:  Size  Location     Type
  2144 ;;                  1    wreg      void 
  2145 ;; Registers used:
  2146 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2147 ;; Tracked objects:
  2148 ;;		On entry : 0/0
  2149 ;;		On exit  : 0/0
  2150 ;;		Unchanged: 0/0
  2151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2152 ;;      Params:         4       0       0       0       0       0       0       0       0
  2153 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2154 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2155 ;;      Totals:        12       0       0       0       0       0       0       0       0
  2156 ;;Total ram usage:       12 bytes
  2157 ;; Hardware stack levels used: 1
  2158 ;; Hardware stack levels required when called: 7
  2159 ;; This function calls:
  2160 ;;		_SPI_ErrorHandler
  2161 ;;		___aldiv
  2162 ;; This function is called by:
  2163 ;;		_SPI_master_init
  2164 ;; This function uses a non-reentrant model
  2165 ;;
  2166                           
  2167                           	psect	text8
  2168   007172                     __ptext8:
  2169                           	callstack 0
  2170   007172                     _SPI_BaudRateGen:
  2171                           	callstack 22
  2172   007172                     
  2173                           ;librerias/SPI.c: 44:     uint32_t baudReg = (48000000 / (FClock * 4)) - 1;
  2174   007172  0E00               	movlw	0
  2175   007174  6E01               	movwf	___aldiv@dividend^0,c
  2176   007176  0E6C               	movlw	108
  2177   007178  6E02               	movwf	(___aldiv@dividend+1)^0,c
  2178   00717A  0EDC               	movlw	220
  2179   00717C  6E03               	movwf	(___aldiv@dividend+2)^0,c
  2180   00717E  0E02               	movlw	2
  2181   007180  6E04               	movwf	(___aldiv@dividend+3)^0,c
  2182   007182  C02E  F032         	movff	SPI_BaudRateGen@FClock,??_SPI_BaudRateGen
  2183   007186  C02F  F033         	movff	SPI_BaudRateGen@FClock+1,??_SPI_BaudRateGen+1
  2184   00718A  C030  F034         	movff	SPI_BaudRateGen@FClock+2,??_SPI_BaudRateGen+2
  2185   00718E  C031  F035         	movff	SPI_BaudRateGen@FClock+3,??_SPI_BaudRateGen+3
  2186   007192  0E02               	movlw	2
  2187   007194                     u1245:
  2188   007194  90D8               	bcf	status,0,c
  2189   007196  3632               	rlcf	??_SPI_BaudRateGen^0,f,c
  2190   007198  3633               	rlcf	(??_SPI_BaudRateGen+1)^0,f,c
  2191   00719A  3634               	rlcf	(??_SPI_BaudRateGen+2)^0,f,c
  2192   00719C  3635               	rlcf	(??_SPI_BaudRateGen+3)^0,f,c
  2193   00719E  2EE8               	decfsz	wreg,f,c
  2194   0071A0  EFCA  F038         	goto	u1245
  2195   0071A4  C032  F005         	movff	??_SPI_BaudRateGen,___aldiv@divisor
  2196   0071A8  C033  F006         	movff	??_SPI_BaudRateGen+1,___aldiv@divisor+1
  2197   0071AC  C034  F007         	movff	??_SPI_BaudRateGen+2,___aldiv@divisor+2
  2198   0071B0  C035  F008         	movff	??_SPI_BaudRateGen+3,___aldiv@divisor+3
  2199   0071B4  ECD6  F039         	call	___aldiv	;wreg free
  2200   0071B8  0EFF               	movlw	255
  2201   0071BA  2401               	addwf	?___aldiv^0,w,c
  2202   0071BC  6E36               	movwf	SPI_BaudRateGen@baudReg^0,c
  2203   0071BE  0EFF               	movlw	255
  2204   0071C0  2002               	addwfc	(?___aldiv+1)^0,w,c
  2205   0071C2  6E37               	movwf	(SPI_BaudRateGen@baudReg+1)^0,c
  2206   0071C4  0EFF               	movlw	255
  2207   0071C6  2003               	addwfc	(?___aldiv+2)^0,w,c
  2208   0071C8  6E38               	movwf	(SPI_BaudRateGen@baudReg+2)^0,c
  2209   0071CA  0EFF               	movlw	255
  2210   0071CC  2004               	addwfc	(?___aldiv+3)^0,w,c
  2211   0071CE  6E39               	movwf	(SPI_BaudRateGen@baudReg+3)^0,c
  2212   0071D0                     
  2213                           ;librerias/SPI.c: 45:     if(baudReg > 0xFF){
  2214   0071D0  5039               	movf	(SPI_BaudRateGen@baudReg+3)^0,w,c
  2215   0071D2  1038               	iorwf	(SPI_BaudRateGen@baudReg+2)^0,w,c
  2216   0071D4  E108               	bnz	u1250
  2217   0071D6  0437               	decf	(SPI_BaudRateGen@baudReg+1)^0,w,c
  2218   0071D8  A0D8               	btfss	status,0,c
  2219   0071DA  EFF1  F038         	goto	u1251
  2220   0071DE  EFF3  F038         	goto	u1250
  2221   0071E2                     u1251:
  2222   0071E2  EFF8  F038         	goto	l243
  2223   0071E6                     u1250:
  2224   0071E6                     
  2225                           ;librerias/SPI.c: 46:         SPI_ErrorHandler(EC_SPI_BR_OVERRANGE);
  2226   0071E6  0E01               	movlw	1
  2227   0071E8  EC7C  F038         	call	_SPI_ErrorHandler
  2228   0071EC  EFFA  F038         	goto	l244
  2229   0071F0                     l243:
  2230                           
  2231                           ;librerias/SPI.c: 49:     SSP1ADD = baudReg;
  2232   0071F0  C036  FFC8         	movff	SPI_BaudRateGen@baudReg,4040	;volatile
  2233   0071F4                     l244:
  2234   0071F4  0012               	return		;funcret
  2235   0071F6                     __end_of_SPI_BaudRateGen:
  2236                           	callstack 0
  2237                           
  2238 ;; *************** function _SPI_ErrorHandler *****************
  2239 ;; Defined at:
  2240 ;;		line 24 in file "librerias/variables.c"
  2241 ;; Parameters:    Size  Location     Type
  2242 ;;  errorCode       1    wreg     enum E5225
  2243 ;; Auto vars:     Size  Location     Type
  2244 ;;  errorCode       1   44[COMRAM] enum E5225
  2245 ;; Return value:  Size  Location     Type
  2246 ;;                  1    wreg      void 
  2247 ;; Registers used:
  2248 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2249 ;; Tracked objects:
  2250 ;;		On entry : 0/0
  2251 ;;		On exit  : 0/0
  2252 ;;		Unchanged: 0/0
  2253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2254 ;;      Params:         0       0       0       0       0       0       0       0       0
  2255 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2256 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2257 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2258 ;;Total ram usage:        3 bytes
  2259 ;; Hardware stack levels used: 1
  2260 ;; Hardware stack levels required when called: 6
  2261 ;; This function calls:
  2262 ;;		_printf
  2263 ;; This function is called by:
  2264 ;;		_SPI_BaudRateGen
  2265 ;;		_SPI_write
  2266 ;; This function uses a non-reentrant model
  2267 ;;
  2268                           
  2269                           	psect	text9
  2270   0070F8                     __ptext9:
  2271                           	callstack 0
  2272   0070F8                     _SPI_ErrorHandler:
  2273                           	callstack 23
  2274                           
  2275                           ;incstack = 0
  2276                           ;SPI_ErrorHandler@errorCode stored from wreg
  2277   0070F8  6E2D               	movwf	SPI_ErrorHandler@errorCode^0,c
  2278   0070FA                     
  2279                           ;librerias/variables.c: 25:     if(errorCode != EC_SPI_OK) return;
  2280   0070FA  502D               	movf	SPI_ErrorHandler@errorCode^0,w,c
  2281   0070FC  B4D8               	btfsc	status,2,c
  2282   0070FE  EF83  F038         	goto	u1091
  2283   007102  EF85  F038         	goto	u1090
  2284   007106                     u1091:
  2285   007106  EF87  F038         	goto	l1852
  2286   00710A                     u1090:
  2287   00710A  EFB8  F038         	goto	l275
  2288   00710E                     l1852:
  2289                           
  2290                           ;librerias/variables.c: 26:     printf("Error: ");
  2291   00710E  0EBE               	movlw	low STR_46
  2292   007110  6E24               	movwf	printf@fmt^0,c
  2293   007112  0E7F               	movlw	high STR_46
  2294   007114  6E25               	movwf	(printf@fmt+1)^0,c
  2295   007116  EC85  F037         	call	_printf	;wreg free
  2296                           
  2297                           ;librerias/variables.c: 27:     switch(errorCode){
  2298   00711A  EF9F  F038         	goto	l1860
  2299   00711E                     l1854:
  2300                           
  2301                           ;librerias/variables.c: 32:             printf("ERROR_CODE_SPI_BR_OVERRANGE");
  2302   00711E  0EDB               	movlw	low STR_51
  2303   007120  6E24               	movwf	printf@fmt^0,c
  2304   007122  0E7D               	movlw	high STR_51
  2305   007124  6E25               	movwf	(printf@fmt+1)^0,c
  2306   007126  EC85  F037         	call	_printf	;wreg free
  2307                           
  2308                           ;librerias/variables.c: 33:         break;
  2309   00712A  EFB8  F038         	goto	l275
  2310   00712E                     l1856:
  2311                           
  2312                           ;librerias/variables.c: 35:             printf("ERROR_CODE_SPI_COLLISION");
  2313   00712E  0E2C               	movlw	low STR_52
  2314   007130  6E24               	movwf	printf@fmt^0,c
  2315   007132  0E7E               	movlw	high STR_52
  2316   007134  6E25               	movwf	(printf@fmt+1)^0,c
  2317   007136  EC85  F037         	call	_printf	;wreg free
  2318                           
  2319                           ;librerias/variables.c: 36:         break;
  2320   00713A  EFB8  F038         	goto	l275
  2321   00713E                     l1860:
  2322   00713E  502D               	movf	SPI_ErrorHandler@errorCode^0,w,c
  2323   007140  6E2B               	movwf	??_SPI_ErrorHandler^0,c
  2324   007142  6A2C               	clrf	(??_SPI_ErrorHandler+1)^0,c
  2325                           
  2326                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2327                           ; Switch size 1, requested type "simple"
  2328                           ; Number of cases is 1, Range of values is 0 to 0
  2329                           ; switch strategies available:
  2330                           ; Name         Instructions Cycles
  2331                           ; simple_byte            4     3 (average)
  2332                           ;	Chosen strategy is simple_byte
  2333   007144  502C               	movf	(??_SPI_ErrorHandler+1)^0,w,c
  2334   007146  0A00               	xorlw	0	; case 0
  2335   007148  B4D8               	btfsc	status,2,c
  2336   00714A  EFA9  F038         	goto	l2256
  2337   00714E  EFB8  F038         	goto	l275
  2338   007152                     l2256:
  2339                           
  2340                           ; Switch size 1, requested type "simple"
  2341                           ; Number of cases is 3, Range of values is 0 to 2
  2342                           ; switch strategies available:
  2343                           ; Name         Instructions Cycles
  2344                           ; simple_byte           10     6 (average)
  2345                           ;	Chosen strategy is simple_byte
  2346   007152  502B               	movf	??_SPI_ErrorHandler^0,w,c
  2347   007154  0A00               	xorlw	0	; case 0
  2348   007156  B4D8               	btfsc	status,2,c
  2349   007158  EFB8  F038         	goto	l275
  2350   00715C  0A01               	xorlw	1	; case 1
  2351   00715E  B4D8               	btfsc	status,2,c
  2352   007160  EF8F  F038         	goto	l1854
  2353   007164  0A03               	xorlw	3	; case 2
  2354   007166  B4D8               	btfsc	status,2,c
  2355   007168  EF97  F038         	goto	l1856
  2356   00716C  EFB8  F038         	goto	l275
  2357   007170                     l275:
  2358   007170  0012               	return		;funcret
  2359   007172                     __end_of_SPI_ErrorHandler:
  2360                           	callstack 0
  2361                           
  2362 ;; *************** function _printf *****************
  2363 ;; Defined at:
  2364 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\printf.c"
  2365 ;; Parameters:    Size  Location     Type
  2366 ;;  fmt             2   35[COMRAM] PTR const unsigned char 
  2367 ;;		 -> STR_52(25), STR_51(28), STR_50(8), STR_49(26), 
  2368 ;;		 -> STR_48(24), STR_47(25), STR_46(8), STR_45(11), 
  2369 ;;		 -> STR_44(11), STR_43(27), STR_42(16), STR_41(16), 
  2370 ;;		 -> STR_40(16), STR_39(6), STR_38(7), STR_37(17), 
  2371 ;;		 -> STR_36(16), STR_35(13), STR_34(16), STR_33(9), 
  2372 ;;		 -> STR_32(9), STR_31(5), STR_30(9), STR_29(9), 
  2373 ;;		 -> STR_28(6), STR_27(9), STR_26(9), STR_25(6), 
  2374 ;;		 -> STR_24(9), STR_23(9), STR_22(6), STR_21(6), 
  2375 ;;		 -> STR_20(17), STR_19(23), STR_18(17), STR_17(14), 
  2376 ;;		 -> STR_16(11), STR_15(17), STR_14(14), STR_13(10), 
  2377 ;;		 -> STR_12(17), STR_11(14), STR_10(9), STR_9(13), 
  2378 ;;		 -> STR_8(8), STR_7(9), STR_6(11), STR_5(18), 
  2379 ;;		 -> STR_4(18), STR_3(11), STR_2(10), STR_1(7), 
  2380 ;; Auto vars:     Size  Location     Type
  2381 ;;  ret             2    0        int 
  2382 ;;  ap              1   41[COMRAM] PTR void [1]
  2383 ;;		 -> ?_printf(2), 
  2384 ;; Return value:  Size  Location     Type
  2385 ;;                  2   35[COMRAM] int 
  2386 ;; Registers used:
  2387 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2388 ;; Tracked objects:
  2389 ;;		On entry : 0/0
  2390 ;;		On exit  : 0/0
  2391 ;;		Unchanged: 0/0
  2392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2393 ;;      Params:         6       0       0       0       0       0       0       0       0
  2394 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2395 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2396 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2397 ;;Total ram usage:        7 bytes
  2398 ;; Hardware stack levels used: 1
  2399 ;; Hardware stack levels required when called: 5
  2400 ;; This function calls:
  2401 ;;		_vfprintf
  2402 ;; This function is called by:
  2403 ;;		_UART_config_show
  2404 ;;		_SPI_config_show
  2405 ;;		_SPI_ErrorHandler
  2406 ;;		_UART_ErrorHandler
  2407 ;; This function uses a non-reentrant model
  2408 ;;
  2409                           
  2410                           	psect	text10
  2411   006F0A                     __ptext10:
  2412                           	callstack 0
  2413   006F0A                     _printf:
  2414                           	callstack 23
  2415   006F0A  0E26               	movlw	low (?_printf+2)
  2416   006F0C  6E2A               	movwf	printf@ap^0,c
  2417   006F0E  0E00               	movlw	0
  2418   006F10  6E1D               	movwf	vfprintf@fp^0,c
  2419   006F12  0E00               	movlw	0
  2420   006F14  6E1E               	movwf	(vfprintf@fp+1)^0,c
  2421   006F16  C024  F01F         	movff	printf@fmt,vfprintf@fmt
  2422   006F1A  C025  F020         	movff	printf@fmt+1,vfprintf@fmt+1
  2423   006F1E  0E2A               	movlw	low printf@ap
  2424   006F20  6E21               	movwf	vfprintf@ap^0,c
  2425   006F22  EC02  F038         	call	_vfprintf	;wreg free
  2426   006F26  0012               	return		;funcret
  2427   006F28                     __end_of_printf:
  2428                           	callstack 0
  2429                           
  2430 ;; *************** function _vfprintf *****************
  2431 ;; Defined at:
  2432 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  2433 ;; Parameters:    Size  Location     Type
  2434 ;;  fp              2   28[COMRAM] PTR struct _IO_FILE
  2435 ;;		 -> NULL(0), 
  2436 ;;  fmt             2   30[COMRAM] PTR const unsigned char 
  2437 ;;		 -> STR_52(25), STR_51(28), STR_50(8), STR_49(26), 
  2438 ;;		 -> STR_48(24), STR_47(25), STR_46(8), STR_45(11), 
  2439 ;;		 -> STR_44(11), STR_43(27), STR_42(16), STR_41(16), 
  2440 ;;		 -> STR_40(16), STR_39(6), STR_38(7), STR_37(17), 
  2441 ;;		 -> STR_36(16), STR_35(13), STR_34(16), STR_33(9), 
  2442 ;;		 -> STR_32(9), STR_31(5), STR_30(9), STR_29(9), 
  2443 ;;		 -> STR_28(6), STR_27(9), STR_26(9), STR_25(6), 
  2444 ;;		 -> STR_24(9), STR_23(9), STR_22(6), STR_21(6), 
  2445 ;;		 -> STR_20(17), STR_19(23), STR_18(17), STR_17(14), 
  2446 ;;		 -> STR_16(11), STR_15(17), STR_14(14), STR_13(10), 
  2447 ;;		 -> STR_12(17), STR_11(14), STR_10(9), STR_9(13), 
  2448 ;;		 -> STR_8(8), STR_7(9), STR_6(11), STR_5(18), 
  2449 ;;		 -> STR_4(18), STR_3(11), STR_2(10), STR_1(7), 
  2450 ;;  ap              1   32[COMRAM] PTR PTR void 
  2451 ;;		 -> printf@ap(1), 
  2452 ;; Auto vars:     Size  Location     Type
  2453 ;;  cfmt            2   33[COMRAM] PTR unsigned char 
  2454 ;;		 -> STR_52(25), STR_51(28), STR_50(8), STR_49(26), 
  2455 ;;		 -> STR_48(24), STR_47(25), STR_46(8), STR_45(11), 
  2456 ;;		 -> STR_44(11), STR_43(27), STR_42(16), STR_41(16), 
  2457 ;;		 -> STR_40(16), STR_39(6), STR_38(7), STR_37(17), 
  2458 ;;		 -> STR_36(16), STR_35(13), STR_34(16), STR_33(9), 
  2459 ;;		 -> STR_32(9), STR_31(5), STR_30(9), STR_29(9), 
  2460 ;;		 -> STR_28(6), STR_27(9), STR_26(9), STR_25(6), 
  2461 ;;		 -> STR_24(9), STR_23(9), STR_22(6), STR_21(6), 
  2462 ;;		 -> STR_20(17), STR_19(23), STR_18(17), STR_17(14), 
  2463 ;;		 -> STR_16(11), STR_15(17), STR_14(14), STR_13(10), 
  2464 ;;		 -> STR_12(17), STR_11(14), STR_10(9), STR_9(13), 
  2465 ;;		 -> STR_8(8), STR_7(9), STR_6(11), STR_5(18), 
  2466 ;;		 -> STR_4(18), STR_3(11), STR_2(10), STR_1(7), 
  2467 ;; Return value:  Size  Location     Type
  2468 ;;                  2   28[COMRAM] int 
  2469 ;; Registers used:
  2470 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2471 ;; Tracked objects:
  2472 ;;		On entry : 0/0
  2473 ;;		On exit  : 0/0
  2474 ;;		Unchanged: 0/0
  2475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2476 ;;      Params:         5       0       0       0       0       0       0       0       0
  2477 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2478 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2479 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2480 ;;Total ram usage:        7 bytes
  2481 ;; Hardware stack levels used: 1
  2482 ;; Hardware stack levels required when called: 4
  2483 ;; This function calls:
  2484 ;;		_vfpfcnvrt
  2485 ;; This function is called by:
  2486 ;;		_printf
  2487 ;; This function uses a non-reentrant model
  2488 ;;
  2489                           
  2490                           	psect	text11
  2491   007004                     __ptext11:
  2492                           	callstack 0
  2493   007004                     _vfprintf:
  2494                           	callstack 23
  2495   007004                     
  2496                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  2497   007004  C01F  F022         	movff	vfprintf@fmt,vfprintf@cfmt
  2498   007008  C020  F023         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2499                           
  2500                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2501   00700C  EF12  F038         	goto	l1830
  2502   007010                     l1828:
  2503                           
  2504                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2505   007010  C01D  F00F         	movff	vfprintf@fp,vfpfcnvrt@fp
  2506   007014  C01E  F010         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2507   007018  0E22               	movlw	low vfprintf@cfmt
  2508   00701A  6E11               	movwf	vfpfcnvrt@fmt^0,c
  2509   00701C  C021  F012         	movff	vfprintf@ap,vfpfcnvrt@ap
  2510   007020  EC9F  F03D         	call	_vfpfcnvrt	;wreg free
  2511   007024                     l1830:
  2512                           
  2513                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2514   007024  C022  FFF6         	movff	vfprintf@cfmt,tblptrl
  2515   007028  C023  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2516   00702C                     	if	0	;tblptru may be non-zero
  2517   00702C                     	endif
  2518   00702C                     	if	0	;tblptru may be non-zero
  2519   00702C                     	endif
  2520   00702C  0008               	tblrd		*
  2521   00702E  50F5               	movf	tablat,w,c
  2522   007030  0900               	iorlw	0
  2523   007032  A4D8               	btfss	status,2,c
  2524   007034  EF1E  F038         	goto	u1081
  2525   007038  EF20  F038         	goto	u1080
  2526   00703C                     u1081:
  2527   00703C  EF08  F038         	goto	l1828
  2528   007040                     u1080:
  2529   007040                     
  2530                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  2531   007040  0E00               	movlw	0
  2532   007042  6E1E               	movwf	(?_vfprintf+1)^0,c
  2533   007044  0E00               	movlw	0
  2534   007046  6E1D               	movwf	?_vfprintf^0,c
  2535   007048  0012               	return		;funcret
  2536   00704A                     __end_of_vfprintf:
  2537                           	callstack 0
  2538                           
  2539 ;; *************** function _vfpfcnvrt *****************
  2540 ;; Defined at:
  2541 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  2542 ;; Parameters:    Size  Location     Type
  2543 ;;  fp              2   14[COMRAM] PTR struct _IO_FILE
  2544 ;;		 -> NULL(0), 
  2545 ;;  fmt             1   16[COMRAM] PTR PTR unsigned char 
  2546 ;;		 -> vfprintf@cfmt(2), 
  2547 ;;  ap              1   17[COMRAM] PTR PTR void 
  2548 ;;		 -> printf@ap(1), 
  2549 ;; Auto vars:     Size  Location     Type
  2550 ;;  convarg         4   23[COMRAM] struct .
  2551 ;;  cp              2   21[COMRAM] PTR unsigned char 
  2552 ;;		 -> STR_52(25), STR_51(28), STR_50(8), STR_49(26), 
  2553 ;;		 -> STR_48(24), STR_47(25), STR_46(8), STR_45(11), 
  2554 ;;		 -> STR_44(11), STR_43(27), STR_42(16), STR_41(16), 
  2555 ;;		 -> STR_40(16), STR_39(6), STR_38(7), STR_37(17), 
  2556 ;;		 -> STR_36(16), STR_35(13), STR_34(16), STR_33(9), 
  2557 ;;		 -> STR_32(9), STR_31(5), STR_30(9), STR_29(9), 
  2558 ;;		 -> STR_28(6), STR_27(9), STR_26(9), STR_25(6), 
  2559 ;;		 -> STR_24(9), STR_23(9), STR_22(6), STR_21(6), 
  2560 ;;		 -> STR_20(17), STR_19(23), STR_18(17), STR_17(14), 
  2561 ;;		 -> STR_16(11), STR_15(17), STR_14(14), STR_13(10), 
  2562 ;;		 -> STR_12(17), STR_11(14), STR_10(9), STR_9(13), 
  2563 ;;		 -> STR_8(8), STR_7(9), STR_6(11), STR_5(18), 
  2564 ;;		 -> STR_4(18), STR_3(11), STR_2(10), STR_1(7), 
  2565 ;;  c               1   27[COMRAM] unsigned char 
  2566 ;;  done            1   20[COMRAM] _Bool 
  2567 ;; Return value:  Size  Location     Type
  2568 ;;                  1    wreg      void 
  2569 ;; Registers used:
  2570 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2571 ;; Tracked objects:
  2572 ;;		On entry : 0/0
  2573 ;;		On exit  : 0/0
  2574 ;;		Unchanged: 0/0
  2575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2576 ;;      Params:         4       0       0       0       0       0       0       0       0
  2577 ;;      Locals:         8       0       0       0       0       0       0       0       0
  2578 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2579 ;;      Totals:        14       0       0       0       0       0       0       0       0
  2580 ;;Total ram usage:       14 bytes
  2581 ;; Hardware stack levels used: 1
  2582 ;; Hardware stack levels required when called: 3
  2583 ;; This function calls:
  2584 ;;		___aldiv
  2585 ;;		___almod
  2586 ;;		_abs
  2587 ;;		_fputc
  2588 ;; This function is called by:
  2589 ;;		_vfprintf
  2590 ;; This function uses a non-reentrant model
  2591 ;;
  2592                           
  2593                           	psect	text12
  2594   007B3E                     __ptext12:
  2595                           	callstack 0
  2596   007B3E                     _vfpfcnvrt:
  2597                           	callstack 23
  2598   007B3E                     
  2599                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  2600   007B3E  5011               	movf	vfpfcnvrt@fmt^0,w,c
  2601   007B40  6ED9               	movwf	fsr2l,c
  2602   007B42  6ADA               	clrf	fsr2h,c
  2603   007B44  CFDE FFF6          	movff	postinc2,tblptrl
  2604   007B48  CFDD FFF7          	movff	postdec2,tblptrh
  2605   007B4C                     	if	0	;tblptru may be non-zero
  2606   007B4C                     	endif
  2607   007B4C                     	if	0	;tblptru may be non-zero
  2608   007B4C                     	endif
  2609   007B4C  0008               	tblrd		*
  2610   007B4E  50F5               	movf	tablat,w,c
  2611   007B50  0A25               	xorlw	37
  2612   007B52  A4D8               	btfss	status,2,c
  2613   007B54  EFAE  F03D         	goto	u981
  2614   007B58  EFB0  F03D         	goto	u980
  2615   007B5C                     u981:
  2616   007B5C  EFD9  F03E         	goto	l1820
  2617   007B60                     u980:
  2618   007B60                     
  2619                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  2620   007B60  5011               	movf	vfpfcnvrt@fmt^0,w,c
  2621   007B62  6ED9               	movwf	fsr2l,c
  2622   007B64  6ADA               	clrf	fsr2h,c
  2623   007B66  2ADE               	incf	postinc2,f,c
  2624   007B68  0E00               	movlw	0
  2625   007B6A  22DD               	addwfc	postdec2,f,c
  2626   007B6C                     
  2627                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  2628   007B6C  0E00               	movlw	0
  2629   007B6E  6E3D               	movwf	(_width+1)^0,c
  2630   007B70  0E00               	movlw	0
  2631   007B72  6E3C               	movwf	_width^0,c
  2632   007B74  C03C  F040         	movff	_width,_flags
  2633   007B78                     
  2634                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  2635   007B78  683E               	setf	_prec^0,c
  2636   007B7A  683F               	setf	(_prec+1)^0,c
  2637   007B7C                     
  2638                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  2639   007B7C  5011               	movf	vfpfcnvrt@fmt^0,w,c
  2640   007B7E  6ED9               	movwf	fsr2l,c
  2641   007B80  6ADA               	clrf	fsr2h,c
  2642   007B82  CFDE F016          	movff	postinc2,vfpfcnvrt@cp
  2643   007B86  CFDD F017          	movff	postdec2,vfpfcnvrt@cp+1
  2644   007B8A                     
  2645                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1293:   c = *cp;
  2646   007B8A  C016  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2647   007B8E  C017  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2648   007B92                     	if	0	;tblptru may be non-zero
  2649   007B92                     	endif
  2650   007B92                     	if	0	;tblptru may be non-zero
  2651   007B92                     	endif
  2652   007B92  0008               	tblrd		*
  2653   007B94  CFF5 F01C          	movff	tablat,vfpfcnvrt@c
  2654                           
  2655                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1294:   switch(c)
      +                           {
  2656   007B98  EFDA  F03D         	goto	l1776
  2657   007B9C                     l1768:
  2658                           
  2659                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1309:     cp++;
  2660   007B9C  4A16               	infsnz	vfpfcnvrt@cp^0,f,c
  2661   007B9E  2A17               	incf	(vfpfcnvrt@cp+1)^0,f,c
  2662                           
  2663                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1316:     break;
  2664   007BA0  EFE9  F03D         	goto	l1778
  2665   007BA4                     l1770:
  2666                           
  2667                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1350:     c = 'i'
      +                          ;
  2668   007BA4  0E69               	movlw	105
  2669   007BA6  6E1C               	movwf	vfpfcnvrt@c^0,c
  2670                           
  2671                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1351:     break;
  2672   007BA8  EFE9  F03D         	goto	l1778
  2673   007BAC                     l1772:
  2674                           
  2675                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1353:     c = 0;
  2676   007BAC  0E00               	movlw	0
  2677   007BAE  6E1C               	movwf	vfpfcnvrt@c^0,c
  2678                           
  2679                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1354:     break;
  2680   007BB0  EFE9  F03D         	goto	l1778
  2681   007BB4                     l1776:
  2682   007BB4  501C               	movf	vfpfcnvrt@c^0,w,c
  2683                           
  2684                           ; Switch size 1, requested type "simple"
  2685                           ; Number of cases is 3, Range of values is 100 to 108
  2686                           ; switch strategies available:
  2687                           ; Name         Instructions Cycles
  2688                           ; simple_byte           10     6 (average)
  2689                           ;	Chosen strategy is simple_byte
  2690   007BB6  0A64               	xorlw	100	; case 100
  2691   007BB8  B4D8               	btfsc	status,2,c
  2692   007BBA  EFD2  F03D         	goto	l1770
  2693   007BBE  0A0D               	xorlw	13	; case 105
  2694   007BC0  B4D8               	btfsc	status,2,c
  2695   007BC2  EFD2  F03D         	goto	l1770
  2696   007BC6  0A05               	xorlw	5	; case 108
  2697   007BC8  B4D8               	btfsc	status,2,c
  2698   007BCA  EFCE  F03D         	goto	l1768
  2699   007BCE  EFD6  F03D         	goto	l1772
  2700   007BD2                     l1778:
  2701                           
  2702                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  2703   007BD2  C016  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2704   007BD6  C017  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2705   007BDA                     	if	0	;tblptru may be non-zero
  2706   007BDA                     	endif
  2707   007BDA                     	if	0	;tblptru may be non-zero
  2708   007BDA                     	endif
  2709   007BDA  0008               	tblrd		*
  2710   007BDC  50F5               	movf	tablat,w,c
  2711   007BDE  0A64               	xorlw	100
  2712   007BE0  B4D8               	btfsc	status,2,c
  2713   007BE2  EFF5  F03D         	goto	u991
  2714   007BE6  EFF7  F03D         	goto	u990
  2715   007BEA                     u991:
  2716   007BEA  EF2C  F03E         	goto	l1788
  2717   007BEE                     u990:
  2718   007BEE  C016  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2719   007BF2  C017  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  2720   007BF6                     	if	0	;tblptru may be non-zero
  2721   007BF6                     	endif
  2722   007BF6                     	if	0	;tblptru may be non-zero
  2723   007BF6                     	endif
  2724   007BF6  0008               	tblrd		*
  2725   007BF8  50F5               	movf	tablat,w,c
  2726   007BFA  0A69               	xorlw	105
  2727   007BFC  A4D8               	btfss	status,2,c
  2728   007BFE  EF03  F03E         	goto	u1001
  2729   007C02  EF05  F03E         	goto	u1000
  2730   007C06                     u1001:
  2731   007C06  EFD1  F03E         	goto	l1816
  2732   007C0A                     u1000:
  2733   007C0A  EF2C  F03E         	goto	l1788
  2734   007C0E                     l1782:
  2735                           
  2736                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1365:      convar
      +                          g.sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  2737   007C0E  5012               	movf	vfpfcnvrt@ap^0,w,c
  2738   007C10  6ED9               	movwf	fsr2l,c
  2739   007C12  6ADA               	clrf	fsr2h,c
  2740   007C14  50DF               	movf	indf2,w,c
  2741   007C16  2ADF               	incf	indf2,f,c
  2742   007C18  2ADF               	incf	indf2,f,c
  2743   007C1A  6ED9               	movwf	fsr2l,c
  2744   007C1C  6ADA               	clrf	fsr2h,c
  2745   007C1E  CFDE F018          	movff	postinc2,vfpfcnvrt@convarg
  2746   007C22  CFDD F019          	movff	postdec2,vfpfcnvrt@convarg+1
  2747   007C26  0E00               	movlw	0
  2748   007C28  BE19               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  2749   007C2A  0EFF               	movlw	-1
  2750   007C2C  6E1A               	movwf	(vfpfcnvrt@convarg+2)^0,c
  2751   007C2E  6E1B               	movwf	(vfpfcnvrt@convarg+3)^0,c
  2752                           
  2753                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1366:      break;
  2754   007C30  EF37  F03E         	goto	l1790
  2755   007C34                     l1784:
  2756                           
  2757                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1379:      convar
      +                          g.sint = (vfpf_sint_t)(*(long *)__va_arg(*(long **)ap, (long)0));
  2758   007C34  5012               	movf	vfpfcnvrt@ap^0,w,c
  2759   007C36  6ED9               	movwf	fsr2l,c
  2760   007C38  6ADA               	clrf	fsr2h,c
  2761   007C3A  0E04               	movlw	4
  2762   007C3C  26DF               	addwf	indf2,f,c
  2763   007C3E  5CDF               	subwf	indf2,w,c
  2764   007C40  6ED9               	movwf	fsr2l,c
  2765   007C42  6ADA               	clrf	fsr2h,c
  2766   007C44  CFDE F018          	movff	postinc2,vfpfcnvrt@convarg
  2767   007C48  CFDE F019          	movff	postinc2,vfpfcnvrt@convarg+1
  2768   007C4C  CFDE F01A          	movff	postinc2,vfpfcnvrt@convarg+2
  2769   007C50  CFDE F01B          	movff	postinc2,vfpfcnvrt@convarg+3
  2770                           
  2771                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1380:      break;
  2772   007C54  EF37  F03E         	goto	l1790
  2773   007C58                     l1788:
  2774   007C58  501C               	movf	vfpfcnvrt@c^0,w,c
  2775                           
  2776                           ; Switch size 1, requested type "simple"
  2777                           ; Number of cases is 2, Range of values is 105 to 108
  2778                           ; switch strategies available:
  2779                           ; Name         Instructions Cycles
  2780                           ; simple_byte            7     4 (average)
  2781                           ;	Chosen strategy is simple_byte
  2782   007C5A  0A69               	xorlw	105	; case 105
  2783   007C5C  B4D8               	btfsc	status,2,c
  2784   007C5E  EF07  F03E         	goto	l1782
  2785   007C62  0A05               	xorlw	5	; case 108
  2786   007C64  B4D8               	btfsc	status,2,c
  2787   007C66  EF1A  F03E         	goto	l1784
  2788   007C6A  EF37  F03E         	goto	l1790
  2789   007C6E                     l1790:
  2790                           
  2791                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  2792   007C6E  0E01               	movlw	1
  2793   007C70  2416               	addwf	vfpfcnvrt@cp^0,w,c
  2794   007C72  6E13               	movwf	??_vfpfcnvrt^0,c
  2795   007C74  0E00               	movlw	0
  2796   007C76  2017               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  2797   007C78  6E14               	movwf	(??_vfpfcnvrt+1)^0,c
  2798   007C7A  5011               	movf	vfpfcnvrt@fmt^0,w,c
  2799   007C7C  6ED9               	movwf	fsr2l,c
  2800   007C7E  6ADA               	clrf	fsr2h,c
  2801   007C80  C013  FFDE         	movff	??_vfpfcnvrt,postinc2
  2802   007C84  C014  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  2803   007C88                     
  2804                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  2805   007C88  0E20               	movlw	32
  2806   007C8A  6E1C               	movwf	vfpfcnvrt@c^0,c
  2807   007C8C                     
  2808                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  2809   007C8C  BE1B               	btfsc	(vfpfcnvrt@convarg+3)^0,7,c
  2810   007C8E  EF4B  F03E         	goto	u1011
  2811   007C92  EF4E  F03E         	goto	u1010
  2812   007C96                     u1011:
  2813   007C96  0E01               	movlw	1
  2814   007C98  EF4F  F03E         	goto	u1020
  2815   007C9C                     u1010:
  2816   007C9C  0E00               	movlw	0
  2817   007C9E                     u1020:
  2818   007C9E  6E15               	movwf	vfpfcnvrt@done^0,c
  2819   007CA0                     l1796:
  2820                           
  2821                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  2822   007CA0  061C               	decf	vfpfcnvrt@c^0,f,c
  2823   007CA2  501C               	movf	vfpfcnvrt@c^0,w,c
  2824   007CA4  0F60               	addlw	low _dbuf
  2825   007CA6  6ED9               	movwf	fsr2l,c
  2826   007CA8  6ADA               	clrf	fsr2h,c
  2827   007CAA  C018  F001         	movff	vfpfcnvrt@convarg,___almod@dividend
  2828   007CAE  C019  F002         	movff	vfpfcnvrt@convarg+1,___almod@dividend+1
  2829   007CB2  C01A  F003         	movff	vfpfcnvrt@convarg+2,___almod@dividend+2
  2830   007CB6  C01B  F004         	movff	vfpfcnvrt@convarg+3,___almod@dividend+3
  2831   007CBA  0E0A               	movlw	10
  2832   007CBC  6E05               	movwf	___almod@divisor^0,c
  2833   007CBE  0E00               	movlw	0
  2834   007CC0  6E06               	movwf	(___almod@divisor+1)^0,c
  2835   007CC2  0E00               	movlw	0
  2836   007CC4  6E07               	movwf	(___almod@divisor+2)^0,c
  2837   007CC6  0E00               	movlw	0
  2838   007CC8  6E08               	movwf	(___almod@divisor+3)^0,c
  2839   007CCA  EC60  F039         	call	___almod	;wreg free
  2840   007CCE  C001  F00B         	movff	?___almod,abs@a
  2841   007CD2  C002  F00C         	movff	?___almod+1,abs@a+1
  2842   007CD6  ECE8  F037         	call	_abs	;wreg free
  2843   007CDA  500B               	movf	?_abs^0,w,c
  2844   007CDC  0F30               	addlw	48
  2845   007CDE  6EDF               	movwf	indf2,c
  2846   007CE0                     
  2847                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  2848   007CE0  C018  F001         	movff	vfpfcnvrt@convarg,___aldiv@dividend
  2849   007CE4  C019  F002         	movff	vfpfcnvrt@convarg+1,___aldiv@dividend+1
  2850   007CE8  C01A  F003         	movff	vfpfcnvrt@convarg+2,___aldiv@dividend+2
  2851   007CEC  C01B  F004         	movff	vfpfcnvrt@convarg+3,___aldiv@dividend+3
  2852   007CF0  0E0A               	movlw	10
  2853   007CF2  6E05               	movwf	___aldiv@divisor^0,c
  2854   007CF4  0E00               	movlw	0
  2855   007CF6  6E06               	movwf	(___aldiv@divisor+1)^0,c
  2856   007CF8  0E00               	movlw	0
  2857   007CFA  6E07               	movwf	(___aldiv@divisor+2)^0,c
  2858   007CFC  0E00               	movlw	0
  2859   007CFE  6E08               	movwf	(___aldiv@divisor+3)^0,c
  2860   007D00  ECD6  F039         	call	___aldiv	;wreg free
  2861   007D04  C001  F018         	movff	?___aldiv,vfpfcnvrt@convarg
  2862   007D08  C002  F019         	movff	?___aldiv+1,vfpfcnvrt@convarg+1
  2863   007D0C  C003  F01A         	movff	?___aldiv+2,vfpfcnvrt@convarg+2
  2864   007D10  C004  F01B         	movff	?___aldiv+3,vfpfcnvrt@convarg+3
  2865   007D14                     
  2866                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  2867   007D14  5018               	movf	vfpfcnvrt@convarg^0,w,c
  2868   007D16  1019               	iorwf	(vfpfcnvrt@convarg+1)^0,w,c
  2869   007D18  101A               	iorwf	(vfpfcnvrt@convarg+2)^0,w,c
  2870   007D1A  101B               	iorwf	(vfpfcnvrt@convarg+3)^0,w,c
  2871   007D1C  B4D8               	btfsc	status,2,c
  2872   007D1E  EF93  F03E         	goto	u1031
  2873   007D22  EF95  F03E         	goto	u1030
  2874   007D26                     u1031:
  2875   007D26  EF9D  F03E         	goto	l1804
  2876   007D2A                     u1030:
  2877   007D2A  501C               	movf	vfpfcnvrt@c^0,w,c
  2878   007D2C  A4D8               	btfss	status,2,c
  2879   007D2E  EF9B  F03E         	goto	u1041
  2880   007D32  EF9D  F03E         	goto	u1040
  2881   007D36                     u1041:
  2882   007D36  EF50  F03E         	goto	l1796
  2883   007D3A                     u1040:
  2884   007D3A                     l1804:
  2885                           
  2886                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  2887   007D3A  501C               	movf	vfpfcnvrt@c^0,w,c
  2888   007D3C  B4D8               	btfsc	status,2,c
  2889   007D3E  EFA3  F03E         	goto	u1051
  2890   007D42  EFA5  F03E         	goto	u1050
  2891   007D46                     u1051:
  2892   007D46  EFC6  F03E         	goto	l1814
  2893   007D4A                     u1050:
  2894   007D4A  5015               	movf	vfpfcnvrt@done^0,w,c
  2895   007D4C  B4D8               	btfsc	status,2,c
  2896   007D4E  EFAB  F03E         	goto	u1061
  2897   007D52  EFAD  F03E         	goto	u1060
  2898   007D56                     u1061:
  2899   007D56  EFC6  F03E         	goto	l1814
  2900   007D5A                     u1060:
  2901   007D5A                     
  2902                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  2903   007D5A  061C               	decf	vfpfcnvrt@c^0,f,c
  2904   007D5C  501C               	movf	vfpfcnvrt@c^0,w,c
  2905   007D5E  0F60               	addlw	low _dbuf
  2906   007D60  6ED9               	movwf	fsr2l,c
  2907   007D62  6ADA               	clrf	fsr2h,c
  2908   007D64  0E2D               	movlw	45
  2909   007D66  6EDF               	movwf	indf2,c
  2910   007D68  EFC6  F03E         	goto	l1814
  2911   007D6C                     l1810:
  2912                           
  2913                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  2914   007D6C  501C               	movf	vfpfcnvrt@c^0,w,c
  2915   007D6E  0F60               	addlw	low _dbuf
  2916   007D70  6ED9               	movwf	fsr2l,c
  2917   007D72  6ADA               	clrf	fsr2h,c
  2918   007D74  50DF               	movf	indf2,w,c
  2919   007D76  6E13               	movwf	??_vfpfcnvrt^0,c
  2920   007D78  5013               	movf	??_vfpfcnvrt^0,w,c
  2921   007D7A  6E03               	movwf	fputc@c^0,c
  2922   007D7C  6A04               	clrf	(fputc@c+1)^0,c
  2923   007D7E  C00F  F005         	movff	vfpfcnvrt@fp,fputc@fp
  2924   007D82  C010  F006         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2925   007D86  ECFB  F038         	call	_fputc	;wreg free
  2926   007D8A  2A1C               	incf	vfpfcnvrt@c^0,f,c
  2927   007D8C                     l1814:
  2928                           
  2929                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  2930   007D8C  0E20               	movlw	32
  2931   007D8E  181C               	xorwf	vfpfcnvrt@c^0,w,c
  2932   007D90  A4D8               	btfss	status,2,c
  2933   007D92  EFCD  F03E         	goto	u1071
  2934   007D96  EFCF  F03E         	goto	u1070
  2935   007D9A                     u1071:
  2936   007D9A  EFB6  F03E         	goto	l1810
  2937   007D9E                     u1070:
  2938   007D9E  EFEC  F03E         	goto	l1009
  2939   007DA2                     l1816:
  2940                           
  2941                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  2942   007DA2  5011               	movf	vfpfcnvrt@fmt^0,w,c
  2943   007DA4  6ED9               	movwf	fsr2l,c
  2944   007DA6  6ADA               	clrf	fsr2h,c
  2945   007DA8  2ADE               	incf	postinc2,f,c
  2946   007DAA  0E00               	movlw	0
  2947   007DAC  22DD               	addwfc	postdec2,f,c
  2948   007DAE  EFEC  F03E         	goto	l1009
  2949   007DB2                     l1820:
  2950                           
  2951                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  2952   007DB2  5011               	movf	vfpfcnvrt@fmt^0,w,c
  2953   007DB4  6ED9               	movwf	fsr2l,c
  2954   007DB6  6ADA               	clrf	fsr2h,c
  2955   007DB8  CFDE FFF6          	movff	postinc2,tblptrl
  2956   007DBC  CFDD FFF7          	movff	postdec2,tblptrh
  2957   007DC0                     	if	0	;tblptru may be non-zero
  2958   007DC0                     	endif
  2959   007DC0                     	if	0	;tblptru may be non-zero
  2960   007DC0                     	endif
  2961   007DC0  0008               	tblrd		*
  2962   007DC2  50F5               	movf	tablat,w,c
  2963   007DC4  6E03               	movwf	fputc@c^0,c
  2964   007DC6  6A04               	clrf	(fputc@c+1)^0,c
  2965   007DC8  C00F  F005         	movff	vfpfcnvrt@fp,fputc@fp
  2966   007DCC  C010  F006         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2967   007DD0  ECFB  F038         	call	_fputc	;wreg free
  2968   007DD4  EFD1  F03E         	goto	l1816
  2969   007DD8                     l1009:
  2970   007DD8  0012               	return		;funcret
  2971   007DDA                     __end_of_vfpfcnvrt:
  2972                           	callstack 0
  2973                           
  2974 ;; *************** function _fputc *****************
  2975 ;; Defined at:
  2976 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_fputc.c"
  2977 ;; Parameters:    Size  Location     Type
  2978 ;;  c               2    2[COMRAM] int 
  2979 ;;  fp              2    4[COMRAM] PTR struct _IO_FILE
  2980 ;;		 -> NULL(0), 
  2981 ;; Auto vars:     Size  Location     Type
  2982 ;;		None
  2983 ;; Return value:  Size  Location     Type
  2984 ;;                  2    2[COMRAM] int 
  2985 ;; Registers used:
  2986 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2987 ;; Tracked objects:
  2988 ;;		On entry : 0/0
  2989 ;;		On exit  : 0/0
  2990 ;;		Unchanged: 0/0
  2991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2992 ;;      Params:         4       0       0       0       0       0       0       0       0
  2993 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2994 ;;      Temps:          5       0       0       0       0       0       0       0       0
  2995 ;;      Totals:         9       0       0       0       0       0       0       0       0
  2996 ;;Total ram usage:        9 bytes
  2997 ;; Hardware stack levels used: 1
  2998 ;; Hardware stack levels required when called: 2
  2999 ;; This function calls:
  3000 ;;		_putch
  3001 ;; This function is called by:
  3002 ;;		_vfpfcnvrt
  3003 ;; This function uses a non-reentrant model
  3004 ;;
  3005                           
  3006                           	psect	text13
  3007   0071F6                     __ptext13:
  3008                           	callstack 0
  3009   0071F6                     _fputc:
  3010                           	callstack 23
  3011   0071F6  5005               	movf	fputc@fp^0,w,c
  3012   0071F8  1006               	iorwf	(fputc@fp+1)^0,w,c
  3013   0071FA  B4D8               	btfsc	status,2,c
  3014   0071FC  EF02  F039         	goto	u931
  3015   007200  EF04  F039         	goto	u930
  3016   007204                     u931:
  3017   007204  EF0D  F039         	goto	l1742
  3018   007208                     u930:
  3019   007208  5005               	movf	fputc@fp^0,w,c
  3020   00720A  1006               	iorwf	(fputc@fp+1)^0,w,c
  3021   00720C  A4D8               	btfss	status,2,c
  3022   00720E  EF0B  F039         	goto	u941
  3023   007212  EF0D  F039         	goto	u940
  3024   007216                     u941:
  3025   007216  EF12  F039         	goto	l1744
  3026   00721A                     u940:
  3027   00721A                     l1742:
  3028   00721A  5003               	movf	fputc@c^0,w,c
  3029   00721C  EC75  F037         	call	_putch
  3030   007220  EF5F  F039         	goto	l1034
  3031   007224                     l1744:
  3032   007224  EE20 F00A          	lfsr	2,10
  3033   007228  5005               	movf	fputc@fp^0,w,c
  3034   00722A  26D9               	addwf	fsr2l,f,c
  3035   00722C  5006               	movf	(fputc@fp+1)^0,w,c
  3036   00722E  22DA               	addwfc	fsr2h,f,c
  3037   007230  50DE               	movf	postinc2,w,c
  3038   007232  10DE               	iorwf	postinc2,w,c
  3039   007234  B4D8               	btfsc	status,2,c
  3040   007236  EF1F  F039         	goto	u951
  3041   00723A  EF21  F039         	goto	u950
  3042   00723E                     u951:
  3043   00723E  EF3C  F039         	goto	l1748
  3044   007242                     u950:
  3045   007242  EE20 F00A          	lfsr	2,10
  3046   007246  5005               	movf	fputc@fp^0,w,c
  3047   007248  26D9               	addwf	fsr2l,f,c
  3048   00724A  5006               	movf	(fputc@fp+1)^0,w,c
  3049   00724C  22DA               	addwfc	fsr2h,f,c
  3050   00724E  EE10 F003          	lfsr	1,3
  3051   007252  5005               	movf	fputc@fp^0,w,c
  3052   007254  26E1               	addwf	fsr1l,f,c
  3053   007256  5006               	movf	(fputc@fp+1)^0,w,c
  3054   007258  22E2               	addwfc	fsr1h,f,c
  3055   00725A  50DE               	movf	postinc2,w,c
  3056   00725C  5CE6               	subwf	postinc1,w,c
  3057   00725E  50E6               	movf	postinc1,w,c
  3058   007260  0A80               	xorlw	128
  3059   007262  6E0B               	movwf	(??_fputc+4)^0,c
  3060   007264  50DE               	movf	postinc2,w,c
  3061   007266  0A80               	xorlw	128
  3062   007268  580B               	subwfb	(??_fputc+4)^0,w,c
  3063   00726A  B0D8               	btfsc	status,0,c
  3064   00726C  EF3A  F039         	goto	u961
  3065   007270  EF3C  F039         	goto	u960
  3066   007274                     u961:
  3067   007274  EF5F  F039         	goto	l1034
  3068   007278                     u960:
  3069   007278                     l1748:
  3070   007278  EE20 F003          	lfsr	2,3
  3071   00727C  5005               	movf	fputc@fp^0,w,c
  3072   00727E  26D9               	addwf	fsr2l,f,c
  3073   007280  5006               	movf	(fputc@fp+1)^0,w,c
  3074   007282  22DA               	addwfc	fsr2h,f,c
  3075   007284  CFDE F007          	movff	postinc2,??_fputc
  3076   007288  CFDD F008          	movff	postdec2,??_fputc+1
  3077   00728C  C005  FFD9         	movff	fputc@fp,fsr2l
  3078   007290  C006  FFDA         	movff	fputc@fp+1,fsr2h
  3079   007294  CFDE F009          	movff	postinc2,??_fputc+2
  3080   007298  CFDD F00A          	movff	postdec2,??_fputc+3
  3081   00729C  5007               	movf	??_fputc^0,w,c
  3082   00729E  2409               	addwf	(??_fputc+2)^0,w,c
  3083   0072A0  6ED9               	movwf	fsr2l,c
  3084   0072A2  5008               	movf	(??_fputc+1)^0,w,c
  3085   0072A4  200A               	addwfc	(??_fputc+3)^0,w,c
  3086   0072A6  6EDA               	movwf	fsr2h,c
  3087   0072A8  C003  FFDF         	movff	fputc@c,indf2
  3088   0072AC  EE20 F003          	lfsr	2,3
  3089   0072B0  5005               	movf	fputc@fp^0,w,c
  3090   0072B2  26D9               	addwf	fsr2l,f,c
  3091   0072B4  5006               	movf	(fputc@fp+1)^0,w,c
  3092   0072B6  22DA               	addwfc	fsr2h,f,c
  3093   0072B8  2ADE               	incf	postinc2,f,c
  3094   0072BA  0E00               	movlw	0
  3095   0072BC  22DD               	addwfc	postdec2,f,c
  3096   0072BE                     l1034:
  3097   0072BE  0012               	return		;funcret
  3098   0072C0                     __end_of_fputc:
  3099                           	callstack 0
  3100                           
  3101 ;; *************** function _putch *****************
  3102 ;; Defined at:
  3103 ;;		line 75 in file "librerias/UART.c"
  3104 ;; Parameters:    Size  Location     Type
  3105 ;;  data            1    wreg     unsigned char 
  3106 ;; Auto vars:     Size  Location     Type
  3107 ;;  data            1    1[COMRAM] unsigned char 
  3108 ;; Return value:  Size  Location     Type
  3109 ;;                  1    wreg      void 
  3110 ;; Registers used:
  3111 ;;		wreg, status,2, cstack
  3112 ;; Tracked objects:
  3113 ;;		On entry : 0/0
  3114 ;;		On exit  : 0/0
  3115 ;;		Unchanged: 0/0
  3116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3117 ;;      Params:         0       0       0       0       0       0       0       0       0
  3118 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3119 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3120 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3121 ;;Total ram usage:        1 bytes
  3122 ;; Hardware stack levels used: 1
  3123 ;; Hardware stack levels required when called: 1
  3124 ;; This function calls:
  3125 ;;		_UART_Tx
  3126 ;; This function is called by:
  3127 ;;		_fputc
  3128 ;; This function uses a non-reentrant model
  3129 ;;
  3130                           
  3131                           	psect	text14
  3132   006EEA                     __ptext14:
  3133                           	callstack 0
  3134   006EEA                     _putch:
  3135                           	callstack 23
  3136                           
  3137                           ;incstack = 0
  3138                           ;putch@data stored from wreg
  3139   006EEA  6E02               	movwf	putch@data^0,c
  3140   006EEC                     
  3141                           ;librerias/UART.c: 76:     UART_Tx(data);
  3142   006EEC  5002               	movf	putch@data^0,w,c
  3143   006EEE  EC7A  F037         	call	_UART_Tx
  3144   006EF2  0012               	return		;funcret
  3145   006EF4                     __end_of_putch:
  3146                           	callstack 0
  3147                           
  3148 ;; *************** function _UART_Tx *****************
  3149 ;; Defined at:
  3150 ;;		line 70 in file "librerias/UART.c"
  3151 ;; Parameters:    Size  Location     Type
  3152 ;;  dato            1    wreg     unsigned char 
  3153 ;; Auto vars:     Size  Location     Type
  3154 ;;  dato            1    0[COMRAM] unsigned char 
  3155 ;; Return value:  Size  Location     Type
  3156 ;;                  1    wreg      void 
  3157 ;; Registers used:
  3158 ;;		wreg
  3159 ;; Tracked objects:
  3160 ;;		On entry : 0/0
  3161 ;;		On exit  : 0/0
  3162 ;;		Unchanged: 0/0
  3163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3164 ;;      Params:         0       0       0       0       0       0       0       0       0
  3165 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3166 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3167 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3168 ;;Total ram usage:        1 bytes
  3169 ;; Hardware stack levels used: 1
  3170 ;; This function calls:
  3171 ;;		Nothing
  3172 ;; This function is called by:
  3173 ;;		_main
  3174 ;;		_putch
  3175 ;; This function uses a non-reentrant model
  3176 ;;
  3177                           
  3178                           	psect	text15
  3179   006EF4                     __ptext15:
  3180                           	callstack 0
  3181   006EF4                     _UART_Tx:
  3182                           	callstack 30
  3183                           
  3184                           ;incstack = 0
  3185                           ;UART_Tx@dato stored from wreg
  3186   006EF4  6E01               	movwf	UART_Tx@dato^0,c
  3187   006EF6                     l110:
  3188   006EF6  A2AC               	btfss	4012,1,c	;volatile
  3189   006EF8  EF80  F037         	goto	u801
  3190   006EFC  EF82  F037         	goto	u800
  3191   006F00                     u801:
  3192   006F00  EF7B  F037         	goto	l110
  3193   006F04                     u800:
  3194   006F04                     
  3195                           ;librerias/UART.c: 72:     TXREG1 = dato;
  3196   006F04  C001  FFAD         	movff	UART_Tx@dato,4013	;volatile
  3197   006F08  0012               	return		;funcret
  3198   006F0A                     __end_of_UART_Tx:
  3199                           	callstack 0
  3200                           
  3201 ;; *************** function _abs *****************
  3202 ;; Defined at:
  3203 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\abs.c"
  3204 ;; Parameters:    Size  Location     Type
  3205 ;;  a               2   10[COMRAM] int 
  3206 ;; Auto vars:     Size  Location     Type
  3207 ;;		None
  3208 ;; Return value:  Size  Location     Type
  3209 ;;                  2   10[COMRAM] int 
  3210 ;; Registers used:
  3211 ;;		wreg, status,2, status,0
  3212 ;; Tracked objects:
  3213 ;;		On entry : 0/0
  3214 ;;		On exit  : 0/0
  3215 ;;		Unchanged: 0/0
  3216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3217 ;;      Params:         2       0       0       0       0       0       0       0       0
  3218 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3219 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3220 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3221 ;;Total ram usage:        4 bytes
  3222 ;; Hardware stack levels used: 1
  3223 ;; This function calls:
  3224 ;;		Nothing
  3225 ;; This function is called by:
  3226 ;;		_vfpfcnvrt
  3227 ;; This function uses a non-reentrant model
  3228 ;;
  3229                           
  3230                           	psect	text16
  3231   006FD0                     __ptext16:
  3232                           	callstack 0
  3233   006FD0                     _abs:
  3234                           	callstack 25
  3235   006FD0  BE0C               	btfsc	(abs@a+1)^0,7,c
  3236   006FD2  EFED  F037         	goto	u971
  3237   006FD6  EFEF  F037         	goto	u970
  3238   006FDA                     u971:
  3239   006FDA  EFF5  F037         	goto	l1019
  3240   006FDE                     u970:
  3241   006FDE  C00B  F00B         	movff	abs@a,?_abs
  3242   006FE2  C00C  F00C         	movff	abs@a+1,?_abs+1
  3243   006FE6  EF01  F038         	goto	l1022
  3244   006FEA                     l1019:
  3245   006FEA  C00B  F00D         	movff	abs@a,??_abs
  3246   006FEE  C00C  F00E         	movff	abs@a+1,??_abs+1
  3247   006FF2  1E0D               	comf	??_abs^0,f,c
  3248   006FF4  1E0E               	comf	(??_abs+1)^0,f,c
  3249   006FF6  4A0D               	infsnz	??_abs^0,f,c
  3250   006FF8  2A0E               	incf	(??_abs+1)^0,f,c
  3251   006FFA  C00D  F00B         	movff	??_abs,?_abs
  3252   006FFE  C00E  F00C         	movff	??_abs+1,?_abs+1
  3253   007002                     l1022:
  3254   007002  0012               	return		;funcret
  3255   007004                     __end_of_abs:
  3256                           	callstack 0
  3257                           
  3258 ;; *************** function ___almod *****************
  3259 ;; Defined at:
  3260 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\almod.c"
  3261 ;; Parameters:    Size  Location     Type
  3262 ;;  dividend        4    0[COMRAM] long 
  3263 ;;  divisor         4    4[COMRAM] long 
  3264 ;; Auto vars:     Size  Location     Type
  3265 ;;  sign            1    9[COMRAM] unsigned char 
  3266 ;;  counter         1    8[COMRAM] unsigned char 
  3267 ;; Return value:  Size  Location     Type
  3268 ;;                  4    0[COMRAM] long 
  3269 ;; Registers used:
  3270 ;;		wreg, status,2, status,0
  3271 ;; Tracked objects:
  3272 ;;		On entry : 0/0
  3273 ;;		On exit  : 0/0
  3274 ;;		Unchanged: 0/0
  3275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3276 ;;      Params:         8       0       0       0       0       0       0       0       0
  3277 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3278 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3279 ;;      Totals:        10       0       0       0       0       0       0       0       0
  3280 ;;Total ram usage:       10 bytes
  3281 ;; Hardware stack levels used: 1
  3282 ;; This function calls:
  3283 ;;		Nothing
  3284 ;; This function is called by:
  3285 ;;		_vfpfcnvrt
  3286 ;; This function uses a non-reentrant model
  3287 ;;
  3288                           
  3289                           	psect	text17
  3290   0072C0                     __ptext17:
  3291                           	callstack 0
  3292   0072C0                     ___almod:
  3293                           	callstack 25
  3294   0072C0  0E00               	movlw	0
  3295   0072C2  6E0A               	movwf	___almod@sign^0,c
  3296   0072C4  BE04               	btfsc	(___almod@dividend+3)^0,7,c
  3297   0072C6  EF69  F039         	goto	u870
  3298   0072CA  EF67  F039         	goto	u871
  3299   0072CE                     u871:
  3300   0072CE  EF73  F039         	goto	l1710
  3301   0072D2                     u870:
  3302   0072D2  1E04               	comf	(___almod@dividend+3)^0,f,c
  3303   0072D4  1E03               	comf	(___almod@dividend+2)^0,f,c
  3304   0072D6  1E02               	comf	(___almod@dividend+1)^0,f,c
  3305   0072D8  6C01               	negf	___almod@dividend^0,c
  3306   0072DA  0E00               	movlw	0
  3307   0072DC  2202               	addwfc	(___almod@dividend+1)^0,f,c
  3308   0072DE  2203               	addwfc	(___almod@dividend+2)^0,f,c
  3309   0072E0  2204               	addwfc	(___almod@dividend+3)^0,f,c
  3310   0072E2  0E01               	movlw	1
  3311   0072E4  6E0A               	movwf	___almod@sign^0,c
  3312   0072E6                     l1710:
  3313   0072E6  BE08               	btfsc	(___almod@divisor+3)^0,7,c
  3314   0072E8  EF7A  F039         	goto	u880
  3315   0072EC  EF78  F039         	goto	u881
  3316   0072F0                     u881:
  3317   0072F0  EF82  F039         	goto	l1714
  3318   0072F4                     u880:
  3319   0072F4  1E08               	comf	(___almod@divisor+3)^0,f,c
  3320   0072F6  1E07               	comf	(___almod@divisor+2)^0,f,c
  3321   0072F8  1E06               	comf	(___almod@divisor+1)^0,f,c
  3322   0072FA  6C05               	negf	___almod@divisor^0,c
  3323   0072FC  0E00               	movlw	0
  3324   0072FE  2206               	addwfc	(___almod@divisor+1)^0,f,c
  3325   007300  2207               	addwfc	(___almod@divisor+2)^0,f,c
  3326   007302  2208               	addwfc	(___almod@divisor+3)^0,f,c
  3327   007304                     l1714:
  3328   007304  5005               	movf	___almod@divisor^0,w,c
  3329   007306  1006               	iorwf	(___almod@divisor+1)^0,w,c
  3330   007308  1007               	iorwf	(___almod@divisor+2)^0,w,c
  3331   00730A  1008               	iorwf	(___almod@divisor+3)^0,w,c
  3332   00730C  B4D8               	btfsc	status,2,c
  3333   00730E  EF8B  F039         	goto	u891
  3334   007312  EF8D  F039         	goto	u890
  3335   007316                     u891:
  3336   007316  EFBD  F039         	goto	l1730
  3337   00731A                     u890:
  3338   00731A  0E01               	movlw	1
  3339   00731C  6E09               	movwf	___almod@counter^0,c
  3340   00731E  EF97  F039         	goto	l1720
  3341   007322                     l1718:
  3342   007322  90D8               	bcf	status,0,c
  3343   007324  3605               	rlcf	___almod@divisor^0,f,c
  3344   007326  3606               	rlcf	(___almod@divisor+1)^0,f,c
  3345   007328  3607               	rlcf	(___almod@divisor+2)^0,f,c
  3346   00732A  3608               	rlcf	(___almod@divisor+3)^0,f,c
  3347   00732C  2A09               	incf	___almod@counter^0,f,c
  3348   00732E                     l1720:
  3349   00732E  AE08               	btfss	(___almod@divisor+3)^0,7,c
  3350   007330  EF9C  F039         	goto	u901
  3351   007334  EF9E  F039         	goto	u900
  3352   007338                     u901:
  3353   007338  EF91  F039         	goto	l1718
  3354   00733C                     u900:
  3355   00733C                     l1722:
  3356   00733C  5005               	movf	___almod@divisor^0,w,c
  3357   00733E  5C01               	subwf	___almod@dividend^0,w,c
  3358   007340  5006               	movf	(___almod@divisor+1)^0,w,c
  3359   007342  5802               	subwfb	(___almod@dividend+1)^0,w,c
  3360   007344  5007               	movf	(___almod@divisor+2)^0,w,c
  3361   007346  5803               	subwfb	(___almod@dividend+2)^0,w,c
  3362   007348  5008               	movf	(___almod@divisor+3)^0,w,c
  3363   00734A  5804               	subwfb	(___almod@dividend+3)^0,w,c
  3364   00734C  A0D8               	btfss	status,0,c
  3365   00734E  EFAB  F039         	goto	u911
  3366   007352  EFAD  F039         	goto	u910
  3367   007356                     u911:
  3368   007356  EFB5  F039         	goto	l1726
  3369   00735A                     u910:
  3370   00735A  5005               	movf	___almod@divisor^0,w,c
  3371   00735C  5E01               	subwf	___almod@dividend^0,f,c
  3372   00735E  5006               	movf	(___almod@divisor+1)^0,w,c
  3373   007360  5A02               	subwfb	(___almod@dividend+1)^0,f,c
  3374   007362  5007               	movf	(___almod@divisor+2)^0,w,c
  3375   007364  5A03               	subwfb	(___almod@dividend+2)^0,f,c
  3376   007366  5008               	movf	(___almod@divisor+3)^0,w,c
  3377   007368  5A04               	subwfb	(___almod@dividend+3)^0,f,c
  3378   00736A                     l1726:
  3379   00736A  90D8               	bcf	status,0,c
  3380   00736C  3208               	rrcf	(___almod@divisor+3)^0,f,c
  3381   00736E  3207               	rrcf	(___almod@divisor+2)^0,f,c
  3382   007370  3206               	rrcf	(___almod@divisor+1)^0,f,c
  3383   007372  3205               	rrcf	___almod@divisor^0,f,c
  3384   007374  2E09               	decfsz	___almod@counter^0,f,c
  3385   007376  EF9E  F039         	goto	l1722
  3386   00737A                     l1730:
  3387   00737A  500A               	movf	___almod@sign^0,w,c
  3388   00737C  B4D8               	btfsc	status,2,c
  3389   00737E  EFC3  F039         	goto	u921
  3390   007382  EFC5  F039         	goto	u920
  3391   007386                     u921:
  3392   007386  EFCD  F039         	goto	l1734
  3393   00738A                     u920:
  3394   00738A  1E04               	comf	(___almod@dividend+3)^0,f,c
  3395   00738C  1E03               	comf	(___almod@dividend+2)^0,f,c
  3396   00738E  1E02               	comf	(___almod@dividend+1)^0,f,c
  3397   007390  6C01               	negf	___almod@dividend^0,c
  3398   007392  0E00               	movlw	0
  3399   007394  2202               	addwfc	(___almod@dividend+1)^0,f,c
  3400   007396  2203               	addwfc	(___almod@dividend+2)^0,f,c
  3401   007398  2204               	addwfc	(___almod@dividend+3)^0,f,c
  3402   00739A                     l1734:
  3403   00739A  C001  F001         	movff	___almod@dividend,?___almod
  3404   00739E  C002  F002         	movff	___almod@dividend+1,?___almod+1
  3405   0073A2  C003  F003         	movff	___almod@dividend+2,?___almod+2
  3406   0073A6  C004  F004         	movff	___almod@dividend+3,?___almod+3
  3407   0073AA  0012               	return		;funcret
  3408   0073AC                     __end_of___almod:
  3409                           	callstack 0
  3410                           
  3411 ;; *************** function ___aldiv *****************
  3412 ;; Defined at:
  3413 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\aldiv.c"
  3414 ;; Parameters:    Size  Location     Type
  3415 ;;  dividend        4    0[COMRAM] long 
  3416 ;;  divisor         4    4[COMRAM] long 
  3417 ;; Auto vars:     Size  Location     Type
  3418 ;;  quotient        4   10[COMRAM] long 
  3419 ;;  sign            1    9[COMRAM] unsigned char 
  3420 ;;  counter         1    8[COMRAM] unsigned char 
  3421 ;; Return value:  Size  Location     Type
  3422 ;;                  4    0[COMRAM] long 
  3423 ;; Registers used:
  3424 ;;		wreg, status,2, status,0
  3425 ;; Tracked objects:
  3426 ;;		On entry : 0/0
  3427 ;;		On exit  : 0/0
  3428 ;;		Unchanged: 0/0
  3429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3430 ;;      Params:         8       0       0       0       0       0       0       0       0
  3431 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3432 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3433 ;;      Totals:        14       0       0       0       0       0       0       0       0
  3434 ;;Total ram usage:       14 bytes
  3435 ;; Hardware stack levels used: 1
  3436 ;; This function calls:
  3437 ;;		Nothing
  3438 ;; This function is called by:
  3439 ;;		_SPI_BaudRateGen
  3440 ;;		_SPI_actual_frec
  3441 ;;		_vfpfcnvrt
  3442 ;; This function uses a non-reentrant model
  3443 ;;
  3444                           
  3445                           	psect	text18
  3446   0073AC                     __ptext18:
  3447                           	callstack 0
  3448   0073AC                     ___aldiv:
  3449                           	callstack 25
  3450   0073AC  0E00               	movlw	0
  3451   0073AE  6E0A               	movwf	___aldiv@sign^0,c
  3452   0073B0  BE08               	btfsc	(___aldiv@divisor+3)^0,7,c
  3453   0073B2  EFDF  F039         	goto	u810
  3454   0073B6  EFDD  F039         	goto	u811
  3455   0073BA                     u811:
  3456   0073BA  EFE9  F039         	goto	l1666
  3457   0073BE                     u810:
  3458   0073BE  1E08               	comf	(___aldiv@divisor+3)^0,f,c
  3459   0073C0  1E07               	comf	(___aldiv@divisor+2)^0,f,c
  3460   0073C2  1E06               	comf	(___aldiv@divisor+1)^0,f,c
  3461   0073C4  6C05               	negf	___aldiv@divisor^0,c
  3462   0073C6  0E00               	movlw	0
  3463   0073C8  2206               	addwfc	(___aldiv@divisor+1)^0,f,c
  3464   0073CA  2207               	addwfc	(___aldiv@divisor+2)^0,f,c
  3465   0073CC  2208               	addwfc	(___aldiv@divisor+3)^0,f,c
  3466   0073CE  0E01               	movlw	1
  3467   0073D0  6E0A               	movwf	___aldiv@sign^0,c
  3468   0073D2                     l1666:
  3469   0073D2  BE04               	btfsc	(___aldiv@dividend+3)^0,7,c
  3470   0073D4  EFF0  F039         	goto	u820
  3471   0073D8  EFEE  F039         	goto	u821
  3472   0073DC                     u821:
  3473   0073DC  EFFA  F039         	goto	l1672
  3474   0073E0                     u820:
  3475   0073E0  1E04               	comf	(___aldiv@dividend+3)^0,f,c
  3476   0073E2  1E03               	comf	(___aldiv@dividend+2)^0,f,c
  3477   0073E4  1E02               	comf	(___aldiv@dividend+1)^0,f,c
  3478   0073E6  6C01               	negf	___aldiv@dividend^0,c
  3479   0073E8  0E00               	movlw	0
  3480   0073EA  2202               	addwfc	(___aldiv@dividend+1)^0,f,c
  3481   0073EC  2203               	addwfc	(___aldiv@dividend+2)^0,f,c
  3482   0073EE  2204               	addwfc	(___aldiv@dividend+3)^0,f,c
  3483   0073F0  0E01               	movlw	1
  3484   0073F2  1A0A               	xorwf	___aldiv@sign^0,f,c
  3485   0073F4                     l1672:
  3486   0073F4  0E00               	movlw	0
  3487   0073F6  6E0B               	movwf	___aldiv@quotient^0,c
  3488   0073F8  0E00               	movlw	0
  3489   0073FA  6E0C               	movwf	(___aldiv@quotient+1)^0,c
  3490   0073FC  0E00               	movlw	0
  3491   0073FE  6E0D               	movwf	(___aldiv@quotient+2)^0,c
  3492   007400  0E00               	movlw	0
  3493   007402  6E0E               	movwf	(___aldiv@quotient+3)^0,c
  3494   007404  5005               	movf	___aldiv@divisor^0,w,c
  3495   007406  1006               	iorwf	(___aldiv@divisor+1)^0,w,c
  3496   007408  1007               	iorwf	(___aldiv@divisor+2)^0,w,c
  3497   00740A  1008               	iorwf	(___aldiv@divisor+3)^0,w,c
  3498   00740C  B4D8               	btfsc	status,2,c
  3499   00740E  EF0B  F03A         	goto	u831
  3500   007412  EF0D  F03A         	goto	u830
  3501   007416                     u831:
  3502   007416  EF43  F03A         	goto	l1694
  3503   00741A                     u830:
  3504   00741A  0E01               	movlw	1
  3505   00741C  6E09               	movwf	___aldiv@counter^0,c
  3506   00741E  EF17  F03A         	goto	l1680
  3507   007422                     l1678:
  3508   007422  90D8               	bcf	status,0,c
  3509   007424  3605               	rlcf	___aldiv@divisor^0,f,c
  3510   007426  3606               	rlcf	(___aldiv@divisor+1)^0,f,c
  3511   007428  3607               	rlcf	(___aldiv@divisor+2)^0,f,c
  3512   00742A  3608               	rlcf	(___aldiv@divisor+3)^0,f,c
  3513   00742C  2A09               	incf	___aldiv@counter^0,f,c
  3514   00742E                     l1680:
  3515   00742E  AE08               	btfss	(___aldiv@divisor+3)^0,7,c
  3516   007430  EF1C  F03A         	goto	u841
  3517   007434  EF1E  F03A         	goto	u840
  3518   007438                     u841:
  3519   007438  EF11  F03A         	goto	l1678
  3520   00743C                     u840:
  3521   00743C                     l1682:
  3522   00743C  90D8               	bcf	status,0,c
  3523   00743E  360B               	rlcf	___aldiv@quotient^0,f,c
  3524   007440  360C               	rlcf	(___aldiv@quotient+1)^0,f,c
  3525   007442  360D               	rlcf	(___aldiv@quotient+2)^0,f,c
  3526   007444  360E               	rlcf	(___aldiv@quotient+3)^0,f,c
  3527   007446  5005               	movf	___aldiv@divisor^0,w,c
  3528   007448  5C01               	subwf	___aldiv@dividend^0,w,c
  3529   00744A  5006               	movf	(___aldiv@divisor+1)^0,w,c
  3530   00744C  5802               	subwfb	(___aldiv@dividend+1)^0,w,c
  3531   00744E  5007               	movf	(___aldiv@divisor+2)^0,w,c
  3532   007450  5803               	subwfb	(___aldiv@dividend+2)^0,w,c
  3533   007452  5008               	movf	(___aldiv@divisor+3)^0,w,c
  3534   007454  5804               	subwfb	(___aldiv@dividend+3)^0,w,c
  3535   007456  A0D8               	btfss	status,0,c
  3536   007458  EF30  F03A         	goto	u851
  3537   00745C  EF32  F03A         	goto	u850
  3538   007460                     u851:
  3539   007460  EF3B  F03A         	goto	l1690
  3540   007464                     u850:
  3541   007464  5005               	movf	___aldiv@divisor^0,w,c
  3542   007466  5E01               	subwf	___aldiv@dividend^0,f,c
  3543   007468  5006               	movf	(___aldiv@divisor+1)^0,w,c
  3544   00746A  5A02               	subwfb	(___aldiv@dividend+1)^0,f,c
  3545   00746C  5007               	movf	(___aldiv@divisor+2)^0,w,c
  3546   00746E  5A03               	subwfb	(___aldiv@dividend+2)^0,f,c
  3547   007470  5008               	movf	(___aldiv@divisor+3)^0,w,c
  3548   007472  5A04               	subwfb	(___aldiv@dividend+3)^0,f,c
  3549   007474  800B               	bsf	___aldiv@quotient^0,0,c
  3550   007476                     l1690:
  3551   007476  90D8               	bcf	status,0,c
  3552   007478  3208               	rrcf	(___aldiv@divisor+3)^0,f,c
  3553   00747A  3207               	rrcf	(___aldiv@divisor+2)^0,f,c
  3554   00747C  3206               	rrcf	(___aldiv@divisor+1)^0,f,c
  3555   00747E  3205               	rrcf	___aldiv@divisor^0,f,c
  3556   007480  2E09               	decfsz	___aldiv@counter^0,f,c
  3557   007482  EF1E  F03A         	goto	l1682
  3558   007486                     l1694:
  3559   007486  500A               	movf	___aldiv@sign^0,w,c
  3560   007488  B4D8               	btfsc	status,2,c
  3561   00748A  EF49  F03A         	goto	u861
  3562   00748E  EF4B  F03A         	goto	u860
  3563   007492                     u861:
  3564   007492  EF53  F03A         	goto	l1698
  3565   007496                     u860:
  3566   007496  1E0E               	comf	(___aldiv@quotient+3)^0,f,c
  3567   007498  1E0D               	comf	(___aldiv@quotient+2)^0,f,c
  3568   00749A  1E0C               	comf	(___aldiv@quotient+1)^0,f,c
  3569   00749C  6C0B               	negf	___aldiv@quotient^0,c
  3570   00749E  0E00               	movlw	0
  3571   0074A0  220C               	addwfc	(___aldiv@quotient+1)^0,f,c
  3572   0074A2  220D               	addwfc	(___aldiv@quotient+2)^0,f,c
  3573   0074A4  220E               	addwfc	(___aldiv@quotient+3)^0,f,c
  3574   0074A6                     l1698:
  3575   0074A6  C00B  F001         	movff	___aldiv@quotient,?___aldiv
  3576   0074AA  C00C  F002         	movff	___aldiv@quotient+1,?___aldiv+1
  3577   0074AE  C00D  F003         	movff	___aldiv@quotient+2,?___aldiv+2
  3578   0074B2  C00E  F004         	movff	___aldiv@quotient+3,?___aldiv+3
  3579   0074B6  0012               	return		;funcret
  3580   0074B8                     __end_of___aldiv:
  3581                           	callstack 0
  3582                           
  3583 ;; *************** function _Clock_Init *****************
  3584 ;; Defined at:
  3585 ;;		line 3 in file "librerias/clock.c"
  3586 ;; Parameters:    Size  Location     Type
  3587 ;;  s16Timeout      2    0[COMRAM] short 
  3588 ;; Auto vars:     Size  Location     Type
  3589 ;;  bStatus         1    5[COMRAM] _Bool 
  3590 ;;  bStatus         1    4[COMRAM] _Bool 
  3591 ;;  bStatus         1    3[COMRAM] _Bool 
  3592 ;;  bStatus         1    2[COMRAM] _Bool 
  3593 ;;  returnCode      1    7[COMRAM] enum E5188
  3594 ;;  bItTimeEn       1    6[COMRAM] _Bool 
  3595 ;; Return value:  Size  Location     Type
  3596 ;;                  1    wreg      enum E5188
  3597 ;; Registers used:
  3598 ;;		wreg, status,2, status,0
  3599 ;; Tracked objects:
  3600 ;;		On entry : 0/0
  3601 ;;		On exit  : 0/0
  3602 ;;		Unchanged: 0/0
  3603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3604 ;;      Params:         2       0       0       0       0       0       0       0       0
  3605 ;;      Locals:         6       0       0       0       0       0       0       0       0
  3606 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3607 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3608 ;;Total ram usage:        8 bytes
  3609 ;; Hardware stack levels used: 1
  3610 ;; This function calls:
  3611 ;;		Nothing
  3612 ;; This function is called by:
  3613 ;;		_main
  3614 ;; This function uses a non-reentrant model
  3615 ;;
  3616                           
  3617                           	psect	text19
  3618   007928                     __ptext19:
  3619                           	callstack 0
  3620   007928                     _Clock_Init:
  3621                           	callstack 30
  3622   007928                     
  3623                           ;librerias/clock.c: 4:     CLK_ERROR_CODE returnCode = ERROR_CODE_OK;
  3624   007928  0E00               	movlw	0
  3625   00792A  6E08               	movwf	Clock_Init@returnCode^0,c
  3626   00792C                     
  3627                           ;librerias/clock.c: 5:     _Bool bItTimeEn = (0 >= s16Timeout) ? 0 : 1;
  3628   00792C  BE02               	btfsc	(Clock_Init@s16Timeout+1)^0,7,c
  3629   00792E  EFA4  F03C         	goto	u1260
  3630   007932  5002               	movf	(Clock_Init@s16Timeout+1)^0,w,c
  3631   007934  E106               	bnz	u1261
  3632   007936  0401               	decf	Clock_Init@s16Timeout^0,w,c
  3633   007938  B0D8               	btfsc	status,0,c
  3634   00793A  EFA1  F03C         	goto	u1261
  3635   00793E  EFA4  F03C         	goto	u1260
  3636   007942                     u1261:
  3637   007942  0E01               	movlw	1
  3638   007944  EFA5  F03C         	goto	u1270
  3639   007948                     u1260:
  3640   007948  0E00               	movlw	0
  3641   00794A                     u1270:
  3642   00794A  6E07               	movwf	Clock_Init@bItTimeEn^0,c
  3643   00794C                     l144:
  3644                           
  3645                           ;librerias/clock.c: 10:             bStatus = OSCCON2bits.HFIOFR;
  3646   00794C  B2D2               	btfsc	210,1,c	;volatile
  3647   00794E  EFAB  F03C         	goto	u1281
  3648   007952  EFAE  F03C         	goto	u1280
  3649   007956                     u1281:
  3650   007956  0E01               	movlw	1
  3651   007958  EFAF  F03C         	goto	u1286
  3652   00795C                     u1280:
  3653   00795C  0E00               	movlw	0
  3654   00795E                     u1286:
  3655   00795E  6E03               	movwf	Clock_Init@bStatus^0,c
  3656   007960                     
  3657                           ;librerias/clock.c: 11:             s16Timeout--;
  3658   007960  0601               	decf	Clock_Init@s16Timeout^0,f,c
  3659   007962  A0D8               	btfss	status,0,c
  3660   007964  0602               	decf	(Clock_Init@s16Timeout+1)^0,f,c
  3661   007966                     
  3662                           ;librerias/clock.c: 12:         }while((0 == bStatus) && ((0 < s16Timeout) || (0 == bItT
      +                          imeEn)));
  3663   007966  5003               	movf	Clock_Init@bStatus^0,w,c
  3664   007968  A4D8               	btfss	status,2,c
  3665   00796A  EFB9  F03C         	goto	u1291
  3666   00796E  EFBB  F03C         	goto	u1290
  3667   007972                     u1291:
  3668   007972  EFD0  F03C         	goto	l2040
  3669   007976                     u1290:
  3670   007976  BE02               	btfsc	(Clock_Init@s16Timeout+1)^0,7,c
  3671   007978  EFC8  F03C         	goto	u1300
  3672   00797C  5002               	movf	(Clock_Init@s16Timeout+1)^0,w,c
  3673   00797E  E106               	bnz	u1301
  3674   007980  0401               	decf	Clock_Init@s16Timeout^0,w,c
  3675   007982  B0D8               	btfsc	status,0,c
  3676   007984  EFC6  F03C         	goto	u1301
  3677   007988  EFC8  F03C         	goto	u1300
  3678   00798C                     u1301:
  3679   00798C  EFA6  F03C         	goto	l144
  3680   007990                     u1300:
  3681   007990  5007               	movf	Clock_Init@bItTimeEn^0,w,c
  3682   007992  B4D8               	btfsc	status,2,c
  3683   007994  EFCE  F03C         	goto	u1311
  3684   007998  EFD0  F03C         	goto	u1310
  3685   00799C                     u1311:
  3686   00799C  EFA6  F03C         	goto	l144
  3687   0079A0                     u1310:
  3688   0079A0                     l2040:
  3689                           
  3690                           ;librerias/clock.c: 13:         if (0 == bStatus){
  3691   0079A0  5003               	movf	Clock_Init@bStatus^0,w,c
  3692   0079A2  A4D8               	btfss	status,2,c
  3693   0079A4  EFD6  F03C         	goto	u1321
  3694   0079A8  EFD8  F03C         	goto	u1320
  3695   0079AC                     u1321:
  3696   0079AC  EFDA  F03C         	goto	l143
  3697   0079B0                     u1320:
  3698   0079B0                     
  3699                           ;librerias/clock.c: 14:             returnCode = ERROR_CODE_TIMEOUT;
  3700   0079B0  0E01               	movlw	1
  3701   0079B2  6E08               	movwf	Clock_Init@returnCode^0,c
  3702   0079B4                     l143:
  3703                           
  3704                           ;librerias/clock.c: 18:     if(ERROR_CODE_OK == returnCode){
  3705   0079B4  5008               	movf	Clock_Init@returnCode^0,w,c
  3706   0079B6  A4D8               	btfss	status,2,c
  3707   0079B8  EFE0  F03C         	goto	u1331
  3708   0079BC  EFE2  F03C         	goto	u1330
  3709   0079C0                     u1331:
  3710   0079C0  EF19  F03D         	goto	l149
  3711   0079C4                     u1330:
  3712   0079C4                     
  3713                           ;librerias/clock.c: 19:         OSCCON2bits.INTSRC = 1;
  3714   0079C4  8AD2               	bsf	210,5,c	;volatile
  3715   0079C6                     
  3716                           ;librerias/clock.c: 20:         OSCCONbits.IRCF = 7;
  3717   0079C6  0E70               	movlw	112
  3718   0079C8  12D3               	iorwf	211,f,c	;volatile
  3719   0079CA                     l150:
  3720                           
  3721                           ;librerias/clock.c: 24:             bStatus = OSCCONbits.HFIOFS;
  3722   0079CA  B4D3               	btfsc	211,2,c	;volatile
  3723   0079CC  EFEA  F03C         	goto	u1341
  3724   0079D0  EFED  F03C         	goto	u1340
  3725   0079D4                     u1341:
  3726   0079D4  0E01               	movlw	1
  3727   0079D6  EFEE  F03C         	goto	u1346
  3728   0079DA                     u1340:
  3729   0079DA  0E00               	movlw	0
  3730   0079DC                     u1346:
  3731   0079DC  6E04               	movwf	Clock_Init@bStatus_558^0,c
  3732   0079DE                     
  3733                           ;librerias/clock.c: 25:             s16Timeout--;
  3734   0079DE  0601               	decf	Clock_Init@s16Timeout^0,f,c
  3735   0079E0  A0D8               	btfss	status,0,c
  3736   0079E2  0602               	decf	(Clock_Init@s16Timeout+1)^0,f,c
  3737   0079E4                     
  3738                           ;librerias/clock.c: 26:         }while((0 == bStatus) && ((0 < s16Timeout) || (0 == bItT
      +                          imeEn)));
  3739   0079E4  5004               	movf	Clock_Init@bStatus_558^0,w,c
  3740   0079E6  A4D8               	btfss	status,2,c
  3741   0079E8  EFF8  F03C         	goto	u1351
  3742   0079EC  EFFA  F03C         	goto	u1350
  3743   0079F0                     u1351:
  3744   0079F0  EF0F  F03D         	goto	l2056
  3745   0079F4                     u1350:
  3746   0079F4  BE02               	btfsc	(Clock_Init@s16Timeout+1)^0,7,c
  3747   0079F6  EF07  F03D         	goto	u1360
  3748   0079FA  5002               	movf	(Clock_Init@s16Timeout+1)^0,w,c
  3749   0079FC  E106               	bnz	u1361
  3750   0079FE  0401               	decf	Clock_Init@s16Timeout^0,w,c
  3751   007A00  B0D8               	btfsc	status,0,c
  3752   007A02  EF05  F03D         	goto	u1361
  3753   007A06  EF07  F03D         	goto	u1360
  3754   007A0A                     u1361:
  3755   007A0A  EFE5  F03C         	goto	l150
  3756   007A0E                     u1360:
  3757   007A0E  5007               	movf	Clock_Init@bItTimeEn^0,w,c
  3758   007A10  B4D8               	btfsc	status,2,c
  3759   007A12  EF0D  F03D         	goto	u1371
  3760   007A16  EF0F  F03D         	goto	u1370
  3761   007A1A                     u1371:
  3762   007A1A  EFE5  F03C         	goto	l150
  3763   007A1E                     u1370:
  3764   007A1E                     l2056:
  3765                           
  3766                           ;librerias/clock.c: 27:         if (0 == bStatus){
  3767   007A1E  5004               	movf	Clock_Init@bStatus_558^0,w,c
  3768   007A20  A4D8               	btfss	status,2,c
  3769   007A22  EF15  F03D         	goto	u1381
  3770   007A26  EF17  F03D         	goto	u1380
  3771   007A2A                     u1381:
  3772   007A2A  EF19  F03D         	goto	l149
  3773   007A2E                     u1380:
  3774   007A2E                     
  3775                           ;librerias/clock.c: 28:             returnCode = ERROR_CODE_TIMEOUT;
  3776   007A2E  0E01               	movlw	1
  3777   007A30  6E08               	movwf	Clock_Init@returnCode^0,c
  3778   007A32                     l149:
  3779                           
  3780                           ;librerias/clock.c: 32:     if(ERROR_CODE_OK == returnCode){
  3781   007A32  5008               	movf	Clock_Init@returnCode^0,w,c
  3782   007A34  A4D8               	btfss	status,2,c
  3783   007A36  EF1F  F03D         	goto	u1391
  3784   007A3A  EF21  F03D         	goto	u1390
  3785   007A3E                     u1391:
  3786   007A3E  EF55  F03D         	goto	l155
  3787   007A42                     u1390:
  3788   007A42                     l156:
  3789                           
  3790                           ;librerias/clock.c: 35:             bStatus = OSCCONbits.OSTS;
  3791   007A42  B6D3               	btfsc	211,3,c	;volatile
  3792   007A44  EF26  F03D         	goto	u1401
  3793   007A48  EF29  F03D         	goto	u1400
  3794   007A4C                     u1401:
  3795   007A4C  0E01               	movlw	1
  3796   007A4E  EF2A  F03D         	goto	u1406
  3797   007A52                     u1400:
  3798   007A52  0E00               	movlw	0
  3799   007A54                     u1406:
  3800   007A54  6E05               	movwf	Clock_Init@bStatus_559^0,c
  3801   007A56                     
  3802                           ;librerias/clock.c: 36:             s16Timeout--;
  3803   007A56  0601               	decf	Clock_Init@s16Timeout^0,f,c
  3804   007A58  A0D8               	btfss	status,0,c
  3805   007A5A  0602               	decf	(Clock_Init@s16Timeout+1)^0,f,c
  3806   007A5C                     
  3807                           ;librerias/clock.c: 37:         }while((0 == bStatus) && ((0 < s16Timeout) || (0 == bItT
      +                          imeEn)));
  3808   007A5C  5005               	movf	Clock_Init@bStatus_559^0,w,c
  3809   007A5E  A4D8               	btfss	status,2,c
  3810   007A60  EF34  F03D         	goto	u1411
  3811   007A64  EF36  F03D         	goto	u1410
  3812   007A68                     u1411:
  3813   007A68  EF4B  F03D         	goto	l2070
  3814   007A6C                     u1410:
  3815   007A6C  BE02               	btfsc	(Clock_Init@s16Timeout+1)^0,7,c
  3816   007A6E  EF43  F03D         	goto	u1420
  3817   007A72  5002               	movf	(Clock_Init@s16Timeout+1)^0,w,c
  3818   007A74  E106               	bnz	u1421
  3819   007A76  0401               	decf	Clock_Init@s16Timeout^0,w,c
  3820   007A78  B0D8               	btfsc	status,0,c
  3821   007A7A  EF41  F03D         	goto	u1421
  3822   007A7E  EF43  F03D         	goto	u1420
  3823   007A82                     u1421:
  3824   007A82  EF21  F03D         	goto	l156
  3825   007A86                     u1420:
  3826   007A86  5007               	movf	Clock_Init@bItTimeEn^0,w,c
  3827   007A88  B4D8               	btfsc	status,2,c
  3828   007A8A  EF49  F03D         	goto	u1431
  3829   007A8E  EF4B  F03D         	goto	u1430
  3830   007A92                     u1431:
  3831   007A92  EF21  F03D         	goto	l156
  3832   007A96                     u1430:
  3833   007A96                     l2070:
  3834                           
  3835                           ;librerias/clock.c: 38:         if (0 == bStatus){
  3836   007A96  5005               	movf	Clock_Init@bStatus_559^0,w,c
  3837   007A98  A4D8               	btfss	status,2,c
  3838   007A9A  EF51  F03D         	goto	u1441
  3839   007A9E  EF53  F03D         	goto	u1440
  3840   007AA2                     u1441:
  3841   007AA2  EF55  F03D         	goto	l155
  3842   007AA6                     u1440:
  3843   007AA6                     
  3844                           ;librerias/clock.c: 39:             returnCode = ERROR_CODE_TIMEOUT;
  3845   007AA6  0E01               	movlw	1
  3846   007AA8  6E08               	movwf	Clock_Init@returnCode^0,c
  3847   007AAA                     l155:
  3848                           
  3849                           ;librerias/clock.c: 42:         if(ERROR_CODE_OK == returnCode){
  3850   007AAA  5008               	movf	Clock_Init@returnCode^0,w,c
  3851   007AAC  A4D8               	btfss	status,2,c
  3852   007AAE  EF5B  F03D         	goto	u1451
  3853   007AB2  EF5D  F03D         	goto	u1450
  3854   007AB6                     u1451:
  3855   007AB6  EF93  F03D         	goto	l161
  3856   007ABA                     u1450:
  3857   007ABA                     
  3858                           ;librerias/clock.c: 43:         OSCTUNEbits.SPLLMULT = 1;
  3859   007ABA  8E9B               	bsf	155,7,c	;volatile
  3860                           
  3861                           ;librerias/clock.c: 44:         OSCCON2bits.PLLEN = 1;
  3862   007ABC  88D2               	bsf	210,4,c	;volatile
  3863   007ABE                     l162:
  3864                           
  3865                           ;librerias/clock.c: 47:             bStatus = OSCCON2bits.PLLRDY;
  3866   007ABE  BED2               	btfsc	210,7,c	;volatile
  3867   007AC0  EF64  F03D         	goto	u1461
  3868   007AC4  EF67  F03D         	goto	u1460
  3869   007AC8                     u1461:
  3870   007AC8  0E01               	movlw	1
  3871   007ACA  EF68  F03D         	goto	u1466
  3872   007ACE                     u1460:
  3873   007ACE  0E00               	movlw	0
  3874   007AD0                     u1466:
  3875   007AD0  6E06               	movwf	Clock_Init@bStatus_562^0,c
  3876   007AD2                     
  3877                           ;librerias/clock.c: 48:             s16Timeout--;
  3878   007AD2  0601               	decf	Clock_Init@s16Timeout^0,f,c
  3879   007AD4  A0D8               	btfss	status,0,c
  3880   007AD6  0602               	decf	(Clock_Init@s16Timeout+1)^0,f,c
  3881   007AD8                     
  3882                           ;librerias/clock.c: 49:         }while((0 == bStatus) && ((0 < s16Timeout) || (0 == bItT
      +                          imeEn)));
  3883   007AD8  5006               	movf	Clock_Init@bStatus_562^0,w,c
  3884   007ADA  A4D8               	btfss	status,2,c
  3885   007ADC  EF72  F03D         	goto	u1471
  3886   007AE0  EF74  F03D         	goto	u1470
  3887   007AE4                     u1471:
  3888   007AE4  EF89  F03D         	goto	l2086
  3889   007AE8                     u1470:
  3890   007AE8  BE02               	btfsc	(Clock_Init@s16Timeout+1)^0,7,c
  3891   007AEA  EF81  F03D         	goto	u1480
  3892   007AEE  5002               	movf	(Clock_Init@s16Timeout+1)^0,w,c
  3893   007AF0  E106               	bnz	u1481
  3894   007AF2  0401               	decf	Clock_Init@s16Timeout^0,w,c
  3895   007AF4  B0D8               	btfsc	status,0,c
  3896   007AF6  EF7F  F03D         	goto	u1481
  3897   007AFA  EF81  F03D         	goto	u1480
  3898   007AFE                     u1481:
  3899   007AFE  EF5F  F03D         	goto	l162
  3900   007B02                     u1480:
  3901   007B02  5007               	movf	Clock_Init@bItTimeEn^0,w,c
  3902   007B04  B4D8               	btfsc	status,2,c
  3903   007B06  EF87  F03D         	goto	u1491
  3904   007B0A  EF89  F03D         	goto	u1490
  3905   007B0E                     u1491:
  3906   007B0E  EF5F  F03D         	goto	l162
  3907   007B12                     u1490:
  3908   007B12                     l2086:
  3909                           
  3910                           ;librerias/clock.c: 50:         if (0 == bStatus){
  3911   007B12  5006               	movf	Clock_Init@bStatus_562^0,w,c
  3912   007B14  A4D8               	btfss	status,2,c
  3913   007B16  EF8F  F03D         	goto	u1501
  3914   007B1A  EF91  F03D         	goto	u1500
  3915   007B1E                     u1501:
  3916   007B1E  EF93  F03D         	goto	l161
  3917   007B22                     u1500:
  3918   007B22                     
  3919                           ;librerias/clock.c: 51:             returnCode = ERROR_CODE_TIMEOUT;
  3920   007B22  0E01               	movlw	1
  3921   007B24  6E08               	movwf	Clock_Init@returnCode^0,c
  3922   007B26                     l161:
  3923                           
  3924                           ;librerias/clock.c: 56:     if(ERROR_CODE_OK == returnCode){
  3925   007B26  5008               	movf	Clock_Init@returnCode^0,w,c
  3926   007B28  A4D8               	btfss	status,2,c
  3927   007B2A  EF99  F03D         	goto	u1511
  3928   007B2E  EF9B  F03D         	goto	u1510
  3929   007B32                     u1511:
  3930   007B32  EF9E  F03D         	goto	l168
  3931   007B36                     u1510:
  3932   007B36                     
  3933                           ;librerias/clock.c: 57:         OSCCON2bits.PRISD = 0;
  3934   007B36  94D2               	bcf	210,2,c	;volatile
  3935   007B38                     
  3936                           ;librerias/clock.c: 58:         OSCCONbits.SCS = 0;
  3937   007B38  0EFC               	movlw	-4
  3938   007B3A  16D3               	andwf	211,f,c	;volatile
  3939   007B3C                     l168:
  3940   007B3C  0012               	return		;funcret
  3941   007B3E                     __end_of_Clock_Init:
  3942                           	callstack 0
  3943                           
  3944                           	psect	rparam
  3945   000000                     
  3946                           	psect	config
  3947                           
  3948                           ;Config register CONFIG1L @ 0x300000
  3949                           ;	PLL Selection
  3950                           ;	PLLSEL = PLL3X, 3x clock multiplier
  3951                           ;	PLL Enable Configuration bit
  3952                           ;	CFGPLLEN = ON, PLL Enabled
  3953                           ;	CPU System Clock Postscaler
  3954                           ;	CPUDIV = NOCLKDIV, CPU uses system clock (no divide)
  3955                           ;	Low Speed USB mode with 48 MHz system clock
  3956                           ;	LS48MHZ = SYS48X8, System clock at 48 MHz, USB clock divider is set to 8
  3957   300000                     	org	3145728
  3958   300000  23                 	db	35
  3959                           
  3960                           ;Config register CONFIG1H @ 0x300001
  3961                           ;	Oscillator Selection
  3962                           ;	FOSC = INTOSCCLKO, Internal oscillator, clock output on OSC2
  3963                           ;	Primary Oscillator Shutdown
  3964                           ;	PCLKEN = OFF, Primary oscillator shutdown firmware controlled
  3965                           ;	Fail-Safe Clock Monitor
  3966                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  3967                           ;	Internal/External Oscillator Switchover
  3968                           ;	IESO = OFF, Oscillator Switchover mode disabled
  3969   300001                     	org	3145729
  3970   300001  09                 	db	9
  3971                           
  3972                           ;Config register CONFIG2L @ 0x300002
  3973                           ;	Power-up Timer Enable
  3974                           ;	nPWRTEN = OFF, Power up timer disabled
  3975                           ;	Brown-out Reset Enable
  3976                           ;	BOREN = SBORDIS, BOR enabled in hardware (SBOREN is ignored)
  3977                           ;	Brown-out Reset Voltage
  3978                           ;	BORV = 190, BOR set to 1.9V nominal
  3979                           ;	Low-Power Brown-out Reset
  3980                           ;	nLPBOR = OFF, Low-Power Brown-out Reset disabled
  3981   300002                     	org	3145730
  3982   300002  5F                 	db	95
  3983                           
  3984                           ;Config register CONFIG2H @ 0x300003
  3985                           ;	Watchdog Timer Enable bits
  3986                           ;	WDTEN = OFF, WDT disabled in hardware (SWDTEN ignored)
  3987                           ;	Watchdog Timer Postscaler
  3988                           ;	WDTPS = 32768, 1:32768
  3989   300003                     	org	3145731
  3990   300003  3C                 	db	60
  3991                           
  3992                           ; Padding undefined space
  3993   300004                     	org	3145732
  3994   300004  FF                 	db	255
  3995                           
  3996                           ;Config register CONFIG3H @ 0x300005
  3997                           ;	CCP2 MUX bit
  3998                           ;	CCP2MX = RC1, CCP2 input/output is multiplexed with RC1
  3999                           ;	PORTB A/D Enable bit
  4000                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  4001                           ;	Timer3 Clock Input MUX bit
  4002                           ;	T3CMX = RC0, T3CKI function is on RC0
  4003                           ;	SDO Output MUX bit
  4004                           ;	SDOMX = RB3, SDO function is on RB3
  4005                           ;	Master Clear Reset Pin Enable
  4006                           ;	MCLRE = ON, MCLR pin enabled; RE3 input disabled
  4007   300005                     	org	3145733
  4008   300005  D3                 	db	211
  4009                           
  4010                           ;Config register CONFIG4L @ 0x300006
  4011                           ;	Stack Full/Underflow Reset
  4012                           ;	STVREN = ON, Stack full/underflow will cause Reset
  4013                           ;	Single-Supply ICSP Enable bit
  4014                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
  4015                           ;	Dedicated In-Circuit Debug/Programming Port Enable
  4016                           ;	ICPRT = OFF, ICPORT disabled
  4017                           ;	Extended Instruction Set Enable bit
  4018                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled
  4019                           ;	Background Debugger Enable bit
  4020                           ;	DEBUG = 0x1, unprogrammed default
  4021   300006                     	org	3145734
  4022   300006  85                 	db	133
  4023                           
  4024                           ; Padding undefined space
  4025   300007                     	org	3145735
  4026   300007  FF                 	db	255
  4027                           
  4028                           ;Config register CONFIG5L @ 0x300008
  4029                           ;	Block 0 Code Protect
  4030                           ;	CP0 = OFF, Block 0 is not code-protected
  4031                           ;	Block 1 Code Protect
  4032                           ;	CP1 = OFF, Block 1 is not code-protected
  4033                           ;	Block 2 Code Protect
  4034                           ;	CP2 = OFF, Block 2 is not code-protected
  4035                           ;	Block 3 Code Protect
  4036                           ;	CP3 = OFF, Block 3 is not code-protected
  4037   300008                     	org	3145736
  4038   300008  0F                 	db	15
  4039                           
  4040                           ;Config register CONFIG5H @ 0x300009
  4041                           ;	Boot Block Code Protect
  4042                           ;	CPB = OFF, Boot block is not code-protected
  4043                           ;	Data EEPROM Code Protect
  4044                           ;	CPD = OFF, Data EEPROM is not code-protected
  4045   300009                     	org	3145737
  4046   300009  C0                 	db	192
  4047                           
  4048                           ;Config register CONFIG6L @ 0x30000A
  4049                           ;	Block 0 Write Protect
  4050                           ;	WRT0 = OFF, Block 0 (0800-1FFFh) is not write-protected
  4051                           ;	Block 1 Write Protect
  4052                           ;	WRT1 = OFF, Block 1 (2000-3FFFh) is not write-protected
  4053                           ;	Block 2 Write Protect
  4054                           ;	WRT2 = OFF, Block 2 (04000-5FFFh) is not write-protected
  4055                           ;	Block 3 Write Protect
  4056                           ;	WRT3 = OFF, Block 3 (06000-7FFFh) is not write-protected
  4057   30000A                     	org	3145738
  4058   30000A  0F                 	db	15
  4059                           
  4060                           ;Config register CONFIG6H @ 0x30000B
  4061                           ;	Configuration Registers Write Protect
  4062                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  4063                           ;	Boot Block Write Protect
  4064                           ;	WRTB = OFF, Boot block (0000-7FFh) is not write-protected
  4065                           ;	Data EEPROM Write Protect
  4066                           ;	WRTD = OFF, Data EEPROM is not write-protected
  4067   30000B                     	org	3145739
  4068   30000B  E0                 	db	224
  4069                           
  4070                           ;Config register CONFIG7L @ 0x30000C
  4071                           ;	Block 0 Table Read Protect
  4072                           ;	EBTR0 = OFF, Block 0 is not protected from table reads executed in other blocks
  4073                           ;	Block 1 Table Read Protect
  4074                           ;	EBTR1 = OFF, Block 1 is not protected from table reads executed in other blocks
  4075                           ;	Block 2 Table Read Protect
  4076                           ;	EBTR2 = OFF, Block 2 is not protected from table reads executed in other blocks
  4077                           ;	Block 3 Table Read Protect
  4078                           ;	EBTR3 = OFF, Block 3 is not protected from table reads executed in other blocks
  4079   30000C                     	org	3145740
  4080   30000C  0F                 	db	15
  4081                           
  4082                           ;Config register CONFIG7H @ 0x30000D
  4083                           ;	Boot Block Table Read Protect
  4084                           ;	EBTRB = OFF, Boot block is not protected from table reads executed in other blocks
  4085   30000D                     	org	3145741
  4086   30000D  40                 	db	64
  4087                           tosu	equ	0xFFF
  4088                           tosh	equ	0xFFE
  4089                           tosl	equ	0xFFD
  4090                           stkptr	equ	0xFFC
  4091                           pclatu	equ	0xFFB
  4092                           pclath	equ	0xFFA
  4093                           pcl	equ	0xFF9
  4094                           tblptru	equ	0xFF8
  4095                           tblptrh	equ	0xFF7
  4096                           tblptrl	equ	0xFF6
  4097                           tablat	equ	0xFF5
  4098                           prodh	equ	0xFF4
  4099                           prodl	equ	0xFF3
  4100                           indf0	equ	0xFEF
  4101                           postinc0	equ	0xFEE
  4102                           postdec0	equ	0xFED
  4103                           preinc0	equ	0xFEC
  4104                           plusw0	equ	0xFEB
  4105                           fsr0h	equ	0xFEA
  4106                           fsr0l	equ	0xFE9
  4107                           wreg	equ	0xFE8
  4108                           indf1	equ	0xFE7
  4109                           postinc1	equ	0xFE6
  4110                           postdec1	equ	0xFE5
  4111                           preinc1	equ	0xFE4
  4112                           plusw1	equ	0xFE3
  4113                           fsr1h	equ	0xFE2
  4114                           fsr1l	equ	0xFE1
  4115                           bsr	equ	0xFE0
  4116                           indf2	equ	0xFDF
  4117                           postinc2	equ	0xFDE
  4118                           postdec2	equ	0xFDD
  4119                           preinc2	equ	0xFDC
  4120                           plusw2	equ	0xFDB
  4121                           fsr2h	equ	0xFDA
  4122                           fsr2l	equ	0xFD9
  4123                           status	equ	0xFD8

Data Sizes:
    Strings     548
    Constant    0
    Data        0
    BSS         37
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     59      64
    BANK0           160      0      32
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_1(CODE[7]), STR_10(CODE[9]), STR_11(CODE[14]), STR_12(CODE[17]), 
		 -> STR_13(CODE[10]), STR_14(CODE[14]), STR_15(CODE[17]), STR_16(CODE[11]), 
		 -> STR_17(CODE[14]), STR_18(CODE[17]), STR_19(CODE[23]), STR_2(CODE[10]), 
		 -> STR_20(CODE[17]), STR_21(CODE[6]), STR_22(CODE[6]), STR_23(CODE[9]), 
		 -> STR_24(CODE[9]), STR_25(CODE[6]), STR_26(CODE[9]), STR_27(CODE[9]), 
		 -> STR_28(CODE[6]), STR_29(CODE[9]), STR_3(CODE[11]), STR_30(CODE[9]), 
		 -> STR_31(CODE[5]), STR_32(CODE[9]), STR_33(CODE[9]), STR_34(CODE[16]), 
		 -> STR_35(CODE[13]), STR_36(CODE[16]), STR_37(CODE[17]), STR_38(CODE[7]), 
		 -> STR_39(CODE[6]), STR_4(CODE[18]), STR_40(CODE[16]), STR_41(CODE[16]), 
		 -> STR_42(CODE[16]), STR_43(CODE[27]), STR_44(CODE[11]), STR_45(CODE[11]), 
		 -> STR_46(CODE[8]), STR_47(CODE[25]), STR_48(CODE[24]), STR_49(CODE[26]), 
		 -> STR_5(CODE[18]), STR_50(CODE[8]), STR_51(CODE[28]), STR_52(CODE[25]), 
		 -> STR_6(CODE[11]), STR_7(CODE[9]), STR_8(CODE[8]), STR_9(CODE[13]), 

    S1404$buffer	PTR unsigned char  size(2) Largest target is 0

    S1404$source	PTR const unsigned char  size(2) Largest target is 0

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 28
		 -> STR_1(CODE[7]), STR_10(CODE[9]), STR_11(CODE[14]), STR_12(CODE[17]), 
		 -> STR_13(CODE[10]), STR_14(CODE[14]), STR_15(CODE[17]), STR_16(CODE[11]), 
		 -> STR_17(CODE[14]), STR_18(CODE[17]), STR_19(CODE[23]), STR_2(CODE[10]), 
		 -> STR_20(CODE[17]), STR_21(CODE[6]), STR_22(CODE[6]), STR_23(CODE[9]), 
		 -> STR_24(CODE[9]), STR_25(CODE[6]), STR_26(CODE[9]), STR_27(CODE[9]), 
		 -> STR_28(CODE[6]), STR_29(CODE[9]), STR_3(CODE[11]), STR_30(CODE[9]), 
		 -> STR_31(CODE[5]), STR_32(CODE[9]), STR_33(CODE[9]), STR_34(CODE[16]), 
		 -> STR_35(CODE[13]), STR_36(CODE[16]), STR_37(CODE[17]), STR_38(CODE[7]), 
		 -> STR_39(CODE[6]), STR_4(CODE[18]), STR_40(CODE[16]), STR_41(CODE[16]), 
		 -> STR_42(CODE[16]), STR_43(CODE[27]), STR_44(CODE[11]), STR_45(CODE[11]), 
		 -> STR_46(CODE[8]), STR_47(CODE[25]), STR_48(CODE[24]), STR_49(CODE[26]), 
		 -> STR_5(CODE[18]), STR_50(CODE[8]), STR_51(CODE[28]), STR_52(CODE[25]), 
		 -> STR_6(CODE[11]), STR_7(CODE[9]), STR_8(CODE[8]), STR_9(CODE[13]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 28
		 -> STR_1(CODE[7]), STR_10(CODE[9]), STR_11(CODE[14]), STR_12(CODE[17]), 
		 -> STR_13(CODE[10]), STR_14(CODE[14]), STR_15(CODE[17]), STR_16(CODE[11]), 
		 -> STR_17(CODE[14]), STR_18(CODE[17]), STR_19(CODE[23]), STR_2(CODE[10]), 
		 -> STR_20(CODE[17]), STR_21(CODE[6]), STR_22(CODE[6]), STR_23(CODE[9]), 
		 -> STR_24(CODE[9]), STR_25(CODE[6]), STR_26(CODE[9]), STR_27(CODE[9]), 
		 -> STR_28(CODE[6]), STR_29(CODE[9]), STR_3(CODE[11]), STR_30(CODE[9]), 
		 -> STR_31(CODE[5]), STR_32(CODE[9]), STR_33(CODE[9]), STR_34(CODE[16]), 
		 -> STR_35(CODE[13]), STR_36(CODE[16]), STR_37(CODE[17]), STR_38(CODE[7]), 
		 -> STR_39(CODE[6]), STR_4(CODE[18]), STR_40(CODE[16]), STR_41(CODE[16]), 
		 -> STR_42(CODE[16]), STR_43(CODE[27]), STR_44(CODE[11]), STR_45(CODE[11]), 
		 -> STR_46(CODE[8]), STR_47(CODE[25]), STR_48(CODE[24]), STR_49(CODE[26]), 
		 -> STR_5(CODE[18]), STR_50(CODE[8]), STR_51(CODE[28]), STR_52(CODE[25]), 
		 -> STR_6(CODE[11]), STR_7(CODE[9]), STR_8(CODE[8]), STR_9(CODE[13]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 28
		 -> STR_1(CODE[7]), STR_10(CODE[9]), STR_11(CODE[14]), STR_12(CODE[17]), 
		 -> STR_13(CODE[10]), STR_14(CODE[14]), STR_15(CODE[17]), STR_16(CODE[11]), 
		 -> STR_17(CODE[14]), STR_18(CODE[17]), STR_19(CODE[23]), STR_2(CODE[10]), 
		 -> STR_20(CODE[17]), STR_21(CODE[6]), STR_22(CODE[6]), STR_23(CODE[9]), 
		 -> STR_24(CODE[9]), STR_25(CODE[6]), STR_26(CODE[9]), STR_27(CODE[9]), 
		 -> STR_28(CODE[6]), STR_29(CODE[9]), STR_3(CODE[11]), STR_30(CODE[9]), 
		 -> STR_31(CODE[5]), STR_32(CODE[9]), STR_33(CODE[9]), STR_34(CODE[16]), 
		 -> STR_35(CODE[13]), STR_36(CODE[16]), STR_37(CODE[17]), STR_38(CODE[7]), 
		 -> STR_39(CODE[6]), STR_4(CODE[18]), STR_40(CODE[16]), STR_41(CODE[16]), 
		 -> STR_42(CODE[16]), STR_43(CODE[27]), STR_44(CODE[11]), STR_45(CODE[11]), 
		 -> STR_46(CODE[8]), STR_47(CODE[25]), STR_48(CODE[24]), STR_49(CODE[26]), 
		 -> STR_5(CODE[18]), STR_50(CODE[8]), STR_51(CODE[28]), STR_52(CODE[25]), 
		 -> STR_6(CODE[11]), STR_7(CODE[9]), STR_8(CODE[8]), STR_9(CODE[13]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _UART_config_show->_printf
    _SPI_write->_SPI_ErrorHandler
    _SPI_master_init->_SPI_BaudRateGen
    _SPI_config_show->_printf
    _SPI_actual_frec->___aldiv
    _SPI_BaudRateGen->_SPI_ErrorHandler
    _SPI_ErrorHandler->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->___aldiv
    _vfpfcnvrt->_abs
    _fputc->_putch
    _putch->_UART_Tx
    _abs->___almod

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   32130
                                             57 COMRAM     2     2      0
                         _Clock_Init
                    _SPI_master_init
                          _SPI_write
                          _UART_Init
                            _UART_Tx
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            4     0      4    7581
                                             42 COMRAM     4     0      4
                   _UART_config_show
                   _UART_select_baud
 ---------------------------------------------------------------------------------
 (2) _UART_select_baud                                     8     4      4      98
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _UART_config_show                                     0     0      0    7385
                             _printf
 ---------------------------------------------------------------------------------
 (1) _SPI_write                                            1     1      0    7451
                                             45 COMRAM     1     1      0
                   _SPI_ErrorHandler
 ---------------------------------------------------------------------------------
 (1) _SPI_master_init                                      0     0      0   16492
                    _SPI_BaudRateGen
                    _SPI_config_show
 ---------------------------------------------------------------------------------
 (2) _SPI_config_show                                      0     0      0    8164
                    _SPI_actual_frec
                             _printf
 ---------------------------------------------------------------------------------
 (3) _SPI_actual_frec                                     10     6      4     779
                                             14 COMRAM    10     6      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) _SPI_BaudRateGen                                     12     8      4    8328
                                             45 COMRAM    12     8      4
                   _SPI_ErrorHandler
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) _SPI_ErrorHandler                                     3     3      0    7429
                                             42 COMRAM     3     3      0
                             _printf
 ---------------------------------------------------------------------------------
 (3) _printf                                               9     3      6    7385
                                             35 COMRAM     7     1      6
                    _SPI_actual_frec (ARG)
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             7     2      5    3377
                                             28 COMRAM     7     2      5
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           14    10      4    3027
                                             14 COMRAM    14    10      4
                            ___aldiv
                            ___almod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4     826
                                              2 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0      44
                                              1 COMRAM     1     1      0
                            _UART_Tx
 ---------------------------------------------------------------------------------
 (1) _UART_Tx                                              1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                             10 COMRAM     4     2      2
                            ___almod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___almod                                             10     2      8     448
                                              0 COMRAM    10     2      8
 ---------------------------------------------------------------------------------
 (6) ___aldiv                                             14     6      8     756
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _Clock_Init                                           8     6      2     584
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Clock_Init
   _SPI_master_init
     _SPI_BaudRateGen
       _SPI_ErrorHandler
         _printf
           _SPI_actual_frec (ARG)
             ___aldiv
           _vfprintf (ARG)
             _vfpfcnvrt
               ___aldiv
               ___almod
               _abs
                 ___almod (ARG)
               _fputc
                 _putch
                   _UART_Tx
       ___aldiv
     _SPI_config_show
       _SPI_actual_frec
       _printf
   _SPI_write
     _SPI_ErrorHandler
   _UART_Init
     _UART_config_show
       _printf
     _UART_select_baud
   _UART_Tx

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      29        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      20       5       20.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     3B      40       1       67.4%
BITBIGSFRll         3F      0       0      27        0.0%
BITBIGSFRhhh        2C      0       0      20        0.0%
BITBIGSFRhhll        D      0       0      22        0.0%
BITBIGSFRlhh         C      0       0      24        0.0%
BITBIGSFRhhlh        8      0       0      21        0.0%
BITBIGSFRhlh         7      0       0      23        0.0%
BITBIGSFRlhll        6      0       0      26        0.0%
BITBIGSFRlhlh        2      0       0      25        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      60      28        0.0%
DATA                 0      0      60       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Mon Sep 16 20:53:24 2024

              _SSPSTATbits 0FC7                         _BF 7E38                         l82 76D0  
                       l74 7658                         l91 773C                         l86 7706  
                       l78 768E                         l94 6F70                        l110 6EF6  
                      l200 77AC                        l113 6F08                        l107 75F6  
                      l116 6EF2                        l220 78BA                        l212 784E  
                      l204 77E2                        l150 79CA                        l143 79B4  
                      l144 794C                        l224 78F0                        l216 7884  
                      l208 7818                        l240 6FCE                        l161 7B26  
                      l162 7ABE                        l155 7AAA                        l243 71F0  
                      l156 7A42                        l244 71F4                        l149 7A32  
                      l229 7926                        l253 6F8C                        l168 7B3C  
                      l256 6F9C                        l362 74B6                        l275 7170  
                      l259 70F6                        l375 73AA                        l961 6F26  
         ?_SPI_BaudRateGen 002E                        u800 6F04                        u801 6F00  
                      u810 73BE                        u811 73BA                        u820 73E0  
                      u900 733C                        u821 73DC                        u901 7338  
                      u830 741A                        u910 735A                        u831 7416  
                      u911 7356                        u840 743C                        u920 738A  
                      u841 7438                        u921 7386                        u850 7464  
                      u930 7208                        u851 7460                        u931 7204  
                      u860 7496                        u940 721A                        u861 7492  
                      u941 7216                        u870 72D2                        u950 7242  
                      u871 72CE                        u951 723E                        u880 72F4  
                      u960 7278                        u881 72F0                        u961 7274  
                      u890 731A                        u970 6FDE                        u891 7316  
                      u971 6FDA                        u980 7B60                        u981 7B5C  
                      u990 7BEE                        u991 7BEA                        _abs 6FD0  
                      wreg 0FE8                 _TXSTA1bits 0FAC                       l1022 7002  
                     l1015 7048                       l2000 789E                       l1009 7DD8  
                     l1034 72BE                       l2010 78FC                       l2002 78AE  
                     l1019 6FEA                       ?_abs 000B                       l2020 71E6  
                     l2012 790A                       l2004 78C6                       l2100 6F62  
                     l2030 794C                       l2014 791A                       l2006 78D4  
                     l2110 6F6C                       l2102 6F64                       l2040 79A0  
                     l2032 7960                       l2024 7928                       l2016 7172  
                     l2008 78E4                       l2120 6FB8                       l2112 6F9E  
                     l2104 6F66                       l2050 79E4                       l2042 79B0  
                     l2034 7966                       l2026 792C                       l2018 71D0  
                     l2130 6FC8                       l2122 6FBA                       l2114 6FB2  
                     l2106 6F68                       l2060 7A42                       l2052 79F4  
                     l2044 79C4                       l2036 7976                       l2028 794C  
                     l2132 6FCA                       l2124 6FC2                       l2116 6FB4  
                     l2140 6F9A                       l2108 6F6A                       l2070 7A96  
                     l2062 7A56                       l2054 7A0E                       l2046 79C6  
                     l2038 7990                       l2126 6FC4                       l2118 6FB6  
                     l2134 6F74                       l2150 706E                       l2080 7AD8  
                     l2072 7AA6                       l2064 7A5C                       l2056 7A1E  
                     l2048 79DE                       l2128 6FC6                       l2136 6F78  
                     l2240 75E0                       l2152 7078                       l2144 704A  
                     l2090 7B36                       l2082 7AE8                       l2074 7ABA  
                     l2066 7A6C                       l2058 7A2E                       l2138 6F86  
                     l2250 75A8                       l2242 7570                       l2146 7056  
                     l2092 7B38                       l2084 7B02                       l2076 7ABE  
                     l2068 7A86                       l2252 75B6                       l2244 757E  
                     l2236 753A                       l2148 706A                       l2086 7B12  
                     l2078 7AD2                       l1710 72E6                       l1702 72C0  
                     l2254 75D2                       l2238 75C4                       l2246 758C  
                     l2088 7B22                       l1720 732E                       l1712 72F4  
                     l1704 72C4                       l1800 7D14                       l2256 7152  
                     l2248 759A                       l2096 6F48                       l1722 733C  
                     l1730 737A                       l1714 7304                       l1706 72D2  
                     l1810 7D6C                       l1802 7D2A                       l2098 6F4E  
                     l1660 73B0                       l1732 738A                       l1724 735A  
                     l1716 731A                       l1708 72E2                       l1652 6EF6  
                     l1740 7208                       l1812 7D8A                       l1804 7D3A  
                     l1820 7DB2                       l1900 7720                       l1670 73F0  
                     l1662 73BE                       l1734 739A                       l1726 736A  
                     l1718 7322                       l1654 6F04                       l1742 721A  
                     l1806 7D4A                       l1814 7D8C                       l1830 7024  
                     l1902 7730                       l1910 74D4                       l1680 742E  
                     l1672 73F4                       l1664 73CE                       l1728 7374  
                     l1752 6FD0                       l1656 6EEC                       l1744 7224  
                     l1808 7D5A                       l1816 7DA2                       l1760 7B6C  
                     l1832 7040                       l1920 7510                       l1912 74E0  
                     l1904 74B8                       l1690 7476                       l1682 743C  
                     l1674 7404                       l1666 73D2                       l1658 73AC  
                     l1754 6FDE                       l1746 7242                       l1738 71F6  
                     l1770 7BA4                       l1762 7B78                       l1826 7004  
                     l1842 7096                       l1914 74EC                       l1906 74BC  
                     l1692 7480                       l1684 7446                       l1676 741A  
                     l1668 73E0                       l1748 7278                       l1780 7BEE  
                     l1772 7BAC                       l1764 7B7C                       l1756 7B3E  
                     l1828 7010                       l1836 6F0A                       l1860 713E  
                     l1852 710E                       l1844 70E6                       l1916 74F8  
                     l1908 74C8                       l1924 751C                       l1686 7464  
                     l1678 7422                       l1694 7486                       l1790 7C6E  
                     l1782 7C0E                       l1766 7B8A                       l1758 7B60  
                     l1838 6F0E                       l1854 711E                       l1870 7612  
                     l1918 7504                       l1696 7496                       l1688 7474  
                     l1792 7C88                       l1784 7C34                       l1768 7B9C  
                     l1776 7BB4                       l1856 712E                       l1848 70FA  
                     l1880 7664                       l1872 7622                       l1698 74A6  
                     l1794 7C8C                       l1778 7BD2                       l1970 7790  
                     l1890 76C4                       l1882 7672                       l1874 762E  
                     l1866 75F8                       l1796 7CA0                       l1788 7C58  
                     l1980 77EE                       l1972 77A0                       l1892 76DC  
                     l1884 7682                       l1876 763C                       l1868 7604  
                     l1798 7CE0                       l1990 7842                       l1982 77FC  
                     l1974 77B8                       l1966 773E                       l1894 76EA  
                     l1886 76A6                       l1878 764C                       l1992 785A  
                     l1984 780C                       l1976 77C6                       l1968 7782  
                     l1896 76FA                       l1888 76B4                       l1994 7868  
                     l1986 7824                       l1978 77D6                       l1898 7712  
                     l1996 7878                       l1988 7832                       l1998 7890  
                     STR_1 7FD5                       STR_2 7F90                       STR_3 7F7B  
                     STR_4 7E9F                       STR_5 7E8D                       STR_6 7F65  
                     STR_7 7FB5                       STR_8 7FC6                       STR_9 7F42  
                     u1000 7C0A                       _CREN 7D5C                       u1001 7C06  
                     u1010 7C9C                       u1011 7C96                       u1020 7C9E  
                     u1100 7612                       u1101 760E                       u1030 7D2A  
                     u1110 763C                       u1031 7D26                       u1111 7638  
                     u1040 7D3A                       u1200 7868                       u1120 7672  
                     u1041 7D36                       u1201 7864                       u1121 766E  
                     u1050 7D4A                       u1210 789E                       u1130 76B4  
                     u1051 7D46                       u1211 789A                       u1131 76B0  
                     u1300 7990                       u1060 7D5A                       u1220 78D4  
                     u1140 76EA                       u1301 798C                       u1061 7D56  
                     u1221 78D0                       u1141 76E6                       u1310 79A0  
                     u1070 7D9E                       u1230 790A                       u1150 7720  
                     u1311 799C                       u1071 7D9A                       u1231 7906  
                     u1151 771C                       u1400 7A52                       u1320 79B0  
                     u1080 7040                       u1160 7790                       u1401 7A4C  
                     u1321 79AC                       u1081 703C                       u1161 778C  
                     u1410 7A6C                       u1330 79C4                       u1090 710A  
                     u1250 71E6                       u1170 77C6                       u1411 7A68  
                     u1331 79C0                       u1091 7106                       u1251 71E2  
                     u1171 77C2                       u1500 7B22                       u1420 7A86  
                     u1340 79DA                       u1260 7948                       u1180 77FC  
                     u1501 7B1E                       u1421 7A82                       u1341 79D4  
                     u1261 7942                       u1245 7194                       u1181 77F8  
                     u1510 7B36                       u1430 7A96                       u1406 7A54  
                     u1350 79F4                       u1270 794A                       u1190 7832  
                     u1511 7B32                       u1431 7A92                       u1351 79F0  
                     u1191 782E                       u1440 7AA6                       u1360 7A0E  
                     u1280 795C                       u1520 6F86                       u1441 7AA2  
                     u1361 7A0A                       u1281 7956                       u1521 6F82  
                     u1450 7ABA                       u1370 7A1E                       u1346 79DC  
                     u1290 7976                       u1530 6F9A                       u1451 7AB6  
                     u1371 7A1A                       u1291 7972                       u1531 6F96  
                     u1460 7ACE                       u1380 7A2E                       u1461 7AC8  
                     u1381 7A2A                       u1470 7AE8                       u1390 7A42  
                     u1286 795E                       u1471 7AE4                       u1391 7A3E  
                     u1480 7B02                       u1481 7AFE                       u1490 7B12  
                     u1466 7AD0                       u1491 7B0E                       u1577 7082  
                     _WCOL 7E37                       _SPEN 7D5F                       _TRMT 7D61  
          __end_of_UART_Tx 6F0A                       abs@a 000B                       _dbuf 0060  
                     _main 704A                       _prec 003E                       fsr1h 0FE2  
                     fsr2h 0FDA                       indf2 0FDF                       fsr1l 0FE1  
                     fsr2l 0FD9                       start 0000               ___param_bank 0000  
 UART_select_baud@baudrate 0001                      ??_abs 000D                 _Clock_Init 7928  
             _BAUDCON1bits 0FB8            __end_of___aldiv 74B8            __end_of___almod 73AC  
                    ?_main 0001                      STR_10 7FAC                      STR_11 7F34  
                    STR_12 7ED3                      STR_20 7EB1                      STR_21 7FDC  
                    STR_13 7F86                      STR_30 7FA3                      STR_14 7F34  
                    STR_22 7FE8                      STR_15 7ED3                      STR_31 7FFA  
                    STR_23 7F9A                      STR_32 7F9A                      STR_24 7FA3  
                    STR_16 7F70                      STR_40 7F24                      STR_33 7FA3  
                    STR_17 7F34                      STR_25 7FF4                      STR_41 7EE4  
                    STR_26 7F9A                      STR_18 7ED3                      STR_50 7FBE  
                    STR_34 7F14                      STR_42 7EF4                      STR_27 7FA3  
                    STR_35 7F07                      STR_19 7E76                      STR_43 7DF7  
                    STR_51 7DDB                      STR_28 7FEE                      STR_44 7F4F  
                    STR_36 7F04                      STR_52 7E2C                      STR_29 7F9A  
                    STR_45 7F5A                      STR_37 7EC2                      STR_38 7FCE  
                    STR_46 7FBE                      STR_39 7FE2                      STR_47 7E45  
                    STR_48 7E5E                      STR_49 7E12                      _BRGH1 7D62  
                    _RC1IF 7CF5                      _RCREG 0FAE          Clock_Init@bStatus 0003  
             vfpfcnvrt@fmt 0011           _UART_config_show 75F8                      _SPBRG 0FAF  
                    _SSPEN 7E35                      _TXEN1 7D65                      _SYNC1 7D64  
                    _flags 0040                      _fputc 71F6                      _width 003C  
                    _putch 6EEA                      tablat 0FF5          ??_SPI_actual_frec 0013  
                    status 0FD8            __initialization 6F28               __end_of_main 7096  
                   ??_main 003A              __activetblptr 0002                  ??_UART_Tx 0001  
                   ?_fputc 0003                     _BRG161 7DC3                     ?_putch 0001  
                   _RCREG1 0FAE              vfpfcnvrt@done 0015                     _SPBRGH 0FB0  
                   _TRISC6 7CA6                     _TRISC7 7CA7                     _SSPBUF 0FC9  
                   _TXREG1 0FAD               vfprintf@cfmt 0022          __end_of_UART_Init 6F72  
        ??_SPI_config_show 002B                  ??___aldiv 0009                  ??___almod 0009  
              ?_Clock_Init 0001                     clear_0 6F2E                     isa$std 0001  
                   _printf 6F0A   __end_of_SPI_ErrorHandler 7172                     fputc@c 0003  
             __mediumconst 7DDA                     tblptrh 0FF7                     tblptrl 0FF6  
                   tblptru 0FF8          __end_of_SPI_write 6F9E           __end_of_vfprintf 704A  
               __accesstop 0060    __end_of__initialization 6F3E              ___rparam_used 0001  
         _UART_select_baud 74B8             __pcstackCOMRAM 0001              __end_of_fputc 72C0  
            __end_of_putch 6EF4                    ??_fputc 0007          ??_SPI_master_init 003A  
                  ??_putch 0002                 __pbssBANK0 0060   __end_of_UART_config_show 773E  
      Clock_Init@bItTimeEn 0007                    ?_printf 0024            _SPI_actual_frec 7096  
                  _SSP1ADD 0FC8                    _UART_Tx 6EF4                    __Hparam 0000  
                  __Lparam 0000                    ___aldiv 73AC                    ___almod 72C0  
                ?_vfprintf 001D                    __pcinit 6F28                    __ramtop 0800  
                  __ptext0 704A                    __ptext1 6F48                    __ptext2 74B8  
                  __ptext3 75F8                    __ptext4 6F72                    __ptext5 6F9E  
                  __ptext6 773E                    __ptext7 7096                    __ptext8 7172  
                  __ptext9 70F8                UART_Tx@dato 0001           ___aldiv@dividend 0001  
     end_of_initialization 6F3E            _SPI_config_show 773E                    fputc@fp 0005  
            __Lmediumconst 7DDA      Clock_Init@bStatus_562 0006      Clock_Init@bStatus_558 0004  
    Clock_Init@bStatus_559 0005          __end_of_vfpfcnvrt 7DDA                  _RCSTAbits 0FAB  
         ___aldiv@quotient 000B                    postdec2 0FDD                    postinc0 0FEE  
                  postinc1 0FE6                    postinc2 0FDE           vfpfcnvrt@convarg 0018  
             ??_Clock_Init 0003                 ??_vfprintf 0022    __end_of_SPI_actual_frec 70F8  
                _UART_Init 6F48          ?_SPI_ErrorHandler 0001                  _TRISAbits 0F92  
                _TRISBbits 0F93   __end_of_UART_select_baud 75F8         ??_SPI_ErrorHandler 002B  
                _SPI_write 6F72         __end_of_Clock_Init 7B3E                  _TXSTAbits 0FAC  
        ??_SPI_BaudRateGen 0032                vfpfcnvrt@ap 0012                vfpfcnvrt@cp 0016  
              vfpfcnvrt@fp 000F                 ?_UART_Init 002B            _SPI_master_init 6F9E  
           __end_of_printf 6F28        start_initialization 6F28    __end_of_SPI_config_show 7928  
   SPI_BaudRateGen@baudReg 0036                __end_of_abs 7004  SPI_ErrorHandler@errorCode 002D  
     Clock_Init@s16Timeout 0001                 ?_SPI_write 0001          ?_UART_config_show 0001  
              vfprintf@fmt 001F         ??_UART_config_show 002B           ?_SPI_actual_frec 000F  
                 ??_printf 002A                __pbssCOMRAM 003C                   ?_UART_Tx 0001  
            SPI_write@dato 002E    __end_of_SPI_master_init 6FD0              __pmediumconst 7DDA  
                 ?___aldiv 0001                   ?___almod 0001                ??_UART_Init 002F  
         ___almod@dividend 0001           ?_SPI_config_show 0001                ??_SPI_write 002E  
          ___aldiv@divisor 0005            ___aldiv@counter 0009                  _vfpfcnvrt 7B3E  
        UART_Init@baudrate 002B      SPI_BaudRateGen@FClock 002E          ?_UART_select_baud 0001  
          _SPI_BaudRateGen 7172                 vfpfcnvrt@c 001C         ??_UART_select_baud 0005  
                 __Hrparam 0000                 vfprintf@ap 0021                   __Lrparam 0000  
               vfprintf@fp 001D           ?_SPI_master_init 0001                 ?_vfpfcnvrt 000F  
                 __ptext10 6F0A                   __ptext11 7004                   __ptext12 7B3E  
                 __ptext13 71F6                   __ptext14 6EEA                   __ptext15 6EF4  
                 __ptext16 6FD0                   __ptext17 72C0                   __ptext18 73AC  
                 __ptext19 7928            ___almod@divisor 0005            ___almod@counter 0009  
              _OSCCON2bits 0FD2                   isa$xinst 0000                   _vfprintf 7004  
                printf@fmt 0024    __end_of_SPI_BaudRateGen 71F6                  putch@data 0002  
              _OSCTUNEbits 0F9B        SPI_actual_frec@baud 0015                 _OSCCONbits 0FD3  
                 printf@ap 002A                ??_vfpfcnvrt 0013       Clock_Init@returnCode 0008  
             ___aldiv@sign 000A                _SSPCON1bits 0FC6               ___almod@sign 000A  
         _SPI_ErrorHandler 70F8  
