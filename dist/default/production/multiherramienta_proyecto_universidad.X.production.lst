

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Thu Oct 03 17:57:27 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F45K50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    24                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    25                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    26  0000                     
    27                           ; Generated 12/10/2023 GMT
    28                           ; 
    29                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution. Publication is not required when
    43                           ;        this file is used in an embedded application.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC18F45K50 Definitions
    59                           ; 
    60                           ; SFR Addresses
    61  0000                     _RCREG	set	4014
    62  0000                     _TXREG1	set	4013
    63  0000                     _SPBRG	set	4015
    64  0000                     _SPBRGH	set	4016
    65  0000                     _BRG161	set	32195
    66  0000                     _RCREG1	set	4014
    67  0000                     _TXSTAbits	set	4012
    68  0000                     _RCSTAbits	set	4011
    69  0000                     _BAUDCON1	set	4024
    70  0000                     _TXSTA1bits	set	4012
    71  0000                     _TRMT	set	32097
    72  0000                     _TRISC7	set	31911
    73  0000                     _CREN	set	32092
    74  0000                     _TXEN1	set	32101
    75  0000                     _BRGH1	set	32098
    76  0000                     _ANSELC	set	3933
    77  0000                     _LATAbits	set	3977
    78  0000                     _TRISAbits	set	3986
    79  0000                     _PIR1bits	set	3998
    80  0000                     _TRISC6	set	31910
    81  0000                     _SPEN	set	32095
    82  0000                     _SYNC1	set	32100
    83  0000                     _OSCCON2bits	set	4050
    84  0000                     _OSCTUNEbits	set	3995
    85  0000                     _OSCCONbits	set	4051
    86                           
    87                           	psect	smallconst
    88  0000'                    __psmallconst:
    89                           	callstack 0
    90  0000' 00                 	db	0
    91  0001'                    STR_5:
    92  0001' 62                 	db	98	;'b'
    93  0002' 61                 	db	97	;'a'
    94  0003' 6A                 	db	106	;'j'
    95  0004' 61                 	db	97	;'a'
    96  0005' 20                 	db	32
    97  0006' 76                 	db	118	;'v'
    98  0007' 65                 	db	101	;'e'
    99  0008' 6C                 	db	108	;'l'
   100  0009' 6F                 	db	111	;'o'
   101  000A' 63                 	db	99	;'c'
   102  000B' 69                 	db	105	;'i'
   103  000C' 64                 	db	100	;'d'
   104  000D' 61                 	db	97	;'a'
   105  000E' 64                 	db	100	;'d'
   106  000F' 20                 	db	32
   107  0010' 0D                 	db	13
   108  0011' 0A                 	db	10
   109  0012' 00                 	db	0
   110  0013'                    STR_4:
   111  0013' 61                 	db	97	;'a'
   112  0014' 6C                 	db	108	;'l'
   113  0015' 74                 	db	116	;'t'
   114  0016' 61                 	db	97	;'a'
   115  0017' 20                 	db	32
   116  0018' 76                 	db	118	;'v'
   117  0019' 65                 	db	101	;'e'
   118  001A' 6C                 	db	108	;'l'
   119  001B' 6F                 	db	111	;'o'
   120  001C' 63                 	db	99	;'c'
   121  001D' 69                 	db	105	;'i'
   122  001E' 64                 	db	100	;'d'
   123  001F' 61                 	db	97	;'a'
   124  0020' 64                 	db	100	;'d'
   125  0021' 20                 	db	32
   126  0022' 0D                 	db	13
   127  0023' 0A                 	db	10
   128  0024' 00                 	db	0
   129  0025'                    STR_12:
   130  0025' 44                 	db	68	;'D'
   131  0026' 65                 	db	101	;'e'
   132  0027' 73                 	db	115	;'s'
   133  0028' 68                 	db	104	;'h'
   134  0029' 61                 	db	97	;'a'
   135  002A' 62                 	db	98	;'b'
   136  002B' 69                 	db	105	;'i'
   137  002C' 6C                 	db	108	;'l'
   138  002D' 69                 	db	105	;'i'
   139  002E' 74                 	db	116	;'t'
   140  002F' 61                 	db	97	;'a'
   141  0030' 64                 	db	100	;'d'
   142  0031' 6F                 	db	111	;'o'
   143  0032' 20                 	db	32
   144  0033' 0D                 	db	13
   145  0034' 0A                 	db	10
   146  0035' 00                 	db	0
   147  0036'                    STR_11:
   148  0036' 48                 	db	72	;'H'
   149  0037' 61                 	db	97	;'a'
   150  0038' 62                 	db	98	;'b'
   151  0039' 69                 	db	105	;'i'
   152  003A' 6C                 	db	108	;'l'
   153  003B' 69                 	db	105	;'i'
   154  003C' 74                 	db	116	;'t'
   155  003D' 61                 	db	97	;'a'
   156  003E' 64                 	db	100	;'d'
   157  003F' 6F                 	db	111	;'o'
   158  0040' 20                 	db	32
   159  0041' 0D                 	db	13
   160  0042' 0A                 	db	10
   161  0043' 00                 	db	0
   162  0044'                    STR_9:
   163  0044' 78                 	db	120	;'x'
   164  0045' 20                 	db	32
   165  0046' 62                 	db	98	;'b'
   166  0047' 61                 	db	97	;'a'
   167  0048' 75                 	db	117	;'u'
   168  0049' 64                 	db	100	;'d'
   169  004A' 69                 	db	105	;'i'
   170  004B' 6F                 	db	111	;'o'
   171  004C' 73                 	db	115	;'s'
   172  004D' 20                 	db	32
   173  004E' 0D                 	db	13
   174  004F' 0A                 	db	10
   175  0050' 00                 	db	0
   176  0051'                    STR_6:
   177  0051' 42                 	db	66	;'B'
   178  0052' 61                 	db	97	;'a'
   179  0053' 75                 	db	117	;'u'
   180  0054' 64                 	db	100	;'d'
   181  0055' 72                 	db	114	;'r'
   182  0056' 61                 	db	97	;'a'
   183  0057' 74                 	db	116	;'t'
   184  0058' 65                 	db	101	;'e'
   185  0059' 3A                 	db	58	;':'
   186  005A' 20                 	db	32
   187  005B' 00                 	db	0
   188  005C'                    STR_16:
   189  005C' 52                 	db	82	;'R'
   190  005D' 65                 	db	101	;'e'
   191  005E' 63                 	db	99	;'c'
   192  005F' 65                 	db	101	;'e'
   193  0060' 70                 	db	112	;'p'
   194  0061' 74                 	db	116	;'t'
   195  0062' 6F                 	db	111	;'o'
   196  0063' 72                 	db	114	;'r'
   197  0064' 3A                 	db	58	;':'
   198  0065' 20                 	db	32
   199  0066' 00                 	db	0
   200  0067'                    STR_3:
   201  0067' 41                 	db	65	;'A'
   202  0068' 73                 	db	115	;'s'
   203  0069' 69                 	db	105	;'i'
   204  006A' 6E                 	db	110	;'n'
   205  006B' 63                 	db	99	;'c'
   206  006C' 72                 	db	114	;'r'
   207  006D' 6F                 	db	111	;'o'
   208  006E' 6E                 	db	110	;'n'
   209  006F' 6F                 	db	111	;'o'
   210  0070' 20                 	db	32
   211  0071' 00                 	db	0
   212  0072'                    STR_13:
   213  0072' 54                 	db	84	;'T'
   214  0073' 72                 	db	114	;'r'
   215  0074' 61                 	db	97	;'a'
   216  0075' 6E                 	db	110	;'n'
   217  0076' 73                 	db	115	;'s'
   218  0077' 6F                 	db	111	;'o'
   219  0078' 72                 	db	114	;'r'
   220  0079' 3A                 	db	58	;':'
   221  007A' 20                 	db	32
   222  007B' 00                 	db	0
   223  007C'                    STR_2:
   224  007C' 53                 	db	83	;'S'
   225  007D' 69                 	db	105	;'i'
   226  007E' 6E                 	db	110	;'n'
   227  007F' 63                 	db	99	;'c'
   228  0080' 72                 	db	114	;'r'
   229  0081' 6F                 	db	111	;'o'
   230  0082' 6E                 	db	110	;'n'
   231  0083' 6F                 	db	111	;'o'
   232  0084' 20                 	db	32
   233  0085' 00                 	db	0
   234  0086'                    STR_10:
   235  0086' 50                 	db	80	;'P'
   236  0087' 75                 	db	117	;'u'
   237  0088' 65                 	db	101	;'e'
   238  0089' 72                 	db	114	;'r'
   239  008A' 74                 	db	116	;'t'
   240  008B' 6F                 	db	111	;'o'
   241  008C' 3A                 	db	58	;':'
   242  008D' 20                 	db	32
   243  008E' 00                 	db	0
   244  008F'                    STR_7:
   245  008F' 31                 	db	49	;'1'
   246  0090' 36                 	db	54	;'6'
   247  0091' 20                 	db	32
   248  0092' 62                 	db	98	;'b'
   249  0093' 69                 	db	105	;'i'
   250  0094' 74                 	db	116	;'t'
   251  0095' 73                 	db	115	;'s'
   252  0096' 20                 	db	32
   253  0097' 00                 	db	0
   254  0098'                    STR_8:
   255  0098' 38                 	db	56	;'8'
   256  0099' 20                 	db	32
   257  009A' 62                 	db	98	;'b'
   258  009B' 69                 	db	105	;'i'
   259  009C' 74                 	db	116	;'t'
   260  009D' 73                 	db	115	;'s'
   261  009E' 20                 	db	32
   262  009F' 00                 	db	0
   263  00A0'                    STR_1:
   264  00A0' 4D                 	db	77	;'M'
   265  00A1' 6F                 	db	111	;'o'
   266  00A2' 64                 	db	100	;'d'
   267  00A3' 6F                 	db	111	;'o'
   268  00A4' 3A                 	db	58	;':'
   269  00A5' 20                 	db	32
   270  00A6' 00                 	db	0
   271  00A7' 00                 	db	0	; dummy byte at the end
   272  0000                     
   273                           ; #config settings
   274                           
   275                           	psect	cinit
   276  0000'                    __pcinit:
   277                           	callstack 0
   278  0000'                    start_initialization:
   279                           	callstack 0
   280  0000'                    __initialization:
   281                           	callstack 0
   282                           
   283                           ; Clear objects allocated to COMRAM (38 bytes)
   284  0000' EE00' F000'        	lfsr	0,__pbssCOMRAM
   285  0004' 0E26               	movlw	38
   286  0006'                    clear_0:
   287  0006' 6AEE               	clrf	postinc0,c
   288  0008' 06E8               	decf	wreg,f,c
   289  000A' E1FD               	bnz	clear_0
   290  000C'                    end_of_initialization:
   291                           	callstack 0
   292  000C'                    __end_of__initialization:
   293                           	callstack 0
   294  000C' 0E00'              	movlw	low (__Lmediumconst shr (0+16))
   295  000E' 6EF8               	movwf	tblptru,c
   296  0010' 0100               	movlb	0
   297  0012' EF00' F000'        	goto	_main	;jump to C main() function
   298                           
   299                           	psect	bssCOMRAM
   300  0000'                    __pbssCOMRAM:
   301                           	callstack 0
   302  0000'                    	ds	32
   303  0020'                    _width:
   304                           	callstack 0
   305  0020'                    	ds	2
   306  0022'                    _prec:
   307                           	callstack 0
   308  0022'                    	ds	2
   309  0024'                    _flags:
   310                           	callstack 0
   311  0024'                    	ds	1
   312  0025'                    _readMessage:
   313                           	callstack 0
   314  0025'                    	ds	1
   315                           
   316                           	psect	cstackCOMRAM
   317  0000'                    __pcstackCOMRAM:
   318                           	callstack 0
   319  0000'                    UART_Tx@dato:
   320                           	callstack 0
   321  0000'                    Clock_Init@s16Timeout:
   322                           	callstack 0
   323  0000'                    UART_select_baud@baudrate:
   324                           	callstack 0
   325                           
   326                           ; 4 bytes @ 0x0
   327  0000'                    	ds	1
   328  0001'                    putch@data:
   329                           	callstack 0
   330                           
   331                           ; 1 bytes @ 0x1
   332  0001'                    	ds	1
   333  0002'                    Clock_Init@bStatus:
   334                           	callstack 0
   335  0002'                    fputc@c:
   336                           	callstack 0
   337                           
   338                           ; 2 bytes @ 0x2
   339  0002'                    	ds	1
   340  0003'                    Clock_Init@bStatus_596:
   341                           	callstack 0
   342                           
   343                           ; 1 bytes @ 0x3
   344  0003'                    	ds	1
   345  0004'                    ??_UART_select_baud:
   346  0004'                    Clock_Init@bStatus_597:
   347                           	callstack 0
   348  0004'                    fputc@fp:
   349                           	callstack 0
   350                           
   351                           ; 2 bytes @ 0x4
   352  0004'                    	ds	1
   353  0005'                    Clock_Init@bStatus_600:
   354                           	callstack 0
   355                           
   356                           ; 1 bytes @ 0x5
   357  0005'                    	ds	1
   358  0006'                    ??_fputc:
   359  0006'                    Clock_Init@bItTimeEn:
   360                           	callstack 0
   361                           
   362                           ; 1 bytes @ 0x6
   363  0006'                    	ds	1
   364  0007'                    Clock_Init@returnCode:
   365                           	callstack 0
   366                           
   367                           ; 1 bytes @ 0x7
   368  0007'                    	ds	4
   369  000B'                    vfpfcnvrt@fp:
   370                           	callstack 0
   371                           
   372                           ; 2 bytes @ 0xB
   373  000B'                    	ds	2
   374  000D'                    vfpfcnvrt@fmt:
   375                           	callstack 0
   376                           
   377                           ; 1 bytes @ 0xD
   378  000D'                    	ds	1
   379  000E'                    vfpfcnvrt@ap:
   380                           	callstack 0
   381                           
   382                           ; 1 bytes @ 0xE
   383  000E'                    	ds	1
   384  000F'                    ?_vfprintf:
   385                           	callstack 0
   386  000F'                    vfprintf@fp:
   387                           	callstack 0
   388                           
   389                           ; 2 bytes @ 0xF
   390  000F'                    	ds	2
   391  0011'                    vfprintf@fmt:
   392                           	callstack 0
   393                           
   394                           ; 1 bytes @ 0x11
   395  0011'                    	ds	1
   396  0012'                    vfprintf@ap:
   397                           	callstack 0
   398                           
   399                           ; 1 bytes @ 0x12
   400  0012'                    	ds	1
   401  0013'                    vfprintf@cfmt:
   402                           	callstack 0
   403                           
   404                           ; 1 bytes @ 0x13
   405  0013'                    	ds	1
   406  0014'                    ?_printf:
   407                           	callstack 0
   408  0014'                    printf@fmt:
   409                           	callstack 0
   410                           
   411                           ; 1 bytes @ 0x14
   412  0014'                    	ds	1
   413  0015'                    printf@ap:
   414                           	callstack 0
   415                           
   416                           ; 1 bytes @ 0x15
   417  0015'                    	ds	1
   418  0016'                    UART_Init@baudrate:
   419                           	callstack 0
   420                           
   421                           ; 4 bytes @ 0x16
   422  0016'                    	ds	4
   423  001A'                    
   424                           ; 1 bytes @ 0x1A
   425 ;;
   426 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   427 ;;
   428 ;; *************** function _main *****************
   429 ;; Defined at:
   430 ;;		line 20 in file "src/main.c"
   431 ;; Parameters:    Size  Location     Type
   432 ;;		None
   433 ;; Auto vars:     Size  Location     Type
   434 ;;		None
   435 ;; Return value:  Size  Location     Type
   436 ;;                  2   18[None  ] int 
   437 ;; Registers used:
   438 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, bsr, status,2, status,0, pcl, pclath, pclatu, btemp, b
      +temp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, 
      +btemp+14, btemp+15, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, 
      +btemp+26, btemp+27, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, cs
      +tack
   439 ;; Tracked objects:
   440 ;;		On entry : 0/0
   441 ;;		On exit  : 0/0
   442 ;;		Unchanged: 0/0
   443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   444 ;;      Params:         0       0       0       0       0       0       0       0       0
   445 ;;      Locals:         0       0       0       0       0       0       0       0       0
   446 ;;      Temps:          0       0       0       0       0       0       0       0       0
   447 ;;      Totals:         0       0       0       0       0       0       0       0       0
   448 ;;Total ram usage:        0 bytes
   449 ;; Hardware stack levels required when called: 8
   450 ;; This function calls:
   451 ;;		_Clock_Init
   452 ;;		_UART_Init
   453 ;;		_UART_Rx
   454 ;; This function is called by:
   455 ;;		Startup code after reset
   456 ;; This function uses a non-reentrant model
   457 ;;
   458                           
   459                           	psect	text0
   460  0000'                    __ptext0:
   461                           	callstack 0
   462  0000'                    _main:
   463                           	callstack 23
   464  0000'                    
   465                           ;src/main.c: 22:     Clock_Init(16000);
   466  0000' 0E3E               	movlw	62
   467  0002' 6E00'              	movwf	(Clock_Init@s16Timeout+1)^0,c
   468  0004' 0E80               	movlw	128
   469  0006' 6E00'              	movwf	Clock_Init@s16Timeout^0,c
   470  0008' EC00' F000'        	call	_Clock_Init	;wreg free
   471  000C'                    
   472                           ;src/main.c: 23:     UART_Init(9600);
   473  000C' 0E80               	movlw	128
   474  000E' 6E00'              	movwf	UART_Init@baudrate^0,c
   475  0010' 0E25               	movlw	37
   476  0012' 6E00'              	movwf	(UART_Init@baudrate+1)^0,c
   477  0014' 0E00               	movlw	0
   478  0016' 6E00'              	movwf	(UART_Init@baudrate+2)^0,c
   479  0018' 0E00               	movlw	0
   480  001A' 6E00'              	movwf	(UART_Init@baudrate+3)^0,c
   481  001C' EC00' F000'        	call	_UART_Init	;wreg free
   482  0020'                    
   483                           ;src/main.c: 24:     TRISAbits.RA1 = 0;
   484  0020' 9292               	bcf	146,1,c	;volatile
   485  0022'                    l1638:
   486                           
   487                           ;src/main.c: 27:     {;src/main.c: 28:         if(PIR1bits.RC1IF){
   488  0022' AA9E               	btfss	158,5,c	;volatile
   489  0024' EF00' F000'        	goto	u831
   490  0028' EF00' F000'        	goto	u830
   491  002C'                    u831:
   492  002C' EF00' F000'        	goto	l1638
   493  0030'                    u830:
   494  0030'                    
   495                           ;src/main.c: 29:             readMessage = UART_Rx();
   496  0030' EC00' F000'        	call	_UART_Rx	;wreg free
   497  0034' 6E00'              	movwf	_readMessage^0,c
   498  0036'                    
   499                           ;src/main.c: 30:             if(readMessage == '1') do { LATAbits.LATA1 = 1; } while(0);
   500  0036' 0E31               	movlw	49
   501  0038' 1800'              	xorwf	_readMessage^0,w,c
   502  003A' A4D8               	btfss	status,2,c
   503  003C' EF00' F000'        	goto	u841
   504  0040' EF00' F000'        	goto	u840
   505  0044'                    u841:
   506  0044' EF00' F000'        	goto	l1644
   507  0048'                    u840:
   508  0048' 8289               	bsf	137,1,c	;volatile
   509  004A'                    l1644:
   510                           
   511                           ;src/main.c: 31:             if(readMessage == '0') do { LATAbits.LATA1 = 0; } while(0);
   512  004A' 0E30               	movlw	48
   513  004C' 1800'              	xorwf	_readMessage^0,w,c
   514  004E' A4D8               	btfss	status,2,c
   515  0050' EF00' F000'        	goto	u851
   516  0054' EF00' F000'        	goto	u850
   517  0058'                    u851:
   518  0058' EF00' F000'        	goto	l1638
   519  005C'                    u850:
   520  005C' 9289               	bcf	137,1,c	;volatile
   521  005E' EF00' F000'        	goto	l1638
   522  0062' EF00' F000'        	goto	start
   523  0066'                    __end_of_main:
   524                           	callstack 0
   525                           
   526 ;; *************** function _UART_Rx *****************
   527 ;; Defined at:
   528 ;;		line 105 in file "src/librerias/UART.c"
   529 ;; Parameters:    Size  Location     Type
   530 ;;		None
   531 ;; Auto vars:     Size  Location     Type
   532 ;;		None
   533 ;; Return value:  Size  Location     Type
   534 ;;                  1    wreg      unsigned char 
   535 ;; Registers used:
   536 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, bsr, status,2, status,0, pcl, pclath, pclatu, btemp, b
      +temp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+12, btemp+13, 
      +btemp+14, btemp+15, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, btemp+24, btemp+25, 
      +btemp+26, btemp+27, btemp+28, btemp+29, btemp+30, btemp+31, tosl, structret, tblptrl, tblptrh, tblptru, prodl, prodh, cs
      +tack
   537 ;; Tracked objects:
   538 ;;		On entry : 0/0
   539 ;;		On exit  : 0/0
   540 ;;		Unchanged: 0/0
   541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   542 ;;      Params:         0       0       0       0       0       0       0       0       0
   543 ;;      Locals:         0       0       0       0       0       0       0       0       0
   544 ;;      Temps:          0       0       0       0       0       0       0       0       0
   545 ;;      Totals:         0       0       0       0       0       0       0       0       0
   546 ;;Total ram usage:        0 bytes
   547 ;; Hardware stack levels used: 1
   548 ;; Hardware stack levels required when called: 1
   549 ;; This function calls:
   550 ;;		_UART_ErrorHandler
   551 ;;		_UART_Rx_FRAMING
   552 ;;		_UART_Rx_OVERFLOW
   553 ;; This function is called by:
   554 ;;		_main
   555 ;; This function uses a non-reentrant model
   556 ;;
   557                           
   558                           	psect	text1
   559  0000'                    __ptext1:
   560                           	callstack 0
   561  0000'                    _UART_Rx:
   562                           	callstack 29
   563  0000'                    
   564                           ;src/librerias/UART.c: 106:     UART_ErrorHandler(UART_Rx_OVERFLOW());
   565  0000' EC00' F000'        	call	_UART_Rx_OVERFLOW	;wreg free
   566  0004' EC00' F000'        	call	_UART_ErrorHandler
   567                           
   568                           ;src/librerias/UART.c: 107:     UART_ErrorHandler(UART_Rx_FRAMING());
   569  0008' EC00' F000'        	call	_UART_Rx_FRAMING	;wreg free
   570  000C' EC00' F000'        	call	_UART_ErrorHandler
   571  0010'                    
   572                           ;src/librerias/UART.c: 108:     return RCREG1;
   573  0010' 50AE               	movf	174,w,c	;volatile
   574  0012' 0012               	return		;funcret
   575  0014'                    __end_of_UART_Rx:
   576                           	callstack 0
   577                           
   578 ;; *************** function _UART_Rx_OVERFLOW *****************
   579 ;; Defined at:
   580 ;;		line 88 in file "src/librerias/UART.c"
   581 ;; Parameters:    Size  Location     Type
   582 ;;		None
   583 ;; Auto vars:     Size  Location     Type
   584 ;;		None
   585 ;; Return value:  Size  Location     Type
   586 ;;                  1    wreg      enum E5188
   587 ;; Registers used:
   588 ;;		wreg
   589 ;; Tracked objects:
   590 ;;		On entry : 0/0
   591 ;;		On exit  : 0/0
   592 ;;		Unchanged: 0/0
   593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   594 ;;      Params:         0       0       0       0       0       0       0       0       0
   595 ;;      Locals:         0       0       0       0       0       0       0       0       0
   596 ;;      Temps:          0       0       0       0       0       0       0       0       0
   597 ;;      Totals:         0       0       0       0       0       0       0       0       0
   598 ;;Total ram usage:        0 bytes
   599 ;; Hardware stack levels used: 1
   600 ;; This function calls:
   601 ;;		Nothing
   602 ;; This function is called by:
   603 ;;		_UART_Rx
   604 ;; This function uses a non-reentrant model
   605 ;;
   606                           
   607                           	psect	text2
   608  0000'                    __ptext2:
   609                           	callstack 0
   610  0000'                    _UART_Rx_OVERFLOW:
   611                           	callstack 29
   612  0000'                    
   613                           ;src/librerias/UART.c: 89:     if (RCSTAbits.OERR) {
   614  0000' A2AB               	btfss	171,1,c	;volatile
   615  0002' EF00' F000'        	goto	u141
   616  0006' EF00' F000'        	goto	u140
   617  000A'                    u141:
   618  000A' EF00' F000'        	goto	l1064
   619  000E'                    u140:
   620  000E'                    
   621                           ;src/librerias/UART.c: 90:         RCSTAbits.CREN = 0;
   622  000E' 98AB               	bcf	171,4,c	;volatile
   623                           
   624                           ;src/librerias/UART.c: 91:         RCSTAbits.CREN = 1;
   625  0010' 88AB               	bsf	171,4,c	;volatile
   626  0012'                    
   627                           ;src/librerias/UART.c: 92:         return ERROR_CODE_UART_OVERFLOW;
   628  0012' 0E01               	movlw	1
   629  0014' EF00' F000'        	goto	l129
   630  0018'                    l1064:
   631                           
   632                           ;src/librerias/UART.c: 94:     return ERROR_CODE_UART_OK;
   633  0018' 0E00               	movlw	0
   634  001A'                    l129:
   635  001A' 0012               	return		;funcret
   636  001C'                    __end_of_UART_Rx_OVERFLOW:
   637                           	callstack 0
   638                           
   639 ;; *************** function _UART_Rx_FRAMING *****************
   640 ;; Defined at:
   641 ;;		line 97 in file "src/librerias/UART.c"
   642 ;; Parameters:    Size  Location     Type
   643 ;;		None
   644 ;; Auto vars:     Size  Location     Type
   645 ;;  dummy           1    0        unsigned char 
   646 ;; Return value:  Size  Location     Type
   647 ;;                  1    wreg      enum E5188
   648 ;; Registers used:
   649 ;;		wreg
   650 ;; Tracked objects:
   651 ;;		On entry : 0/0
   652 ;;		On exit  : 0/0
   653 ;;		Unchanged: 0/0
   654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   655 ;;      Params:         0       0       0       0       0       0       0       0       0
   656 ;;      Locals:         0       0       0       0       0       0       0       0       0
   657 ;;      Temps:          0       0       0       0       0       0       0       0       0
   658 ;;      Totals:         0       0       0       0       0       0       0       0       0
   659 ;;Total ram usage:        0 bytes
   660 ;; Hardware stack levels used: 1
   661 ;; This function calls:
   662 ;;		Nothing
   663 ;; This function is called by:
   664 ;;		_UART_Rx
   665 ;; This function uses a non-reentrant model
   666 ;;
   667                           
   668                           	psect	text3
   669  0000'                    __ptext3:
   670                           	callstack 0
   671  0000'                    _UART_Rx_FRAMING:
   672                           	callstack 29
   673  0000'                    
   674                           ;src/librerias/UART.c: 98:     if (RCSTAbits.FERR) {
   675  0000' A4AB               	btfss	171,2,c	;volatile
   676  0002' EF00' F000'        	goto	u151
   677  0006' EF00' F000'        	goto	u150
   678  000A'                    u151:
   679  000A' EF00' F000'        	goto	l1076
   680  000E'                    u150:
   681  000E' 50AE               	movf	174,w,c	;volatile
   682  0010'                    
   683                           ;src/librerias/UART.c: 100:         return ERROR_CODE_UART_FRAMING;
   684  0010' 0E02               	movlw	2
   685  0012' EF00' F000'        	goto	l133
   686  0016'                    l1076:
   687                           
   688                           ;src/librerias/UART.c: 102:     return ERROR_CODE_UART_OK;
   689  0016' 0E00               	movlw	0
   690  0018'                    l133:
   691  0018' 0012               	return		;funcret
   692  001A'                    __end_of_UART_Rx_FRAMING:
   693                           	callstack 0
   694                           
   695 ;; *************** function _UART_Init *****************
   696 ;; Defined at:
   697 ;;		line 28 in file "src/librerias/UART.c"
   698 ;; Parameters:    Size  Location     Type
   699 ;;  baudrate        4   22[COMRAM] unsigned long 
   700 ;; Auto vars:     Size  Location     Type
   701 ;;		None
   702 ;; Return value:  Size  Location     Type
   703 ;;                  1    wreg      void 
   704 ;; Registers used:
   705 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   706 ;; Tracked objects:
   707 ;;		On entry : 0/0
   708 ;;		On exit  : 0/0
   709 ;;		Unchanged: 0/0
   710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   711 ;;      Params:         4       0       0       0       0       0       0       0       0
   712 ;;      Locals:         0       0       0       0       0       0       0       0       0
   713 ;;      Temps:          0       0       0       0       0       0       0       0       0
   714 ;;      Totals:         4       0       0       0       0       0       0       0       0
   715 ;;Total ram usage:        4 bytes
   716 ;; Hardware stack levels used: 1
   717 ;; Hardware stack levels required when called: 7
   718 ;; This function calls:
   719 ;;		_UART_config_show
   720 ;;		_UART_select_baud
   721 ;; This function is called by:
   722 ;;		_main
   723 ;; This function uses a non-reentrant model
   724 ;;
   725                           
   726                           	psect	text4
   727  0000'                    __ptext4:
   728                           	callstack 0
   729  0000'                    _UART_Init:
   730                           	callstack 23
   731  0000'                    
   732                           ;src/librerias/UART.c: 29:     TXSTA1bits.SYNC1 = 0;
   733  0000' 98AC               	bcf	172,4,c	;volatile
   734                           
   735                           ;src/librerias/UART.c: 30:     TXSTA1bits.BRGH1 = 1;
   736  0002' 84AC               	bsf	172,2,c	;volatile
   737  0004'                    
   738                           ;src/librerias/UART.c: 31:     BAUDCON1 = 0x4A;
   739  0004' 0E4A               	movlw	74
   740  0006' 6EB8               	movwf	184,c	;volatile
   741  0008'                    
   742                           ;src/librerias/UART.c: 32:     UART_select_baud(baudrate);
   743  0008' C016' F000'        	movff	UART_Init@baudrate,UART_select_baud@baudrate
   744  000C' C017' F001'        	movff	UART_Init@baudrate+1,UART_select_baud@baudrate+1
   745  0010' C018' F002'        	movff	UART_Init@baudrate+2,UART_select_baud@baudrate+2
   746  0014' C019' F003'        	movff	UART_Init@baudrate+3,UART_select_baud@baudrate+3
   747  0018' EC00' F000'        	call	_UART_select_baud	;wreg free
   748  001C'                    
   749                           ;src/librerias/UART.c: 33:     TRISC6 = 1;
   750  001C' 8C94               	bsf	3988,6,c	;volatile
   751  001E'                    
   752                           ;src/librerias/UART.c: 34:     TRISC7 = 1;
   753  001E' 8E94               	bsf	3988,7,c	;volatile
   754  0020'                    
   755                           ;src/librerias/UART.c: 35:     RCSTAbits.SPEN = 1;
   756  0020' 8EAB               	bsf	171,7,c	;volatile
   757  0022'                    
   758                           ;src/librerias/UART.c: 36:     TXSTAbits.TXEN1 = 1;
   759  0022' 8AAC               	bsf	172,5,c	;volatile
   760  0024'                    
   761                           ;src/librerias/UART.c: 37:     RCSTAbits.CREN = 1;
   762  0024' 88AB               	bsf	171,4,c	;volatile
   763  0026'                    
   764                           ;src/librerias/UART.c: 38:     UART_config_show();
   765  0026' EC00' F000'        	call	_UART_config_show	;wreg free
   766  002A'                    
   767                           ;src/librerias/UART.c: 39:     ANSELC = 0x0;
   768  002A' 0E00               	movlw	0
   769  002C' 010F               	movlb	15	; () banked
   770  002E' 6F5D               	movwf	93,b	;volatile
   771  0030'                    
   772                           ; BSR set to: 15
   773  0030' 0012               	return		;funcret
   774  0032'                    __end_of_UART_Init:
   775                           	callstack 0
   776                           
   777 ;; *************** function _UART_select_baud *****************
   778 ;; Defined at:
   779 ;;		line 42 in file "src/librerias/UART.c"
   780 ;; Parameters:    Size  Location     Type
   781 ;;  baudrate        4    0[COMRAM] unsigned long 
   782 ;; Auto vars:     Size  Location     Type
   783 ;;		None
   784 ;; Return value:  Size  Location     Type
   785 ;;                  1    wreg      void 
   786 ;; Registers used:
   787 ;;		wreg, status,2, status,0
   788 ;; Tracked objects:
   789 ;;		On entry : 0/0
   790 ;;		On exit  : 0/0
   791 ;;		Unchanged: 0/0
   792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   793 ;;      Params:         4       0       0       0       0       0       0       0       0
   794 ;;      Locals:         0       0       0       0       0       0       0       0       0
   795 ;;      Temps:          4       0       0       0       0       0       0       0       0
   796 ;;      Totals:         8       0       0       0       0       0       0       0       0
   797 ;;Total ram usage:        8 bytes
   798 ;; Hardware stack levels used: 1
   799 ;; This function calls:
   800 ;;		Nothing
   801 ;; This function is called by:
   802 ;;		_UART_Init
   803 ;; This function uses a non-reentrant model
   804 ;;
   805                           
   806                           	psect	text5
   807  0000'                    __ptext5:
   808                           	callstack 0
   809  0000'                    _UART_select_baud:
   810                           	callstack 29
   811  0000'                    
   812                           ;src/librerias/UART.c: 43:     switch (baudrate){
   813  0000' EF00' F000'        	goto	l1498
   814  0004'                    l1480:
   815                           
   816                           ;src/librerias/UART.c: 45:             SPBRGH = 0x9C;
   817  0004' 0E9C               	movlw	156
   818  0006' 6EB0               	movwf	176,c	;volatile
   819                           
   820                           ;src/librerias/UART.c: 46:             SPBRG = 0x3F;
   821  0008' 0E3F               	movlw	63
   822  000A' 6EAF               	movwf	175,c	;volatile
   823                           
   824                           ;src/librerias/UART.c: 47:             break;
   825  000C' EF00' F000'        	goto	l116
   826  0010'                    l1482:
   827                           
   828                           ;src/librerias/UART.c: 49:             SPBRGH = 0x27;
   829  0010' 0E27               	movlw	39
   830  0012' 6EB0               	movwf	176,c	;volatile
   831                           
   832                           ;src/librerias/UART.c: 50:             SPBRG = 0x0F;
   833  0014' 0E0F               	movlw	15
   834  0016' 6EAF               	movwf	175,c	;volatile
   835                           
   836                           ;src/librerias/UART.c: 51:             break;
   837  0018' EF00' F000'        	goto	l116
   838  001C'                    l1484:
   839                           
   840                           ;src/librerias/UART.c: 53:             SPBRGH = 0x13;
   841  001C' 0E13               	movlw	19
   842  001E' 6EB0               	movwf	176,c	;volatile
   843                           
   844                           ;src/librerias/UART.c: 54:             SPBRG = 0x87;
   845  0020' 0E87               	movlw	135
   846  0022' 6EAF               	movwf	175,c	;volatile
   847                           
   848                           ;src/librerias/UART.c: 55:             break;
   849  0024' EF00' F000'        	goto	l116
   850  0028'                    l1486:
   851                           
   852                           ;src/librerias/UART.c: 57:             SPBRGH = 0x04;
   853  0028' 0E04               	movlw	4
   854  002A' 6EB0               	movwf	176,c	;volatile
   855                           
   856                           ;src/librerias/UART.c: 58:             SPBRG = 0x7F;
   857  002C' 0E7F               	movlw	127
   858  002E' 6EAF               	movwf	175,c	;volatile
   859                           
   860                           ;src/librerias/UART.c: 59:             break;
   861  0030' EF00' F000'        	goto	l116
   862  0034'                    l1488:
   863                           
   864                           ;src/librerias/UART.c: 61:             SPBRGH = 0x02;
   865  0034' 0E02               	movlw	2
   866  0036' 6EB0               	movwf	176,c	;volatile
   867                           
   868                           ;src/librerias/UART.c: 62:             SPBRG = 0x70;
   869  0038' 0E70               	movlw	112
   870  003A' 6EAF               	movwf	175,c	;volatile
   871                           
   872                           ;src/librerias/UART.c: 63:             break;
   873  003C' EF00' F000'        	goto	l116
   874  0040'                    l1490:
   875                           
   876                           ;src/librerias/UART.c: 65:             SPBRGH = 0x00;
   877  0040' 0E00               	movlw	0
   878  0042' 6EB0               	movwf	176,c	;volatile
   879                           
   880                           ;src/librerias/UART.c: 66:             SPBRG = 0xCF;
   881  0044' 0ECF               	movlw	207
   882  0046' 6EAF               	movwf	175,c	;volatile
   883                           
   884                           ;src/librerias/UART.c: 67:             break;
   885  0048' EF00' F000'        	goto	l116
   886  004C'                    l1492:
   887                           
   888                           ;src/librerias/UART.c: 69:             SPBRGH = 0x00;
   889  004C' 0E00               	movlw	0
   890  004E' 6EB0               	movwf	176,c	;volatile
   891                           
   892                           ;src/librerias/UART.c: 70:             SPBRG = 0x67;
   893  0050' 0E67               	movlw	103
   894  0052' 6EAF               	movwf	175,c	;volatile
   895                           
   896                           ;src/librerias/UART.c: 71:             break;
   897  0054' EF00' F000'        	goto	l116
   898  0058'                    l1494:
   899                           
   900                           ;src/librerias/UART.c: 73:             SPBRGH = 0x04;
   901  0058' 0E04               	movlw	4
   902  005A' 6EB0               	movwf	176,c	;volatile
   903                           
   904                           ;src/librerias/UART.c: 74:             SPBRG = 0xE1;
   905  005C' 0EE1               	movlw	225
   906  005E' 6EAF               	movwf	175,c	;volatile
   907                           
   908                           ;src/librerias/UART.c: 75:             break;
   909  0060' EF00' F000'        	goto	l116
   910  0064'                    l1498:
   911  0064' C000' F004'        	movff	UART_select_baud@baudrate,??_UART_select_baud
   912  0068' C001' F005'        	movff	UART_select_baud@baudrate+1,??_UART_select_baud+1
   913  006C' C002' F006'        	movff	UART_select_baud@baudrate+2,??_UART_select_baud+2
   914  0070' C003' F007'        	movff	UART_select_baud@baudrate+3,??_UART_select_baud+3
   915                           
   916                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 3 sub-sw
      +                          itches
   917                           ; Switch size 1, requested type "simple"
   918                           ; Number of cases is 1, Range of values is 0 to 0
   919                           ; switch strategies available:
   920                           ; Name         Instructions Cycles
   921                           ; simple_byte            4     3 (average)
   922                           ;	Chosen strategy is simple_byte
   923  0074' 5000'              	movf	(??_UART_select_baud+3)^0,w,c
   924  0076' 0A00               	xorlw	0	; case 0
   925  0078' B4D8               	btfsc	status,2,c
   926  007A' EF00' F000'        	goto	l1850
   927  007E' EF00' F000'        	goto	l1494
   928  0082'                    l1846:
   929                           
   930                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 6 sub-sw
      +                          itches
   931                           ; Switch size 1, requested type "simple"
   932                           ; Number of cases is 6, Range of values is 1 to 225
   933                           ; switch strategies available:
   934                           ; Name         Instructions Cycles
   935                           ; simple_byte           19    10 (average)
   936                           ;	Chosen strategy is simple_byte
   937  0082' 5000'              	movf	(??_UART_select_baud+1)^0,w,c
   938  0084' 0A01               	xorlw	1	; case 1
   939  0086' B4D8               	btfsc	status,2,c
   940  0088' EF00' F000'        	goto	l1852
   941  008C' 0A05               	xorlw	5	; case 4
   942  008E' B4D8               	btfsc	status,2,c
   943  0090' EF00' F000'        	goto	l1854
   944  0094' 0A0D               	xorlw	13	; case 9
   945  0096' B4D8               	btfsc	status,2,c
   946  0098' EF00' F000'        	goto	l1856
   947  009C' 0A21               	xorlw	33	; case 40
   948  009E' B4D8               	btfsc	status,2,c
   949  00A0' EF00' F000'        	goto	l1858
   950  00A4' 0A63               	xorlw	99	; case 75
   951  00A6' B4D8               	btfsc	status,2,c
   952  00A8' EF00' F000'        	goto	l1860
   953  00AC' 0AAA               	xorlw	170	; case 225
   954  00AE' B4D8               	btfsc	status,2,c
   955  00B0' EF00' F000'        	goto	l1862
   956  00B4' EF00' F000'        	goto	l1494
   957  00B8'                    l1852:
   958                           
   959                           ; Switch size 1, requested type "simple"
   960                           ; Number of cases is 1, Range of values is 44 to 44
   961                           ; switch strategies available:
   962                           ; Name         Instructions Cycles
   963                           ; simple_byte            4     3 (average)
   964                           ;	Chosen strategy is simple_byte
   965  00B8' 5000'              	movf	??_UART_select_baud^0,w,c
   966  00BA' 0A2C               	xorlw	44	; case 44
   967  00BC' B4D8               	btfsc	status,2,c
   968  00BE' EF00' F000'        	goto	l1480
   969  00C2' EF00' F000'        	goto	l1494
   970  00C6'                    l1854:
   971                           
   972                           ; Switch size 1, requested type "simple"
   973                           ; Number of cases is 1, Range of values is 176 to 176
   974                           ; switch strategies available:
   975                           ; Name         Instructions Cycles
   976                           ; simple_byte            4     3 (average)
   977                           ;	Chosen strategy is simple_byte
   978  00C6' 5000'              	movf	??_UART_select_baud^0,w,c
   979  00C8' 0AB0               	xorlw	176	; case 176
   980  00CA' B4D8               	btfsc	status,2,c
   981  00CC' EF00' F000'        	goto	l1482
   982  00D0' EF00' F000'        	goto	l1494
   983  00D4'                    l1856:
   984                           
   985                           ; Switch size 1, requested type "simple"
   986                           ; Number of cases is 1, Range of values is 96 to 96
   987                           ; switch strategies available:
   988                           ; Name         Instructions Cycles
   989                           ; simple_byte            4     3 (average)
   990                           ;	Chosen strategy is simple_byte
   991  00D4' 5000'              	movf	??_UART_select_baud^0,w,c
   992  00D6' 0A60               	xorlw	96	; case 96
   993  00D8' B4D8               	btfsc	status,2,c
   994  00DA' EF00' F000'        	goto	l1484
   995  00DE' EF00' F000'        	goto	l1494
   996  00E2'                    l1858:
   997                           
   998                           ; Switch size 1, requested type "simple"
   999                           ; Number of cases is 1, Range of values is 177 to 177
  1000                           ; switch strategies available:
  1001                           ; Name         Instructions Cycles
  1002                           ; simple_byte            4     3 (average)
  1003                           ;	Chosen strategy is simple_byte
  1004  00E2' 5000'              	movf	??_UART_select_baud^0,w,c
  1005  00E4' 0AB1               	xorlw	177	; case 177
  1006  00E6' B4D8               	btfsc	status,2,c
  1007  00E8' EF00' F000'        	goto	l1486
  1008  00EC' EF00' F000'        	goto	l1494
  1009  00F0'                    l1860:
  1010                           
  1011                           ; Switch size 1, requested type "simple"
  1012                           ; Number of cases is 1, Range of values is 0 to 0
  1013                           ; switch strategies available:
  1014                           ; Name         Instructions Cycles
  1015                           ; simple_byte            4     3 (average)
  1016                           ;	Chosen strategy is simple_byte
  1017  00F0' 5000'              	movf	??_UART_select_baud^0,w,c
  1018  00F2' 0A00               	xorlw	0	; case 0
  1019  00F4' B4D8               	btfsc	status,2,c
  1020  00F6' EF00' F000'        	goto	l1488
  1021  00FA' EF00' F000'        	goto	l1494
  1022  00FE'                    l1862:
  1023                           
  1024                           ; Switch size 1, requested type "simple"
  1025                           ; Number of cases is 1, Range of values is 0 to 0
  1026                           ; switch strategies available:
  1027                           ; Name         Instructions Cycles
  1028                           ; simple_byte            4     3 (average)
  1029                           ;	Chosen strategy is simple_byte
  1030  00FE' 5000'              	movf	??_UART_select_baud^0,w,c
  1031  0100' 0A00               	xorlw	0	; case 0
  1032  0102' B4D8               	btfsc	status,2,c
  1033  0104' EF00' F000'        	goto	l1490
  1034  0108' EF00' F000'        	goto	l1494
  1035  010C'                    l1848:
  1036                           
  1037                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1038                           ; Switch size 1, requested type "simple"
  1039                           ; Number of cases is 1, Range of values is 194 to 194
  1040                           ; switch strategies available:
  1041                           ; Name         Instructions Cycles
  1042                           ; simple_byte            4     3 (average)
  1043                           ;	Chosen strategy is simple_byte
  1044  010C' 5000'              	movf	(??_UART_select_baud+1)^0,w,c
  1045  010E' 0AC2               	xorlw	194	; case 194
  1046  0110' B4D8               	btfsc	status,2,c
  1047  0112' EF00' F000'        	goto	l1864
  1048  0116' EF00' F000'        	goto	l1494
  1049  011A'                    l1864:
  1050                           
  1051                           ; Switch size 1, requested type "simple"
  1052                           ; Number of cases is 1, Range of values is 0 to 0
  1053                           ; switch strategies available:
  1054                           ; Name         Instructions Cycles
  1055                           ; simple_byte            4     3 (average)
  1056                           ;	Chosen strategy is simple_byte
  1057  011A' 5000'              	movf	??_UART_select_baud^0,w,c
  1058  011C' 0A00               	xorlw	0	; case 0
  1059  011E' B4D8               	btfsc	status,2,c
  1060  0120' EF00' F000'        	goto	l1492
  1061  0124' EF00' F000'        	goto	l1494
  1062  0128'                    l1850:
  1063                           
  1064                           ; Switch size 1, requested type "simple"
  1065                           ; Number of cases is 2, Range of values is 0 to 1
  1066                           ; switch strategies available:
  1067                           ; Name         Instructions Cycles
  1068                           ; simple_byte            7     4 (average)
  1069                           ;	Chosen strategy is simple_byte
  1070  0128' 5000'              	movf	(??_UART_select_baud+2)^0,w,c
  1071  012A' 0A00               	xorlw	0	; case 0
  1072  012C' B4D8               	btfsc	status,2,c
  1073  012E' EF00' F000'        	goto	l1846
  1074  0132' 0A01               	xorlw	1	; case 1
  1075  0134' B4D8               	btfsc	status,2,c
  1076  0136' EF00' F000'        	goto	l1848
  1077  013A' EF00' F000'        	goto	l1494
  1078  013E'                    l116:
  1079  013E' 0012               	return		;funcret
  1080  0140'                    __end_of_UART_select_baud:
  1081                           	callstack 0
  1082                           
  1083 ;; *************** function _UART_config_show *****************
  1084 ;; Defined at:
  1085 ;;		line 13 in file "src/librerias/UART.c"
  1086 ;; Parameters:    Size  Location     Type
  1087 ;;		None
  1088 ;; Auto vars:     Size  Location     Type
  1089 ;;		None
  1090 ;; Return value:  Size  Location     Type
  1091 ;;                  1    wreg      void 
  1092 ;; Registers used:
  1093 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1094 ;; Tracked objects:
  1095 ;;		On entry : 0/0
  1096 ;;		On exit  : 0/0
  1097 ;;		Unchanged: 0/0
  1098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1099 ;;      Params:         0       0       0       0       0       0       0       0       0
  1100 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1101 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1102 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1103 ;;Total ram usage:        0 bytes
  1104 ;; Hardware stack levels used: 1
  1105 ;; Hardware stack levels required when called: 6
  1106 ;; This function calls:
  1107 ;;		_printf
  1108 ;; This function is called by:
  1109 ;;		_UART_Init
  1110 ;; This function uses a non-reentrant model
  1111 ;;
  1112                           
  1113                           	psect	text6
  1114  0000'                    __ptext6:
  1115                           	callstack 0
  1116  0000'                    _UART_config_show:
  1117                           	callstack 23
  1118  0000'                    
  1119                           ;src/librerias/UART.c: 14:     printf("Modo: ");
  1120  0000' 0E00'              	movlw	low STR_1
  1121  0002' 6E00'              	movwf	printf@fmt^0,c
  1122  0004' EC00' F000'        	call	_printf	;wreg free
  1123  0008'                    
  1124                           ;src/librerias/UART.c: 15:     (SYNC1) ? printf("Sincrono "):printf("Asincrono ");
  1125  0008' A8AC               	btfss	4012,4,c	;volatile
  1126  000A' EF00' F000'        	goto	u511
  1127  000E' EF00' F000'        	goto	u510
  1128  0012'                    u511:
  1129  0012' EF00' F000'        	goto	l1446
  1130  0016'                    u510:
  1131  0016' 0E00'              	movlw	low STR_2
  1132  0018' 6E00'              	movwf	printf@fmt^0,c
  1133  001A' EC00' F000'        	call	_printf	;wreg free
  1134  001E' EF00' F000'        	goto	l1448
  1135  0022'                    l1446:
  1136  0022' 0E00'              	movlw	low STR_3
  1137  0024' 6E00'              	movwf	printf@fmt^0,c
  1138  0026' EC00' F000'        	call	_printf	;wreg free
  1139  002A'                    l1448:
  1140                           
  1141                           ;src/librerias/UART.c: 16:     (BRGH1) ? printf("alta velocidad \r\n"):printf("baja velo
      +                          cidad \r\n");
  1142  002A' A4AC               	btfss	4012,2,c	;volatile
  1143  002C' EF00' F000'        	goto	u521
  1144  0030' EF00' F000'        	goto	u520
  1145  0034'                    u521:
  1146  0034' EF00' F000'        	goto	l1452
  1147  0038'                    u520:
  1148  0038' 0E00'              	movlw	low STR_4
  1149  003A' 6E00'              	movwf	printf@fmt^0,c
  1150  003C' EC00' F000'        	call	_printf	;wreg free
  1151  0040' EF00' F000'        	goto	l83
  1152  0044'                    l1452:
  1153  0044' 0E00'              	movlw	low STR_5
  1154  0046' 6E00'              	movwf	printf@fmt^0,c
  1155  0048' EC00' F000'        	call	_printf	;wreg free
  1156  004C'                    l83:
  1157                           
  1158                           ;src/librerias/UART.c: 17:     printf("Baudrate: ");
  1159  004C' 0E00'              	movlw	low STR_6
  1160  004E' 6E00'              	movwf	printf@fmt^0,c
  1161  0050' EC00' F000'        	call	_printf	;wreg free
  1162  0054'                    
  1163                           ;src/librerias/UART.c: 18:     (BRG161) ? printf("16 bits "):printf("8 bits ");
  1164  0054' A6B8               	btfss	4024,3,c	;volatile
  1165  0056' EF00' F000'        	goto	u531
  1166  005A' EF00' F000'        	goto	u530
  1167  005E'                    u531:
  1168  005E' EF00' F000'        	goto	l1458
  1169  0062'                    u530:
  1170  0062' 0E00'              	movlw	low STR_7
  1171  0064' 6E00'              	movwf	printf@fmt^0,c
  1172  0066' EC00' F000'        	call	_printf	;wreg free
  1173  006A' EF00' F000'        	goto	l87
  1174  006E'                    l1458:
  1175  006E' 0E00'              	movlw	low STR_8
  1176  0070' 6E00'              	movwf	printf@fmt^0,c
  1177  0072' EC00' F000'        	call	_printf	;wreg free
  1178  0076'                    l87:
  1179                           
  1180                           ;src/librerias/UART.c: 19:     printf("x baudios \r\n");
  1181  0076' 0E00'              	movlw	low STR_9
  1182  0078' 6E00'              	movwf	printf@fmt^0,c
  1183  007A' EC00' F000'        	call	_printf	;wreg free
  1184                           
  1185                           ;src/librerias/UART.c: 20:     printf("Puerto: ");
  1186  007E' 0E00'              	movlw	low STR_10
  1187  0080' 6E00'              	movwf	printf@fmt^0,c
  1188  0082' EC00' F000'        	call	_printf	;wreg free
  1189  0086'                    
  1190                           ;src/librerias/UART.c: 21:     (SPEN) ? printf("Habilitado \r\n"):printf("Deshabilitado 
      +                          \r\n");
  1191  0086' AEAB               	btfss	4011,7,c	;volatile
  1192  0088' EF00' F000'        	goto	u541
  1193  008C' EF00' F000'        	goto	u540
  1194  0090'                    u541:
  1195  0090' EF00' F000'        	goto	l1464
  1196  0094'                    u540:
  1197  0094' 0E00'              	movlw	low STR_11
  1198  0096' 6E00'              	movwf	printf@fmt^0,c
  1199  0098' EC00' F000'        	call	_printf	;wreg free
  1200  009C' EF00' F000'        	goto	l91
  1201  00A0'                    l1464:
  1202  00A0' 0E00'              	movlw	low STR_12
  1203  00A2' 6E00'              	movwf	printf@fmt^0,c
  1204  00A4' EC00' F000'        	call	_printf	;wreg free
  1205  00A8'                    l91:
  1206                           
  1207                           ;src/librerias/UART.c: 22:     printf("Transor: ");
  1208  00A8' 0E00'              	movlw	low STR_13
  1209  00AA' 6E00'              	movwf	printf@fmt^0,c
  1210  00AC' EC00' F000'        	call	_printf	;wreg free
  1211  00B0'                    
  1212                           ;src/librerias/UART.c: 23:     (TXEN1) ? printf("Habilitado \r\n"):printf("Deshabilitado
      +                           \r\n");
  1213  00B0' AAAC               	btfss	4012,5,c	;volatile
  1214  00B2' EF00' F000'        	goto	u551
  1215  00B6' EF00' F000'        	goto	u550
  1216  00BA'                    u551:
  1217  00BA' EF00' F000'        	goto	l1470
  1218  00BE'                    u550:
  1219  00BE' 0E00'              	movlw	low STR_11
  1220  00C0' 6E00'              	movwf	printf@fmt^0,c
  1221  00C2' EC00' F000'        	call	_printf	;wreg free
  1222  00C6' EF00' F000'        	goto	l95
  1223  00CA'                    l1470:
  1224  00CA' 0E00'              	movlw	low STR_12
  1225  00CC' 6E00'              	movwf	printf@fmt^0,c
  1226  00CE' EC00' F000'        	call	_printf	;wreg free
  1227  00D2'                    l95:
  1228                           
  1229                           ;src/librerias/UART.c: 24:     printf("Receptor: ");
  1230  00D2' 0E00'              	movlw	low STR_16
  1231  00D4' 6E00'              	movwf	printf@fmt^0,c
  1232  00D6' EC00' F000'        	call	_printf	;wreg free
  1233  00DA'                    
  1234                           ;src/librerias/UART.c: 25:     (CREN) ? printf("Habilitado \r\n"):printf("Deshabilitado 
      +                          \r\n");
  1235  00DA' A8AB               	btfss	4011,4,c	;volatile
  1236  00DC' EF00' F000'        	goto	u561
  1237  00E0' EF00' F000'        	goto	u560
  1238  00E4'                    u561:
  1239  00E4' EF00' F000'        	goto	l1476
  1240  00E8'                    u560:
  1241  00E8' 0E00'              	movlw	low STR_11
  1242  00EA' 6E00'              	movwf	printf@fmt^0,c
  1243  00EC' EC00' F000'        	call	_printf	;wreg free
  1244  00F0' EF00' F000'        	goto	l100
  1245  00F4'                    l1476:
  1246  00F4' 0E00'              	movlw	low STR_12
  1247  00F6' 6E00'              	movwf	printf@fmt^0,c
  1248  00F8' EC00' F000'        	call	_printf	;wreg free
  1249  00FC'                    l100:
  1250  00FC' 0012               	return		;funcret
  1251  00FE'                    __end_of_UART_config_show:
  1252                           	callstack 0
  1253                           
  1254 ;; *************** function _printf *****************
  1255 ;; Defined at:
  1256 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\printf.c"
  1257 ;; Parameters:    Size  Location     Type
  1258 ;;  fmt             1   20[COMRAM] PTR const unsigned char 
  1259 ;;		 -> STR_18(17), STR_17(14), STR_16(11), STR_15(17), 
  1260 ;;		 -> STR_14(14), STR_13(10), STR_12(17), STR_11(14), 
  1261 ;;		 -> STR_10(9), STR_9(13), STR_8(8), STR_7(9), 
  1262 ;;		 -> STR_6(11), STR_5(18), STR_4(18), STR_3(11), 
  1263 ;;		 -> STR_2(10), STR_1(7), 
  1264 ;; Auto vars:     Size  Location     Type
  1265 ;;  ret             2    0        int 
  1266 ;;  ap              1   21[COMRAM] PTR void [1]
  1267 ;;		 -> ?_printf(2), 
  1268 ;; Return value:  Size  Location     Type
  1269 ;;                  2   20[COMRAM] int 
  1270 ;; Registers used:
  1271 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1272 ;; Tracked objects:
  1273 ;;		On entry : 0/0
  1274 ;;		On exit  : 0/0
  1275 ;;		Unchanged: 0/0
  1276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1277 ;;      Params:         1       0       0       0       0       0       0       0       0
  1278 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1279 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1280 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1281 ;;Total ram usage:        2 bytes
  1282 ;; Hardware stack levels used: 1
  1283 ;; Hardware stack levels required when called: 5
  1284 ;; This function calls:
  1285 ;;		_vfprintf
  1286 ;; This function is called by:
  1287 ;;		_UART_config_show
  1288 ;; This function uses a non-reentrant model
  1289 ;;
  1290                           
  1291                           	psect	text7
  1292  0000'                    __ptext7:
  1293                           	callstack 0
  1294  0000'                    _printf:
  1295                           	callstack 23
  1296  0000' 0E00'              	movlw	low (?_printf+1)
  1297  0002' 6E00'              	movwf	printf@ap^0,c
  1298  0004' 0E00               	movlw	0
  1299  0006' 6E00'              	movwf	vfprintf@fp^0,c
  1300  0008' 0E00               	movlw	0
  1301  000A' 6E00'              	movwf	(vfprintf@fp+1)^0,c
  1302  000C' C014' F011'        	movff	printf@fmt,vfprintf@fmt
  1303  0010' 0E00'              	movlw	low printf@ap
  1304  0012' 6E00'              	movwf	vfprintf@ap^0,c
  1305  0014' EC00' F000'        	call	_vfprintf	;wreg free
  1306  0018' 0012               	return		;funcret
  1307  001A'                    __end_of_printf:
  1308                           	callstack 0
  1309                           
  1310 ;; *************** function _vfprintf *****************
  1311 ;; Defined at:
  1312 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  1313 ;; Parameters:    Size  Location     Type
  1314 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
  1315 ;;		 -> NULL(0), 
  1316 ;;  fmt             1   17[COMRAM] PTR const unsigned char 
  1317 ;;		 -> STR_18(17), STR_17(14), STR_16(11), STR_15(17), 
  1318 ;;		 -> STR_14(14), STR_13(10), STR_12(17), STR_11(14), 
  1319 ;;		 -> STR_10(9), STR_9(13), STR_8(8), STR_7(9), 
  1320 ;;		 -> STR_6(11), STR_5(18), STR_4(18), STR_3(11), 
  1321 ;;		 -> STR_2(10), STR_1(7), 
  1322 ;;  ap              1   18[COMRAM] PTR PTR void 
  1323 ;;		 -> printf@ap(1), 
  1324 ;; Auto vars:     Size  Location     Type
  1325 ;;  cfmt            1   19[COMRAM] PTR unsigned char 
  1326 ;;		 -> STR_18(17), STR_17(14), STR_16(11), STR_15(17), 
  1327 ;;		 -> STR_14(14), STR_13(10), STR_12(17), STR_11(14), 
  1328 ;;		 -> STR_10(9), STR_9(13), STR_8(8), STR_7(9), 
  1329 ;;		 -> STR_6(11), STR_5(18), STR_4(18), STR_3(11), 
  1330 ;;		 -> STR_2(10), STR_1(7), 
  1331 ;; Return value:  Size  Location     Type
  1332 ;;                  2   15[COMRAM] int 
  1333 ;; Registers used:
  1334 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1335 ;; Tracked objects:
  1336 ;;		On entry : 0/0
  1337 ;;		On exit  : 0/0
  1338 ;;		Unchanged: 0/0
  1339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1340 ;;      Params:         4       0       0       0       0       0       0       0       0
  1341 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1342 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1343 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1344 ;;Total ram usage:        5 bytes
  1345 ;; Hardware stack levels used: 1
  1346 ;; Hardware stack levels required when called: 4
  1347 ;; This function calls:
  1348 ;;		_vfpfcnvrt
  1349 ;; This function is called by:
  1350 ;;		_printf
  1351 ;; This function uses a non-reentrant model
  1352 ;;
  1353                           
  1354                           	psect	text8
  1355  0000'                    __ptext8:
  1356                           	callstack 0
  1357  0000'                    _vfprintf:
  1358                           	callstack 23
  1359  0000'                    
  1360                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  1361  0000' C011' F013'        	movff	vfprintf@fmt,vfprintf@cfmt
  1362                           
  1363                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1364  0004' EF00' F000'        	goto	l1428
  1365  0008'                    l1426:
  1366                           
  1367                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1368  0008' C00F' F00B'        	movff	vfprintf@fp,vfpfcnvrt@fp
  1369  000C' C010' F00C'        	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1370  0010' 0E00'              	movlw	low vfprintf@cfmt
  1371  0012' 6E00'              	movwf	vfpfcnvrt@fmt^0,c
  1372  0014' C012' F00E'        	movff	vfprintf@ap,vfpfcnvrt@ap
  1373  0018' EC00' F000'        	call	_vfpfcnvrt	;wreg free
  1374  001C'                    l1428:
  1375                           
  1376                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1377  001C' C013' FFF6         	movff	vfprintf@cfmt,tblptrl
  1378  0020'                    	if	1	;There is more than 1 active tblptr byte
  1379  0020' 0E00'              	movlw	high __smallconst
  1380  0022' 6EF7               	movwf	tblptrh,c
  1381  0024'                    	endif
  1382  0024'                    	if	0	;tblptru may be non-zero
  1383  0024'                    	endif
  1384  0024'                    	if	0	;tblptru may be non-zero
  1385  0024'                    	endif
  1386  0024' 0008               	tblrd		*
  1387  0026' 50F5               	movf	tablat,w,c
  1388  0028' 0900               	iorlw	0
  1389  002A' A4D8               	btfss	status,2,c
  1390  002C' EF00' F000'        	goto	u501
  1391  0030' EF00' F000'        	goto	u500
  1392  0034'                    u501:
  1393  0034' EF00' F000'        	goto	l1426
  1394  0038'                    u500:
  1395  0038'                    
  1396                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  1397  0038' 0E00               	movlw	0
  1398  003A' 6E00'              	movwf	(?_vfprintf+1)^0,c
  1399  003C' 0E00               	movlw	0
  1400  003E' 6E00'              	movwf	?_vfprintf^0,c
  1401  0040' 0012               	return		;funcret
  1402  0042'                    __end_of_vfprintf:
  1403                           	callstack 0
  1404                           
  1405 ;; *************** function _vfpfcnvrt *****************
  1406 ;; Defined at:
  1407 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  1408 ;; Parameters:    Size  Location     Type
  1409 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  1410 ;;		 -> NULL(0), 
  1411 ;;  fmt             1   13[COMRAM] PTR PTR unsigned char 
  1412 ;;		 -> vfprintf@cfmt(1), 
  1413 ;;  ap              1   14[COMRAM] PTR PTR void 
  1414 ;;		 -> printf@ap(1), 
  1415 ;; Auto vars:     Size  Location     Type
  1416 ;;  cp              3    0        PTR unsigned char 
  1417 ;;  done            1    0        _Bool 
  1418 ;;  c               1    0        unsigned char 
  1419 ;; Return value:  Size  Location     Type
  1420 ;;                  1    wreg      void 
  1421 ;; Registers used:
  1422 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1423 ;; Tracked objects:
  1424 ;;		On entry : 0/0
  1425 ;;		On exit  : 0/0
  1426 ;;		Unchanged: 0/0
  1427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1428 ;;      Params:         4       0       0       0       0       0       0       0       0
  1429 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1430 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1431 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1432 ;;Total ram usage:        4 bytes
  1433 ;; Hardware stack levels used: 1
  1434 ;; Hardware stack levels required when called: 3
  1435 ;; This function calls:
  1436 ;;		_fputc
  1437 ;; This function is called by:
  1438 ;;		_vfprintf
  1439 ;; This function uses a non-reentrant model
  1440 ;;
  1441                           
  1442                           	psect	text9
  1443  0000'                    __ptext9:
  1444                           	callstack 0
  1445  0000'                    _vfpfcnvrt:
  1446                           	callstack 23
  1447  0000'                    
  1448                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  1449  0000' 5000'              	movf	vfpfcnvrt@fmt^0,w,c
  1450  0002' 6ED9               	movwf	fsr2l,c
  1451  0004' 6ADA               	clrf	fsr2h,c
  1452  0006' CFDF FFF6          	movff	indf2,tblptrl
  1453  000A'                    	if	1	;There is more than 1 active tblptr byte
  1454  000A' 0E00'              	movlw	high __smallconst
  1455  000C' 6EF7               	movwf	tblptrh,c
  1456  000E'                    	endif
  1457  000E'                    	if	0	;tblptru may be non-zero
  1458  000E'                    	endif
  1459  000E'                    	if	0	;tblptru may be non-zero
  1460  000E'                    	endif
  1461  000E' 0008               	tblrd		*
  1462  0010' 50F5               	movf	tablat,w,c
  1463  0012' 0A25               	xorlw	37
  1464  0014' A4D8               	btfss	status,2,c
  1465  0016' EF00' F000'        	goto	u491
  1466  001A' EF00' F000'        	goto	u490
  1467  001E'                    u491:
  1468  001E' EF00' F000'        	goto	l1418
  1469  0022'                    u490:
  1470  0022'                    
  1471                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  1472  0022' 5000'              	movf	vfpfcnvrt@fmt^0,w,c
  1473  0024' 6ED9               	movwf	fsr2l,c
  1474  0026' 6ADA               	clrf	fsr2h,c
  1475  0028' 2ADF               	incf	indf2,f,c
  1476  002A'                    
  1477                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  1478  002A' 0E00               	movlw	0
  1479  002C' 6E00'              	movwf	(_width+1)^0,c
  1480  002E' 0E00               	movlw	0
  1481  0030' 6E00'              	movwf	_width^0,c
  1482  0032' C020' F024'        	movff	_width,_flags
  1483  0036'                    
  1484                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  1485  0036' 6800'              	setf	_prec^0,c
  1486  0038' 6800'              	setf	(_prec+1)^0,c
  1487  003A'                    l1414:
  1488                           
  1489                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  1490  003A' 5000'              	movf	vfpfcnvrt@fmt^0,w,c
  1491  003C' 6ED9               	movwf	fsr2l,c
  1492  003E' 6ADA               	clrf	fsr2h,c
  1493  0040' 2ADF               	incf	indf2,f,c
  1494  0042' EF00' F000'        	goto	l874
  1495  0046'                    l1418:
  1496                           
  1497                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  1498  0046' 5000'              	movf	vfpfcnvrt@fmt^0,w,c
  1499  0048' 6ED9               	movwf	fsr2l,c
  1500  004A' 6ADA               	clrf	fsr2h,c
  1501  004C' CFDF FFF6          	movff	indf2,tblptrl
  1502  0050'                    	if	1	;There is more than 1 active tblptr byte
  1503  0050' 0E00'              	movlw	high __smallconst
  1504  0052' 6EF7               	movwf	tblptrh,c
  1505  0054'                    	endif
  1506  0054'                    	if	0	;tblptru may be non-zero
  1507  0054'                    	endif
  1508  0054'                    	if	0	;tblptru may be non-zero
  1509  0054'                    	endif
  1510  0054' 0008               	tblrd		*
  1511  0056' 50F5               	movf	tablat,w,c
  1512  0058' 6E00'              	movwf	fputc@c^0,c
  1513  005A' 6A00'              	clrf	(fputc@c+1)^0,c
  1514  005C' C00B' F004'        	movff	vfpfcnvrt@fp,fputc@fp
  1515  0060' C00C' F005'        	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1516  0064' EC00' F000'        	call	_fputc	;wreg free
  1517  0068' EF00' F000'        	goto	l1414
  1518  006C'                    l874:
  1519  006C' 0012               	return		;funcret
  1520  006E'                    __end_of_vfpfcnvrt:
  1521                           	callstack 0
  1522                           
  1523 ;; *************** function _fputc *****************
  1524 ;; Defined at:
  1525 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_fputc.c"
  1526 ;; Parameters:    Size  Location     Type
  1527 ;;  c               2    2[COMRAM] int 
  1528 ;;  fp              2    4[COMRAM] PTR struct _IO_FILE
  1529 ;;		 -> NULL(0), 
  1530 ;; Auto vars:     Size  Location     Type
  1531 ;;		None
  1532 ;; Return value:  Size  Location     Type
  1533 ;;                  2    2[COMRAM] int 
  1534 ;; Registers used:
  1535 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1536 ;; Tracked objects:
  1537 ;;		On entry : 0/0
  1538 ;;		On exit  : 0/0
  1539 ;;		Unchanged: 0/0
  1540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1541 ;;      Params:         4       0       0       0       0       0       0       0       0
  1542 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1543 ;;      Temps:          5       0       0       0       0       0       0       0       0
  1544 ;;      Totals:         9       0       0       0       0       0       0       0       0
  1545 ;;Total ram usage:        9 bytes
  1546 ;; Hardware stack levels used: 1
  1547 ;; Hardware stack levels required when called: 2
  1548 ;; This function calls:
  1549 ;;		_putch
  1550 ;; This function is called by:
  1551 ;;		_vfpfcnvrt
  1552 ;; This function uses a non-reentrant model
  1553 ;;
  1554                           
  1555                           	psect	text10
  1556  0000'                    __ptext10:
  1557                           	callstack 0
  1558  0000'                    _fputc:
  1559                           	callstack 23
  1560  0000' 5000'              	movf	fputc@fp^0,w,c
  1561  0002' 1000'              	iorwf	(fputc@fp+1)^0,w,c
  1562  0004' B4D8               	btfsc	status,2,c
  1563  0006' EF00' F000'        	goto	u451
  1564  000A' EF00' F000'        	goto	u450
  1565  000E'                    u451:
  1566  000E' EF00' F000'        	goto	l1396
  1567  0012'                    u450:
  1568  0012' 5000'              	movf	fputc@fp^0,w,c
  1569  0014' 1000'              	iorwf	(fputc@fp+1)^0,w,c
  1570  0016' A4D8               	btfss	status,2,c
  1571  0018' EF00' F000'        	goto	u461
  1572  001C' EF00' F000'        	goto	u460
  1573  0020'                    u461:
  1574  0020' EF00' F000'        	goto	l1398
  1575  0024'                    u460:
  1576  0024'                    l1396:
  1577  0024' 5000'              	movf	fputc@c^0,w,c
  1578  0026' EC00' F000'        	call	_putch
  1579  002A' EF00' F000'        	goto	l892
  1580  002E'                    l1398:
  1581  002E' EE20 F00A          	lfsr	2,10
  1582  0032' 5000'              	movf	fputc@fp^0,w,c
  1583  0034' 26D9               	addwf	fsr2l,f,c
  1584  0036' 5000'              	movf	(fputc@fp+1)^0,w,c
  1585  0038' 22DA               	addwfc	fsr2h,f,c
  1586  003A' 50DE               	movf	postinc2,w,c
  1587  003C' 10DE               	iorwf	postinc2,w,c
  1588  003E' B4D8               	btfsc	status,2,c
  1589  0040' EF00' F000'        	goto	u471
  1590  0044' EF00' F000'        	goto	u470
  1591  0048'                    u471:
  1592  0048' EF00' F000'        	goto	l1402
  1593  004C'                    u470:
  1594  004C' EE20 F00A          	lfsr	2,10
  1595  0050' 5000'              	movf	fputc@fp^0,w,c
  1596  0052' 26D9               	addwf	fsr2l,f,c
  1597  0054' 5000'              	movf	(fputc@fp+1)^0,w,c
  1598  0056' 22DA               	addwfc	fsr2h,f,c
  1599  0058' EE10 F003          	lfsr	1,3
  1600  005C' 5000'              	movf	fputc@fp^0,w,c
  1601  005E' 26E1               	addwf	fsr1l,f,c
  1602  0060' 5000'              	movf	(fputc@fp+1)^0,w,c
  1603  0062' 22E2               	addwfc	fsr1h,f,c
  1604  0064' 50DE               	movf	postinc2,w,c
  1605  0066' 5CE6               	subwf	postinc1,w,c
  1606  0068' 50E6               	movf	postinc1,w,c
  1607  006A' 0A80               	xorlw	128
  1608  006C' 6E00'              	movwf	(??_fputc+4)^0,c
  1609  006E' 50DE               	movf	postinc2,w,c
  1610  0070' 0A80               	xorlw	128
  1611  0072' 5800'              	subwfb	(??_fputc+4)^0,w,c
  1612  0074' B0D8               	btfsc	status,0,c
  1613  0076' EF00' F000'        	goto	u481
  1614  007A' EF00' F000'        	goto	u480
  1615  007E'                    u481:
  1616  007E' EF00' F000'        	goto	l892
  1617  0082'                    u480:
  1618  0082'                    l1402:
  1619  0082' EE20 F003          	lfsr	2,3
  1620  0086' 5000'              	movf	fputc@fp^0,w,c
  1621  0088' 26D9               	addwf	fsr2l,f,c
  1622  008A' 5000'              	movf	(fputc@fp+1)^0,w,c
  1623  008C' 22DA               	addwfc	fsr2h,f,c
  1624  008E' CFDE F006'         	movff	postinc2,??_fputc
  1625  0092' CFDD F007'         	movff	postdec2,??_fputc+1
  1626  0096' C004' FFD9         	movff	fputc@fp,fsr2l
  1627  009A' C005' FFDA         	movff	fputc@fp+1,fsr2h
  1628  009E' CFDE F008'         	movff	postinc2,??_fputc+2
  1629  00A2' CFDD F009'         	movff	postdec2,??_fputc+3
  1630  00A6' 5000'              	movf	??_fputc^0,w,c
  1631  00A8' 2400'              	addwf	(??_fputc+2)^0,w,c
  1632  00AA' 6ED9               	movwf	fsr2l,c
  1633  00AC' 5000'              	movf	(??_fputc+1)^0,w,c
  1634  00AE' 2000'              	addwfc	(??_fputc+3)^0,w,c
  1635  00B0' 6EDA               	movwf	fsr2h,c
  1636  00B2' C002' FFDF         	movff	fputc@c,indf2
  1637  00B6' EE20 F003          	lfsr	2,3
  1638  00BA' 5000'              	movf	fputc@fp^0,w,c
  1639  00BC' 26D9               	addwf	fsr2l,f,c
  1640  00BE' 5000'              	movf	(fputc@fp+1)^0,w,c
  1641  00C0' 22DA               	addwfc	fsr2h,f,c
  1642  00C2' 2ADE               	incf	postinc2,f,c
  1643  00C4' 0E00               	movlw	0
  1644  00C6' 22DD               	addwfc	postdec2,f,c
  1645  00C8'                    l892:
  1646  00C8' 0012               	return		;funcret
  1647  00CA'                    __end_of_fputc:
  1648                           	callstack 0
  1649                           
  1650 ;; *************** function _putch *****************
  1651 ;; Defined at:
  1652 ;;		line 84 in file "src/librerias/UART.c"
  1653 ;; Parameters:    Size  Location     Type
  1654 ;;  data            1    wreg     unsigned char 
  1655 ;; Auto vars:     Size  Location     Type
  1656 ;;  data            1    1[COMRAM] unsigned char 
  1657 ;; Return value:  Size  Location     Type
  1658 ;;                  1    wreg      void 
  1659 ;; Registers used:
  1660 ;;		wreg, status,2, cstack
  1661 ;; Tracked objects:
  1662 ;;		On entry : 0/0
  1663 ;;		On exit  : 0/0
  1664 ;;		Unchanged: 0/0
  1665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1666 ;;      Params:         0       0       0       0       0       0       0       0       0
  1667 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1668 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1669 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1670 ;;Total ram usage:        1 bytes
  1671 ;; Hardware stack levels used: 1
  1672 ;; Hardware stack levels required when called: 1
  1673 ;; This function calls:
  1674 ;;		_UART_Tx
  1675 ;; This function is called by:
  1676 ;;		_fputc
  1677 ;; This function uses a non-reentrant model
  1678 ;;
  1679                           
  1680                           	psect	text11
  1681  0000'                    __ptext11:
  1682                           	callstack 0
  1683  0000'                    _putch:
  1684                           	callstack 23
  1685                           
  1686                           ;incstack = 0
  1687                           ;putch@data stored from wreg
  1688  0000' 6E00'              	movwf	putch@data^0,c
  1689  0002'                    
  1690                           ;src/librerias/UART.c: 85:     UART_Tx(data);
  1691  0002' 5000'              	movf	putch@data^0,w,c
  1692  0004' EC00' F000'        	call	_UART_Tx
  1693  0008' 0012               	return		;funcret
  1694  000A'                    __end_of_putch:
  1695                           	callstack 0
  1696                           
  1697 ;; *************** function _UART_Tx *****************
  1698 ;; Defined at:
  1699 ;;		line 79 in file "src/librerias/UART.c"
  1700 ;; Parameters:    Size  Location     Type
  1701 ;;  dato            1    wreg     unsigned char 
  1702 ;; Auto vars:     Size  Location     Type
  1703 ;;  dato            1    0[COMRAM] unsigned char 
  1704 ;; Return value:  Size  Location     Type
  1705 ;;                  1    wreg      void 
  1706 ;; Registers used:
  1707 ;;		wreg
  1708 ;; Tracked objects:
  1709 ;;		On entry : 0/0
  1710 ;;		On exit  : 0/0
  1711 ;;		Unchanged: 0/0
  1712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1713 ;;      Params:         0       0       0       0       0       0       0       0       0
  1714 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1715 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1716 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1717 ;;Total ram usage:        1 bytes
  1718 ;; Hardware stack levels used: 1
  1719 ;; This function calls:
  1720 ;;		Nothing
  1721 ;; This function is called by:
  1722 ;;		_putch
  1723 ;; This function uses a non-reentrant model
  1724 ;;
  1725                           
  1726                           	psect	text12
  1727  0000'                    __ptext12:
  1728                           	callstack 0
  1729  0000'                    _UART_Tx:
  1730                           	callstack 23
  1731                           
  1732                           ;incstack = 0
  1733                           ;UART_Tx@dato stored from wreg
  1734  0000' 6E00'              	movwf	UART_Tx@dato^0,c
  1735  0002'                    l119:
  1736  0002' A2AC               	btfss	4012,1,c	;volatile
  1737  0004' EF00' F000'        	goto	u11
  1738  0008' EF00' F000'        	goto	u10
  1739  000C'                    u11:
  1740  000C' EF00' F000'        	goto	l119
  1741  0010'                    u10:
  1742  0010'                    
  1743                           ;src/librerias/UART.c: 81:     TXREG1 = dato;
  1744  0010' C000' FFAD         	movff	UART_Tx@dato,4013	;volatile
  1745  0014' 0012               	return		;funcret
  1746  0016'                    __end_of_UART_Tx:
  1747                           	callstack 0
  1748                           
  1749 ;; *************** function _Clock_Init *****************
  1750 ;; Defined at:
  1751 ;;		line 3 in file "src/librerias/clock.c"
  1752 ;; Parameters:    Size  Location     Type
  1753 ;;  s16Timeout      2    0[COMRAM] short 
  1754 ;; Auto vars:     Size  Location     Type
  1755 ;;  bStatus         1    5[COMRAM] _Bool 
  1756 ;;  bStatus         1    4[COMRAM] _Bool 
  1757 ;;  bStatus         1    3[COMRAM] _Bool 
  1758 ;;  bStatus         1    2[COMRAM] _Bool 
  1759 ;;  returnCode      1    7[COMRAM] enum E5188
  1760 ;;  bItTimeEn       1    6[COMRAM] _Bool 
  1761 ;; Return value:  Size  Location     Type
  1762 ;;                  1    wreg      enum E5188
  1763 ;; Registers used:
  1764 ;;		wreg, status,2, status,0
  1765 ;; Tracked objects:
  1766 ;;		On entry : 0/0
  1767 ;;		On exit  : 0/0
  1768 ;;		Unchanged: 0/0
  1769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1770 ;;      Params:         2       0       0       0       0       0       0       0       0
  1771 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1772 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1773 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1774 ;;Total ram usage:        8 bytes
  1775 ;; Hardware stack levels used: 1
  1776 ;; This function calls:
  1777 ;;		Nothing
  1778 ;; This function is called by:
  1779 ;;		_main
  1780 ;; This function uses a non-reentrant model
  1781 ;;
  1782                           
  1783                           	psect	text13
  1784  0000'                    __ptext13:
  1785                           	callstack 0
  1786  0000'                    _Clock_Init:
  1787                           	callstack 30
  1788  0000'                    
  1789                           ;src/librerias/clock.c: 4:     CLK_ERROR_CODE returnCode = ERROR_CODE_OK;
  1790  0000' 0E00               	movlw	0
  1791  0002' 6E00'              	movwf	Clock_Init@returnCode^0,c
  1792  0004'                    
  1793                           ;src/librerias/clock.c: 5:     _Bool bItTimeEn = (0 >= s16Timeout) ? 0 : 1;
  1794  0004' BE00'              	btfsc	(Clock_Init@s16Timeout+1)^0,7,c
  1795  0006' EF00' F000'        	goto	u570
  1796  000A' 5000'              	movf	(Clock_Init@s16Timeout+1)^0,w,c
  1797  000C' E106               	bnz	u571
  1798  000E' 0400'              	decf	Clock_Init@s16Timeout^0,w,c
  1799  0010' B0D8               	btfsc	status,0,c
  1800  0012' EF00' F000'        	goto	u571
  1801  0016' EF00' F000'        	goto	u570
  1802  001A'                    u571:
  1803  001A' 0E01               	movlw	1
  1804  001C' EF00' F000'        	goto	u580
  1805  0020'                    u570:
  1806  0020' 0E00               	movlw	0
  1807  0022'                    u580:
  1808  0022' 6E00'              	movwf	Clock_Init@bItTimeEn^0,c
  1809  0024'                    l146:
  1810                           
  1811                           ;src/librerias/clock.c: 10:             bStatus = OSCCON2bits.HFIOFR;
  1812  0024' B2D2               	btfsc	210,1,c	;volatile
  1813  0026' EF00' F000'        	goto	u591
  1814  002A' EF00' F000'        	goto	u590
  1815  002E'                    u591:
  1816  002E' 0E01               	movlw	1
  1817  0030' EF00' F000'        	goto	u596
  1818  0034'                    u590:
  1819  0034' 0E00               	movlw	0
  1820  0036'                    u596:
  1821  0036' 6E00'              	movwf	Clock_Init@bStatus^0,c
  1822  0038'                    
  1823                           ;src/librerias/clock.c: 11:             s16Timeout--;
  1824  0038' 0600'              	decf	Clock_Init@s16Timeout^0,f,c
  1825  003A' A0D8               	btfss	status,0,c
  1826  003C' 0600'              	decf	(Clock_Init@s16Timeout+1)^0,f,c
  1827  003E'                    
  1828                           ;src/librerias/clock.c: 12:         }while((0 == bStatus) && ((0 < s16Timeout) || (0 == 
      +                          bItTimeEn)));
  1829  003E' 5000'              	movf	Clock_Init@bStatus^0,w,c
  1830  0040' A4D8               	btfss	status,2,c
  1831  0042' EF00' F000'        	goto	u601
  1832  0046' EF00' F000'        	goto	u600
  1833  004A'                    u601:
  1834  004A' EF00' F000'        	goto	l1556
  1835  004E'                    u600:
  1836  004E' BE00'              	btfsc	(Clock_Init@s16Timeout+1)^0,7,c
  1837  0050' EF00' F000'        	goto	u610
  1838  0054' 5000'              	movf	(Clock_Init@s16Timeout+1)^0,w,c
  1839  0056' E106               	bnz	u611
  1840  0058' 0400'              	decf	Clock_Init@s16Timeout^0,w,c
  1841  005A' B0D8               	btfsc	status,0,c
  1842  005C' EF00' F000'        	goto	u611
  1843  0060' EF00' F000'        	goto	u610
  1844  0064'                    u611:
  1845  0064' EF00' F000'        	goto	l146
  1846  0068'                    u610:
  1847  0068' 5000'              	movf	Clock_Init@bItTimeEn^0,w,c
  1848  006A' B4D8               	btfsc	status,2,c
  1849  006C' EF00' F000'        	goto	u621
  1850  0070' EF00' F000'        	goto	u620
  1851  0074'                    u621:
  1852  0074' EF00' F000'        	goto	l146
  1853  0078'                    u620:
  1854  0078'                    l1556:
  1855                           
  1856                           ;src/librerias/clock.c: 13:         if (0 == bStatus){
  1857  0078' 5000'              	movf	Clock_Init@bStatus^0,w,c
  1858  007A' A4D8               	btfss	status,2,c
  1859  007C' EF00' F000'        	goto	u631
  1860  0080' EF00' F000'        	goto	u630
  1861  0084'                    u631:
  1862  0084' EF00' F000'        	goto	l145
  1863  0088'                    u630:
  1864  0088'                    
  1865                           ;src/librerias/clock.c: 14:             returnCode = ERROR_CODE_TIMEOUT;
  1866  0088' 0E01               	movlw	1
  1867  008A' 6E00'              	movwf	Clock_Init@returnCode^0,c
  1868  008C'                    l145:
  1869                           
  1870                           ;src/librerias/clock.c: 18:     if(ERROR_CODE_OK == returnCode){
  1871  008C' 5000'              	movf	Clock_Init@returnCode^0,w,c
  1872  008E' A4D8               	btfss	status,2,c
  1873  0090' EF00' F000'        	goto	u641
  1874  0094' EF00' F000'        	goto	u640
  1875  0098'                    u641:
  1876  0098' EF00' F000'        	goto	l151
  1877  009C'                    u640:
  1878  009C'                    
  1879                           ;src/librerias/clock.c: 19:         OSCCON2bits.INTSRC = 1;
  1880  009C' 8AD2               	bsf	210,5,c	;volatile
  1881  009E'                    
  1882                           ;src/librerias/clock.c: 20:         OSCCONbits.IRCF = 7;
  1883  009E' 0E70               	movlw	112
  1884  00A0' 12D3               	iorwf	211,f,c	;volatile
  1885  00A2'                    l152:
  1886                           
  1887                           ;src/librerias/clock.c: 24:             bStatus = OSCCONbits.HFIOFS;
  1888  00A2' B4D3               	btfsc	211,2,c	;volatile
  1889  00A4' EF00' F000'        	goto	u651
  1890  00A8' EF00' F000'        	goto	u650
  1891  00AC'                    u651:
  1892  00AC' 0E01               	movlw	1
  1893  00AE' EF00' F000'        	goto	u656
  1894  00B2'                    u650:
  1895  00B2' 0E00               	movlw	0
  1896  00B4'                    u656:
  1897  00B4' 6E00'              	movwf	Clock_Init@bStatus_596^0,c
  1898  00B6'                    
  1899                           ;src/librerias/clock.c: 25:             s16Timeout--;
  1900  00B6' 0600'              	decf	Clock_Init@s16Timeout^0,f,c
  1901  00B8' A0D8               	btfss	status,0,c
  1902  00BA' 0600'              	decf	(Clock_Init@s16Timeout+1)^0,f,c
  1903  00BC'                    
  1904                           ;src/librerias/clock.c: 26:         }while((0 == bStatus) && ((0 < s16Timeout) || (0 == 
      +                          bItTimeEn)));
  1905  00BC' 5000'              	movf	Clock_Init@bStatus_596^0,w,c
  1906  00BE' A4D8               	btfss	status,2,c
  1907  00C0' EF00' F000'        	goto	u661
  1908  00C4' EF00' F000'        	goto	u660
  1909  00C8'                    u661:
  1910  00C8' EF00' F000'        	goto	l1572
  1911  00CC'                    u660:
  1912  00CC' BE00'              	btfsc	(Clock_Init@s16Timeout+1)^0,7,c
  1913  00CE' EF00' F000'        	goto	u670
  1914  00D2' 5000'              	movf	(Clock_Init@s16Timeout+1)^0,w,c
  1915  00D4' E106               	bnz	u671
  1916  00D6' 0400'              	decf	Clock_Init@s16Timeout^0,w,c
  1917  00D8' B0D8               	btfsc	status,0,c
  1918  00DA' EF00' F000'        	goto	u671
  1919  00DE' EF00' F000'        	goto	u670
  1920  00E2'                    u671:
  1921  00E2' EF00' F000'        	goto	l152
  1922  00E6'                    u670:
  1923  00E6' 5000'              	movf	Clock_Init@bItTimeEn^0,w,c
  1924  00E8' B4D8               	btfsc	status,2,c
  1925  00EA' EF00' F000'        	goto	u681
  1926  00EE' EF00' F000'        	goto	u680
  1927  00F2'                    u681:
  1928  00F2' EF00' F000'        	goto	l152
  1929  00F6'                    u680:
  1930  00F6'                    l1572:
  1931                           
  1932                           ;src/librerias/clock.c: 27:         if (0 == bStatus){
  1933  00F6' 5000'              	movf	Clock_Init@bStatus_596^0,w,c
  1934  00F8' A4D8               	btfss	status,2,c
  1935  00FA' EF00' F000'        	goto	u691
  1936  00FE' EF00' F000'        	goto	u690
  1937  0102'                    u691:
  1938  0102' EF00' F000'        	goto	l151
  1939  0106'                    u690:
  1940  0106'                    
  1941                           ;src/librerias/clock.c: 28:             returnCode = ERROR_CODE_TIMEOUT;
  1942  0106' 0E01               	movlw	1
  1943  0108' 6E00'              	movwf	Clock_Init@returnCode^0,c
  1944  010A'                    l151:
  1945                           
  1946                           ;src/librerias/clock.c: 32:     if(ERROR_CODE_OK == returnCode){
  1947  010A' 5000'              	movf	Clock_Init@returnCode^0,w,c
  1948  010C' A4D8               	btfss	status,2,c
  1949  010E' EF00' F000'        	goto	u701
  1950  0112' EF00' F000'        	goto	u700
  1951  0116'                    u701:
  1952  0116' EF00' F000'        	goto	l157
  1953  011A'                    u700:
  1954  011A'                    l158:
  1955                           
  1956                           ;src/librerias/clock.c: 35:             bStatus = OSCCONbits.OSTS;
  1957  011A' B6D3               	btfsc	211,3,c	;volatile
  1958  011C' EF00' F000'        	goto	u711
  1959  0120' EF00' F000'        	goto	u710
  1960  0124'                    u711:
  1961  0124' 0E01               	movlw	1
  1962  0126' EF00' F000'        	goto	u716
  1963  012A'                    u710:
  1964  012A' 0E00               	movlw	0
  1965  012C'                    u716:
  1966  012C' 6E00'              	movwf	Clock_Init@bStatus_597^0,c
  1967  012E'                    
  1968                           ;src/librerias/clock.c: 36:             s16Timeout--;
  1969  012E' 0600'              	decf	Clock_Init@s16Timeout^0,f,c
  1970  0130' A0D8               	btfss	status,0,c
  1971  0132' 0600'              	decf	(Clock_Init@s16Timeout+1)^0,f,c
  1972  0134'                    
  1973                           ;src/librerias/clock.c: 37:         }while((0 == bStatus) && ((0 < s16Timeout) || (0 == 
      +                          bItTimeEn)));
  1974  0134' 5000'              	movf	Clock_Init@bStatus_597^0,w,c
  1975  0136' A4D8               	btfss	status,2,c
  1976  0138' EF00' F000'        	goto	u721
  1977  013C' EF00' F000'        	goto	u720
  1978  0140'                    u721:
  1979  0140' EF00' F000'        	goto	l1586
  1980  0144'                    u720:
  1981  0144' BE00'              	btfsc	(Clock_Init@s16Timeout+1)^0,7,c
  1982  0146' EF00' F000'        	goto	u730
  1983  014A' 5000'              	movf	(Clock_Init@s16Timeout+1)^0,w,c
  1984  014C' E106               	bnz	u731
  1985  014E' 0400'              	decf	Clock_Init@s16Timeout^0,w,c
  1986  0150' B0D8               	btfsc	status,0,c
  1987  0152' EF00' F000'        	goto	u731
  1988  0156' EF00' F000'        	goto	u730
  1989  015A'                    u731:
  1990  015A' EF00' F000'        	goto	l158
  1991  015E'                    u730:
  1992  015E' 5000'              	movf	Clock_Init@bItTimeEn^0,w,c
  1993  0160' B4D8               	btfsc	status,2,c
  1994  0162' EF00' F000'        	goto	u741
  1995  0166' EF00' F000'        	goto	u740
  1996  016A'                    u741:
  1997  016A' EF00' F000'        	goto	l158
  1998  016E'                    u740:
  1999  016E'                    l1586:
  2000                           
  2001                           ;src/librerias/clock.c: 38:         if (0 == bStatus){
  2002  016E' 5000'              	movf	Clock_Init@bStatus_597^0,w,c
  2003  0170' A4D8               	btfss	status,2,c
  2004  0172' EF00' F000'        	goto	u751
  2005  0176' EF00' F000'        	goto	u750
  2006  017A'                    u751:
  2007  017A' EF00' F000'        	goto	l157
  2008  017E'                    u750:
  2009  017E'                    
  2010                           ;src/librerias/clock.c: 39:             returnCode = ERROR_CODE_TIMEOUT;
  2011  017E' 0E01               	movlw	1
  2012  0180' 6E00'              	movwf	Clock_Init@returnCode^0,c
  2013  0182'                    l157:
  2014                           
  2015                           ;src/librerias/clock.c: 42:         if(ERROR_CODE_OK == returnCode){
  2016  0182' 5000'              	movf	Clock_Init@returnCode^0,w,c
  2017  0184' A4D8               	btfss	status,2,c
  2018  0186' EF00' F000'        	goto	u761
  2019  018A' EF00' F000'        	goto	u760
  2020  018E'                    u761:
  2021  018E' EF00' F000'        	goto	l163
  2022  0192'                    u760:
  2023  0192'                    
  2024                           ;src/librerias/clock.c: 43:         OSCTUNEbits.SPLLMULT = 1;
  2025  0192' 8E9B               	bsf	155,7,c	;volatile
  2026                           
  2027                           ;src/librerias/clock.c: 44:         OSCCON2bits.PLLEN = 1;
  2028  0194' 88D2               	bsf	210,4,c	;volatile
  2029  0196'                    l164:
  2030                           
  2031                           ;src/librerias/clock.c: 47:             bStatus = OSCCON2bits.PLLRDY;
  2032  0196' BED2               	btfsc	210,7,c	;volatile
  2033  0198' EF00' F000'        	goto	u771
  2034  019C' EF00' F000'        	goto	u770
  2035  01A0'                    u771:
  2036  01A0' 0E01               	movlw	1
  2037  01A2' EF00' F000'        	goto	u776
  2038  01A6'                    u770:
  2039  01A6' 0E00               	movlw	0
  2040  01A8'                    u776:
  2041  01A8' 6E00'              	movwf	Clock_Init@bStatus_600^0,c
  2042  01AA'                    
  2043                           ;src/librerias/clock.c: 48:             s16Timeout--;
  2044  01AA' 0600'              	decf	Clock_Init@s16Timeout^0,f,c
  2045  01AC' A0D8               	btfss	status,0,c
  2046  01AE' 0600'              	decf	(Clock_Init@s16Timeout+1)^0,f,c
  2047  01B0'                    
  2048                           ;src/librerias/clock.c: 49:         }while((0 == bStatus) && ((0 < s16Timeout) || (0 == 
      +                          bItTimeEn)));
  2049  01B0' 5000'              	movf	Clock_Init@bStatus_600^0,w,c
  2050  01B2' A4D8               	btfss	status,2,c
  2051  01B4' EF00' F000'        	goto	u781
  2052  01B8' EF00' F000'        	goto	u780
  2053  01BC'                    u781:
  2054  01BC' EF00' F000'        	goto	l1602
  2055  01C0'                    u780:
  2056  01C0' BE00'              	btfsc	(Clock_Init@s16Timeout+1)^0,7,c
  2057  01C2' EF00' F000'        	goto	u790
  2058  01C6' 5000'              	movf	(Clock_Init@s16Timeout+1)^0,w,c
  2059  01C8' E106               	bnz	u791
  2060  01CA' 0400'              	decf	Clock_Init@s16Timeout^0,w,c
  2061  01CC' B0D8               	btfsc	status,0,c
  2062  01CE' EF00' F000'        	goto	u791
  2063  01D2' EF00' F000'        	goto	u790
  2064  01D6'                    u791:
  2065  01D6' EF00' F000'        	goto	l164
  2066  01DA'                    u790:
  2067  01DA' 5000'              	movf	Clock_Init@bItTimeEn^0,w,c
  2068  01DC' B4D8               	btfsc	status,2,c
  2069  01DE' EF00' F000'        	goto	u801
  2070  01E2' EF00' F000'        	goto	u800
  2071  01E6'                    u801:
  2072  01E6' EF00' F000'        	goto	l164
  2073  01EA'                    u800:
  2074  01EA'                    l1602:
  2075                           
  2076                           ;src/librerias/clock.c: 50:         if (0 == bStatus){
  2077  01EA' 5000'              	movf	Clock_Init@bStatus_600^0,w,c
  2078  01EC' A4D8               	btfss	status,2,c
  2079  01EE' EF00' F000'        	goto	u811
  2080  01F2' EF00' F000'        	goto	u810
  2081  01F6'                    u811:
  2082  01F6' EF00' F000'        	goto	l163
  2083  01FA'                    u810:
  2084  01FA'                    
  2085                           ;src/librerias/clock.c: 51:             returnCode = ERROR_CODE_TIMEOUT;
  2086  01FA' 0E01               	movlw	1
  2087  01FC' 6E00'              	movwf	Clock_Init@returnCode^0,c
  2088  01FE'                    l163:
  2089                           
  2090                           ;src/librerias/clock.c: 56:     if(ERROR_CODE_OK == returnCode){
  2091  01FE' 5000'              	movf	Clock_Init@returnCode^0,w,c
  2092  0200' A4D8               	btfss	status,2,c
  2093  0202' EF00' F000'        	goto	u821
  2094  0206' EF00' F000'        	goto	u820
  2095  020A'                    u821:
  2096  020A' EF00' F000'        	goto	l170
  2097  020E'                    u820:
  2098  020E'                    
  2099                           ;src/librerias/clock.c: 57:         OSCCON2bits.PRISD = 0;
  2100  020E' 94D2               	bcf	210,2,c	;volatile
  2101  0210'                    
  2102                           ;src/librerias/clock.c: 58:         OSCCONbits.SCS = 0;
  2103  0210' 0EFC               	movlw	-4
  2104  0212' 16D3               	andwf	211,f,c	;volatile
  2105  0214'                    l170:
  2106  0214' 0012               	return		;funcret
  2107  0216'                    __end_of_Clock_Init:
  2108                           	callstack 0
  2109                           
  2110                           	psect	rparam
  2111  0000                     
  2112                           	psect	config
  2113                           
  2114                           ;Config register CONFIG1L @ 0x300000
  2115                           ;	PLL Selection
  2116                           ;	PLLSEL = PLL3X, 3x clock multiplier
  2117                           ;	PLL Enable Configuration bit
  2118                           ;	CFGPLLEN = ON, PLL Enabled
  2119                           ;	CPU System Clock Postscaler
  2120                           ;	CPUDIV = NOCLKDIV, CPU uses system clock (no divide)
  2121                           ;	Low Speed USB mode with 48 MHz system clock
  2122                           ;	LS48MHZ = SYS48X8, System clock at 48 MHz, USB clock divider is set to 8
  2123  300000                     	org	3145728
  2124  300000  23                 	db	35
  2125                           
  2126                           ;Config register CONFIG1H @ 0x300001
  2127                           ;	Oscillator Selection
  2128                           ;	FOSC = INTOSCCLKO, Internal oscillator, clock output on OSC2
  2129                           ;	Primary Oscillator Shutdown
  2130                           ;	PCLKEN = OFF, Primary oscillator shutdown firmware controlled
  2131                           ;	Fail-Safe Clock Monitor
  2132                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2133                           ;	Internal/External Oscillator Switchover
  2134                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2135  300001                     	org	3145729
  2136  300001  09                 	db	9
  2137                           
  2138                           ;Config register CONFIG2L @ 0x300002
  2139                           ;	Power-up Timer Enable
  2140                           ;	nPWRTEN = OFF, Power up timer disabled
  2141                           ;	Brown-out Reset Enable
  2142                           ;	BOREN = SBORDIS, BOR enabled in hardware (SBOREN is ignored)
  2143                           ;	Brown-out Reset Voltage
  2144                           ;	BORV = 190, BOR set to 1.9V nominal
  2145                           ;	Low-Power Brown-out Reset
  2146                           ;	nLPBOR = OFF, Low-Power Brown-out Reset disabled
  2147  300002                     	org	3145730
  2148  300002  5F                 	db	95
  2149                           
  2150                           ;Config register CONFIG2H @ 0x300003
  2151                           ;	Watchdog Timer Enable bits
  2152                           ;	WDTEN = OFF, WDT disabled in hardware (SWDTEN ignored)
  2153                           ;	Watchdog Timer Postscaler
  2154                           ;	WDTPS = 32768, 1:32768
  2155  300003                     	org	3145731
  2156  300003  3C                 	db	60
  2157                           
  2158                           ; Padding undefined space
  2159  300004                     	org	3145732
  2160  300004  FF                 	db	255
  2161                           
  2162                           ;Config register CONFIG3H @ 0x300005
  2163                           ;	CCP2 MUX bit
  2164                           ;	CCP2MX = RC1, CCP2 input/output is multiplexed with RC1
  2165                           ;	PORTB A/D Enable bit
  2166                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  2167                           ;	Timer3 Clock Input MUX bit
  2168                           ;	T3CMX = RC0, T3CKI function is on RC0
  2169                           ;	SDO Output MUX bit
  2170                           ;	SDOMX = RB3, SDO function is on RB3
  2171                           ;	Master Clear Reset Pin Enable
  2172                           ;	MCLRE = ON, MCLR pin enabled; RE3 input disabled
  2173  300005                     	org	3145733
  2174  300005  D3                 	db	211
  2175                           
  2176                           ;Config register CONFIG4L @ 0x300006
  2177                           ;	Stack Full/Underflow Reset
  2178                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2179                           ;	Single-Supply ICSP Enable bit
  2180                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
  2181                           ;	Dedicated In-Circuit Debug/Programming Port Enable
  2182                           ;	ICPRT = OFF, ICPORT disabled
  2183                           ;	Extended Instruction Set Enable bit
  2184                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled
  2185                           ;	Background Debugger Enable bit
  2186                           ;	DEBUG = 0x1, unprogrammed default
  2187  300006                     	org	3145734
  2188  300006  85                 	db	133
  2189                           
  2190                           ; Padding undefined space
  2191  300007                     	org	3145735
  2192  300007  FF                 	db	255
  2193                           
  2194                           ;Config register CONFIG5L @ 0x300008
  2195                           ;	Block 0 Code Protect
  2196                           ;	CP0 = OFF, Block 0 is not code-protected
  2197                           ;	Block 1 Code Protect
  2198                           ;	CP1 = OFF, Block 1 is not code-protected
  2199                           ;	Block 2 Code Protect
  2200                           ;	CP2 = OFF, Block 2 is not code-protected
  2201                           ;	Block 3 Code Protect
  2202                           ;	CP3 = OFF, Block 3 is not code-protected
  2203  300008                     	org	3145736
  2204  300008  0F                 	db	15
  2205                           
  2206                           ;Config register CONFIG5H @ 0x300009
  2207                           ;	Boot Block Code Protect
  2208                           ;	CPB = OFF, Boot block is not code-protected
  2209                           ;	Data EEPROM Code Protect
  2210                           ;	CPD = OFF, Data EEPROM is not code-protected
  2211  300009                     	org	3145737
  2212  300009  C0                 	db	192
  2213                           
  2214                           ;Config register CONFIG6L @ 0x30000A
  2215                           ;	Block 0 Write Protect
  2216                           ;	WRT0 = OFF, Block 0 (0800-1FFFh) is not write-protected
  2217                           ;	Block 1 Write Protect
  2218                           ;	WRT1 = OFF, Block 1 (2000-3FFFh) is not write-protected
  2219                           ;	Block 2 Write Protect
  2220                           ;	WRT2 = OFF, Block 2 (04000-5FFFh) is not write-protected
  2221                           ;	Block 3 Write Protect
  2222                           ;	WRT3 = OFF, Block 3 (06000-7FFFh) is not write-protected
  2223  30000A                     	org	3145738
  2224  30000A  0F                 	db	15
  2225                           
  2226                           ;Config register CONFIG6H @ 0x30000B
  2227                           ;	Configuration Registers Write Protect
  2228                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  2229                           ;	Boot Block Write Protect
  2230                           ;	WRTB = OFF, Boot block (0000-7FFh) is not write-protected
  2231                           ;	Data EEPROM Write Protect
  2232                           ;	WRTD = OFF, Data EEPROM is not write-protected
  2233  30000B                     	org	3145739
  2234  30000B  E0                 	db	224
  2235                           
  2236                           ;Config register CONFIG7L @ 0x30000C
  2237                           ;	Block 0 Table Read Protect
  2238                           ;	EBTR0 = OFF, Block 0 is not protected from table reads executed in other blocks
  2239                           ;	Block 1 Table Read Protect
  2240                           ;	EBTR1 = OFF, Block 1 is not protected from table reads executed in other blocks
  2241                           ;	Block 2 Table Read Protect
  2242                           ;	EBTR2 = OFF, Block 2 is not protected from table reads executed in other blocks
  2243                           ;	Block 3 Table Read Protect
  2244                           ;	EBTR3 = OFF, Block 3 is not protected from table reads executed in other blocks
  2245  30000C                     	org	3145740
  2246  30000C  0F                 	db	15
  2247                           
  2248                           ;Config register CONFIG7H @ 0x30000D
  2249                           ;	Boot Block Table Read Protect
  2250                           ;	EBTRB = OFF, Boot block is not protected from table reads executed in other blocks
  2251  30000D                     	org	3145741
  2252  30000D  40                 	db	64
  2253                           tosu	equ	0xFFF
  2254                           tosh	equ	0xFFE
  2255                           tosl	equ	0xFFD
  2256                           stkptr	equ	0xFFC
  2257                           pclatu	equ	0xFFB
  2258                           pclath	equ	0xFFA
  2259                           pcl	equ	0xFF9
  2260                           tblptru	equ	0xFF8
  2261                           tblptrh	equ	0xFF7
  2262                           tblptrl	equ	0xFF6
  2263                           tablat	equ	0xFF5
  2264                           prodh	equ	0xFF4
  2265                           prodl	equ	0xFF3
  2266                           indf0	equ	0xFEF
  2267                           postinc0	equ	0xFEE
  2268                           postdec0	equ	0xFED
  2269                           preinc0	equ	0xFEC
  2270                           plusw0	equ	0xFEB
  2271                           fsr0h	equ	0xFEA
  2272                           fsr0l	equ	0xFE9
  2273                           wreg	equ	0xFE8
  2274                           indf1	equ	0xFE7
  2275                           postinc1	equ	0xFE6
  2276                           postdec1	equ	0xFE5
  2277                           preinc1	equ	0xFE4
  2278                           plusw1	equ	0xFE3
  2279                           fsr1h	equ	0xFE2
  2280                           fsr1l	equ	0xFE1
  2281                           bsr	equ	0xFE0
  2282                           indf2	equ	0xFDF
  2283                           postinc2	equ	0xFDE
  2284                           postdec2	equ	0xFDD
  2285                           preinc2	equ	0xFDC
  2286                           plusw2	equ	0xFDB
  2287                           fsr2h	equ	0xFDA
  2288                           fsr2l	equ	0xFD9
  2289                           status	equ	0xFD8

Data Sizes:
    Strings     166
    Constant    0
    Data        0
    BSS         38
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     26      64
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    printf@fmt	PTR const unsigned char  size(1) Largest target is 18
		 -> STR_1(CODE[7]), STR_10(CODE[9]), STR_11(CODE[14]), STR_12(CODE[17]), 
		 -> STR_13(CODE[10]), STR_14(CODE[14]), STR_15(CODE[17]), STR_16(CODE[11]), 
		 -> STR_17(CODE[14]), STR_18(CODE[17]), STR_2(CODE[10]), STR_3(CODE[11]), 
		 -> STR_4(CODE[18]), STR_5(CODE[18]), STR_6(CODE[11]), STR_7(CODE[9]), 
		 -> STR_8(CODE[8]), STR_9(CODE[13]), 

    S1042$buffer	PTR unsigned char  size(2) Largest target is 0

    S1042$source	PTR const unsigned char  size(2) Largest target is 0

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(COMRAM[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 18
		 -> STR_1(CODE[7]), STR_10(CODE[9]), STR_11(CODE[14]), STR_12(CODE[17]), 
		 -> STR_13(CODE[10]), STR_14(CODE[14]), STR_15(CODE[17]), STR_16(CODE[11]), 
		 -> STR_17(CODE[14]), STR_18(CODE[17]), STR_2(CODE[10]), STR_3(CODE[11]), 
		 -> STR_4(CODE[18]), STR_5(CODE[18]), STR_6(CODE[11]), STR_7(CODE[9]), 
		 -> STR_8(CODE[8]), STR_9(CODE[13]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 18
		 -> STR_1(CODE[7]), STR_10(CODE[9]), STR_11(CODE[14]), STR_12(CODE[17]), 
		 -> STR_13(CODE[10]), STR_14(CODE[14]), STR_15(CODE[17]), STR_16(CODE[11]), 
		 -> STR_17(CODE[14]), STR_18(CODE[17]), STR_2(CODE[10]), STR_3(CODE[11]), 
		 -> STR_4(CODE[18]), STR_5(CODE[18]), STR_6(CODE[11]), STR_7(CODE[9]), 
		 -> STR_8(CODE[8]), STR_9(CODE[13]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _main->_UART_Init
    _UART_config_show->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_fputc
    _fputc->_putch
    _putch->_UART_Tx

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    3567
                         _Clock_Init
                          _UART_Init
                            _UART_Rx
 ---------------------------------------------------------------------------------
 (1) _UART_Rx                                              0     0      0       0
                  _UART_ErrorHandler
                    _UART_Rx_FRAMING
                   _UART_Rx_OVERFLOW
 ---------------------------------------------------------------------------------
 (2) _UART_Rx_OVERFLOW                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UART_Rx_FRAMING                                      1     1      0       0
 ---------------------------------------------------------------------------------
 (2) _UART_ErrorHandler                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            4     0      4    2983
                                             22 COMRAM     4     0      4
                   _UART_config_show
                   _UART_select_baud
 ---------------------------------------------------------------------------------
 (2) _UART_select_baud                                     8     4      4      98
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _UART_config_show                                     0     0      0    2787
                             _printf
 ---------------------------------------------------------------------------------
 (3) _printf                                               4     3      1    2787
                                             20 COMRAM     2     1      1
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             5     1      4    1367
                                             15 COMRAM     5     1      4
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                            9     5      4    1020
                                             11 COMRAM     4     0      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4     660
                                              2 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0      30
                                              1 COMRAM     1     1      0
                            _UART_Tx
 ---------------------------------------------------------------------------------
 (8) _UART_Tx                                              1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Clock_Init                                           8     6      2     584
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Clock_Init
   _UART_Init
     _UART_config_show
       _printf
         _vfprintf
           _vfpfcnvrt
             _fputc
               _putch
                 _UART_Tx
     _UART_select_baud
   _UART_Rx
     _UART_ErrorHandler
     _UART_Rx_FRAMING
     _UART_Rx_OVERFLOW

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      31        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     1A      40       1       67.4%
BITBIGSFRhhhhh      2C      0       0      20        0.0%
BITBIGSFRllh        2B      0       0      28        0.0%
BITBIGSFRhhhhl      19      0       0      21        0.0%
BITBIGSFRhhl         C      0       0      23        0.0%
BITBIGSFRlll         A      0       0      29        0.0%
BITBIGSFRlh          8      0       0      27        0.0%
BITBIGSFRhhhlh       7      0       0      22        0.0%
BITBIGSFRhlhl        6      0       0      25        0.0%
BITBIGSFRhlhh        2      0       0      24        0.0%
BITBIGSFRhll         1      0       0      26        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      40      30        0.0%
DATA                 0      0      40       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Thu Oct 03 17:57:27 2024

                      l22 0048                        l25 005C                        l91 00A8  
                      l83 004C                        l95 00D2                        l87 0076  
                      u10 0010                        u11 000C                       l100 00FC  
                     l103 0030                       l122 0014                       l116 013E  
                     l125 0008                       l133 0018                       l151 010A  
                     l119 0002                       l152 00A2                       l136 0012  
                     l145 008C                       l129 001A                       l170 0214  
                     l146 0024                       l163 01FE                       l164 0196  
                     l157 0182                       l158 011A                       l902 0002  
                     l904 0010                       l906 0002                       l851 0018  
                     l880 0040                       l874 006C                       l892 00C8  
                     u140 000E                       u141 000A                       u150 000E  
                     u151 000A                       u500 0038                       u501 0034  
                     u510 0016                       u511 0012                       u600 004E  
                     u520 0038                       u601 004A                       u521 0034  
                     u610 0068                       u450 0012                       u530 0062  
                     u611 0064                       u451 000E                       u531 005E  
                     u700 011A                       u620 0078                       u460 0024  
                     u540 0094                       u701 0116                       u621 0074  
                     u461 0020                       u541 0090                       u710 012A  
                     u630 0088                       u470 004C                       u550 00BE  
                     u711 0124                       u631 0084                       u471 0048  
                     u551 00BA                       u800 01EA                       u720 0144  
                     u640 009C                       u480 0082                       u560 00E8  
                     u801 01E6                       u721 0140                       u641 0098  
                     u481 007E                       u561 00E4                       u810 01FA  
                     u730 015E                       u650 00B2                       u570 0020  
                     u490 0022                       u811 01F6                       u731 015A  
                     u651 00AC                       u571 001A                       u491 001E  
                     u820 020E                       u740 016E                       u716 012C  
                     u660 00CC                       u580 0022                       u821 020A  
                     u741 016A                       u661 00C8                       u750 017E  
                     u670 00E6                       u590 0034                       u830 0030  
                     u751 017A                       u671 00E2                       u591 002E  
                     u831 002C                       u760 0192                       u680 00F6  
                     u656 00B4                       u840 0048                       u761 018E  
                     u681 00F2                       u841 0044                       u770 01A6  
                     u690 0106                       u850 005C                       u771 01A0  
                     u691 0102                       u851 0058                       u780 01C0  
                     u596 0036                       u781 01BC                       u790 01DA  
                     u791 01D6                       u776 01A8                       wreg 0FE8  
              _TXSTA1bits 0FAC                      l1060 0012                      l1070 000E  
                    l1400 004C                      l1072 0010                      l1064 0018  
                    l1056 0000                      l1402 0082                      l1410 002A  
                    l1058 000E                      l1412 0036                      l1076 0016  
                    l1068 0000                      l1172 0000                      l1414 003A  
                    l1406 0000                      l1430 0038                      l1174 0010  
                    l1600 01DA                      l1408 0022                      l1424 0000  
                    l1440 0000                      l1602 01EA                      l1418 0046  
                    l1426 0008                      l1434 0000                      l1450 0038  
                    l1442 0008                      l1604 01FA                      l1540 0000  
                    l1428 001C                      l1436 0004                      l1460 0086  
                    l1452 0044                      l1444 0016                      l1620 001E  
                    l1612 0000                      l1606 020E                      l1550 003E  
                    l1542 0004                      l1470 00CA                      l1462 0094  
                    l1454 0054                      l1446 0022                      l1630 002A  
                    l1622 0020                      l1614 0004                      l1608 0210  
                    l1560 009C                      l1552 004E                      l1544 0024  
                    l1392 0000                      l1472 00DA                      l1464 00A0  
                    l1456 0062                      l1448 002A                      l1480 0004  
                    l1624 0022                      l1616 0008                      l1640 0030  
                    l1632 0000                      l1570 00E6                      l1562 009E  
                    l1554 0068                      l1546 0024                      l1394 0012  
                    l1474 00E8                      l1466 00B0                      l1458 006E  
                    l1490 0040                      l1482 0010                      l1626 0024  
                    l1618 001C                      l1642 0036                      l1634 000C  
                    l1580 0134                      l1572 00F6                      l1564 00B6  
                    l1556 0078                      l1548 0038                      l1396 0024  
                    l1476 00F4                      l1468 00BE                      l1492 004C  
                    l1484 001C                      l1628 0026                      l1644 004A  
                    l1636 0020                      l1590 0192                      l1582 0144  
                    l1574 0106                      l1566 00BC                      l1558 0088  
                    l1398 002E                      l1494 0058                      l1486 0028  
                    l1478 0000                      l1638 0022                      l1592 0196  
                    l1584 015E                      l1576 011A                      l1568 00CC  
                    l1488 0034                      l1594 01AA                      l1586 016E  
                    l1578 012E                      l1850 0128                      l1498 0064  
                    l1596 01B0                      l1588 017E                      l1860 00F0  
                    l1852 00B8                      l1598 01C0                      l1862 00FE  
                    l1854 00C6                      l1846 0082                      l1864 011A  
                    l1848 010C                      l1856 00D4                      l1858 00E2  
                    STR_1 00A0                      STR_2 007C                      STR_3 0067  
                    STR_4 0013                      STR_5 0001                      STR_6 0051  
                    STR_7 008F                      STR_8 0098                      STR_9 0044  
                    _CREN 7D5C                      _SPEN 7D5F                      _TRMT 7D61  
         __end_of_UART_Rx 0014           __end_of_UART_Tx 0016                      _dbuf 0000  
                    _main 0000                      _prec 0022                      fsr1h 0FE2  
                    fsr2h 0FDA                      indf2 0FDF                      fsr1l 0FE1  
                    fsr2l 0FD9                      start 0000*             ___param_bank 0000  
UART_select_baud@baudrate 0000                _Clock_Init 0000                     ?_main 0000  
                   STR_10 0086                     STR_11 0036                     STR_12 0025  
                   STR_13 0072                     STR_14 0036                     STR_15 0025  
                   STR_16 005C                     STR_17 0036                     STR_18 0025  
                   _BRGH1 7D62                     _RCREG 0FAE         Clock_Init@bStatus 0002  
            vfpfcnvrt@fmt 000D          _UART_config_show 0000                     _SPBRG 0FAF  
                   _TXEN1 7D65                     _SYNC1 7D64          ?_UART_Rx_FRAMING 0000  
                   _flags 0024                     _fputc 0000                     _width 0020  
                   _putch 0000                     tablat 0FF5                     status 0FD8  
         __initialization 0000              __end_of_main 0066                    ??_main 001A  
           __activetblptr 0002                 ??_UART_Rx 0000                 ??_UART_Tx 0000  
                  ?_fputc 0002                    _BRG161 7DC3                    ?_putch 0000  
                  _ANSELC 0F5D                    _RCREG1 0FAE                    _SPBRGH 0FB0  
                  _TRISC6 7CA6                    _TRISC7 7CA7                    _TXREG1 0FAD  
            vfprintf@cfmt 0013         __end_of_UART_Init 0032               ?_Clock_Init 0000  
                  clear_0 0006                    isa$std 0001                    _printf 0000  
       ?_UART_Rx_OVERFLOW 0000                    fputc@c 0002        ??_UART_Rx_OVERFLOW 0000  
            __mediumconst 0000*                   tblptrh 0FF7                    tblptrl 0FF6  
                  tblptru 0FF8          __end_of_vfprintf 0042                __accesstop 0000* 
 __end_of__initialization 000C             ___rparam_used 0001          _UART_select_baud 0000  
          __pcstackCOMRAM 0000             __end_of_fputc 00CA         _UART_ErrorHandler 0000* 
           __end_of_putch 000A        ?_UART_ErrorHandler 0000       ??_UART_ErrorHandler 0000  
                 ??_fputc 0006                   ??_putch 0001  __end_of_UART_config_show 00FE  
     Clock_Init@bItTimeEn 0006                   ?_printf 0014                   _UART_Rx 0000  
                 _UART_Tx 0000                   __Hparam 0000                   __Lparam 0000  
               ?_vfprintf 000F              __psmallconst 0000                   __pcinit 0000  
                 __ramtop 0000*                  __ptext0 0000                   __ptext1 0000  
                 __ptext2 0000                   __ptext3 0000                   __ptext4 0000  
                 __ptext5 0000                   __ptext6 0000                   __ptext7 0000  
                 __ptext8 0000                   __ptext9 0000               UART_Tx@dato 0000  
    end_of_initialization 000C                   fputc@fp 0004             __Lmediumconst 0000* 
   Clock_Init@bStatus_600 0005     Clock_Init@bStatus_596 0003     Clock_Init@bStatus_597 0004  
       __end_of_vfpfcnvrt 006E                 _RCSTAbits 0FAB                   postdec2 0FDD  
                 postinc0 0FEE                   postinc1 0FE6                   postinc2 0FDE  
            ??_Clock_Init 0002                ??_vfprintf 0013                 _UART_Init 0000  
               _TRISAbits 0F92  __end_of_UART_select_baud 0140        __end_of_Clock_Init 0216  
               _TXSTAbits 0FAC               vfpfcnvrt@ap 000E               vfpfcnvrt@fp 000B  
              ?_UART_Init 0016            __end_of_printf 001A       start_initialization 0000  
    Clock_Init@s16Timeout 0000         ?_UART_config_show 0000               vfprintf@fmt 0011  
       ??_UART_Rx_FRAMING 0000        ??_UART_config_show 0016                  ??_printf 0015  
             __pbssCOMRAM 0000                  ?_UART_Rx 0000                  ?_UART_Tx 0000  
             ??_UART_Init 001A               __smallconst 0000*                 _BAUDCON1 0FB8  
        _UART_Rx_OVERFLOW 0000                  _LATAbits 0F89                  _PIR1bits 0F9E  
               _vfpfcnvrt 0000         UART_Init@baudrate 0016         ?_UART_select_baud 0000  
      ??_UART_select_baud 0004                  __Hrparam 0000*               vfprintf@ap 0012  
                __Lrparam 0000*               vfprintf@fp 000F                ?_vfpfcnvrt 000B  
             _readMessage 0025                  __ptext10 0000                  __ptext11 0000  
                __ptext12 0000                  __ptext13 0000           _UART_Rx_FRAMING 0000  
             _OSCCON2bits 0FD2                  isa$xinst 0000                  _vfprintf 0000  
               printf@fmt 0014                 putch@data 0001               _OSCTUNEbits 0F9B  
              _OSCCONbits 0FD3                  printf@ap 0015               ??_vfpfcnvrt 000F  
__end_of_UART_Rx_OVERFLOW 001C      Clock_Init@returnCode 0007   __end_of_UART_Rx_FRAMING 001A  
