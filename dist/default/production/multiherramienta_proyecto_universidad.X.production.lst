

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Mon Sep 09 12:35:06 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F45K50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    21                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    23   000000                     
    24                           ; Generated 12/10/2023 GMT
    25                           ; 
    26                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution. Publication is not required when
    40                           ;        this file is used in an embedded application.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC18F45K50 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58   000000                     _RCREG	set	4014
    59   000000                     _TXREG1	set	4013
    60   000000                     _SPBRG	set	4015
    61   000000                     _SPBRGH	set	4016
    62   000000                     _BRG161	set	32195
    63   000000                     _RCREG1	set	4014
    64   000000                     _TXSTAbits	set	4012
    65   000000                     _RCSTAbits	set	4011
    66   000000                     _BAUDCON1bits	set	4024
    67   000000                     _TXSTA1bits	set	4012
    68   000000                     _TRMT	set	32097
    69   000000                     _TRISC7	set	31911
    70   000000                     _CREN	set	32092
    71   000000                     _TXEN1	set	32101
    72   000000                     _BRGH1	set	32098
    73   000000                     _TRISC6	set	31910
    74   000000                     _SPEN	set	32095
    75   000000                     _SYNC1	set	32100
    76   000000                     _OSCCON2bits	set	4050
    77   000000                     _OSCTUNEbits	set	3995
    78   000000                     _RC1IF	set	31989
    79   000000                     _OSCCONbits	set	4051
    80                           
    81                           	psect	smallconst
    82   000800                     __psmallconst:
    83                           	callstack 0
    84   000800  00                 	db	0
    85   000801  45                 	db	69	;'E'
    86   000802  52                 	db	82	;'R'
    87   000803  52                 	db	82	;'R'
    88   000804  4F                 	db	79	;'O'
    89   000805  52                 	db	82	;'R'
    90   000806  5F                 	db	95	;'_'
    91   000807  43                 	db	67	;'C'
    92   000808  4F                 	db	79	;'O'
    93   000809  44                 	db	68	;'D'
    94   00080A  45                 	db	69	;'E'
    95   00080B  5F                 	db	95	;'_'
    96   00080C  55                 	db	85	;'U'
    97   00080D  41                 	db	65	;'A'
    98   00080E  52                 	db	82	;'R'
    99   00080F  54                 	db	84	;'T'
   100   000810  5F                 	db	95	;'_'
   101   000811  43                 	db	67	;'C'
   102   000812  4F                 	db	79	;'O'
   103   000813  4E                 	db	78	;'N'
   104   000814  46                 	db	70	;'F'
   105   000815  49                 	db	73	;'I'
   106   000816  47                 	db	71	;'G'
   107   000817  20                 	db	32
   108   000818  0D                 	db	13
   109   000819  0A                 	db	10
   110   00081A  00                 	db	0
   111   00081B  45                 	db	69	;'E'
   112   00081C  52                 	db	82	;'R'
   113   00081D  52                 	db	82	;'R'
   114   00081E  4F                 	db	79	;'O'
   115   00081F  52                 	db	82	;'R'
   116   000820  5F                 	db	95	;'_'
   117   000821  43                 	db	67	;'C'
   118   000822  4F                 	db	79	;'O'
   119   000823  44                 	db	68	;'D'
   120   000824  45                 	db	69	;'E'
   121   000825  5F                 	db	95	;'_'
   122   000826  55                 	db	85	;'U'
   123   000827  41                 	db	65	;'A'
   124   000828  52                 	db	82	;'R'
   125   000829  54                 	db	84	;'T'
   126   00082A  5F                 	db	95	;'_'
   127   00082B  4F                 	db	79	;'O'
   128   00082C  56                 	db	86	;'V'
   129   00082D  45                 	db	69	;'E'
   130   00082E  52                 	db	82	;'R'
   131   00082F  46                 	db	70	;'F'
   132   000830  4C                 	db	76	;'L'
   133   000831  4F                 	db	79	;'O'
   134   000832  57                 	db	87	;'W'
   135   000833  00                 	db	0
   136   000834  45                 	db	69	;'E'
   137   000835  52                 	db	82	;'R'
   138   000836  52                 	db	82	;'R'
   139   000837  4F                 	db	79	;'O'
   140   000838  52                 	db	82	;'R'
   141   000839  5F                 	db	95	;'_'
   142   00083A  43                 	db	67	;'C'
   143   00083B  4F                 	db	79	;'O'
   144   00083C  44                 	db	68	;'D'
   145   00083D  45                 	db	69	;'E'
   146   00083E  5F                 	db	95	;'_'
   147   00083F  55                 	db	85	;'U'
   148   000840  41                 	db	65	;'A'
   149   000841  52                 	db	82	;'R'
   150   000842  54                 	db	84	;'T'
   151   000843  5F                 	db	95	;'_'
   152   000844  46                 	db	70	;'F'
   153   000845  52                 	db	82	;'R'
   154   000846  41                 	db	65	;'A'
   155   000847  4D                 	db	77	;'M'
   156   000848  49                 	db	73	;'I'
   157   000849  4E                 	db	78	;'N'
   158   00084A  47                 	db	71	;'G'
   159   00084B  00                 	db	0
   160   00084C                     STR_5:
   161   00084C  62                 	db	98	;'b'
   162   00084D  61                 	db	97	;'a'
   163   00084E  6A                 	db	106	;'j'
   164   00084F  61                 	db	97	;'a'
   165   000850  20                 	db	32
   166   000851  76                 	db	118	;'v'
   167   000852  65                 	db	101	;'e'
   168   000853  6C                 	db	108	;'l'
   169   000854  6F                 	db	111	;'o'
   170   000855  63                 	db	99	;'c'
   171   000856  69                 	db	105	;'i'
   172   000857  64                 	db	100	;'d'
   173   000858  61                 	db	97	;'a'
   174   000859  64                 	db	100	;'d'
   175   00085A  20                 	db	32
   176   00085B  0D                 	db	13
   177   00085C  0A                 	db	10
   178   00085D  00                 	db	0
   179   00085E                     STR_4:
   180   00085E  61                 	db	97	;'a'
   181   00085F  6C                 	db	108	;'l'
   182   000860  74                 	db	116	;'t'
   183   000861  61                 	db	97	;'a'
   184   000862  20                 	db	32
   185   000863  76                 	db	118	;'v'
   186   000864  65                 	db	101	;'e'
   187   000865  6C                 	db	108	;'l'
   188   000866  6F                 	db	111	;'o'
   189   000867  63                 	db	99	;'c'
   190   000868  69                 	db	105	;'i'
   191   000869  64                 	db	100	;'d'
   192   00086A  61                 	db	97	;'a'
   193   00086B  64                 	db	100	;'d'
   194   00086C  20                 	db	32
   195   00086D  0D                 	db	13
   196   00086E  0A                 	db	10
   197   00086F  00                 	db	0
   198   000870                     STR_12:
   199   000870  44                 	db	68	;'D'
   200   000871  65                 	db	101	;'e'
   201   000872  73                 	db	115	;'s'
   202   000873  68                 	db	104	;'h'
   203   000874  61                 	db	97	;'a'
   204   000875  62                 	db	98	;'b'
   205   000876  69                 	db	105	;'i'
   206   000877  6C                 	db	108	;'l'
   207   000878  69                 	db	105	;'i'
   208   000879  74                 	db	116	;'t'
   209   00087A  61                 	db	97	;'a'
   210   00087B  64                 	db	100	;'d'
   211   00087C  6F                 	db	111	;'o'
   212   00087D  20                 	db	32
   213   00087E  0D                 	db	13
   214   00087F  0A                 	db	10
   215   000880  00                 	db	0
   216   000881                     STR_11:
   217   000881  48                 	db	72	;'H'
   218   000882  61                 	db	97	;'a'
   219   000883  62                 	db	98	;'b'
   220   000884  69                 	db	105	;'i'
   221   000885  6C                 	db	108	;'l'
   222   000886  69                 	db	105	;'i'
   223   000887  74                 	db	116	;'t'
   224   000888  61                 	db	97	;'a'
   225   000889  64                 	db	100	;'d'
   226   00088A  6F                 	db	111	;'o'
   227   00088B  20                 	db	32
   228   00088C  0D                 	db	13
   229   00088D  0A                 	db	10
   230   00088E  00                 	db	0
   231   00088F                     STR_9:
   232   00088F  78                 	db	120	;'x'
   233   000890  20                 	db	32
   234   000891  62                 	db	98	;'b'
   235   000892  61                 	db	97	;'a'
   236   000893  75                 	db	117	;'u'
   237   000894  64                 	db	100	;'d'
   238   000895  69                 	db	105	;'i'
   239   000896  6F                 	db	111	;'o'
   240   000897  73                 	db	115	;'s'
   241   000898  20                 	db	32
   242   000899  0D                 	db	13
   243   00089A  0A                 	db	10
   244   00089B  00                 	db	0
   245   00089C                     STR_6:
   246   00089C  42                 	db	66	;'B'
   247   00089D  61                 	db	97	;'a'
   248   00089E  75                 	db	117	;'u'
   249   00089F  64                 	db	100	;'d'
   250   0008A0  72                 	db	114	;'r'
   251   0008A1  61                 	db	97	;'a'
   252   0008A2  74                 	db	116	;'t'
   253   0008A3  65                 	db	101	;'e'
   254   0008A4  3A                 	db	58	;':'
   255   0008A5  20                 	db	32
   256   0008A6  00                 	db	0
   257   0008A7                     STR_16:
   258   0008A7  52                 	db	82	;'R'
   259   0008A8  65                 	db	101	;'e'
   260   0008A9  63                 	db	99	;'c'
   261   0008AA  65                 	db	101	;'e'
   262   0008AB  70                 	db	112	;'p'
   263   0008AC  74                 	db	116	;'t'
   264   0008AD  6F                 	db	111	;'o'
   265   0008AE  72                 	db	114	;'r'
   266   0008AF  3A                 	db	58	;':'
   267   0008B0  20                 	db	32
   268   0008B1  00                 	db	0
   269   0008B2                     STR_3:
   270   0008B2  41                 	db	65	;'A'
   271   0008B3  73                 	db	115	;'s'
   272   0008B4  69                 	db	105	;'i'
   273   0008B5  6E                 	db	110	;'n'
   274   0008B6  63                 	db	99	;'c'
   275   0008B7  72                 	db	114	;'r'
   276   0008B8  6F                 	db	111	;'o'
   277   0008B9  6E                 	db	110	;'n'
   278   0008BA  6F                 	db	111	;'o'
   279   0008BB  20                 	db	32
   280   0008BC  00                 	db	0
   281   0008BD                     STR_13:
   282   0008BD  54                 	db	84	;'T'
   283   0008BE  72                 	db	114	;'r'
   284   0008BF  61                 	db	97	;'a'
   285   0008C0  6E                 	db	110	;'n'
   286   0008C1  73                 	db	115	;'s'
   287   0008C2  6F                 	db	111	;'o'
   288   0008C3  72                 	db	114	;'r'
   289   0008C4  3A                 	db	58	;':'
   290   0008C5  20                 	db	32
   291   0008C6  00                 	db	0
   292   0008C7                     STR_2:
   293   0008C7  53                 	db	83	;'S'
   294   0008C8  69                 	db	105	;'i'
   295   0008C9  6E                 	db	110	;'n'
   296   0008CA  63                 	db	99	;'c'
   297   0008CB  72                 	db	114	;'r'
   298   0008CC  6F                 	db	111	;'o'
   299   0008CD  6E                 	db	110	;'n'
   300   0008CE  6F                 	db	111	;'o'
   301   0008CF  20                 	db	32
   302   0008D0  00                 	db	0
   303   0008D1                     STR_10:
   304   0008D1  50                 	db	80	;'P'
   305   0008D2  75                 	db	117	;'u'
   306   0008D3  65                 	db	101	;'e'
   307   0008D4  72                 	db	114	;'r'
   308   0008D5  74                 	db	116	;'t'
   309   0008D6  6F                 	db	111	;'o'
   310   0008D7  3A                 	db	58	;':'
   311   0008D8  20                 	db	32
   312   0008D9  00                 	db	0
   313   0008DA                     STR_7:
   314   0008DA  31                 	db	49	;'1'
   315   0008DB  36                 	db	54	;'6'
   316   0008DC  20                 	db	32
   317   0008DD  62                 	db	98	;'b'
   318   0008DE  69                 	db	105	;'i'
   319   0008DF  74                 	db	116	;'t'
   320   0008E0  73                 	db	115	;'s'
   321   0008E1  20                 	db	32
   322   0008E2  00                 	db	0
   323   0008E3  45                 	db	69	;'E'
   324   0008E4  72                 	db	114	;'r'
   325   0008E5  72                 	db	114	;'r'
   326   0008E6  6F                 	db	111	;'o'
   327   0008E7  72                 	db	114	;'r'
   328   0008E8  3A                 	db	58	;':'
   329   0008E9  20                 	db	32
   330   0008EA  00                 	db	0
   331   0008EB                     STR_8:
   332   0008EB  38                 	db	56	;'8'
   333   0008EC  20                 	db	32
   334   0008ED  62                 	db	98	;'b'
   335   0008EE  69                 	db	105	;'i'
   336   0008EF  74                 	db	116	;'t'
   337   0008F0  73                 	db	115	;'s'
   338   0008F1  20                 	db	32
   339   0008F2  00                 	db	0
   340   0008F3                     STR_1:
   341   0008F3  4D                 	db	77	;'M'
   342   0008F4  6F                 	db	111	;'o'
   343   0008F5  64                 	db	100	;'d'
   344   0008F6  6F                 	db	111	;'o'
   345   0008F7  3A                 	db	58	;':'
   346   0008F8  20                 	db	32
   347   0008F9  00                 	db	0
   348   0008FA  00                 	db	0	; dummy byte at the end
   349   000000                     
   350                           ; #config settings
   351                           
   352                           	psect	cinit
   353   000F36                     __pcinit:
   354                           	callstack 0
   355   000F36                     start_initialization:
   356                           	callstack 0
   357   000F36                     __initialization:
   358                           	callstack 0
   359                           
   360                           ; Clear objects allocated to COMRAM (37 bytes)
   361   000F36  EE00  F001         	lfsr	0,__pbssCOMRAM
   362   000F3A  0E25               	movlw	37
   363   000F3C                     clear_0:
   364   000F3C  6AEE               	clrf	postinc0,c
   365   000F3E  06E8               	decf	wreg,f,c
   366   000F40  E1FD               	bnz	clear_0
   367   000F42                     end_of_initialization:
   368                           	callstack 0
   369   000F42                     __end_of__initialization:
   370                           	callstack 0
   371   000F42  0E00               	movlw	low (__Lmediumconst shr (0+16))
   372   000F44  6EF8               	movwf	tblptru,c
   373   000F46  0100               	movlb	0
   374   000F48  EF7A  F007         	goto	_main	;jump to C main() function
   375                           
   376                           	psect	bssCOMRAM
   377   000001                     __pbssCOMRAM:
   378                           	callstack 0
   379   000001                     	ds	32
   380   000021                     _width:
   381                           	callstack 0
   382   000021                     	ds	2
   383   000023                     _prec:
   384                           	callstack 0
   385   000023                     	ds	2
   386   000025                     _flags:
   387                           	callstack 0
   388   000025                     	ds	1
   389                           
   390                           	psect	cstackCOMRAM
   391   000026                     __pcstackCOMRAM:
   392                           	callstack 0
   393   000026                     UART_Tx@dato:
   394                           	callstack 0
   395   000026                     Clock_Init@s16Timeout:
   396                           	callstack 0
   397   000026                     UART_select_baud@baudrate:
   398                           	callstack 0
   399                           
   400                           ; 4 bytes @ 0x0
   401   000026                     	ds	1
   402   000027                     putch@data:
   403                           	callstack 0
   404                           
   405                           ; 1 bytes @ 0x1
   406   000027                     	ds	1
   407   000028                     Clock_Init@bStatus:
   408                           	callstack 0
   409   000028                     fputc@c:
   410                           	callstack 0
   411                           
   412                           ; 2 bytes @ 0x2
   413   000028                     	ds	1
   414   000029                     Clock_Init@bStatus_538:
   415                           	callstack 0
   416                           
   417                           ; 1 bytes @ 0x3
   418   000029                     	ds	1
   419   00002A                     ??_UART_select_baud:
   420   00002A                     Clock_Init@bStatus_539:
   421                           	callstack 0
   422   00002A                     fputc@fp:
   423                           	callstack 0
   424                           
   425                           ; 2 bytes @ 0x4
   426   00002A                     	ds	1
   427   00002B                     Clock_Init@bStatus_542:
   428                           	callstack 0
   429                           
   430                           ; 1 bytes @ 0x5
   431   00002B                     	ds	1
   432   00002C                     ??_fputc:
   433   00002C                     Clock_Init@bItTimeEn:
   434                           	callstack 0
   435                           
   436                           ; 1 bytes @ 0x6
   437   00002C                     	ds	1
   438   00002D                     Clock_Init@returnCode:
   439                           	callstack 0
   440                           
   441                           ; 1 bytes @ 0x7
   442   00002D                     	ds	4
   443   000031                     vfpfcnvrt@fp:
   444                           	callstack 0
   445                           
   446                           ; 2 bytes @ 0xB
   447   000031                     	ds	2
   448   000033                     vfpfcnvrt@fmt:
   449                           	callstack 0
   450                           
   451                           ; 1 bytes @ 0xD
   452   000033                     	ds	1
   453   000034                     vfpfcnvrt@ap:
   454                           	callstack 0
   455                           
   456                           ; 1 bytes @ 0xE
   457   000034                     	ds	1
   458   000035                     ?_vfprintf:
   459                           	callstack 0
   460   000035                     vfprintf@fp:
   461                           	callstack 0
   462                           
   463                           ; 2 bytes @ 0xF
   464   000035                     	ds	2
   465   000037                     vfprintf@fmt:
   466                           	callstack 0
   467                           
   468                           ; 1 bytes @ 0x11
   469   000037                     	ds	1
   470   000038                     vfprintf@ap:
   471                           	callstack 0
   472                           
   473                           ; 1 bytes @ 0x12
   474   000038                     	ds	1
   475   000039                     vfprintf@cfmt:
   476                           	callstack 0
   477                           
   478                           ; 1 bytes @ 0x13
   479   000039                     	ds	1
   480   00003A                     ?_printf:
   481                           	callstack 0
   482   00003A                     printf@fmt:
   483                           	callstack 0
   484                           
   485                           ; 1 bytes @ 0x14
   486   00003A                     	ds	1
   487   00003B                     printf@ap:
   488                           	callstack 0
   489                           
   490                           ; 1 bytes @ 0x15
   491   00003B                     	ds	1
   492   00003C                     UART_Init@baudrate:
   493                           	callstack 0
   494                           
   495                           ; 4 bytes @ 0x16
   496   00003C                     	ds	4
   497   000040                     
   498                           ; 1 bytes @ 0x1A
   499 ;;
   500 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   501 ;;
   502 ;; *************** function _main *****************
   503 ;; Defined at:
   504 ;;		line 14 in file "main.c"
   505 ;; Parameters:    Size  Location     Type
   506 ;;		None
   507 ;; Auto vars:     Size  Location     Type
   508 ;;		None
   509 ;; Return value:  Size  Location     Type
   510 ;;                  1    wreg      void 
   511 ;; Registers used:
   512 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   513 ;; Tracked objects:
   514 ;;		On entry : 0/0
   515 ;;		On exit  : 0/0
   516 ;;		Unchanged: 0/0
   517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   518 ;;      Params:         0       0       0       0       0       0       0       0       0
   519 ;;      Locals:         0       0       0       0       0       0       0       0       0
   520 ;;      Temps:          0       0       0       0       0       0       0       0       0
   521 ;;      Totals:         0       0       0       0       0       0       0       0       0
   522 ;;Total ram usage:        0 bytes
   523 ;; Hardware stack levels required when called: 8
   524 ;; This function calls:
   525 ;;		_Clock_Init
   526 ;;		_UART_Init
   527 ;; This function is called by:
   528 ;;		Startup code after reset
   529 ;; This function uses a non-reentrant model
   530 ;;
   531                           
   532                           	psect	text0
   533   000EF4                     __ptext0:
   534                           	callstack 0
   535   000EF4                     _main:
   536                           	callstack 23
   537   000EF4                     
   538                           ;main.c: 15:     Clock_Init(16000);
   539   000EF4  0E3E               	movlw	62
   540   000EF6  6E27               	movwf	(Clock_Init@s16Timeout+1)^0,c
   541   000EF8  0E80               	movlw	128
   542   000EFA  6E26               	movwf	Clock_Init@s16Timeout^0,c
   543   000EFC  EC7E  F004         	call	_Clock_Init	;wreg free
   544   000F00                     
   545                           ;main.c: 16:     UART_Init(9600);
   546   000F00  0E80               	movlw	128
   547   000F02  6E3C               	movwf	UART_Init@baudrate^0,c
   548   000F04  0E25               	movlw	37
   549   000F06  6E3D               	movwf	(UART_Init@baudrate+1)^0,c
   550   000F08  0E00               	movlw	0
   551   000F0A  6E3E               	movwf	(UART_Init@baudrate+2)^0,c
   552   000F0C  0E00               	movlw	0
   553   000F0E  6E3F               	movwf	(UART_Init@baudrate+3)^0,c
   554   000F10  EC65  F007         	call	_UART_Init	;wreg free
   555   000F14                     l9:
   556   000F14  EF8A  F007         	goto	l9
   557   000F18  EF00  F000         	goto	start
   558   000F1C                     __end_of_main:
   559                           	callstack 0
   560                           
   561 ;; *************** function _UART_Init *****************
   562 ;; Defined at:
   563 ;;		line 20 in file "librerias/UART.c"
   564 ;; Parameters:    Size  Location     Type
   565 ;;  baudrate        4   22[COMRAM] unsigned long 
   566 ;; Auto vars:     Size  Location     Type
   567 ;;		None
   568 ;; Return value:  Size  Location     Type
   569 ;;                  1    wreg      void 
   570 ;; Registers used:
   571 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   572 ;; Tracked objects:
   573 ;;		On entry : 0/0
   574 ;;		On exit  : 0/0
   575 ;;		Unchanged: 0/0
   576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   577 ;;      Params:         4       0       0       0       0       0       0       0       0
   578 ;;      Locals:         0       0       0       0       0       0       0       0       0
   579 ;;      Temps:          0       0       0       0       0       0       0       0       0
   580 ;;      Totals:         4       0       0       0       0       0       0       0       0
   581 ;;Total ram usage:        4 bytes
   582 ;; Hardware stack levels used: 1
   583 ;; Hardware stack levels required when called: 7
   584 ;; This function calls:
   585 ;;		_UART_config_show
   586 ;;		_UART_select_baud
   587 ;; This function is called by:
   588 ;;		_main
   589 ;; This function uses a non-reentrant model
   590 ;;
   591                           
   592                           	psect	text1
   593   000ECA                     __ptext1:
   594                           	callstack 0
   595   000ECA                     _UART_Init:
   596                           	callstack 23
   597   000ECA                     
   598                           ;librerias/UART.c: 21:     TXSTA1bits.SYNC1 = 0;
   599   000ECA  98AC               	bcf	172,4,c	;volatile
   600                           
   601                           ;librerias/UART.c: 22:     TXSTA1bits.BRGH1 = 1;
   602   000ECC  84AC               	bsf	172,2,c	;volatile
   603                           
   604                           ;librerias/UART.c: 23:     BAUDCON1bits.BRG161 = 1;
   605   000ECE  86B8               	bsf	184,3,c	;volatile
   606   000ED0                     
   607                           ;librerias/UART.c: 24:     UART_select_baud(baudrate);
   608   000ED0  C03C  F026         	movff	UART_Init@baudrate,UART_select_baud@baudrate
   609   000ED4  C03D  F027         	movff	UART_Init@baudrate+1,UART_select_baud@baudrate+1
   610   000ED8  C03E  F028         	movff	UART_Init@baudrate+2,UART_select_baud@baudrate+2
   611   000EDC  C03F  F029         	movff	UART_Init@baudrate+3,UART_select_baud@baudrate+3
   612   000EE0  EC89  F005         	call	_UART_select_baud	;wreg free
   613   000EE4                     
   614                           ;librerias/UART.c: 25:     TRISC6 = 1;
   615   000EE4  8C94               	bsf	3988,6,c	;volatile
   616   000EE6                     
   617                           ;librerias/UART.c: 26:     TRISC7 = 1;
   618   000EE6  8E94               	bsf	3988,7,c	;volatile
   619   000EE8                     
   620                           ;librerias/UART.c: 27:     RCSTAbits.SPEN = 1;
   621   000EE8  8EAB               	bsf	171,7,c	;volatile
   622   000EEA                     
   623                           ;librerias/UART.c: 28:     TXSTAbits.TXEN1 = 1;
   624   000EEA  8AAC               	bsf	172,5,c	;volatile
   625   000EEC                     
   626                           ;librerias/UART.c: 29:     RCSTAbits.CREN = 1;
   627   000EEC  88AB               	bsf	171,4,c	;volatile
   628   000EEE                     
   629                           ;librerias/UART.c: 30:     UART_config_show();
   630   000EEE  EC29  F006         	call	_UART_config_show	;wreg free
   631   000EF2  0012               	return		;funcret
   632   000EF4                     __end_of_UART_Init:
   633                           	callstack 0
   634                           
   635 ;; *************** function _UART_select_baud *****************
   636 ;; Defined at:
   637 ;;		line 33 in file "librerias/UART.c"
   638 ;; Parameters:    Size  Location     Type
   639 ;;  baudrate        4    0[COMRAM] unsigned long 
   640 ;; Auto vars:     Size  Location     Type
   641 ;;		None
   642 ;; Return value:  Size  Location     Type
   643 ;;                  1    wreg      void 
   644 ;; Registers used:
   645 ;;		wreg, status,2, status,0
   646 ;; Tracked objects:
   647 ;;		On entry : 0/0
   648 ;;		On exit  : 0/0
   649 ;;		Unchanged: 0/0
   650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   651 ;;      Params:         4       0       0       0       0       0       0       0       0
   652 ;;      Locals:         0       0       0       0       0       0       0       0       0
   653 ;;      Temps:          4       0       0       0       0       0       0       0       0
   654 ;;      Totals:         8       0       0       0       0       0       0       0       0
   655 ;;Total ram usage:        8 bytes
   656 ;; Hardware stack levels used: 1
   657 ;; This function calls:
   658 ;;		Nothing
   659 ;; This function is called by:
   660 ;;		_UART_Init
   661 ;; This function uses a non-reentrant model
   662 ;;
   663                           
   664                           	psect	text2
   665   000B12                     __ptext2:
   666                           	callstack 0
   667   000B12                     _UART_select_baud:
   668                           	callstack 29
   669   000B12                     
   670                           ;librerias/UART.c: 34:     switch (baudrate){
   671   000B12  EFBB  F005         	goto	l1355
   672   000B16                     l1337:
   673                           
   674                           ;librerias/UART.c: 36:             SPBRGH = 0x9C;
   675   000B16  0E9C               	movlw	156
   676   000B18  6EB0               	movwf	176,c	;volatile
   677                           
   678                           ;librerias/UART.c: 37:             SPBRG = 0x3F;
   679   000B1A  0E3F               	movlw	63
   680   000B1C  6EAF               	movwf	175,c	;volatile
   681                           
   682                           ;librerias/UART.c: 38:             break;
   683   000B1E  EF28  F006         	goto	l99
   684   000B22                     l1339:
   685                           
   686                           ;librerias/UART.c: 40:             SPBRGH = 0x27;
   687   000B22  0E27               	movlw	39
   688   000B24  6EB0               	movwf	176,c	;volatile
   689                           
   690                           ;librerias/UART.c: 41:             SPBRG = 0x0F;
   691   000B26  0E0F               	movlw	15
   692   000B28  6EAF               	movwf	175,c	;volatile
   693                           
   694                           ;librerias/UART.c: 42:             break;
   695   000B2A  EF28  F006         	goto	l99
   696   000B2E                     l1341:
   697                           
   698                           ;librerias/UART.c: 44:             SPBRGH = 0x13;
   699   000B2E  0E13               	movlw	19
   700   000B30  6EB0               	movwf	176,c	;volatile
   701                           
   702                           ;librerias/UART.c: 45:             SPBRG = 0x87;
   703   000B32  0E87               	movlw	135
   704   000B34  6EAF               	movwf	175,c	;volatile
   705                           
   706                           ;librerias/UART.c: 46:             break;
   707   000B36  EF28  F006         	goto	l99
   708   000B3A                     l1343:
   709                           
   710                           ;librerias/UART.c: 48:             SPBRGH = 0x04;
   711   000B3A  0E04               	movlw	4
   712   000B3C  6EB0               	movwf	176,c	;volatile
   713                           
   714                           ;librerias/UART.c: 49:             SPBRG = 0x7F;
   715   000B3E  0E7F               	movlw	127
   716   000B40  6EAF               	movwf	175,c	;volatile
   717                           
   718                           ;librerias/UART.c: 50:             break;
   719   000B42  EF28  F006         	goto	l99
   720   000B46                     l1345:
   721                           
   722                           ;librerias/UART.c: 52:             SPBRGH = 0x02;
   723   000B46  0E02               	movlw	2
   724   000B48  6EB0               	movwf	176,c	;volatile
   725                           
   726                           ;librerias/UART.c: 53:             SPBRG = 0x70;
   727   000B4A  0E70               	movlw	112
   728   000B4C  6EAF               	movwf	175,c	;volatile
   729                           
   730                           ;librerias/UART.c: 54:             break;
   731   000B4E  EF28  F006         	goto	l99
   732   000B52                     l1347:
   733                           
   734                           ;librerias/UART.c: 56:             SPBRGH = 0x00;
   735   000B52  0E00               	movlw	0
   736   000B54  6EB0               	movwf	176,c	;volatile
   737                           
   738                           ;librerias/UART.c: 57:             SPBRG = 0xCF;
   739   000B56  0ECF               	movlw	207
   740   000B58  6EAF               	movwf	175,c	;volatile
   741                           
   742                           ;librerias/UART.c: 58:             break;
   743   000B5A  EF28  F006         	goto	l99
   744   000B5E                     l1349:
   745                           
   746                           ;librerias/UART.c: 60:             SPBRGH = 0x00;
   747   000B5E  0E00               	movlw	0
   748   000B60  6EB0               	movwf	176,c	;volatile
   749                           
   750                           ;librerias/UART.c: 61:             SPBRG = 0x67;
   751   000B62  0E67               	movlw	103
   752   000B64  6EAF               	movwf	175,c	;volatile
   753                           
   754                           ;librerias/UART.c: 62:             break;
   755   000B66  EF28  F006         	goto	l99
   756   000B6A                     l1351:
   757                           
   758                           ;librerias/UART.c: 64:             SPBRGH = 0x04;
   759   000B6A  0E04               	movlw	4
   760   000B6C  6EB0               	movwf	176,c	;volatile
   761                           
   762                           ;librerias/UART.c: 65:             SPBRG = 0xE1;
   763   000B6E  0EE1               	movlw	225
   764   000B70  6EAF               	movwf	175,c	;volatile
   765                           
   766                           ;librerias/UART.c: 66:             break;
   767   000B72  EF28  F006         	goto	l99
   768   000B76                     l1355:
   769   000B76  C026  F02A         	movff	UART_select_baud@baudrate,??_UART_select_baud
   770   000B7A  C027  F02B         	movff	UART_select_baud@baudrate+1,??_UART_select_baud+1
   771   000B7E  C028  F02C         	movff	UART_select_baud@baudrate+2,??_UART_select_baud+2
   772   000B82  C029  F02D         	movff	UART_select_baud@baudrate+3,??_UART_select_baud+3
   773                           
   774                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 3 sub-sw
      +                          itches
   775                           ; Switch size 1, requested type "simple"
   776                           ; Number of cases is 1, Range of values is 0 to 0
   777                           ; switch strategies available:
   778                           ; Name         Instructions Cycles
   779                           ; simple_byte            4     3 (average)
   780                           ;	Chosen strategy is simple_byte
   781   000B86  502D               	movf	(??_UART_select_baud+3)^0,w,c
   782   000B88  0A00               	xorlw	0	; case 0
   783   000B8A  B4D8               	btfsc	status,2,c
   784   000B8C  EF1D  F006         	goto	l1553
   785   000B90  EFB5  F005         	goto	l1351
   786   000B94                     l1549:
   787                           
   788                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 6 sub-sw
      +                          itches
   789                           ; Switch size 1, requested type "simple"
   790                           ; Number of cases is 6, Range of values is 1 to 225
   791                           ; switch strategies available:
   792                           ; Name         Instructions Cycles
   793                           ; simple_byte           19    10 (average)
   794                           ;	Chosen strategy is simple_byte
   795   000B94  502B               	movf	(??_UART_select_baud+1)^0,w,c
   796   000B96  0A01               	xorlw	1	; case 1
   797   000B98  B4D8               	btfsc	status,2,c
   798   000B9A  EFE5  F005         	goto	l1555
   799   000B9E  0A05               	xorlw	5	; case 4
   800   000BA0  B4D8               	btfsc	status,2,c
   801   000BA2  EFEC  F005         	goto	l1557
   802   000BA6  0A0D               	xorlw	13	; case 9
   803   000BA8  B4D8               	btfsc	status,2,c
   804   000BAA  EFF3  F005         	goto	l1559
   805   000BAE  0A21               	xorlw	33	; case 40
   806   000BB0  B4D8               	btfsc	status,2,c
   807   000BB2  EFFA  F005         	goto	l1561
   808   000BB6  0A63               	xorlw	99	; case 75
   809   000BB8  B4D8               	btfsc	status,2,c
   810   000BBA  EF01  F006         	goto	l1563
   811   000BBE  0AAA               	xorlw	170	; case 225
   812   000BC0  B4D8               	btfsc	status,2,c
   813   000BC2  EF08  F006         	goto	l1565
   814   000BC6  EFB5  F005         	goto	l1351
   815   000BCA                     l1555:
   816                           
   817                           ; Switch size 1, requested type "simple"
   818                           ; Number of cases is 1, Range of values is 44 to 44
   819                           ; switch strategies available:
   820                           ; Name         Instructions Cycles
   821                           ; simple_byte            4     3 (average)
   822                           ;	Chosen strategy is simple_byte
   823   000BCA  502A               	movf	??_UART_select_baud^0,w,c
   824   000BCC  0A2C               	xorlw	44	; case 44
   825   000BCE  B4D8               	btfsc	status,2,c
   826   000BD0  EF8B  F005         	goto	l1337
   827   000BD4  EFB5  F005         	goto	l1351
   828   000BD8                     l1557:
   829                           
   830                           ; Switch size 1, requested type "simple"
   831                           ; Number of cases is 1, Range of values is 176 to 176
   832                           ; switch strategies available:
   833                           ; Name         Instructions Cycles
   834                           ; simple_byte            4     3 (average)
   835                           ;	Chosen strategy is simple_byte
   836   000BD8  502A               	movf	??_UART_select_baud^0,w,c
   837   000BDA  0AB0               	xorlw	176	; case 176
   838   000BDC  B4D8               	btfsc	status,2,c
   839   000BDE  EF91  F005         	goto	l1339
   840   000BE2  EFB5  F005         	goto	l1351
   841   000BE6                     l1559:
   842                           
   843                           ; Switch size 1, requested type "simple"
   844                           ; Number of cases is 1, Range of values is 96 to 96
   845                           ; switch strategies available:
   846                           ; Name         Instructions Cycles
   847                           ; simple_byte            4     3 (average)
   848                           ;	Chosen strategy is simple_byte
   849   000BE6  502A               	movf	??_UART_select_baud^0,w,c
   850   000BE8  0A60               	xorlw	96	; case 96
   851   000BEA  B4D8               	btfsc	status,2,c
   852   000BEC  EF97  F005         	goto	l1341
   853   000BF0  EFB5  F005         	goto	l1351
   854   000BF4                     l1561:
   855                           
   856                           ; Switch size 1, requested type "simple"
   857                           ; Number of cases is 1, Range of values is 177 to 177
   858                           ; switch strategies available:
   859                           ; Name         Instructions Cycles
   860                           ; simple_byte            4     3 (average)
   861                           ;	Chosen strategy is simple_byte
   862   000BF4  502A               	movf	??_UART_select_baud^0,w,c
   863   000BF6  0AB1               	xorlw	177	; case 177
   864   000BF8  B4D8               	btfsc	status,2,c
   865   000BFA  EF9D  F005         	goto	l1343
   866   000BFE  EFB5  F005         	goto	l1351
   867   000C02                     l1563:
   868                           
   869                           ; Switch size 1, requested type "simple"
   870                           ; Number of cases is 1, Range of values is 0 to 0
   871                           ; switch strategies available:
   872                           ; Name         Instructions Cycles
   873                           ; simple_byte            4     3 (average)
   874                           ;	Chosen strategy is simple_byte
   875   000C02  502A               	movf	??_UART_select_baud^0,w,c
   876   000C04  0A00               	xorlw	0	; case 0
   877   000C06  B4D8               	btfsc	status,2,c
   878   000C08  EFA3  F005         	goto	l1345
   879   000C0C  EFB5  F005         	goto	l1351
   880   000C10                     l1565:
   881                           
   882                           ; Switch size 1, requested type "simple"
   883                           ; Number of cases is 1, Range of values is 0 to 0
   884                           ; switch strategies available:
   885                           ; Name         Instructions Cycles
   886                           ; simple_byte            4     3 (average)
   887                           ;	Chosen strategy is simple_byte
   888   000C10  502A               	movf	??_UART_select_baud^0,w,c
   889   000C12  0A00               	xorlw	0	; case 0
   890   000C14  B4D8               	btfsc	status,2,c
   891   000C16  EFA9  F005         	goto	l1347
   892   000C1A  EFB5  F005         	goto	l1351
   893   000C1E                     l1551:
   894                           
   895                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   896                           ; Switch size 1, requested type "simple"
   897                           ; Number of cases is 1, Range of values is 194 to 194
   898                           ; switch strategies available:
   899                           ; Name         Instructions Cycles
   900                           ; simple_byte            4     3 (average)
   901                           ;	Chosen strategy is simple_byte
   902   000C1E  502B               	movf	(??_UART_select_baud+1)^0,w,c
   903   000C20  0AC2               	xorlw	194	; case 194
   904   000C22  B4D8               	btfsc	status,2,c
   905   000C24  EF16  F006         	goto	l1567
   906   000C28  EFB5  F005         	goto	l1351
   907   000C2C                     l1567:
   908                           
   909                           ; Switch size 1, requested type "simple"
   910                           ; Number of cases is 1, Range of values is 0 to 0
   911                           ; switch strategies available:
   912                           ; Name         Instructions Cycles
   913                           ; simple_byte            4     3 (average)
   914                           ;	Chosen strategy is simple_byte
   915   000C2C  502A               	movf	??_UART_select_baud^0,w,c
   916   000C2E  0A00               	xorlw	0	; case 0
   917   000C30  B4D8               	btfsc	status,2,c
   918   000C32  EFAF  F005         	goto	l1349
   919   000C36  EFB5  F005         	goto	l1351
   920   000C3A                     l1553:
   921                           
   922                           ; Switch size 1, requested type "simple"
   923                           ; Number of cases is 2, Range of values is 0 to 1
   924                           ; switch strategies available:
   925                           ; Name         Instructions Cycles
   926                           ; simple_byte            7     4 (average)
   927                           ;	Chosen strategy is simple_byte
   928   000C3A  502C               	movf	(??_UART_select_baud+2)^0,w,c
   929   000C3C  0A00               	xorlw	0	; case 0
   930   000C3E  B4D8               	btfsc	status,2,c
   931   000C40  EFCA  F005         	goto	l1549
   932   000C44  0A01               	xorlw	1	; case 1
   933   000C46  B4D8               	btfsc	status,2,c
   934   000C48  EF0F  F006         	goto	l1551
   935   000C4C  EFB5  F005         	goto	l1351
   936   000C50                     l99:
   937   000C50  0012               	return		;funcret
   938   000C52                     __end_of_UART_select_baud:
   939                           	callstack 0
   940                           
   941 ;; *************** function _UART_config_show *****************
   942 ;; Defined at:
   943 ;;		line 5 in file "librerias/UART.c"
   944 ;; Parameters:    Size  Location     Type
   945 ;;		None
   946 ;; Auto vars:     Size  Location     Type
   947 ;;		None
   948 ;; Return value:  Size  Location     Type
   949 ;;                  1    wreg      void 
   950 ;; Registers used:
   951 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   952 ;; Tracked objects:
   953 ;;		On entry : 0/0
   954 ;;		On exit  : 0/0
   955 ;;		Unchanged: 0/0
   956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   957 ;;      Params:         0       0       0       0       0       0       0       0       0
   958 ;;      Locals:         0       0       0       0       0       0       0       0       0
   959 ;;      Temps:          0       0       0       0       0       0       0       0       0
   960 ;;      Totals:         0       0       0       0       0       0       0       0       0
   961 ;;Total ram usage:        0 bytes
   962 ;; Hardware stack levels used: 1
   963 ;; Hardware stack levels required when called: 6
   964 ;; This function calls:
   965 ;;		_printf
   966 ;; This function is called by:
   967 ;;		_UART_Init
   968 ;; This function uses a non-reentrant model
   969 ;;
   970                           
   971                           	psect	text3
   972   000C52                     __ptext3:
   973                           	callstack 0
   974   000C52                     _UART_config_show:
   975                           	callstack 23
   976   000C52                     
   977                           ;librerias/UART.c: 6:     printf("Modo: ");
   978   000C52  0EF3               	movlw	low STR_1
   979   000C54  6E3A               	movwf	printf@fmt^0,c
   980   000C56  EC8E  F007         	call	_printf	;wreg free
   981   000C5A                     
   982                           ;librerias/UART.c: 7:     (SYNC1) ? printf("Sincrono "):printf("Asincrono ");
   983   000C5A  A8AC               	btfss	4012,4,c	;volatile
   984   000C5C  EF32  F006         	goto	u511
   985   000C60  EF34  F006         	goto	u510
   986   000C64                     u511:
   987   000C64  EF3A  F006         	goto	l1303
   988   000C68                     u510:
   989   000C68  0EC7               	movlw	low STR_2
   990   000C6A  6E3A               	movwf	printf@fmt^0,c
   991   000C6C  EC8E  F007         	call	_printf	;wreg free
   992   000C70  EF3E  F006         	goto	l1305
   993   000C74                     l1303:
   994   000C74  0EB2               	movlw	low STR_3
   995   000C76  6E3A               	movwf	printf@fmt^0,c
   996   000C78  EC8E  F007         	call	_printf	;wreg free
   997   000C7C                     l1305:
   998                           
   999                           ;librerias/UART.c: 8:     (BRGH1) ? printf("alta velocidad \r\n"):printf("baja velocidad
      +                           \r\n");
  1000   000C7C  A4AC               	btfss	4012,2,c	;volatile
  1001   000C7E  EF43  F006         	goto	u521
  1002   000C82  EF45  F006         	goto	u520
  1003   000C86                     u521:
  1004   000C86  EF4B  F006         	goto	l1309
  1005   000C8A                     u520:
  1006   000C8A  0E5E               	movlw	low STR_4
  1007   000C8C  6E3A               	movwf	printf@fmt^0,c
  1008   000C8E  EC8E  F007         	call	_printf	;wreg free
  1009   000C92  EF4F  F006         	goto	l66
  1010   000C96                     l1309:
  1011   000C96  0E4C               	movlw	low STR_5
  1012   000C98  6E3A               	movwf	printf@fmt^0,c
  1013   000C9A  EC8E  F007         	call	_printf	;wreg free
  1014   000C9E                     l66:
  1015                           
  1016                           ;librerias/UART.c: 9:     printf("Baudrate: ");
  1017   000C9E  0E9C               	movlw	low STR_6
  1018   000CA0  6E3A               	movwf	printf@fmt^0,c
  1019   000CA2  EC8E  F007         	call	_printf	;wreg free
  1020   000CA6                     
  1021                           ;librerias/UART.c: 10:     (BRG161) ? printf("16 bits "):printf("8 bits ");
  1022   000CA6  A6B8               	btfss	4024,3,c	;volatile
  1023   000CA8  EF58  F006         	goto	u531
  1024   000CAC  EF5A  F006         	goto	u530
  1025   000CB0                     u531:
  1026   000CB0  EF60  F006         	goto	l1315
  1027   000CB4                     u530:
  1028   000CB4  0EDA               	movlw	low STR_7
  1029   000CB6  6E3A               	movwf	printf@fmt^0,c
  1030   000CB8  EC8E  F007         	call	_printf	;wreg free
  1031   000CBC  EF64  F006         	goto	l70
  1032   000CC0                     l1315:
  1033   000CC0  0EEB               	movlw	low STR_8
  1034   000CC2  6E3A               	movwf	printf@fmt^0,c
  1035   000CC4  EC8E  F007         	call	_printf	;wreg free
  1036   000CC8                     l70:
  1037                           
  1038                           ;librerias/UART.c: 11:     printf("x baudios \r\n");
  1039   000CC8  0E8F               	movlw	low STR_9
  1040   000CCA  6E3A               	movwf	printf@fmt^0,c
  1041   000CCC  EC8E  F007         	call	_printf	;wreg free
  1042                           
  1043                           ;librerias/UART.c: 12:     printf("Puerto: ");
  1044   000CD0  0ED1               	movlw	low STR_10
  1045   000CD2  6E3A               	movwf	printf@fmt^0,c
  1046   000CD4  EC8E  F007         	call	_printf	;wreg free
  1047   000CD8                     
  1048                           ;librerias/UART.c: 13:     (SPEN) ? printf("Habilitado \r\n"):printf("Deshabilitado \r\n
      +                          ");
  1049   000CD8  AEAB               	btfss	4011,7,c	;volatile
  1050   000CDA  EF71  F006         	goto	u541
  1051   000CDE  EF73  F006         	goto	u540
  1052   000CE2                     u541:
  1053   000CE2  EF79  F006         	goto	l1321
  1054   000CE6                     u540:
  1055   000CE6  0E81               	movlw	low STR_11
  1056   000CE8  6E3A               	movwf	printf@fmt^0,c
  1057   000CEA  EC8E  F007         	call	_printf	;wreg free
  1058   000CEE  EF7D  F006         	goto	l74
  1059   000CF2                     l1321:
  1060   000CF2  0E70               	movlw	low STR_12
  1061   000CF4  6E3A               	movwf	printf@fmt^0,c
  1062   000CF6  EC8E  F007         	call	_printf	;wreg free
  1063   000CFA                     l74:
  1064                           
  1065                           ;librerias/UART.c: 14:     printf("Transor: ");
  1066   000CFA  0EBD               	movlw	low STR_13
  1067   000CFC  6E3A               	movwf	printf@fmt^0,c
  1068   000CFE  EC8E  F007         	call	_printf	;wreg free
  1069   000D02                     
  1070                           ;librerias/UART.c: 15:     (TXEN1) ? printf("Habilitado \r\n"):printf("Deshabilitado \r\
      +                          n");
  1071   000D02  AAAC               	btfss	4012,5,c	;volatile
  1072   000D04  EF86  F006         	goto	u551
  1073   000D08  EF88  F006         	goto	u550
  1074   000D0C                     u551:
  1075   000D0C  EF8E  F006         	goto	l1327
  1076   000D10                     u550:
  1077   000D10  0E81               	movlw	low STR_11
  1078   000D12  6E3A               	movwf	printf@fmt^0,c
  1079   000D14  EC8E  F007         	call	_printf	;wreg free
  1080   000D18  EF92  F006         	goto	l78
  1081   000D1C                     l1327:
  1082   000D1C  0E70               	movlw	low STR_12
  1083   000D1E  6E3A               	movwf	printf@fmt^0,c
  1084   000D20  EC8E  F007         	call	_printf	;wreg free
  1085   000D24                     l78:
  1086                           
  1087                           ;librerias/UART.c: 16:     printf("Receptor: ");
  1088   000D24  0EA7               	movlw	low STR_16
  1089   000D26  6E3A               	movwf	printf@fmt^0,c
  1090   000D28  EC8E  F007         	call	_printf	;wreg free
  1091   000D2C                     
  1092                           ;librerias/UART.c: 17:     (CREN) ? printf("Habilitado \r\n"):printf("Deshabilitado \r\n
      +                          ");
  1093   000D2C  A8AB               	btfss	4011,4,c	;volatile
  1094   000D2E  EF9B  F006         	goto	u561
  1095   000D32  EF9D  F006         	goto	u560
  1096   000D36                     u561:
  1097   000D36  EFA3  F006         	goto	l1333
  1098   000D3A                     u560:
  1099   000D3A  0E81               	movlw	low STR_11
  1100   000D3C  6E3A               	movwf	printf@fmt^0,c
  1101   000D3E  EC8E  F007         	call	_printf	;wreg free
  1102   000D42  EFA7  F006         	goto	l83
  1103   000D46                     l1333:
  1104   000D46  0E70               	movlw	low STR_12
  1105   000D48  6E3A               	movwf	printf@fmt^0,c
  1106   000D4A  EC8E  F007         	call	_printf	;wreg free
  1107   000D4E                     l83:
  1108   000D4E  0012               	return		;funcret
  1109   000D50                     __end_of_UART_config_show:
  1110                           	callstack 0
  1111                           
  1112 ;; *************** function _printf *****************
  1113 ;; Defined at:
  1114 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\printf.c"
  1115 ;; Parameters:    Size  Location     Type
  1116 ;;  fmt             1   20[COMRAM] PTR const unsigned char 
  1117 ;;		 -> STR_22(26), STR_21(24), STR_20(25), STR_19(8), 
  1118 ;;		 -> STR_18(17), STR_17(14), STR_16(11), STR_15(17), 
  1119 ;;		 -> STR_14(14), STR_13(10), STR_12(17), STR_11(14), 
  1120 ;;		 -> STR_10(9), STR_9(13), STR_8(8), STR_7(9), 
  1121 ;;		 -> STR_6(11), STR_5(18), STR_4(18), STR_3(11), 
  1122 ;;		 -> STR_2(10), STR_1(7), 
  1123 ;; Auto vars:     Size  Location     Type
  1124 ;;  ret             2    0        int 
  1125 ;;  ap              1   21[COMRAM] PTR void [1]
  1126 ;;		 -> ?_printf(2), 
  1127 ;; Return value:  Size  Location     Type
  1128 ;;                  2   20[COMRAM] int 
  1129 ;; Registers used:
  1130 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1131 ;; Tracked objects:
  1132 ;;		On entry : 0/0
  1133 ;;		On exit  : 0/0
  1134 ;;		Unchanged: 0/0
  1135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1136 ;;      Params:         1       0       0       0       0       0       0       0       0
  1137 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1138 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1139 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1140 ;;Total ram usage:        2 bytes
  1141 ;; Hardware stack levels used: 1
  1142 ;; Hardware stack levels required when called: 5
  1143 ;; This function calls:
  1144 ;;		_vfprintf
  1145 ;; This function is called by:
  1146 ;;		_UART_config_show
  1147 ;;		_UART_ErrorHandler
  1148 ;; This function uses a non-reentrant model
  1149 ;;
  1150                           
  1151                           	psect	text4
  1152   000F1C                     __ptext4:
  1153                           	callstack 0
  1154   000F1C                     _printf:
  1155                           	callstack 23
  1156   000F1C  0E3B               	movlw	low (?_printf+1)
  1157   000F1E  6E3B               	movwf	printf@ap^0,c
  1158   000F20  0E00               	movlw	0
  1159   000F22  6E35               	movwf	vfprintf@fp^0,c
  1160   000F24  0E00               	movlw	0
  1161   000F26  6E36               	movwf	(vfprintf@fp+1)^0,c
  1162   000F28  C03A  F037         	movff	printf@fmt,vfprintf@fmt
  1163   000F2C  0E3B               	movlw	low printf@ap
  1164   000F2E  6E38               	movwf	vfprintf@ap^0,c
  1165   000F30  EC44  F007         	call	_vfprintf	;wreg free
  1166   000F34  0012               	return		;funcret
  1167   000F36                     __end_of_printf:
  1168                           	callstack 0
  1169                           
  1170 ;; *************** function _vfprintf *****************
  1171 ;; Defined at:
  1172 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  1173 ;; Parameters:    Size  Location     Type
  1174 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
  1175 ;;		 -> NULL(0), 
  1176 ;;  fmt             1   17[COMRAM] PTR const unsigned char 
  1177 ;;		 -> STR_22(26), STR_21(24), STR_20(25), STR_19(8), 
  1178 ;;		 -> STR_18(17), STR_17(14), STR_16(11), STR_15(17), 
  1179 ;;		 -> STR_14(14), STR_13(10), STR_12(17), STR_11(14), 
  1180 ;;		 -> STR_10(9), STR_9(13), STR_8(8), STR_7(9), 
  1181 ;;		 -> STR_6(11), STR_5(18), STR_4(18), STR_3(11), 
  1182 ;;		 -> STR_2(10), STR_1(7), 
  1183 ;;  ap              1   18[COMRAM] PTR PTR void 
  1184 ;;		 -> printf@ap(1), 
  1185 ;; Auto vars:     Size  Location     Type
  1186 ;;  cfmt            1   19[COMRAM] PTR unsigned char 
  1187 ;;		 -> STR_22(26), STR_21(24), STR_20(25), STR_19(8), 
  1188 ;;		 -> STR_18(17), STR_17(14), STR_16(11), STR_15(17), 
  1189 ;;		 -> STR_14(14), STR_13(10), STR_12(17), STR_11(14), 
  1190 ;;		 -> STR_10(9), STR_9(13), STR_8(8), STR_7(9), 
  1191 ;;		 -> STR_6(11), STR_5(18), STR_4(18), STR_3(11), 
  1192 ;;		 -> STR_2(10), STR_1(7), 
  1193 ;; Return value:  Size  Location     Type
  1194 ;;                  2   15[COMRAM] int 
  1195 ;; Registers used:
  1196 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1197 ;; Tracked objects:
  1198 ;;		On entry : 0/0
  1199 ;;		On exit  : 0/0
  1200 ;;		Unchanged: 0/0
  1201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1202 ;;      Params:         4       0       0       0       0       0       0       0       0
  1203 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1204 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1205 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1206 ;;Total ram usage:        5 bytes
  1207 ;; Hardware stack levels used: 1
  1208 ;; Hardware stack levels required when called: 4
  1209 ;; This function calls:
  1210 ;;		_vfpfcnvrt
  1211 ;; This function is called by:
  1212 ;;		_printf
  1213 ;; This function uses a non-reentrant model
  1214 ;;
  1215                           
  1216                           	psect	text5
  1217   000E88                     __ptext5:
  1218                           	callstack 0
  1219   000E88                     _vfprintf:
  1220                           	callstack 23
  1221   000E88                     
  1222                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  1223   000E88  C037  F039         	movff	vfprintf@fmt,vfprintf@cfmt
  1224                           
  1225                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1226   000E8C  EF52  F007         	goto	l1285
  1227   000E90                     l1283:
  1228                           
  1229                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1230   000E90  C035  F031         	movff	vfprintf@fp,vfpfcnvrt@fp
  1231   000E94  C036  F032         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1232   000E98  0E39               	movlw	low vfprintf@cfmt
  1233   000E9A  6E33               	movwf	vfpfcnvrt@fmt^0,c
  1234   000E9C  C038  F034         	movff	vfprintf@ap,vfpfcnvrt@ap
  1235   000EA0  EC0D  F007         	call	_vfpfcnvrt	;wreg free
  1236   000EA4                     l1285:
  1237                           
  1238                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1239   000EA4  C039  FFF6         	movff	vfprintf@cfmt,tblptrl
  1240   000EA8                     	if	1	;There is more than 1 active tblptr byte
  1241   000EA8  0E08               	movlw	high __smallconst
  1242   000EAA  6EF7               	movwf	tblptrh,c
  1243   000EAC                     	endif
  1244   000EAC                     	if	0	;tblptru may be non-zero
  1245   000EAC                     	endif
  1246   000EAC                     	if	0	;tblptru may be non-zero
  1247   000EAC                     	endif
  1248   000EAC  0008               	tblrd		*
  1249   000EAE  50F5               	movf	tablat,w,c
  1250   000EB0  0900               	iorlw	0
  1251   000EB2  A4D8               	btfss	status,2,c
  1252   000EB4  EF5E  F007         	goto	u501
  1253   000EB8  EF60  F007         	goto	u500
  1254   000EBC                     u501:
  1255   000EBC  EF48  F007         	goto	l1283
  1256   000EC0                     u500:
  1257   000EC0                     
  1258                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  1259   000EC0  0E00               	movlw	0
  1260   000EC2  6E36               	movwf	(?_vfprintf+1)^0,c
  1261   000EC4  0E00               	movlw	0
  1262   000EC6  6E35               	movwf	?_vfprintf^0,c
  1263   000EC8  0012               	return		;funcret
  1264   000ECA                     __end_of_vfprintf:
  1265                           	callstack 0
  1266                           
  1267 ;; *************** function _vfpfcnvrt *****************
  1268 ;; Defined at:
  1269 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  1270 ;; Parameters:    Size  Location     Type
  1271 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  1272 ;;		 -> NULL(0), 
  1273 ;;  fmt             1   13[COMRAM] PTR PTR unsigned char 
  1274 ;;		 -> vfprintf@cfmt(1), 
  1275 ;;  ap              1   14[COMRAM] PTR PTR void 
  1276 ;;		 -> printf@ap(1), 
  1277 ;; Auto vars:     Size  Location     Type
  1278 ;;  cp              3    0        PTR unsigned char 
  1279 ;;  done            1    0        _Bool 
  1280 ;;  c               1    0        unsigned char 
  1281 ;; Return value:  Size  Location     Type
  1282 ;;                  1    wreg      void 
  1283 ;; Registers used:
  1284 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1285 ;; Tracked objects:
  1286 ;;		On entry : 0/0
  1287 ;;		On exit  : 0/0
  1288 ;;		Unchanged: 0/0
  1289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1290 ;;      Params:         4       0       0       0       0       0       0       0       0
  1291 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1292 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1293 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1294 ;;Total ram usage:        4 bytes
  1295 ;; Hardware stack levels used: 1
  1296 ;; Hardware stack levels required when called: 3
  1297 ;; This function calls:
  1298 ;;		_fputc
  1299 ;; This function is called by:
  1300 ;;		_vfprintf
  1301 ;; This function uses a non-reentrant model
  1302 ;;
  1303                           
  1304                           	psect	text6
  1305   000E1A                     __ptext6:
  1306                           	callstack 0
  1307   000E1A                     _vfpfcnvrt:
  1308                           	callstack 23
  1309   000E1A                     
  1310                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  1311   000E1A  5033               	movf	vfpfcnvrt@fmt^0,w,c
  1312   000E1C  6ED9               	movwf	fsr2l,c
  1313   000E1E  6ADA               	clrf	fsr2h,c
  1314   000E20  CFDF FFF6          	movff	indf2,tblptrl
  1315   000E24                     	if	1	;There is more than 1 active tblptr byte
  1316   000E24  0E08               	movlw	high __smallconst
  1317   000E26  6EF7               	movwf	tblptrh,c
  1318   000E28                     	endif
  1319   000E28                     	if	0	;tblptru may be non-zero
  1320   000E28                     	endif
  1321   000E28                     	if	0	;tblptru may be non-zero
  1322   000E28                     	endif
  1323   000E28  0008               	tblrd		*
  1324   000E2A  50F5               	movf	tablat,w,c
  1325   000E2C  0A25               	xorlw	37
  1326   000E2E  A4D8               	btfss	status,2,c
  1327   000E30  EF1C  F007         	goto	u491
  1328   000E34  EF1E  F007         	goto	u490
  1329   000E38                     u491:
  1330   000E38  EF30  F007         	goto	l1275
  1331   000E3C                     u490:
  1332   000E3C                     
  1333                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  1334   000E3C  5033               	movf	vfpfcnvrt@fmt^0,w,c
  1335   000E3E  6ED9               	movwf	fsr2l,c
  1336   000E40  6ADA               	clrf	fsr2h,c
  1337   000E42  2ADF               	incf	indf2,f,c
  1338   000E44                     
  1339                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  1340   000E44  0E00               	movlw	0
  1341   000E46  6E22               	movwf	(_width+1)^0,c
  1342   000E48  0E00               	movlw	0
  1343   000E4A  6E21               	movwf	_width^0,c
  1344   000E4C  C021  F025         	movff	_width,_flags
  1345   000E50                     
  1346                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  1347   000E50  6823               	setf	_prec^0,c
  1348   000E52  6824               	setf	(_prec+1)^0,c
  1349   000E54                     l1271:
  1350                           
  1351                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  1352   000E54  5033               	movf	vfpfcnvrt@fmt^0,w,c
  1353   000E56  6ED9               	movwf	fsr2l,c
  1354   000E58  6ADA               	clrf	fsr2h,c
  1355   000E5A  2ADF               	incf	indf2,f,c
  1356   000E5C  EF43  F007         	goto	l875
  1357   000E60                     l1275:
  1358                           
  1359                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  1360   000E60  5033               	movf	vfpfcnvrt@fmt^0,w,c
  1361   000E62  6ED9               	movwf	fsr2l,c
  1362   000E64  6ADA               	clrf	fsr2h,c
  1363   000E66  CFDF FFF6          	movff	indf2,tblptrl
  1364   000E6A                     	if	1	;There is more than 1 active tblptr byte
  1365   000E6A  0E08               	movlw	high __smallconst
  1366   000E6C  6EF7               	movwf	tblptrh,c
  1367   000E6E                     	endif
  1368   000E6E                     	if	0	;tblptru may be non-zero
  1369   000E6E                     	endif
  1370   000E6E                     	if	0	;tblptru may be non-zero
  1371   000E6E                     	endif
  1372   000E6E  0008               	tblrd		*
  1373   000E70  50F5               	movf	tablat,w,c
  1374   000E72  6E28               	movwf	fputc@c^0,c
  1375   000E74  6A29               	clrf	(fputc@c+1)^0,c
  1376   000E76  C031  F02A         	movff	vfpfcnvrt@fp,fputc@fp
  1377   000E7A  C032  F02B         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1378   000E7E  ECA8  F006         	call	_fputc	;wreg free
  1379   000E82  EF2A  F007         	goto	l1271
  1380   000E86                     l875:
  1381   000E86  0012               	return		;funcret
  1382   000E88                     __end_of_vfpfcnvrt:
  1383                           	callstack 0
  1384                           
  1385 ;; *************** function _fputc *****************
  1386 ;; Defined at:
  1387 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_fputc.c"
  1388 ;; Parameters:    Size  Location     Type
  1389 ;;  c               2    2[COMRAM] int 
  1390 ;;  fp              2    4[COMRAM] PTR struct _IO_FILE
  1391 ;;		 -> NULL(0), 
  1392 ;; Auto vars:     Size  Location     Type
  1393 ;;		None
  1394 ;; Return value:  Size  Location     Type
  1395 ;;                  2    2[COMRAM] int 
  1396 ;; Registers used:
  1397 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1398 ;; Tracked objects:
  1399 ;;		On entry : 0/0
  1400 ;;		On exit  : 0/0
  1401 ;;		Unchanged: 0/0
  1402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1403 ;;      Params:         4       0       0       0       0       0       0       0       0
  1404 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1405 ;;      Temps:          5       0       0       0       0       0       0       0       0
  1406 ;;      Totals:         9       0       0       0       0       0       0       0       0
  1407 ;;Total ram usage:        9 bytes
  1408 ;; Hardware stack levels used: 1
  1409 ;; Hardware stack levels required when called: 2
  1410 ;; This function calls:
  1411 ;;		_putch
  1412 ;; This function is called by:
  1413 ;;		_vfpfcnvrt
  1414 ;; This function uses a non-reentrant model
  1415 ;;
  1416                           
  1417                           	psect	text7
  1418   000D50                     __ptext7:
  1419                           	callstack 0
  1420   000D50                     _fputc:
  1421                           	callstack 23
  1422   000D50  502A               	movf	fputc@fp^0,w,c
  1423   000D52  102B               	iorwf	(fputc@fp+1)^0,w,c
  1424   000D54  B4D8               	btfsc	status,2,c
  1425   000D56  EFAF  F006         	goto	u451
  1426   000D5A  EFB1  F006         	goto	u450
  1427   000D5E                     u451:
  1428   000D5E  EFBA  F006         	goto	l1253
  1429   000D62                     u450:
  1430   000D62  502A               	movf	fputc@fp^0,w,c
  1431   000D64  102B               	iorwf	(fputc@fp+1)^0,w,c
  1432   000D66  A4D8               	btfss	status,2,c
  1433   000D68  EFB8  F006         	goto	u461
  1434   000D6C  EFBA  F006         	goto	u460
  1435   000D70                     u461:
  1436   000D70  EFBF  F006         	goto	l1255
  1437   000D74                     u460:
  1438   000D74                     l1253:
  1439   000D74  5028               	movf	fputc@c^0,w,c
  1440   000D76  ECB1  F007         	call	_putch
  1441   000D7A  EF0C  F007         	goto	l893
  1442   000D7E                     l1255:
  1443   000D7E  EE20 F00A          	lfsr	2,10
  1444   000D82  502A               	movf	fputc@fp^0,w,c
  1445   000D84  26D9               	addwf	fsr2l,f,c
  1446   000D86  502B               	movf	(fputc@fp+1)^0,w,c
  1447   000D88  22DA               	addwfc	fsr2h,f,c
  1448   000D8A  50DE               	movf	postinc2,w,c
  1449   000D8C  10DE               	iorwf	postinc2,w,c
  1450   000D8E  B4D8               	btfsc	status,2,c
  1451   000D90  EFCC  F006         	goto	u471
  1452   000D94  EFCE  F006         	goto	u470
  1453   000D98                     u471:
  1454   000D98  EFE9  F006         	goto	l1259
  1455   000D9C                     u470:
  1456   000D9C  EE20 F00A          	lfsr	2,10
  1457   000DA0  502A               	movf	fputc@fp^0,w,c
  1458   000DA2  26D9               	addwf	fsr2l,f,c
  1459   000DA4  502B               	movf	(fputc@fp+1)^0,w,c
  1460   000DA6  22DA               	addwfc	fsr2h,f,c
  1461   000DA8  EE10 F003          	lfsr	1,3
  1462   000DAC  502A               	movf	fputc@fp^0,w,c
  1463   000DAE  26E1               	addwf	fsr1l,f,c
  1464   000DB0  502B               	movf	(fputc@fp+1)^0,w,c
  1465   000DB2  22E2               	addwfc	fsr1h,f,c
  1466   000DB4  50DE               	movf	postinc2,w,c
  1467   000DB6  5CE6               	subwf	postinc1,w,c
  1468   000DB8  50E6               	movf	postinc1,w,c
  1469   000DBA  0A80               	xorlw	128
  1470   000DBC  6E30               	movwf	(??_fputc+4)^0,c
  1471   000DBE  50DE               	movf	postinc2,w,c
  1472   000DC0  0A80               	xorlw	128
  1473   000DC2  5830               	subwfb	(??_fputc+4)^0,w,c
  1474   000DC4  B0D8               	btfsc	status,0,c
  1475   000DC6  EFE7  F006         	goto	u481
  1476   000DCA  EFE9  F006         	goto	u480
  1477   000DCE                     u481:
  1478   000DCE  EF0C  F007         	goto	l893
  1479   000DD2                     u480:
  1480   000DD2                     l1259:
  1481   000DD2  EE20 F003          	lfsr	2,3
  1482   000DD6  502A               	movf	fputc@fp^0,w,c
  1483   000DD8  26D9               	addwf	fsr2l,f,c
  1484   000DDA  502B               	movf	(fputc@fp+1)^0,w,c
  1485   000DDC  22DA               	addwfc	fsr2h,f,c
  1486   000DDE  CFDE F02C          	movff	postinc2,??_fputc
  1487   000DE2  CFDD F02D          	movff	postdec2,??_fputc+1
  1488   000DE6  C02A  FFD9         	movff	fputc@fp,fsr2l
  1489   000DEA  C02B  FFDA         	movff	fputc@fp+1,fsr2h
  1490   000DEE  CFDE F02E          	movff	postinc2,??_fputc+2
  1491   000DF2  CFDD F02F          	movff	postdec2,??_fputc+3
  1492   000DF6  502C               	movf	??_fputc^0,w,c
  1493   000DF8  242E               	addwf	(??_fputc+2)^0,w,c
  1494   000DFA  6ED9               	movwf	fsr2l,c
  1495   000DFC  502D               	movf	(??_fputc+1)^0,w,c
  1496   000DFE  202F               	addwfc	(??_fputc+3)^0,w,c
  1497   000E00  6EDA               	movwf	fsr2h,c
  1498   000E02  C028  FFDF         	movff	fputc@c,indf2
  1499   000E06  EE20 F003          	lfsr	2,3
  1500   000E0A  502A               	movf	fputc@fp^0,w,c
  1501   000E0C  26D9               	addwf	fsr2l,f,c
  1502   000E0E  502B               	movf	(fputc@fp+1)^0,w,c
  1503   000E10  22DA               	addwfc	fsr2h,f,c
  1504   000E12  2ADE               	incf	postinc2,f,c
  1505   000E14  0E00               	movlw	0
  1506   000E16  22DD               	addwfc	postdec2,f,c
  1507   000E18                     l893:
  1508   000E18  0012               	return		;funcret
  1509   000E1A                     __end_of_fputc:
  1510                           	callstack 0
  1511                           
  1512 ;; *************** function _putch *****************
  1513 ;; Defined at:
  1514 ;;		line 75 in file "librerias/UART.c"
  1515 ;; Parameters:    Size  Location     Type
  1516 ;;  data            1    wreg     unsigned char 
  1517 ;; Auto vars:     Size  Location     Type
  1518 ;;  data            1    1[COMRAM] unsigned char 
  1519 ;; Return value:  Size  Location     Type
  1520 ;;                  1    wreg      void 
  1521 ;; Registers used:
  1522 ;;		wreg, status,2, cstack
  1523 ;; Tracked objects:
  1524 ;;		On entry : 0/0
  1525 ;;		On exit  : 0/0
  1526 ;;		Unchanged: 0/0
  1527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1528 ;;      Params:         0       0       0       0       0       0       0       0       0
  1529 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1530 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1531 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1532 ;;Total ram usage:        1 bytes
  1533 ;; Hardware stack levels used: 1
  1534 ;; Hardware stack levels required when called: 1
  1535 ;; This function calls:
  1536 ;;		_UART_Tx
  1537 ;; This function is called by:
  1538 ;;		_fputc
  1539 ;; This function uses a non-reentrant model
  1540 ;;
  1541                           
  1542                           	psect	text8
  1543   000F62                     __ptext8:
  1544                           	callstack 0
  1545   000F62                     _putch:
  1546                           	callstack 23
  1547                           
  1548                           ;incstack = 0
  1549                           ;putch@data stored from wreg
  1550   000F62  6E27               	movwf	putch@data^0,c
  1551   000F64                     
  1552                           ;librerias/UART.c: 76:     UART_Tx(data);
  1553   000F64  5027               	movf	putch@data^0,w,c
  1554   000F66  ECA6  F007         	call	_UART_Tx
  1555   000F6A  0012               	return		;funcret
  1556   000F6C                     __end_of_putch:
  1557                           	callstack 0
  1558                           
  1559 ;; *************** function _UART_Tx *****************
  1560 ;; Defined at:
  1561 ;;		line 70 in file "librerias/UART.c"
  1562 ;; Parameters:    Size  Location     Type
  1563 ;;  dato            1    wreg     unsigned char 
  1564 ;; Auto vars:     Size  Location     Type
  1565 ;;  dato            1    0[COMRAM] unsigned char 
  1566 ;; Return value:  Size  Location     Type
  1567 ;;                  1    wreg      void 
  1568 ;; Registers used:
  1569 ;;		wreg
  1570 ;; Tracked objects:
  1571 ;;		On entry : 0/0
  1572 ;;		On exit  : 0/0
  1573 ;;		Unchanged: 0/0
  1574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1575 ;;      Params:         0       0       0       0       0       0       0       0       0
  1576 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1577 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1578 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1579 ;;Total ram usage:        1 bytes
  1580 ;; Hardware stack levels used: 1
  1581 ;; This function calls:
  1582 ;;		Nothing
  1583 ;; This function is called by:
  1584 ;;		_putch
  1585 ;; This function uses a non-reentrant model
  1586 ;;
  1587                           
  1588                           	psect	text9
  1589   000F4C                     __ptext9:
  1590                           	callstack 0
  1591   000F4C                     _UART_Tx:
  1592                           	callstack 23
  1593                           
  1594                           ;incstack = 0
  1595                           ;UART_Tx@dato stored from wreg
  1596   000F4C  6E26               	movwf	UART_Tx@dato^0,c
  1597   000F4E                     l102:
  1598   000F4E  A2AC               	btfss	4012,1,c	;volatile
  1599   000F50  EFAC  F007         	goto	u11
  1600   000F54  EFAE  F007         	goto	u10
  1601   000F58                     u11:
  1602   000F58  EFA7  F007         	goto	l102
  1603   000F5C                     u10:
  1604   000F5C                     
  1605                           ;librerias/UART.c: 72:     TXREG1 = dato;
  1606   000F5C  C026  FFAD         	movff	UART_Tx@dato,4013	;volatile
  1607   000F60  0012               	return		;funcret
  1608   000F62                     __end_of_UART_Tx:
  1609                           	callstack 0
  1610                           
  1611 ;; *************** function _Clock_Init *****************
  1612 ;; Defined at:
  1613 ;;		line 3 in file "librerias/clock.c"
  1614 ;; Parameters:    Size  Location     Type
  1615 ;;  s16Timeout      2    0[COMRAM] short 
  1616 ;; Auto vars:     Size  Location     Type
  1617 ;;  bStatus         1    5[COMRAM] _Bool 
  1618 ;;  bStatus         1    4[COMRAM] _Bool 
  1619 ;;  bStatus         1    3[COMRAM] _Bool 
  1620 ;;  bStatus         1    2[COMRAM] _Bool 
  1621 ;;  returnCode      1    7[COMRAM] enum E5188
  1622 ;;  bItTimeEn       1    6[COMRAM] _Bool 
  1623 ;; Return value:  Size  Location     Type
  1624 ;;                  1    wreg      enum E5188
  1625 ;; Registers used:
  1626 ;;		wreg, status,2, status,0
  1627 ;; Tracked objects:
  1628 ;;		On entry : 0/0
  1629 ;;		On exit  : 0/0
  1630 ;;		Unchanged: 0/0
  1631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1632 ;;      Params:         2       0       0       0       0       0       0       0       0
  1633 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1634 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1635 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1636 ;;Total ram usage:        8 bytes
  1637 ;; Hardware stack levels used: 1
  1638 ;; This function calls:
  1639 ;;		Nothing
  1640 ;; This function is called by:
  1641 ;;		_main
  1642 ;; This function uses a non-reentrant model
  1643 ;;
  1644                           
  1645                           	psect	text10
  1646   0008FC                     __ptext10:
  1647                           	callstack 0
  1648   0008FC                     _Clock_Init:
  1649                           	callstack 30
  1650   0008FC                     
  1651                           ;librerias/clock.c: 4:     CLK_ERROR_CODE returnCode = ERROR_CODE_OK;
  1652   0008FC  0E00               	movlw	0
  1653   0008FE  6E2D               	movwf	Clock_Init@returnCode^0,c
  1654   000900                     
  1655                           ;librerias/clock.c: 5:     _Bool bItTimeEn = (0 >= s16Timeout) ? 0 : 1;
  1656   000900  BE27               	btfsc	(Clock_Init@s16Timeout+1)^0,7,c
  1657   000902  EF8E  F004         	goto	u570
  1658   000906  5027               	movf	(Clock_Init@s16Timeout+1)^0,w,c
  1659   000908  E106               	bnz	u571
  1660   00090A  0426               	decf	Clock_Init@s16Timeout^0,w,c
  1661   00090C  B0D8               	btfsc	status,0,c
  1662   00090E  EF8B  F004         	goto	u571
  1663   000912  EF8E  F004         	goto	u570
  1664   000916                     u571:
  1665   000916  0E01               	movlw	1
  1666   000918  EF8F  F004         	goto	u580
  1667   00091C                     u570:
  1668   00091C  0E00               	movlw	0
  1669   00091E                     u580:
  1670   00091E  6E2C               	movwf	Clock_Init@bItTimeEn^0,c
  1671   000920                     l136:
  1672                           
  1673                           ;librerias/clock.c: 10:             bStatus = OSCCON2bits.HFIOFR;
  1674   000920  B2D2               	btfsc	210,1,c	;volatile
  1675   000922  EF95  F004         	goto	u591
  1676   000926  EF98  F004         	goto	u590
  1677   00092A                     u591:
  1678   00092A  0E01               	movlw	1
  1679   00092C  EF99  F004         	goto	u596
  1680   000930                     u590:
  1681   000930  0E00               	movlw	0
  1682   000932                     u596:
  1683   000932  6E28               	movwf	Clock_Init@bStatus^0,c
  1684   000934                     
  1685                           ;librerias/clock.c: 11:             s16Timeout--;
  1686   000934  0626               	decf	Clock_Init@s16Timeout^0,f,c
  1687   000936  A0D8               	btfss	status,0,c
  1688   000938  0627               	decf	(Clock_Init@s16Timeout+1)^0,f,c
  1689   00093A                     
  1690                           ;librerias/clock.c: 12:         }while((0 == bStatus) && ((0 < s16Timeout) || (0 == bItT
      +                          imeEn)));
  1691   00093A  5028               	movf	Clock_Init@bStatus^0,w,c
  1692   00093C  A4D8               	btfss	status,2,c
  1693   00093E  EFA3  F004         	goto	u601
  1694   000942  EFA5  F004         	goto	u600
  1695   000946                     u601:
  1696   000946  EFBA  F004         	goto	l1413
  1697   00094A                     u600:
  1698   00094A  BE27               	btfsc	(Clock_Init@s16Timeout+1)^0,7,c
  1699   00094C  EFB2  F004         	goto	u610
  1700   000950  5027               	movf	(Clock_Init@s16Timeout+1)^0,w,c
  1701   000952  E106               	bnz	u611
  1702   000954  0426               	decf	Clock_Init@s16Timeout^0,w,c
  1703   000956  B0D8               	btfsc	status,0,c
  1704   000958  EFB0  F004         	goto	u611
  1705   00095C  EFB2  F004         	goto	u610
  1706   000960                     u611:
  1707   000960  EF90  F004         	goto	l136
  1708   000964                     u610:
  1709   000964  502C               	movf	Clock_Init@bItTimeEn^0,w,c
  1710   000966  B4D8               	btfsc	status,2,c
  1711   000968  EFB8  F004         	goto	u621
  1712   00096C  EFBA  F004         	goto	u620
  1713   000970                     u621:
  1714   000970  EF90  F004         	goto	l136
  1715   000974                     u620:
  1716   000974                     l1413:
  1717                           
  1718                           ;librerias/clock.c: 13:         if (0 == bStatus){
  1719   000974  5028               	movf	Clock_Init@bStatus^0,w,c
  1720   000976  A4D8               	btfss	status,2,c
  1721   000978  EFC0  F004         	goto	u631
  1722   00097C  EFC2  F004         	goto	u630
  1723   000980                     u631:
  1724   000980  EFC4  F004         	goto	l135
  1725   000984                     u630:
  1726   000984                     
  1727                           ;librerias/clock.c: 14:             returnCode = ERROR_CODE_TIMEOUT;
  1728   000984  0E01               	movlw	1
  1729   000986  6E2D               	movwf	Clock_Init@returnCode^0,c
  1730   000988                     l135:
  1731                           
  1732                           ;librerias/clock.c: 18:     if(ERROR_CODE_OK == returnCode){
  1733   000988  502D               	movf	Clock_Init@returnCode^0,w,c
  1734   00098A  A4D8               	btfss	status,2,c
  1735   00098C  EFCA  F004         	goto	u641
  1736   000990  EFCC  F004         	goto	u640
  1737   000994                     u641:
  1738   000994  EF03  F005         	goto	l141
  1739   000998                     u640:
  1740   000998                     
  1741                           ;librerias/clock.c: 19:         OSCCON2bits.INTSRC = 1;
  1742   000998  8AD2               	bsf	210,5,c	;volatile
  1743   00099A                     
  1744                           ;librerias/clock.c: 20:         OSCCONbits.IRCF = 7;
  1745   00099A  0E70               	movlw	112
  1746   00099C  12D3               	iorwf	211,f,c	;volatile
  1747   00099E                     l142:
  1748                           
  1749                           ;librerias/clock.c: 24:             bStatus = OSCCONbits.HFIOFS;
  1750   00099E  B4D3               	btfsc	211,2,c	;volatile
  1751   0009A0  EFD4  F004         	goto	u651
  1752   0009A4  EFD7  F004         	goto	u650
  1753   0009A8                     u651:
  1754   0009A8  0E01               	movlw	1
  1755   0009AA  EFD8  F004         	goto	u656
  1756   0009AE                     u650:
  1757   0009AE  0E00               	movlw	0
  1758   0009B0                     u656:
  1759   0009B0  6E29               	movwf	Clock_Init@bStatus_538^0,c
  1760   0009B2                     
  1761                           ;librerias/clock.c: 25:             s16Timeout--;
  1762   0009B2  0626               	decf	Clock_Init@s16Timeout^0,f,c
  1763   0009B4  A0D8               	btfss	status,0,c
  1764   0009B6  0627               	decf	(Clock_Init@s16Timeout+1)^0,f,c
  1765   0009B8                     
  1766                           ;librerias/clock.c: 26:         }while((0 == bStatus) && ((0 < s16Timeout) || (0 == bItT
      +                          imeEn)));
  1767   0009B8  5029               	movf	Clock_Init@bStatus_538^0,w,c
  1768   0009BA  A4D8               	btfss	status,2,c
  1769   0009BC  EFE2  F004         	goto	u661
  1770   0009C0  EFE4  F004         	goto	u660
  1771   0009C4                     u661:
  1772   0009C4  EFF9  F004         	goto	l1429
  1773   0009C8                     u660:
  1774   0009C8  BE27               	btfsc	(Clock_Init@s16Timeout+1)^0,7,c
  1775   0009CA  EFF1  F004         	goto	u670
  1776   0009CE  5027               	movf	(Clock_Init@s16Timeout+1)^0,w,c
  1777   0009D0  E106               	bnz	u671
  1778   0009D2  0426               	decf	Clock_Init@s16Timeout^0,w,c
  1779   0009D4  B0D8               	btfsc	status,0,c
  1780   0009D6  EFEF  F004         	goto	u671
  1781   0009DA  EFF1  F004         	goto	u670
  1782   0009DE                     u671:
  1783   0009DE  EFCF  F004         	goto	l142
  1784   0009E2                     u670:
  1785   0009E2  502C               	movf	Clock_Init@bItTimeEn^0,w,c
  1786   0009E4  B4D8               	btfsc	status,2,c
  1787   0009E6  EFF7  F004         	goto	u681
  1788   0009EA  EFF9  F004         	goto	u680
  1789   0009EE                     u681:
  1790   0009EE  EFCF  F004         	goto	l142
  1791   0009F2                     u680:
  1792   0009F2                     l1429:
  1793                           
  1794                           ;librerias/clock.c: 27:         if (0 == bStatus){
  1795   0009F2  5029               	movf	Clock_Init@bStatus_538^0,w,c
  1796   0009F4  A4D8               	btfss	status,2,c
  1797   0009F6  EFFF  F004         	goto	u691
  1798   0009FA  EF01  F005         	goto	u690
  1799   0009FE                     u691:
  1800   0009FE  EF03  F005         	goto	l141
  1801   000A02                     u690:
  1802   000A02                     
  1803                           ;librerias/clock.c: 28:             returnCode = ERROR_CODE_TIMEOUT;
  1804   000A02  0E01               	movlw	1
  1805   000A04  6E2D               	movwf	Clock_Init@returnCode^0,c
  1806   000A06                     l141:
  1807                           
  1808                           ;librerias/clock.c: 32:     if(ERROR_CODE_OK == returnCode){
  1809   000A06  502D               	movf	Clock_Init@returnCode^0,w,c
  1810   000A08  A4D8               	btfss	status,2,c
  1811   000A0A  EF09  F005         	goto	u701
  1812   000A0E  EF0B  F005         	goto	u700
  1813   000A12                     u701:
  1814   000A12  EF3F  F005         	goto	l147
  1815   000A16                     u700:
  1816   000A16                     l148:
  1817                           
  1818                           ;librerias/clock.c: 35:             bStatus = OSCCONbits.OSTS;
  1819   000A16  B6D3               	btfsc	211,3,c	;volatile
  1820   000A18  EF10  F005         	goto	u711
  1821   000A1C  EF13  F005         	goto	u710
  1822   000A20                     u711:
  1823   000A20  0E01               	movlw	1
  1824   000A22  EF14  F005         	goto	u716
  1825   000A26                     u710:
  1826   000A26  0E00               	movlw	0
  1827   000A28                     u716:
  1828   000A28  6E2A               	movwf	Clock_Init@bStatus_539^0,c
  1829   000A2A                     
  1830                           ;librerias/clock.c: 36:             s16Timeout--;
  1831   000A2A  0626               	decf	Clock_Init@s16Timeout^0,f,c
  1832   000A2C  A0D8               	btfss	status,0,c
  1833   000A2E  0627               	decf	(Clock_Init@s16Timeout+1)^0,f,c
  1834   000A30                     
  1835                           ;librerias/clock.c: 37:         }while((0 == bStatus) && ((0 < s16Timeout) || (0 == bItT
      +                          imeEn)));
  1836   000A30  502A               	movf	Clock_Init@bStatus_539^0,w,c
  1837   000A32  A4D8               	btfss	status,2,c
  1838   000A34  EF1E  F005         	goto	u721
  1839   000A38  EF20  F005         	goto	u720
  1840   000A3C                     u721:
  1841   000A3C  EF35  F005         	goto	l1443
  1842   000A40                     u720:
  1843   000A40  BE27               	btfsc	(Clock_Init@s16Timeout+1)^0,7,c
  1844   000A42  EF2D  F005         	goto	u730
  1845   000A46  5027               	movf	(Clock_Init@s16Timeout+1)^0,w,c
  1846   000A48  E106               	bnz	u731
  1847   000A4A  0426               	decf	Clock_Init@s16Timeout^0,w,c
  1848   000A4C  B0D8               	btfsc	status,0,c
  1849   000A4E  EF2B  F005         	goto	u731
  1850   000A52  EF2D  F005         	goto	u730
  1851   000A56                     u731:
  1852   000A56  EF0B  F005         	goto	l148
  1853   000A5A                     u730:
  1854   000A5A  502C               	movf	Clock_Init@bItTimeEn^0,w,c
  1855   000A5C  B4D8               	btfsc	status,2,c
  1856   000A5E  EF33  F005         	goto	u741
  1857   000A62  EF35  F005         	goto	u740
  1858   000A66                     u741:
  1859   000A66  EF0B  F005         	goto	l148
  1860   000A6A                     u740:
  1861   000A6A                     l1443:
  1862                           
  1863                           ;librerias/clock.c: 38:         if (0 == bStatus){
  1864   000A6A  502A               	movf	Clock_Init@bStatus_539^0,w,c
  1865   000A6C  A4D8               	btfss	status,2,c
  1866   000A6E  EF3B  F005         	goto	u751
  1867   000A72  EF3D  F005         	goto	u750
  1868   000A76                     u751:
  1869   000A76  EF3F  F005         	goto	l147
  1870   000A7A                     u750:
  1871   000A7A                     
  1872                           ;librerias/clock.c: 39:             returnCode = ERROR_CODE_TIMEOUT;
  1873   000A7A  0E01               	movlw	1
  1874   000A7C  6E2D               	movwf	Clock_Init@returnCode^0,c
  1875   000A7E                     l147:
  1876                           
  1877                           ;librerias/clock.c: 42:         if(ERROR_CODE_OK == returnCode){
  1878   000A7E  502D               	movf	Clock_Init@returnCode^0,w,c
  1879   000A80  A4D8               	btfss	status,2,c
  1880   000A82  EF45  F005         	goto	u761
  1881   000A86  EF47  F005         	goto	u760
  1882   000A8A                     u761:
  1883   000A8A  EF7D  F005         	goto	l153
  1884   000A8E                     u760:
  1885   000A8E                     
  1886                           ;librerias/clock.c: 43:         OSCTUNEbits.SPLLMULT = 1;
  1887   000A8E  8E9B               	bsf	155,7,c	;volatile
  1888                           
  1889                           ;librerias/clock.c: 44:         OSCCON2bits.PLLEN = 1;
  1890   000A90  88D2               	bsf	210,4,c	;volatile
  1891   000A92                     l154:
  1892                           
  1893                           ;librerias/clock.c: 47:             bStatus = OSCCON2bits.PLLRDY;
  1894   000A92  BED2               	btfsc	210,7,c	;volatile
  1895   000A94  EF4E  F005         	goto	u771
  1896   000A98  EF51  F005         	goto	u770
  1897   000A9C                     u771:
  1898   000A9C  0E01               	movlw	1
  1899   000A9E  EF52  F005         	goto	u776
  1900   000AA2                     u770:
  1901   000AA2  0E00               	movlw	0
  1902   000AA4                     u776:
  1903   000AA4  6E2B               	movwf	Clock_Init@bStatus_542^0,c
  1904   000AA6                     
  1905                           ;librerias/clock.c: 48:             s16Timeout--;
  1906   000AA6  0626               	decf	Clock_Init@s16Timeout^0,f,c
  1907   000AA8  A0D8               	btfss	status,0,c
  1908   000AAA  0627               	decf	(Clock_Init@s16Timeout+1)^0,f,c
  1909   000AAC                     
  1910                           ;librerias/clock.c: 49:         }while((0 == bStatus) && ((0 < s16Timeout) || (0 == bItT
      +                          imeEn)));
  1911   000AAC  502B               	movf	Clock_Init@bStatus_542^0,w,c
  1912   000AAE  A4D8               	btfss	status,2,c
  1913   000AB0  EF5C  F005         	goto	u781
  1914   000AB4  EF5E  F005         	goto	u780
  1915   000AB8                     u781:
  1916   000AB8  EF73  F005         	goto	l1459
  1917   000ABC                     u780:
  1918   000ABC  BE27               	btfsc	(Clock_Init@s16Timeout+1)^0,7,c
  1919   000ABE  EF6B  F005         	goto	u790
  1920   000AC2  5027               	movf	(Clock_Init@s16Timeout+1)^0,w,c
  1921   000AC4  E106               	bnz	u791
  1922   000AC6  0426               	decf	Clock_Init@s16Timeout^0,w,c
  1923   000AC8  B0D8               	btfsc	status,0,c
  1924   000ACA  EF69  F005         	goto	u791
  1925   000ACE  EF6B  F005         	goto	u790
  1926   000AD2                     u791:
  1927   000AD2  EF49  F005         	goto	l154
  1928   000AD6                     u790:
  1929   000AD6  502C               	movf	Clock_Init@bItTimeEn^0,w,c
  1930   000AD8  B4D8               	btfsc	status,2,c
  1931   000ADA  EF71  F005         	goto	u801
  1932   000ADE  EF73  F005         	goto	u800
  1933   000AE2                     u801:
  1934   000AE2  EF49  F005         	goto	l154
  1935   000AE6                     u800:
  1936   000AE6                     l1459:
  1937                           
  1938                           ;librerias/clock.c: 50:         if (0 == bStatus){
  1939   000AE6  502B               	movf	Clock_Init@bStatus_542^0,w,c
  1940   000AE8  A4D8               	btfss	status,2,c
  1941   000AEA  EF79  F005         	goto	u811
  1942   000AEE  EF7B  F005         	goto	u810
  1943   000AF2                     u811:
  1944   000AF2  EF7D  F005         	goto	l153
  1945   000AF6                     u810:
  1946   000AF6                     
  1947                           ;librerias/clock.c: 51:             returnCode = ERROR_CODE_TIMEOUT;
  1948   000AF6  0E01               	movlw	1
  1949   000AF8  6E2D               	movwf	Clock_Init@returnCode^0,c
  1950   000AFA                     l153:
  1951                           
  1952                           ;librerias/clock.c: 56:     if(ERROR_CODE_OK == returnCode){
  1953   000AFA  502D               	movf	Clock_Init@returnCode^0,w,c
  1954   000AFC  A4D8               	btfss	status,2,c
  1955   000AFE  EF83  F005         	goto	u821
  1956   000B02  EF85  F005         	goto	u820
  1957   000B06                     u821:
  1958   000B06  EF88  F005         	goto	l160
  1959   000B0A                     u820:
  1960   000B0A                     
  1961                           ;librerias/clock.c: 57:         OSCCON2bits.PRISD = 0;
  1962   000B0A  94D2               	bcf	210,2,c	;volatile
  1963   000B0C                     
  1964                           ;librerias/clock.c: 58:         OSCCONbits.SCS = 0;
  1965   000B0C  0EFC               	movlw	-4
  1966   000B0E  16D3               	andwf	211,f,c	;volatile
  1967   000B10                     l160:
  1968   000B10  0012               	return		;funcret
  1969   000B12                     __end_of_Clock_Init:
  1970                           	callstack 0
  1971                           
  1972                           	psect	rparam
  1973   000000                     
  1974                           	psect	config
  1975                           
  1976                           ;Config register CONFIG1L @ 0x300000
  1977                           ;	PLL Selection
  1978                           ;	PLLSEL = PLL3X, 3x clock multiplier
  1979                           ;	PLL Enable Configuration bit
  1980                           ;	CFGPLLEN = ON, PLL Enabled
  1981                           ;	CPU System Clock Postscaler
  1982                           ;	CPUDIV = NOCLKDIV, CPU uses system clock (no divide)
  1983                           ;	Low Speed USB mode with 48 MHz system clock
  1984                           ;	LS48MHZ = SYS48X8, System clock at 48 MHz, USB clock divider is set to 8
  1985   300000                     	org	3145728
  1986   300000  23                 	db	35
  1987                           
  1988                           ;Config register CONFIG1H @ 0x300001
  1989                           ;	Oscillator Selection
  1990                           ;	FOSC = INTOSCCLKO, Internal oscillator, clock output on OSC2
  1991                           ;	Primary Oscillator Shutdown
  1992                           ;	PCLKEN = OFF, Primary oscillator shutdown firmware controlled
  1993                           ;	Fail-Safe Clock Monitor
  1994                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1995                           ;	Internal/External Oscillator Switchover
  1996                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1997   300001                     	org	3145729
  1998   300001  09                 	db	9
  1999                           
  2000                           ;Config register CONFIG2L @ 0x300002
  2001                           ;	Power-up Timer Enable
  2002                           ;	nPWRTEN = OFF, Power up timer disabled
  2003                           ;	Brown-out Reset Enable
  2004                           ;	BOREN = SBORDIS, BOR enabled in hardware (SBOREN is ignored)
  2005                           ;	Brown-out Reset Voltage
  2006                           ;	BORV = 190, BOR set to 1.9V nominal
  2007                           ;	Low-Power Brown-out Reset
  2008                           ;	nLPBOR = OFF, Low-Power Brown-out Reset disabled
  2009   300002                     	org	3145730
  2010   300002  5F                 	db	95
  2011                           
  2012                           ;Config register CONFIG2H @ 0x300003
  2013                           ;	Watchdog Timer Enable bits
  2014                           ;	WDTEN = OFF, WDT disabled in hardware (SWDTEN ignored)
  2015                           ;	Watchdog Timer Postscaler
  2016                           ;	WDTPS = 32768, 1:32768
  2017   300003                     	org	3145731
  2018   300003  3C                 	db	60
  2019                           
  2020                           ; Padding undefined space
  2021   300004                     	org	3145732
  2022   300004  FF                 	db	255
  2023                           
  2024                           ;Config register CONFIG3H @ 0x300005
  2025                           ;	CCP2 MUX bit
  2026                           ;	CCP2MX = RC1, CCP2 input/output is multiplexed with RC1
  2027                           ;	PORTB A/D Enable bit
  2028                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  2029                           ;	Timer3 Clock Input MUX bit
  2030                           ;	T3CMX = RC0, T3CKI function is on RC0
  2031                           ;	SDO Output MUX bit
  2032                           ;	SDOMX = RB3, SDO function is on RB3
  2033                           ;	Master Clear Reset Pin Enable
  2034                           ;	MCLRE = ON, MCLR pin enabled; RE3 input disabled
  2035   300005                     	org	3145733
  2036   300005  D3                 	db	211
  2037                           
  2038                           ;Config register CONFIG4L @ 0x300006
  2039                           ;	Stack Full/Underflow Reset
  2040                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2041                           ;	Single-Supply ICSP Enable bit
  2042                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
  2043                           ;	Dedicated In-Circuit Debug/Programming Port Enable
  2044                           ;	ICPRT = OFF, ICPORT disabled
  2045                           ;	Extended Instruction Set Enable bit
  2046                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled
  2047                           ;	Background Debugger Enable bit
  2048                           ;	DEBUG = 0x1, unprogrammed default
  2049   300006                     	org	3145734
  2050   300006  85                 	db	133
  2051                           
  2052                           ; Padding undefined space
  2053   300007                     	org	3145735
  2054   300007  FF                 	db	255
  2055                           
  2056                           ;Config register CONFIG5L @ 0x300008
  2057                           ;	Block 0 Code Protect
  2058                           ;	CP0 = OFF, Block 0 is not code-protected
  2059                           ;	Block 1 Code Protect
  2060                           ;	CP1 = OFF, Block 1 is not code-protected
  2061                           ;	Block 2 Code Protect
  2062                           ;	CP2 = OFF, Block 2 is not code-protected
  2063                           ;	Block 3 Code Protect
  2064                           ;	CP3 = OFF, Block 3 is not code-protected
  2065   300008                     	org	3145736
  2066   300008  0F                 	db	15
  2067                           
  2068                           ;Config register CONFIG5H @ 0x300009
  2069                           ;	Boot Block Code Protect
  2070                           ;	CPB = OFF, Boot block is not code-protected
  2071                           ;	Data EEPROM Code Protect
  2072                           ;	CPD = OFF, Data EEPROM is not code-protected
  2073   300009                     	org	3145737
  2074   300009  C0                 	db	192
  2075                           
  2076                           ;Config register CONFIG6L @ 0x30000A
  2077                           ;	Block 0 Write Protect
  2078                           ;	WRT0 = OFF, Block 0 (0800-1FFFh) is not write-protected
  2079                           ;	Block 1 Write Protect
  2080                           ;	WRT1 = OFF, Block 1 (2000-3FFFh) is not write-protected
  2081                           ;	Block 2 Write Protect
  2082                           ;	WRT2 = OFF, Block 2 (04000-5FFFh) is not write-protected
  2083                           ;	Block 3 Write Protect
  2084                           ;	WRT3 = OFF, Block 3 (06000-7FFFh) is not write-protected
  2085   30000A                     	org	3145738
  2086   30000A  0F                 	db	15
  2087                           
  2088                           ;Config register CONFIG6H @ 0x30000B
  2089                           ;	Configuration Registers Write Protect
  2090                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  2091                           ;	Boot Block Write Protect
  2092                           ;	WRTB = OFF, Boot block (0000-7FFh) is not write-protected
  2093                           ;	Data EEPROM Write Protect
  2094                           ;	WRTD = OFF, Data EEPROM is not write-protected
  2095   30000B                     	org	3145739
  2096   30000B  E0                 	db	224
  2097                           
  2098                           ;Config register CONFIG7L @ 0x30000C
  2099                           ;	Block 0 Table Read Protect
  2100                           ;	EBTR0 = OFF, Block 0 is not protected from table reads executed in other blocks
  2101                           ;	Block 1 Table Read Protect
  2102                           ;	EBTR1 = OFF, Block 1 is not protected from table reads executed in other blocks
  2103                           ;	Block 2 Table Read Protect
  2104                           ;	EBTR2 = OFF, Block 2 is not protected from table reads executed in other blocks
  2105                           ;	Block 3 Table Read Protect
  2106                           ;	EBTR3 = OFF, Block 3 is not protected from table reads executed in other blocks
  2107   30000C                     	org	3145740
  2108   30000C  0F                 	db	15
  2109                           
  2110                           ;Config register CONFIG7H @ 0x30000D
  2111                           ;	Boot Block Table Read Protect
  2112                           ;	EBTRB = OFF, Boot block is not protected from table reads executed in other blocks
  2113   30000D                     	org	3145741
  2114   30000D  40                 	db	64
  2115                           tosu	equ	0xFFF
  2116                           tosh	equ	0xFFE
  2117                           tosl	equ	0xFFD
  2118                           stkptr	equ	0xFFC
  2119                           pclatu	equ	0xFFB
  2120                           pclath	equ	0xFFA
  2121                           pcl	equ	0xFF9
  2122                           tblptru	equ	0xFF8
  2123                           tblptrh	equ	0xFF7
  2124                           tblptrl	equ	0xFF6
  2125                           tablat	equ	0xFF5
  2126                           prodh	equ	0xFF4
  2127                           prodl	equ	0xFF3
  2128                           indf0	equ	0xFEF
  2129                           postinc0	equ	0xFEE
  2130                           postdec0	equ	0xFED
  2131                           preinc0	equ	0xFEC
  2132                           plusw0	equ	0xFEB
  2133                           fsr0h	equ	0xFEA
  2134                           fsr0l	equ	0xFE9
  2135                           wreg	equ	0xFE8
  2136                           indf1	equ	0xFE7
  2137                           postinc1	equ	0xFE6
  2138                           postdec1	equ	0xFE5
  2139                           preinc1	equ	0xFE4
  2140                           plusw1	equ	0xFE3
  2141                           fsr1h	equ	0xFE2
  2142                           fsr1l	equ	0xFE1
  2143                           bsr	equ	0xFE0
  2144                           indf2	equ	0xFDF
  2145                           postinc2	equ	0xFDE
  2146                           postdec2	equ	0xFDD
  2147                           preinc2	equ	0xFDC
  2148                           plusw2	equ	0xFDB
  2149                           fsr2h	equ	0xFDA
  2150                           fsr2l	equ	0xFD9
  2151                           status	equ	0xFD8

Data Sizes:
    Strings     249
    Constant    0
    Data        0
    BSS         37
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     26      63
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    printf@fmt	PTR const unsigned char  size(1) Largest target is 26
		 -> STR_1(CODE[7]), STR_10(CODE[9]), STR_11(CODE[14]), STR_12(CODE[17]), 
		 -> STR_13(CODE[10]), STR_14(CODE[14]), STR_15(CODE[17]), STR_16(CODE[11]), 
		 -> STR_17(CODE[14]), STR_18(CODE[17]), STR_19(CODE[8]), STR_2(CODE[10]), 
		 -> STR_20(CODE[25]), STR_21(CODE[24]), STR_22(CODE[26]), STR_3(CODE[11]), 
		 -> STR_4(CODE[18]), STR_5(CODE[18]), STR_6(CODE[11]), STR_7(CODE[9]), 
		 -> STR_8(CODE[8]), STR_9(CODE[13]), 

    S996$buffer	PTR unsigned char  size(2) Largest target is 0

    S996$source	PTR const unsigned char  size(2) Largest target is 0

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(COMRAM[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 26
		 -> STR_1(CODE[7]), STR_10(CODE[9]), STR_11(CODE[14]), STR_12(CODE[17]), 
		 -> STR_13(CODE[10]), STR_14(CODE[14]), STR_15(CODE[17]), STR_16(CODE[11]), 
		 -> STR_17(CODE[14]), STR_18(CODE[17]), STR_19(CODE[8]), STR_2(CODE[10]), 
		 -> STR_20(CODE[25]), STR_21(CODE[24]), STR_22(CODE[26]), STR_3(CODE[11]), 
		 -> STR_4(CODE[18]), STR_5(CODE[18]), STR_6(CODE[11]), STR_7(CODE[9]), 
		 -> STR_8(CODE[8]), STR_9(CODE[13]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 26
		 -> STR_1(CODE[7]), STR_10(CODE[9]), STR_11(CODE[14]), STR_12(CODE[17]), 
		 -> STR_13(CODE[10]), STR_14(CODE[14]), STR_15(CODE[17]), STR_16(CODE[11]), 
		 -> STR_17(CODE[14]), STR_18(CODE[17]), STR_19(CODE[8]), STR_2(CODE[10]), 
		 -> STR_20(CODE[25]), STR_21(CODE[24]), STR_22(CODE[26]), STR_3(CODE[11]), 
		 -> STR_4(CODE[18]), STR_5(CODE[18]), STR_6(CODE[11]), STR_7(CODE[9]), 
		 -> STR_8(CODE[8]), STR_9(CODE[13]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _main->_UART_Init
    _UART_config_show->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_fputc
    _fputc->_putch
    _putch->_UART_Tx

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    3871
                         _Clock_Init
                          _UART_Init
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            4     0      4    3287
                                             22 COMRAM     4     0      4
                   _UART_config_show
                   _UART_select_baud
 ---------------------------------------------------------------------------------
 (2) _UART_select_baud                                     8     4      4      98
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _UART_config_show                                     0     0      0    3091
                             _printf
 ---------------------------------------------------------------------------------
 (3) _printf                                               4     3      1    3091
                                             20 COMRAM     2     1      1
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             5     1      4    1367
                                             15 COMRAM     5     1      4
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                            9     5      4    1020
                                             11 COMRAM     4     0      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4     660
                                              2 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0      30
                                              1 COMRAM     1     1      0
                            _UART_Tx
 ---------------------------------------------------------------------------------
 (8) _UART_Tx                                              1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Clock_Init                                           8     6      2     584
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Clock_Init
   _UART_Init
     _UART_config_show
       _printf
         _vfprintf
           _vfpfcnvrt
             _fputc
               _putch
                 _UART_Tx
     _UART_select_baud

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      28        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     1A      3F       1       66.3%
BITBIGSFRll         41      0       0      26        0.0%
BITBIGSFRhhh        2C      0       0      20        0.0%
BITBIGSFRhhl        19      0       0      21        0.0%
BITBIGSFRlhh         C      0       0      23        0.0%
BITBIGSFRhlh         7      0       0      22        0.0%
BITBIGSFRlhll        6      0       0      25        0.0%
BITBIGSFRlhlh        2      0       0      24        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      3F      27        0.0%
DATA                 0      0      3F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Mon Sep 09 12:35:06 2024

                       l9 0F14                        l10 0F14                        l70 0CC8  
                      l74 0CFA                        l66 0C9E                        l83 0D4E  
                      l78 0D24                        l86 0EF2                        l99 0C50  
                      u10 0F5C                        u11 0F58                       l102 0F4E  
                     l105 0F60                       l108 0F6A                       l141 0A06  
                     l142 099E                       l135 0988                       l160 0B10  
                     l136 0920                       l153 0AFA                       l154 0A92  
                     l147 0A7E                       l148 0A16                       l903 0F4E  
                     l905 0F5C                       l907 0F64                       l852 0F34  
                     l881 0EC8                       l875 0E86                       l893 0E18  
                     u500 0EC0                       u501 0EBC                       u510 0C68  
                     u511 0C64                       u600 094A                       u520 0C8A  
                     u601 0946                       u521 0C86                       u610 0964  
                     u450 0D62                       u530 0CB4                       u611 0960  
                     u451 0D5E                       u531 0CB0                       u700 0A16  
                     u620 0974                       u460 0D74                       u540 0CE6  
                     u701 0A12                       u621 0970                       u461 0D70  
                     u541 0CE2                       u710 0A26                       u630 0984  
                     u470 0D9C                       u550 0D10                       u711 0A20  
                     u631 0980                       u471 0D98                       u551 0D0C  
                     u800 0AE6                       u720 0A40                       u640 0998  
                     u480 0DD2                       u560 0D3A                       u801 0AE2  
                     u721 0A3C                       u641 0994                       u481 0DCE  
                     u561 0D36                       u810 0AF6                       u730 0A5A  
                     u650 09AE                       u570 091C                       u490 0E3C  
                     u811 0AF2                       u731 0A56                       u651 09A8  
                     u571 0916                       u491 0E38                       u820 0B0A  
                     u740 0A6A                       u716 0A28                       u660 09C8  
                     u580 091E                       u821 0B06                       u741 0A66  
                     u661 09C4                       u750 0A7A                       u670 09E2  
                     u590 0930                       u751 0A76                       u671 09DE  
                     u591 092A                       u760 0A8E                       u680 09F2  
                     u656 09B0                       u761 0A8A                       u681 09EE  
                     u770 0AA2                       u690 0A02                       u771 0A9C  
                     u691 09FE                       u780 0ABC                       u596 0932  
                     u781 0AB8                       u790 0AD6                       u791 0AD2  
                     u776 0AA4                       wreg 0FE8                _TXSTA1bits 0FAC  
                    l1301 0C68                      l1311 0CA6                      l1303 0C74  
                    l1401 0920                      l1321 0CF2                      l1313 0CB4  
                    l1305 0C7C                      l1411 0964                      l1403 0920  
                    l1251 0D62                      l1331 0D3A                      l1323 0D02  
                    l1315 0CC0                      l1307 0C8A                      l1421 09B2  
                    l1413 0974                      l1405 0934                      l1253 0D74  
                    l1333 0D46                      l1325 0D10                      l1317 0CD8  
                    l1309 0C96                      l1341 0B2E                      l1431 0A02  
                    l1423 09B8                      l1415 0984                      l1407 093A  
                    l1255 0D7E                      l1271 0E54                      l1263 0E1A  
                    l1327 0D1C                      l1319 0CE6                      l1351 0B6A  
                    l1343 0B3A                      l1335 0B12                      l1441 0A5A  
                    l1433 0A16                      l1425 09C8                      l1417 0998  
                    l1409 094A                      l1257 0D9C                      l1249 0D50  
                    l1265 0E3C                      l1281 0E88                      l1329 0D2C  
                    l1345 0B46                      l1337 0B16                      l1451 0AA6  
                    l1443 0A6A                      l1435 0A2A                      l1427 09E2  
                    l1419 099A                      l1259 0DD2                      l1267 0E44  
                    l1275 0E60                      l1283 0E90                      l1291 0F1C  
                    l1347 0B52                      l1339 0B22                      l1355 0B76  
                    l1461 0AF6                      l1453 0AAC                      l1445 0A7A  
                    l1437 0A30                      l1429 09F2                      l1269 0E50  
                    l1285 0EA4                      l1293 0F20                      l1349 0B5E  
                    l1463 0B0A                      l1455 0ABC                      l1447 0A8E  
                    l1439 0A40                      l1287 0EC0                      l1551 0C1E  
                    l1471 0ED0                      l1465 0B0C                      l1457 0AD6  
                    l1449 0A92                      l1297 0C52                      l1561 0BF4  
                    l1553 0C3A                      l1481 0EEC                      l1473 0EE4  
                    l1459 0AE6                      l1299 0C5A                      l1563 0C02  
                    l1555 0BCA                      l1483 0EEE                      l1475 0EE6  
                    l1397 08FC                      l1565 0C10                      l1557 0BD8  
                    l1549 0B94                      l1477 0EE8                      l1469 0ECA  
                    l1485 0EF4                      l1399 0900                      l1567 0C2C  
                    l1559 0BE6                      l1479 0EEA                      l1487 0F00  
                    STR_1 08F3                      STR_2 08C7                      STR_3 08B2  
                    STR_4 085E                      STR_5 084C                      STR_6 089C  
                    STR_7 08DA                      STR_8 08EB                      STR_9 088F  
                    _CREN 7D5C                      _SPEN 7D5F                      _TRMT 7D61  
         __end_of_UART_Tx 0F62                      _dbuf 0001                      _main 0EF4  
                    _prec 0023                      fsr1h 0FE2                      fsr2h 0FDA  
                    indf2 0FDF                      fsr1l 0FE1                      fsr2l 0FD9  
                    start 0000              ___param_bank 0000  UART_select_baud@baudrate 0026  
              _Clock_Init 08FC              _BAUDCON1bits 0FB8                     ?_main 0026  
                   STR_10 08D1                     STR_11 0881                     STR_12 0870  
                   STR_20 081B                     STR_13 08BD                     STR_21 0834  
                   STR_14 0881                     STR_22 0801                     STR_15 0870  
                   STR_16 08A7                     STR_17 0881                     STR_18 0870  
                   STR_19 08E3                     _BRGH1 7D62                     _RC1IF 7CF5  
                   _RCREG 0FAE         Clock_Init@bStatus 0028              vfpfcnvrt@fmt 0033  
        _UART_config_show 0C52                     _SPBRG 0FAF                     _TXEN1 7D65  
                   _SYNC1 7D64                     _flags 0025                     _fputc 0D50  
                   _width 0021                     _putch 0F62                     tablat 0FF5  
                   status 0FD8           __initialization 0F36              __end_of_main 0F1C  
                  ??_main 0040             __activetblptr 0002                 ??_UART_Tx 0026  
                  ?_fputc 0028                    _BRG161 7DC3                    ?_putch 0026  
                  _RCREG1 0FAE                    _SPBRGH 0FB0                    _TRISC6 7CA6  
                  _TRISC7 7CA7                    _TXREG1 0FAD              vfprintf@cfmt 0039  
       __end_of_UART_Init 0EF4               ?_Clock_Init 0026                    clear_0 0F3C  
                  isa$std 0001                    _printf 0F1C                    fputc@c 0028  
            __mediumconst 0000                    tblptrh 0FF7                    tblptrl 0FF6  
                  tblptru 0FF8          __end_of_vfprintf 0ECA                __accesstop 0060  
 __end_of__initialization 0F42             ___rparam_used 0001          _UART_select_baud 0B12  
          __pcstackCOMRAM 0026             __end_of_fputc 0E1A             __end_of_putch 0F6C  
                 ??_fputc 002C                   ??_putch 0027  __end_of_UART_config_show 0D50  
     Clock_Init@bItTimeEn 002C                   ?_printf 003A                   _UART_Tx 0F4C  
                 __Hparam 0000                   __Lparam 0000                 ?_vfprintf 0035  
            __psmallconst 0800                   __pcinit 0F36                   __ramtop 0800  
                 __ptext0 0EF4                   __ptext1 0ECA                   __ptext2 0B12  
                 __ptext3 0C52                   __ptext4 0F1C                   __ptext5 0E88  
                 __ptext6 0E1A                   __ptext7 0D50                   __ptext8 0F62  
                 __ptext9 0F4C               UART_Tx@dato 0026      end_of_initialization 0F42  
                 fputc@fp 002A             __Lmediumconst 0000     Clock_Init@bStatus_542 002B  
   Clock_Init@bStatus_538 0029     Clock_Init@bStatus_539 002A         __end_of_vfpfcnvrt 0E88  
               _RCSTAbits 0FAB                   postdec2 0FDD                   postinc0 0FEE  
                 postinc1 0FE6                   postinc2 0FDE              ??_Clock_Init 0028  
              ??_vfprintf 0039                 _UART_Init 0ECA  __end_of_UART_select_baud 0C52  
      __end_of_Clock_Init 0B12                 _TXSTAbits 0FAC               vfpfcnvrt@ap 0034  
             vfpfcnvrt@fp 0031                ?_UART_Init 003C            __end_of_printf 0F36  
     start_initialization 0F36      Clock_Init@s16Timeout 0026         ?_UART_config_show 0026  
             vfprintf@fmt 0037        ??_UART_config_show 003C                  ??_printf 003B  
             __pbssCOMRAM 0001                  ?_UART_Tx 0026               ??_UART_Init 0040  
             __smallconst 0800                 _vfpfcnvrt 0E1A         UART_Init@baudrate 003C  
       ?_UART_select_baud 0026        ??_UART_select_baud 002A                  __Hrparam 0000  
              vfprintf@ap 0038                  __Lrparam 0000                vfprintf@fp 0035  
              ?_vfpfcnvrt 0031                  __ptext10 08FC               _OSCCON2bits 0FD2  
                isa$xinst 0000                  _vfprintf 0E88                 printf@fmt 003A  
               putch@data 0027               _OSCTUNEbits 0F9B                _OSCCONbits 0FD3  
                printf@ap 003B               ??_vfpfcnvrt 0035      Clock_Init@returnCode 002D  
