

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Sat Oct 05 21:12:30 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F45K50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    26                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    27                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    28   000000                     
    29                           ; Generated 12/10/2023 GMT
    30                           ; 
    31                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution. Publication is not required when
    45                           ;        this file is used in an embedded application.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC18F45K50 Definitions
    61                           ; 
    62                           ; SFR Addresses
    63   000000                     _RCREG	set	4014
    64   000000                     _TXREG1	set	4013
    65   000000                     _SPBRG	set	4015
    66   000000                     _SPBRGH	set	4016
    67   000000                     _BRG161	set	32195
    68   000000                     _RCREG1	set	4014
    69   000000                     _TXSTAbits	set	4012
    70   000000                     _RCSTAbits	set	4011
    71   000000                     _BAUDCON1	set	4024
    72   000000                     _TXSTA1bits	set	4012
    73   000000                     _TRMT	set	32097
    74   000000                     _TRISC7	set	31911
    75   000000                     _CREN	set	32092
    76   000000                     _TXEN1	set	32101
    77   000000                     _BRGH1	set	32098
    78   000000                     _ANSELC	set	3933
    79   000000                     _TRISC6	set	31910
    80   000000                     _SPEN	set	32095
    81   000000                     _SYNC1	set	32100
    82   000000                     _OSCCON2bits	set	4050
    83   000000                     _OSCTUNEbits	set	3995
    84   000000                     _RC1IF	set	31989
    85   000000                     _OSCCONbits	set	4051
    86                           
    87                           	psect	smallconst
    88   000800                     __psmallconst:
    89                           	callstack 0
    90   000800  00                 	db	0
    91   000801                     STR_20:
    92   000801  45                 	db	69	;'E'
    93   000802  52                 	db	82	;'R'
    94   000803  52                 	db	82	;'R'
    95   000804  4F                 	db	79	;'O'
    96   000805  52                 	db	82	;'R'
    97   000806  5F                 	db	95	;'_'
    98   000807  43                 	db	67	;'C'
    99   000808  4F                 	db	79	;'O'
   100   000809  44                 	db	68	;'D'
   101   00080A  45                 	db	69	;'E'
   102   00080B  5F                 	db	95	;'_'
   103   00080C  55                 	db	85	;'U'
   104   00080D  41                 	db	65	;'A'
   105   00080E  52                 	db	82	;'R'
   106   00080F  54                 	db	84	;'T'
   107   000810  5F                 	db	95	;'_'
   108   000811  4F                 	db	79	;'O'
   109   000812  56                 	db	86	;'V'
   110   000813  45                 	db	69	;'E'
   111   000814  52                 	db	82	;'R'
   112   000815  46                 	db	70	;'F'
   113   000816  4C                 	db	76	;'L'
   114   000817  4F                 	db	79	;'O'
   115   000818  57                 	db	87	;'W'
   116   000819  0D                 	db	13
   117   00081A  0A                 	db	10
   118   00081B  00                 	db	0
   119   00081C                     STR_22:
   120   00081C  45                 	db	69	;'E'
   121   00081D  52                 	db	82	;'R'
   122   00081E  52                 	db	82	;'R'
   123   00081F  4F                 	db	79	;'O'
   124   000820  52                 	db	82	;'R'
   125   000821  5F                 	db	95	;'_'
   126   000822  43                 	db	67	;'C'
   127   000823  4F                 	db	79	;'O'
   128   000824  44                 	db	68	;'D'
   129   000825  45                 	db	69	;'E'
   130   000826  5F                 	db	95	;'_'
   131   000827  55                 	db	85	;'U'
   132   000828  41                 	db	65	;'A'
   133   000829  52                 	db	82	;'R'
   134   00082A  54                 	db	84	;'T'
   135   00082B  5F                 	db	95	;'_'
   136   00082C  43                 	db	67	;'C'
   137   00082D  4F                 	db	79	;'O'
   138   00082E  4E                 	db	78	;'N'
   139   00082F  46                 	db	70	;'F'
   140   000830  49                 	db	73	;'I'
   141   000831  47                 	db	71	;'G'
   142   000832  20                 	db	32
   143   000833  0D                 	db	13
   144   000834  0A                 	db	10
   145   000835  00                 	db	0
   146   000836                     STR_21:
   147   000836  45                 	db	69	;'E'
   148   000837  52                 	db	82	;'R'
   149   000838  52                 	db	82	;'R'
   150   000839  4F                 	db	79	;'O'
   151   00083A  52                 	db	82	;'R'
   152   00083B  5F                 	db	95	;'_'
   153   00083C  43                 	db	67	;'C'
   154   00083D  4F                 	db	79	;'O'
   155   00083E  44                 	db	68	;'D'
   156   00083F  45                 	db	69	;'E'
   157   000840  5F                 	db	95	;'_'
   158   000841  55                 	db	85	;'U'
   159   000842  41                 	db	65	;'A'
   160   000843  52                 	db	82	;'R'
   161   000844  54                 	db	84	;'T'
   162   000845  5F                 	db	95	;'_'
   163   000846  46                 	db	70	;'F'
   164   000847  52                 	db	82	;'R'
   165   000848  41                 	db	65	;'A'
   166   000849  4D                 	db	77	;'M'
   167   00084A  49                 	db	73	;'I'
   168   00084B  4E                 	db	78	;'N'
   169   00084C  47                 	db	71	;'G'
   170   00084D  0D                 	db	13
   171   00084E  0A                 	db	10
   172   00084F  00                 	db	0
   173   000850                     STR_5:
   174   000850  62                 	db	98	;'b'
   175   000851  61                 	db	97	;'a'
   176   000852  6A                 	db	106	;'j'
   177   000853  61                 	db	97	;'a'
   178   000854  20                 	db	32
   179   000855  76                 	db	118	;'v'
   180   000856  65                 	db	101	;'e'
   181   000857  6C                 	db	108	;'l'
   182   000858  6F                 	db	111	;'o'
   183   000859  63                 	db	99	;'c'
   184   00085A  69                 	db	105	;'i'
   185   00085B  64                 	db	100	;'d'
   186   00085C  61                 	db	97	;'a'
   187   00085D  64                 	db	100	;'d'
   188   00085E  20                 	db	32
   189   00085F  0D                 	db	13
   190   000860  0A                 	db	10
   191   000861  00                 	db	0
   192   000862                     STR_4:
   193   000862  61                 	db	97	;'a'
   194   000863  6C                 	db	108	;'l'
   195   000864  74                 	db	116	;'t'
   196   000865  61                 	db	97	;'a'
   197   000866  20                 	db	32
   198   000867  76                 	db	118	;'v'
   199   000868  65                 	db	101	;'e'
   200   000869  6C                 	db	108	;'l'
   201   00086A  6F                 	db	111	;'o'
   202   00086B  63                 	db	99	;'c'
   203   00086C  69                 	db	105	;'i'
   204   00086D  64                 	db	100	;'d'
   205   00086E  61                 	db	97	;'a'
   206   00086F  64                 	db	100	;'d'
   207   000870  20                 	db	32
   208   000871  0D                 	db	13
   209   000872  0A                 	db	10
   210   000873  00                 	db	0
   211   000874                     STR_12:
   212   000874  44                 	db	68	;'D'
   213   000875  65                 	db	101	;'e'
   214   000876  73                 	db	115	;'s'
   215   000877  68                 	db	104	;'h'
   216   000878  61                 	db	97	;'a'
   217   000879  62                 	db	98	;'b'
   218   00087A  69                 	db	105	;'i'
   219   00087B  6C                 	db	108	;'l'
   220   00087C  69                 	db	105	;'i'
   221   00087D  74                 	db	116	;'t'
   222   00087E  61                 	db	97	;'a'
   223   00087F  64                 	db	100	;'d'
   224   000880  6F                 	db	111	;'o'
   225   000881  20                 	db	32
   226   000882  0D                 	db	13
   227   000883  0A                 	db	10
   228   000884  00                 	db	0
   229   000885                     STR_11:
   230   000885  48                 	db	72	;'H'
   231   000886  61                 	db	97	;'a'
   232   000887  62                 	db	98	;'b'
   233   000888  69                 	db	105	;'i'
   234   000889  6C                 	db	108	;'l'
   235   00088A  69                 	db	105	;'i'
   236   00088B  74                 	db	116	;'t'
   237   00088C  61                 	db	97	;'a'
   238   00088D  64                 	db	100	;'d'
   239   00088E  6F                 	db	111	;'o'
   240   00088F  20                 	db	32
   241   000890  0D                 	db	13
   242   000891  0A                 	db	10
   243   000892  00                 	db	0
   244   000893                     STR_9:
   245   000893  78                 	db	120	;'x'
   246   000894  20                 	db	32
   247   000895  62                 	db	98	;'b'
   248   000896  61                 	db	97	;'a'
   249   000897  75                 	db	117	;'u'
   250   000898  64                 	db	100	;'d'
   251   000899  69                 	db	105	;'i'
   252   00089A  6F                 	db	111	;'o'
   253   00089B  73                 	db	115	;'s'
   254   00089C  20                 	db	32
   255   00089D  0D                 	db	13
   256   00089E  0A                 	db	10
   257   00089F  00                 	db	0
   258   0008A0                     STR_6:
   259   0008A0  42                 	db	66	;'B'
   260   0008A1  61                 	db	97	;'a'
   261   0008A2  75                 	db	117	;'u'
   262   0008A3  64                 	db	100	;'d'
   263   0008A4  72                 	db	114	;'r'
   264   0008A5  61                 	db	97	;'a'
   265   0008A6  74                 	db	116	;'t'
   266   0008A7  65                 	db	101	;'e'
   267   0008A8  3A                 	db	58	;':'
   268   0008A9  20                 	db	32
   269   0008AA  00                 	db	0
   270   0008AB                     STR_16:
   271   0008AB  52                 	db	82	;'R'
   272   0008AC  65                 	db	101	;'e'
   273   0008AD  63                 	db	99	;'c'
   274   0008AE  65                 	db	101	;'e'
   275   0008AF  70                 	db	112	;'p'
   276   0008B0  74                 	db	116	;'t'
   277   0008B1  6F                 	db	111	;'o'
   278   0008B2  72                 	db	114	;'r'
   279   0008B3  3A                 	db	58	;':'
   280   0008B4  20                 	db	32
   281   0008B5  00                 	db	0
   282   0008B6                     STR_3:
   283   0008B6  41                 	db	65	;'A'
   284   0008B7  73                 	db	115	;'s'
   285   0008B8  69                 	db	105	;'i'
   286   0008B9  6E                 	db	110	;'n'
   287   0008BA  63                 	db	99	;'c'
   288   0008BB  72                 	db	114	;'r'
   289   0008BC  6F                 	db	111	;'o'
   290   0008BD  6E                 	db	110	;'n'
   291   0008BE  6F                 	db	111	;'o'
   292   0008BF  20                 	db	32
   293   0008C0  00                 	db	0
   294   0008C1                     STR_13:
   295   0008C1  54                 	db	84	;'T'
   296   0008C2  72                 	db	114	;'r'
   297   0008C3  61                 	db	97	;'a'
   298   0008C4  6E                 	db	110	;'n'
   299   0008C5  73                 	db	115	;'s'
   300   0008C6  6F                 	db	111	;'o'
   301   0008C7  72                 	db	114	;'r'
   302   0008C8  3A                 	db	58	;':'
   303   0008C9  20                 	db	32
   304   0008CA  00                 	db	0
   305   0008CB                     STR_2:
   306   0008CB  53                 	db	83	;'S'
   307   0008CC  69                 	db	105	;'i'
   308   0008CD  6E                 	db	110	;'n'
   309   0008CE  63                 	db	99	;'c'
   310   0008CF  72                 	db	114	;'r'
   311   0008D0  6F                 	db	111	;'o'
   312   0008D1  6E                 	db	110	;'n'
   313   0008D2  6F                 	db	111	;'o'
   314   0008D3  20                 	db	32
   315   0008D4  00                 	db	0
   316   0008D5                     STR_10:
   317   0008D5  50                 	db	80	;'P'
   318   0008D6  75                 	db	117	;'u'
   319   0008D7  65                 	db	101	;'e'
   320   0008D8  72                 	db	114	;'r'
   321   0008D9  74                 	db	116	;'t'
   322   0008DA  6F                 	db	111	;'o'
   323   0008DB  3A                 	db	58	;':'
   324   0008DC  20                 	db	32
   325   0008DD  00                 	db	0
   326   0008DE                     STR_7:
   327   0008DE  31                 	db	49	;'1'
   328   0008DF  36                 	db	54	;'6'
   329   0008E0  20                 	db	32
   330   0008E1  62                 	db	98	;'b'
   331   0008E2  69                 	db	105	;'i'
   332   0008E3  74                 	db	116	;'t'
   333   0008E4  73                 	db	115	;'s'
   334   0008E5  20                 	db	32
   335   0008E6  00                 	db	0
   336   0008E7                     STR_19:
   337   0008E7  45                 	db	69	;'E'
   338   0008E8  72                 	db	114	;'r'
   339   0008E9  72                 	db	114	;'r'
   340   0008EA  6F                 	db	111	;'o'
   341   0008EB  72                 	db	114	;'r'
   342   0008EC  3A                 	db	58	;':'
   343   0008ED  20                 	db	32
   344   0008EE  00                 	db	0
   345   0008EF                     STR_8:
   346   0008EF  38                 	db	56	;'8'
   347   0008F0  20                 	db	32
   348   0008F1  62                 	db	98	;'b'
   349   0008F2  69                 	db	105	;'i'
   350   0008F3  74                 	db	116	;'t'
   351   0008F4  73                 	db	115	;'s'
   352   0008F5  20                 	db	32
   353   0008F6  00                 	db	0
   354   0008F7                     STR_1:
   355   0008F7  4D                 	db	77	;'M'
   356   0008F8  6F                 	db	111	;'o'
   357   0008F9  64                 	db	100	;'d'
   358   0008FA  6F                 	db	111	;'o'
   359   0008FB  3A                 	db	58	;':'
   360   0008FC  20                 	db	32
   361   0008FD  00                 	db	0
   362   0008FE  00                 	db	0	; dummy byte at the end
   363   000000                     
   364                           ; #config settings
   365                           
   366                           	psect	cinit
   367   001050                     __pcinit:
   368                           	callstack 0
   369   001050                     start_initialization:
   370                           	callstack 0
   371   001050                     __initialization:
   372                           	callstack 0
   373                           
   374                           ; Clear objects allocated to COMRAM (37 bytes)
   375   001050  EE00  F001         	lfsr	0,__pbssCOMRAM
   376   001054  0E25               	movlw	37
   377   001056                     clear_0:
   378   001056  6AEE               	clrf	postinc0,c
   379   001058  06E8               	decf	wreg,f,c
   380   00105A  E1FD               	bnz	clear_0
   381   00105C                     end_of_initialization:
   382                           	callstack 0
   383   00105C                     __end_of__initialization:
   384                           	callstack 0
   385   00105C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   386   00105E  6EF8               	movwf	tblptru,c
   387   001060  0100               	movlb	0
   388   001062  EF83  F007         	goto	_main	;jump to C main() function
   389                           
   390                           	psect	bssCOMRAM
   391   000001                     __pbssCOMRAM:
   392                           	callstack 0
   393   000001                     	ds	32
   394   000021                     _width:
   395                           	callstack 0
   396   000021                     	ds	2
   397   000023                     _prec:
   398                           	callstack 0
   399   000023                     	ds	2
   400   000025                     _flags:
   401                           	callstack 0
   402   000025                     	ds	1
   403                           
   404                           	psect	cstackCOMRAM
   405   000026                     __pcstackCOMRAM:
   406                           	callstack 0
   407   000026                     UART_Tx@dato:
   408                           	callstack 0
   409   000026                     Clock_Init@s16Timeout:
   410                           	callstack 0
   411   000026                     UART_select_baud@baudrate:
   412                           	callstack 0
   413                           
   414                           ; 4 bytes @ 0x0
   415   000026                     	ds	1
   416   000027                     putch@data:
   417                           	callstack 0
   418                           
   419                           ; 1 bytes @ 0x1
   420   000027                     	ds	1
   421   000028                     Clock_Init@bStatus:
   422                           	callstack 0
   423   000028                     fputc@c:
   424                           	callstack 0
   425                           
   426                           ; 2 bytes @ 0x2
   427   000028                     	ds	1
   428   000029                     Clock_Init@bStatus_467:
   429                           	callstack 0
   430                           
   431                           ; 1 bytes @ 0x3
   432   000029                     	ds	1
   433   00002A                     ??_UART_select_baud:
   434   00002A                     Clock_Init@bStatus_468:
   435                           	callstack 0
   436   00002A                     fputc@fp:
   437                           	callstack 0
   438                           
   439                           ; 2 bytes @ 0x4
   440   00002A                     	ds	1
   441   00002B                     Clock_Init@bStatus_471:
   442                           	callstack 0
   443                           
   444                           ; 1 bytes @ 0x5
   445   00002B                     	ds	1
   446   00002C                     ??_fputc:
   447   00002C                     Clock_Init@bItTimeEn:
   448                           	callstack 0
   449                           
   450                           ; 1 bytes @ 0x6
   451   00002C                     	ds	1
   452   00002D                     Clock_Init@returnCode:
   453                           	callstack 0
   454                           
   455                           ; 1 bytes @ 0x7
   456   00002D                     	ds	4
   457   000031                     vfpfcnvrt@fp:
   458                           	callstack 0
   459                           
   460                           ; 2 bytes @ 0xB
   461   000031                     	ds	2
   462   000033                     vfpfcnvrt@fmt:
   463                           	callstack 0
   464                           
   465                           ; 1 bytes @ 0xD
   466   000033                     	ds	1
   467   000034                     vfpfcnvrt@ap:
   468                           	callstack 0
   469                           
   470                           ; 1 bytes @ 0xE
   471   000034                     	ds	1
   472   000035                     ?_vfprintf:
   473                           	callstack 0
   474   000035                     vfprintf@fp:
   475                           	callstack 0
   476                           
   477                           ; 2 bytes @ 0xF
   478   000035                     	ds	2
   479   000037                     vfprintf@fmt:
   480                           	callstack 0
   481                           
   482                           ; 1 bytes @ 0x11
   483   000037                     	ds	1
   484   000038                     vfprintf@ap:
   485                           	callstack 0
   486                           
   487                           ; 1 bytes @ 0x12
   488   000038                     	ds	1
   489   000039                     vfprintf@cfmt:
   490                           	callstack 0
   491                           
   492                           ; 1 bytes @ 0x13
   493   000039                     	ds	1
   494   00003A                     ?_printf:
   495                           	callstack 0
   496   00003A                     printf@fmt:
   497                           	callstack 0
   498                           
   499                           ; 1 bytes @ 0x14
   500   00003A                     	ds	1
   501   00003B                     printf@ap:
   502                           	callstack 0
   503                           
   504                           ; 1 bytes @ 0x15
   505   00003B                     	ds	1
   506   00003C                     ??_UART_ErrorHandler:
   507   00003C                     UART_Init@baudrate:
   508                           	callstack 0
   509                           
   510                           ; 4 bytes @ 0x16
   511   00003C                     	ds	2
   512   00003E                     UART_ErrorHandler@errorCode:
   513                           	callstack 0
   514                           
   515                           ; 1 bytes @ 0x18
   516   00003E                     	ds	1
   517   00003F                     
   518                           ; 1 bytes @ 0x19
   519   00003F                     	ds	1
   520   000040                     main@x:
   521                           	callstack 0
   522                           
   523                           ; 1 bytes @ 0x1A
   524   000040                     	ds	1
   525                           
   526 ;;
   527 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   528 ;;
   529 ;; *************** function _main *****************
   530 ;; Defined at:
   531 ;;		line 15 in file "src/main.c"
   532 ;; Parameters:    Size  Location     Type
   533 ;;		None
   534 ;; Auto vars:     Size  Location     Type
   535 ;;  x               1   26[COMRAM] unsigned char 
   536 ;; Return value:  Size  Location     Type
   537 ;;                  2   14[None  ] int 
   538 ;; Registers used:
   539 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   540 ;; Tracked objects:
   541 ;;		On entry : 0/0
   542 ;;		On exit  : 0/0
   543 ;;		Unchanged: 0/0
   544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   545 ;;      Params:         0       0       0       0       0       0       0       0       0
   546 ;;      Locals:         1       0       0       0       0       0       0       0       0
   547 ;;      Temps:          0       0       0       0       0       0       0       0       0
   548 ;;      Totals:         1       0       0       0       0       0       0       0       0
   549 ;;Total ram usage:        1 bytes
   550 ;; Hardware stack levels required when called: 8
   551 ;; This function calls:
   552 ;;		_Clock_Init
   553 ;;		_UART_Init
   554 ;;		_UART_Rx
   555 ;;		_UART_RxAvailable
   556 ;;		_UART_Tx
   557 ;; This function is called by:
   558 ;;		Startup code after reset
   559 ;; This function uses a non-reentrant model
   560 ;;
   561                           
   562                           	psect	text0
   563   000F06                     __ptext0:
   564                           	callstack 0
   565   000F06                     _main:
   566                           	callstack 23
   567   000F06                     
   568                           ;src/main.c: 17:     Clock_Init(16000);
   569   000F06  0E3E               	movlw	62
   570   000F08  6E27               	movwf	(Clock_Init@s16Timeout+1)^0,c
   571   000F0A  0E80               	movlw	128
   572   000F0C  6E26               	movwf	Clock_Init@s16Timeout^0,c
   573   000F0E  EC80  F004         	call	_Clock_Init	;wreg free
   574   000F12                     
   575                           ;src/main.c: 18:     UART_Init(9600);
   576   000F12  0E80               	movlw	128
   577   000F14  6E3C               	movwf	UART_Init@baudrate^0,c
   578   000F16  0E25               	movlw	37
   579   000F18  6E3D               	movwf	(UART_Init@baudrate+1)^0,c
   580   000F1A  0E00               	movlw	0
   581   000F1C  6E3E               	movwf	(UART_Init@baudrate+2)^0,c
   582   000F1E  0E00               	movlw	0
   583   000F20  6E3F               	movwf	(UART_Init@baudrate+3)^0,c
   584   000F22  ECE7  F007         	call	_UART_Init	;wreg free
   585   000F26                     l1742:
   586                           
   587                           ;src/main.c: 21:     {;src/main.c: 22:         if(UART_RxAvailable()){
   588   000F26  ECC8  F007         	call	_UART_RxAvailable	;wreg free
   589   000F2A  0900               	iorlw	0
   590   000F2C  B4D8               	btfsc	status,2,c
   591   000F2E  EF9B  F007         	goto	u891
   592   000F32  EF9D  F007         	goto	u890
   593   000F36                     u891:
   594   000F36  EF93  F007         	goto	l1742
   595   000F3A                     u890:
   596   000F3A                     
   597                           ;src/main.c: 23:             uint8_t x = UART_Rx();
   598   000F3A  EC3E  F008         	call	_UART_Rx	;wreg free
   599   000F3E  6E40               	movwf	main@x^0,c
   600   000F40                     
   601                           ;src/main.c: 24:             UART_Tx(x);
   602   000F40  5040               	movf	main@x^0,w,c
   603   000F42  EC33  F008         	call	_UART_Tx
   604   000F46  EF93  F007         	goto	l1742
   605   000F4A  EF00  F000         	goto	start
   606   000F4E                     __end_of_main:
   607                           	callstack 0
   608                           
   609 ;; *************** function _UART_RxAvailable *****************
   610 ;; Defined at:
   611 ;;		line 111 in file "src/librerias/UART.c"
   612 ;; Parameters:    Size  Location     Type
   613 ;;		None
   614 ;; Auto vars:     Size  Location     Type
   615 ;;		None
   616 ;; Return value:  Size  Location     Type
   617 ;;                  1    wreg      _Bool 
   618 ;; Registers used:
   619 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   620 ;; Tracked objects:
   621 ;;		On entry : 0/0
   622 ;;		On exit  : 0/0
   623 ;;		Unchanged: 0/0
   624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   625 ;;      Params:         0       0       0       0       0       0       0       0       0
   626 ;;      Locals:         0       0       0       0       0       0       0       0       0
   627 ;;      Temps:          0       0       0       0       0       0       0       0       0
   628 ;;      Totals:         0       0       0       0       0       0       0       0       0
   629 ;;Total ram usage:        0 bytes
   630 ;; Hardware stack levels used: 1
   631 ;; Hardware stack levels required when called: 7
   632 ;; This function calls:
   633 ;;		_UART_ErrorHandler
   634 ;; This function is called by:
   635 ;;		_main
   636 ;; This function uses a non-reentrant model
   637 ;;
   638                           
   639                           	psect	text1
   640   000F90                     __ptext1:
   641                           	callstack 0
   642   000F90                     _UART_RxAvailable:
   643                           	callstack 23
   644   000F90                     
   645                           ;src/librerias/UART.c: 112:     if (!RCSTAbits.SPEN || !RCSTAbits.CREN){
   646   000F90  AEAB               	btfss	171,7,c	;volatile
   647   000F92  EFCD  F007         	goto	u861
   648   000F96  EFCF  F007         	goto	u860
   649   000F9A                     u861:
   650   000F9A  EFD6  F007         	goto	l1718
   651   000F9E                     u860:
   652   000F9E  B8AB               	btfsc	171,4,c	;volatile
   653   000FA0  EFD4  F007         	goto	u871
   654   000FA4  EFD6  F007         	goto	u870
   655   000FA8                     u871:
   656   000FA8  EFDC  F007         	goto	l131
   657   000FAC                     u870:
   658   000FAC                     l1718:
   659                           
   660                           ;src/librerias/UART.c: 113:         UART_ErrorHandler(ERROR_CODE_UART_CONFIG);
   661   000FAC  0E03               	movlw	3
   662   000FAE  EC0F  F007         	call	_UART_ErrorHandler
   663   000FB2                     l1720:
   664                           
   665                           ;src/librerias/UART.c: 114:         return 0;
   666   000FB2  0E00               	movlw	0
   667   000FB4  EFE6  F007         	goto	l134
   668   000FB8                     l131:
   669                           
   670                           ;src/librerias/UART.c: 116:     if (!RC1IF){
   671   000FB8  BA9E               	btfsc	3998,5,c	;volatile
   672   000FBA  EFE1  F007         	goto	u881
   673   000FBE  EFE3  F007         	goto	u880
   674   000FC2                     u881:
   675   000FC2  EFE5  F007         	goto	l1728
   676   000FC6                     u880:
   677   000FC6  EFD9  F007         	goto	l1720
   678   000FCA                     l1728:
   679                           
   680                           ;src/librerias/UART.c: 119:     return 1;
   681   000FCA  0E01               	movlw	1
   682   000FCC                     l134:
   683   000FCC  0012               	return		;funcret
   684   000FCE                     __end_of_UART_RxAvailable:
   685                           	callstack 0
   686                           
   687 ;; *************** function _UART_Rx *****************
   688 ;; Defined at:
   689 ;;		line 105 in file "src/librerias/UART.c"
   690 ;; Parameters:    Size  Location     Type
   691 ;;		None
   692 ;; Auto vars:     Size  Location     Type
   693 ;;		None
   694 ;; Return value:  Size  Location     Type
   695 ;;                  1    wreg      unsigned char 
   696 ;; Registers used:
   697 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   698 ;; Tracked objects:
   699 ;;		On entry : 0/0
   700 ;;		On exit  : 0/0
   701 ;;		Unchanged: 0/0
   702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   703 ;;      Params:         0       0       0       0       0       0       0       0       0
   704 ;;      Locals:         0       0       0       0       0       0       0       0       0
   705 ;;      Temps:          0       0       0       0       0       0       0       0       0
   706 ;;      Totals:         0       0       0       0       0       0       0       0       0
   707 ;;Total ram usage:        0 bytes
   708 ;; Hardware stack levels used: 1
   709 ;; Hardware stack levels required when called: 7
   710 ;; This function calls:
   711 ;;		_UART_ErrorHandler
   712 ;;		_UART_Rx_FRAMING
   713 ;;		_UART_Rx_OVERFLOW
   714 ;; This function is called by:
   715 ;;		_main
   716 ;; This function uses a non-reentrant model
   717 ;;
   718                           
   719                           	psect	text2
   720   00107C                     __ptext2:
   721                           	callstack 0
   722   00107C                     _UART_Rx:
   723                           	callstack 23
   724   00107C                     
   725                           ;src/librerias/UART.c: 106:     UART_ErrorHandler(UART_Rx_OVERFLOW());
   726   00107C  EC00  F008         	call	_UART_Rx_OVERFLOW	;wreg free
   727   001080  EC0F  F007         	call	_UART_ErrorHandler
   728                           
   729                           ;src/librerias/UART.c: 107:     UART_ErrorHandler(UART_Rx_FRAMING());
   730   001084  EC0E  F008         	call	_UART_Rx_FRAMING	;wreg free
   731   001088  EC0F  F007         	call	_UART_ErrorHandler
   732   00108C                     
   733                           ;src/librerias/UART.c: 108:     return RCREG1;
   734   00108C  50AE               	movf	174,w,c	;volatile
   735   00108E  0012               	return		;funcret
   736   001090                     __end_of_UART_Rx:
   737                           	callstack 0
   738                           
   739 ;; *************** function _UART_Rx_OVERFLOW *****************
   740 ;; Defined at:
   741 ;;		line 88 in file "src/librerias/UART.c"
   742 ;; Parameters:    Size  Location     Type
   743 ;;		None
   744 ;; Auto vars:     Size  Location     Type
   745 ;;		None
   746 ;; Return value:  Size  Location     Type
   747 ;;                  1    wreg      enum E5188
   748 ;; Registers used:
   749 ;;		wreg
   750 ;; Tracked objects:
   751 ;;		On entry : 0/0
   752 ;;		On exit  : 0/0
   753 ;;		Unchanged: 0/0
   754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   755 ;;      Params:         0       0       0       0       0       0       0       0       0
   756 ;;      Locals:         0       0       0       0       0       0       0       0       0
   757 ;;      Temps:          0       0       0       0       0       0       0       0       0
   758 ;;      Totals:         0       0       0       0       0       0       0       0       0
   759 ;;Total ram usage:        0 bytes
   760 ;; Hardware stack levels used: 1
   761 ;; This function calls:
   762 ;;		Nothing
   763 ;; This function is called by:
   764 ;;		_UART_Rx
   765 ;; This function uses a non-reentrant model
   766 ;;
   767                           
   768                           	psect	text3
   769   001000                     __ptext3:
   770                           	callstack 0
   771   001000                     _UART_Rx_OVERFLOW:
   772                           	callstack 29
   773   001000                     
   774                           ;src/librerias/UART.c: 89:     if (RCSTAbits.OERR) {
   775   001000  A2AB               	btfss	171,1,c	;volatile
   776   001002  EF05  F008         	goto	u141
   777   001006  EF07  F008         	goto	u140
   778   00100A                     u141:
   779   00100A  EF0C  F008         	goto	l1072
   780   00100E                     u140:
   781   00100E                     
   782                           ;src/librerias/UART.c: 90:         RCSTAbits.CREN = 0;
   783   00100E  98AB               	bcf	171,4,c	;volatile
   784                           
   785                           ;src/librerias/UART.c: 91:         RCSTAbits.CREN = 1;
   786   001010  88AB               	bsf	171,4,c	;volatile
   787   001012                     
   788                           ;src/librerias/UART.c: 92:         return ERROR_CODE_UART_OVERFLOW;
   789   001012  0E01               	movlw	1
   790   001014  EF0D  F008         	goto	l121
   791   001018                     l1072:
   792                           
   793                           ;src/librerias/UART.c: 94:     return ERROR_CODE_UART_OK;
   794   001018  0E00               	movlw	0
   795   00101A                     l121:
   796   00101A  0012               	return		;funcret
   797   00101C                     __end_of_UART_Rx_OVERFLOW:
   798                           	callstack 0
   799                           
   800 ;; *************** function _UART_Rx_FRAMING *****************
   801 ;; Defined at:
   802 ;;		line 97 in file "src/librerias/UART.c"
   803 ;; Parameters:    Size  Location     Type
   804 ;;		None
   805 ;; Auto vars:     Size  Location     Type
   806 ;;  dummy           1    0        unsigned char 
   807 ;; Return value:  Size  Location     Type
   808 ;;                  1    wreg      enum E5188
   809 ;; Registers used:
   810 ;;		wreg
   811 ;; Tracked objects:
   812 ;;		On entry : 0/0
   813 ;;		On exit  : 0/0
   814 ;;		Unchanged: 0/0
   815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   816 ;;      Params:         0       0       0       0       0       0       0       0       0
   817 ;;      Locals:         0       0       0       0       0       0       0       0       0
   818 ;;      Temps:          0       0       0       0       0       0       0       0       0
   819 ;;      Totals:         0       0       0       0       0       0       0       0       0
   820 ;;Total ram usage:        0 bytes
   821 ;; Hardware stack levels used: 1
   822 ;; This function calls:
   823 ;;		Nothing
   824 ;; This function is called by:
   825 ;;		_UART_Rx
   826 ;; This function uses a non-reentrant model
   827 ;;
   828                           
   829                           	psect	text4
   830   00101C                     __ptext4:
   831                           	callstack 0
   832   00101C                     _UART_Rx_FRAMING:
   833                           	callstack 29
   834   00101C                     
   835                           ;src/librerias/UART.c: 98:     if (RCSTAbits.FERR) {
   836   00101C  A4AB               	btfss	171,2,c	;volatile
   837   00101E  EF13  F008         	goto	u151
   838   001022  EF15  F008         	goto	u150
   839   001026                     u151:
   840   001026  EF19  F008         	goto	l1084
   841   00102A                     u150:
   842   00102A  50AE               	movf	174,w,c	;volatile
   843   00102C                     
   844                           ;src/librerias/UART.c: 100:         return ERROR_CODE_UART_FRAMING;
   845   00102C  0E02               	movlw	2
   846   00102E  EF1A  F008         	goto	l125
   847   001032                     l1084:
   848                           
   849                           ;src/librerias/UART.c: 102:     return ERROR_CODE_UART_OK;
   850   001032  0E00               	movlw	0
   851   001034                     l125:
   852   001034  0012               	return		;funcret
   853   001036                     __end_of_UART_Rx_FRAMING:
   854                           	callstack 0
   855                           
   856 ;; *************** function _UART_ErrorHandler *****************
   857 ;; Defined at:
   858 ;;		line 122 in file "src/librerias/UART.c"
   859 ;; Parameters:    Size  Location     Type
   860 ;;  errorCode       1    wreg     enum E5188
   861 ;; Auto vars:     Size  Location     Type
   862 ;;  errorCode       1   24[COMRAM] enum E5188
   863 ;; Return value:  Size  Location     Type
   864 ;;                  1    wreg      void 
   865 ;; Registers used:
   866 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   867 ;; Tracked objects:
   868 ;;		On entry : 0/0
   869 ;;		On exit  : 0/0
   870 ;;		Unchanged: 0/0
   871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   872 ;;      Params:         0       0       0       0       0       0       0       0       0
   873 ;;      Locals:         1       0       0       0       0       0       0       0       0
   874 ;;      Temps:          2       0       0       0       0       0       0       0       0
   875 ;;      Totals:         3       0       0       0       0       0       0       0       0
   876 ;;Total ram usage:        3 bytes
   877 ;; Hardware stack levels used: 1
   878 ;; Hardware stack levels required when called: 6
   879 ;; This function calls:
   880 ;;		_printf
   881 ;; This function is called by:
   882 ;;		_UART_Rx
   883 ;;		_UART_RxAvailable
   884 ;; This function uses a non-reentrant model
   885 ;;
   886                           
   887                           	psect	text5
   888   000E1E                     __ptext5:
   889                           	callstack 0
   890   000E1E                     _UART_ErrorHandler:
   891                           	callstack 23
   892                           
   893                           ;incstack = 0
   894                           ;UART_ErrorHandler@errorCode stored from wreg
   895   000E1E  6E3E               	movwf	UART_ErrorHandler@errorCode^0,c
   896   000E20                     
   897                           ;src/librerias/UART.c: 123:     if(errorCode == ERROR_CODE_UART_OK) return;
   898   000E20  503E               	movf	UART_ErrorHandler@errorCode^0,w,c
   899   000E22  A4D8               	btfss	status,2,c
   900   000E24  EF16  F007         	goto	u591
   901   000E28  EF18  F007         	goto	u590
   902   000E2C                     u591:
   903   000E2C  EF1A  F007         	goto	l1606
   904   000E30                     u590:
   905   000E30  EF4B  F007         	goto	l139
   906   000E34                     l1606:
   907                           
   908                           ;src/librerias/UART.c: 124:     printf("Error: ");
   909   000E34  0EE7               	movlw	low STR_19
   910   000E36  6E3A               	movwf	printf@fmt^0,c
   911   000E38  EC1B  F008         	call	_printf	;wreg free
   912                           
   913                           ;src/librerias/UART.c: 125:     switch(errorCode){
   914   000E3C  EF32  F007         	goto	l1616
   915   000E40                     l1608:
   916                           
   917                           ;src/librerias/UART.c: 127:             printf("ERROR_CODE_UART_OVERFLOW\r\n");
   918   000E40  0E01               	movlw	low STR_20
   919   000E42  6E3A               	movwf	printf@fmt^0,c
   920   000E44  EC1B  F008         	call	_printf	;wreg free
   921                           
   922                           ;src/librerias/UART.c: 128:         break;
   923   000E48  EF4B  F007         	goto	l139
   924   000E4C                     l1610:
   925                           
   926                           ;src/librerias/UART.c: 130:             printf("ERROR_CODE_UART_FRAMING\r\n");
   927   000E4C  0E36               	movlw	low STR_21
   928   000E4E  6E3A               	movwf	printf@fmt^0,c
   929   000E50  EC1B  F008         	call	_printf	;wreg free
   930                           
   931                           ;src/librerias/UART.c: 131:         break;
   932   000E54  EF4B  F007         	goto	l139
   933   000E58                     l1612:
   934                           
   935                           ;src/librerias/UART.c: 133:             printf("ERROR_CODE_UART_CONFIG \r\n");
   936   000E58  0E1C               	movlw	low STR_22
   937   000E5A  6E3A               	movwf	printf@fmt^0,c
   938   000E5C  EC1B  F008         	call	_printf	;wreg free
   939                           
   940                           ;src/librerias/UART.c: 134:         break;
   941   000E60  EF4B  F007         	goto	l139
   942   000E64                     l1616:
   943   000E64  503E               	movf	UART_ErrorHandler@errorCode^0,w,c
   944   000E66  6E3C               	movwf	??_UART_ErrorHandler^0,c
   945   000E68  6A3D               	clrf	(??_UART_ErrorHandler+1)^0,c
   946                           
   947                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   948                           ; Switch size 1, requested type "simple"
   949                           ; Number of cases is 1, Range of values is 0 to 0
   950                           ; switch strategies available:
   951                           ; Name         Instructions Cycles
   952                           ; simple_byte            4     3 (average)
   953                           ;	Chosen strategy is simple_byte
   954   000E6A  503D               	movf	(??_UART_ErrorHandler+1)^0,w,c
   955   000E6C  0A00               	xorlw	0	; case 0
   956   000E6E  B4D8               	btfsc	status,2,c
   957   000E70  EF3C  F007         	goto	l1968
   958   000E74  EF4B  F007         	goto	l139
   959   000E78                     l1968:
   960                           
   961                           ; Switch size 1, requested type "simple"
   962                           ; Number of cases is 3, Range of values is 1 to 3
   963                           ; switch strategies available:
   964                           ; Name         Instructions Cycles
   965                           ; simple_byte           10     6 (average)
   966                           ;	Chosen strategy is simple_byte
   967   000E78  503C               	movf	??_UART_ErrorHandler^0,w,c
   968   000E7A  0A01               	xorlw	1	; case 1
   969   000E7C  B4D8               	btfsc	status,2,c
   970   000E7E  EF20  F007         	goto	l1608
   971   000E82  0A03               	xorlw	3	; case 2
   972   000E84  B4D8               	btfsc	status,2,c
   973   000E86  EF26  F007         	goto	l1610
   974   000E8A  0A01               	xorlw	1	; case 3
   975   000E8C  B4D8               	btfsc	status,2,c
   976   000E8E  EF2C  F007         	goto	l1612
   977   000E92  EF4B  F007         	goto	l139
   978   000E96                     l139:
   979   000E96  0012               	return		;funcret
   980   000E98                     __end_of_UART_ErrorHandler:
   981                           	callstack 0
   982                           
   983 ;; *************** function _UART_Init *****************
   984 ;; Defined at:
   985 ;;		line 28 in file "src/librerias/UART.c"
   986 ;; Parameters:    Size  Location     Type
   987 ;;  baudrate        4   22[COMRAM] unsigned long 
   988 ;; Auto vars:     Size  Location     Type
   989 ;;		None
   990 ;; Return value:  Size  Location     Type
   991 ;;                  1    wreg      void 
   992 ;; Registers used:
   993 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   994 ;; Tracked objects:
   995 ;;		On entry : 0/0
   996 ;;		On exit  : 0/0
   997 ;;		Unchanged: 0/0
   998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   999 ;;      Params:         4       0       0       0       0       0       0       0       0
  1000 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1001 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1002 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1003 ;;Total ram usage:        4 bytes
  1004 ;; Hardware stack levels used: 1
  1005 ;; Hardware stack levels required when called: 7
  1006 ;; This function calls:
  1007 ;;		_UART_config_show
  1008 ;;		_UART_select_baud
  1009 ;; This function is called by:
  1010 ;;		_main
  1011 ;; This function uses a non-reentrant model
  1012 ;;
  1013                           
  1014                           	psect	text6
  1015   000FCE                     __ptext6:
  1016                           	callstack 0
  1017   000FCE                     _UART_Init:
  1018                           	callstack 23
  1019   000FCE                     
  1020                           ;src/librerias/UART.c: 29:     TXSTA1bits.SYNC1 = 0;
  1021   000FCE  98AC               	bcf	172,4,c	;volatile
  1022                           
  1023                           ;src/librerias/UART.c: 30:     TXSTA1bits.BRGH1 = 1;
  1024   000FD0  84AC               	bsf	172,2,c	;volatile
  1025   000FD2                     
  1026                           ;src/librerias/UART.c: 31:     BAUDCON1 = 0x4A;
  1027   000FD2  0E4A               	movlw	74
  1028   000FD4  6EB8               	movwf	184,c	;volatile
  1029   000FD6                     
  1030                           ;src/librerias/UART.c: 32:     UART_select_baud(baudrate);
  1031   000FD6  C03C  F026         	movff	UART_Init@baudrate,UART_select_baud@baudrate
  1032   000FDA  C03D  F027         	movff	UART_Init@baudrate+1,UART_select_baud@baudrate+1
  1033   000FDE  C03E  F028         	movff	UART_Init@baudrate+2,UART_select_baud@baudrate+2
  1034   000FE2  C03F  F029         	movff	UART_Init@baudrate+3,UART_select_baud@baudrate+3
  1035   000FE6  EC8B  F005         	call	_UART_select_baud	;wreg free
  1036   000FEA                     
  1037                           ;src/librerias/UART.c: 33:     TRISC6 = 1;
  1038   000FEA  8C94               	bsf	3988,6,c	;volatile
  1039   000FEC                     
  1040                           ;src/librerias/UART.c: 34:     TRISC7 = 1;
  1041   000FEC  8E94               	bsf	3988,7,c	;volatile
  1042   000FEE                     
  1043                           ;src/librerias/UART.c: 35:     RCSTAbits.SPEN = 1;
  1044   000FEE  8EAB               	bsf	171,7,c	;volatile
  1045   000FF0                     
  1046                           ;src/librerias/UART.c: 36:     TXSTAbits.TXEN1 = 1;
  1047   000FF0  8AAC               	bsf	172,5,c	;volatile
  1048   000FF2                     
  1049                           ;src/librerias/UART.c: 37:     RCSTAbits.CREN = 1;
  1050   000FF2  88AB               	bsf	171,4,c	;volatile
  1051   000FF4                     
  1052                           ;src/librerias/UART.c: 38:     UART_config_show();
  1053   000FF4  EC2B  F006         	call	_UART_config_show	;wreg free
  1054   000FF8                     
  1055                           ;src/librerias/UART.c: 39:     ANSELC = 0x0;
  1056   000FF8  0E00               	movlw	0
  1057   000FFA  010F               	movlb	15	; () banked
  1058   000FFC  6F5D               	movwf	93,b	;volatile
  1059   000FFE                     
  1060                           ; BSR set to: 15
  1061   000FFE  0012               	return		;funcret
  1062   001000                     __end_of_UART_Init:
  1063                           	callstack 0
  1064                           
  1065 ;; *************** function _UART_select_baud *****************
  1066 ;; Defined at:
  1067 ;;		line 42 in file "src/librerias/UART.c"
  1068 ;; Parameters:    Size  Location     Type
  1069 ;;  baudrate        4    0[COMRAM] unsigned long 
  1070 ;; Auto vars:     Size  Location     Type
  1071 ;;		None
  1072 ;; Return value:  Size  Location     Type
  1073 ;;                  1    wreg      void 
  1074 ;; Registers used:
  1075 ;;		wreg, status,2, status,0
  1076 ;; Tracked objects:
  1077 ;;		On entry : 0/0
  1078 ;;		On exit  : 0/0
  1079 ;;		Unchanged: 0/0
  1080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1081 ;;      Params:         4       0       0       0       0       0       0       0       0
  1082 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1083 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1084 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1085 ;;Total ram usage:        8 bytes
  1086 ;; Hardware stack levels used: 1
  1087 ;; This function calls:
  1088 ;;		Nothing
  1089 ;; This function is called by:
  1090 ;;		_UART_Init
  1091 ;; This function uses a non-reentrant model
  1092 ;;
  1093                           
  1094                           	psect	text7
  1095   000B16                     __ptext7:
  1096                           	callstack 0
  1097   000B16                     _UART_select_baud:
  1098                           	callstack 29
  1099   000B16                     
  1100                           ;src/librerias/UART.c: 43:     switch (baudrate){
  1101   000B16  EFBD  F005         	goto	l1560
  1102   000B1A                     l1542:
  1103                           
  1104                           ;src/librerias/UART.c: 45:             SPBRGH = 0x9C;
  1105   000B1A  0E9C               	movlw	156
  1106   000B1C  6EB0               	movwf	176,c	;volatile
  1107                           
  1108                           ;src/librerias/UART.c: 46:             SPBRG = 0x3F;
  1109   000B1E  0E3F               	movlw	63
  1110   000B20  6EAF               	movwf	175,c	;volatile
  1111                           
  1112                           ;src/librerias/UART.c: 47:             break;
  1113   000B22  EF2A  F006         	goto	l108
  1114   000B26                     l1544:
  1115                           
  1116                           ;src/librerias/UART.c: 49:             SPBRGH = 0x27;
  1117   000B26  0E27               	movlw	39
  1118   000B28  6EB0               	movwf	176,c	;volatile
  1119                           
  1120                           ;src/librerias/UART.c: 50:             SPBRG = 0x0F;
  1121   000B2A  0E0F               	movlw	15
  1122   000B2C  6EAF               	movwf	175,c	;volatile
  1123                           
  1124                           ;src/librerias/UART.c: 51:             break;
  1125   000B2E  EF2A  F006         	goto	l108
  1126   000B32                     l1546:
  1127                           
  1128                           ;src/librerias/UART.c: 53:             SPBRGH = 0x13;
  1129   000B32  0E13               	movlw	19
  1130   000B34  6EB0               	movwf	176,c	;volatile
  1131                           
  1132                           ;src/librerias/UART.c: 54:             SPBRG = 0x87;
  1133   000B36  0E87               	movlw	135
  1134   000B38  6EAF               	movwf	175,c	;volatile
  1135                           
  1136                           ;src/librerias/UART.c: 55:             break;
  1137   000B3A  EF2A  F006         	goto	l108
  1138   000B3E                     l1548:
  1139                           
  1140                           ;src/librerias/UART.c: 57:             SPBRGH = 0x04;
  1141   000B3E  0E04               	movlw	4
  1142   000B40  6EB0               	movwf	176,c	;volatile
  1143                           
  1144                           ;src/librerias/UART.c: 58:             SPBRG = 0x7F;
  1145   000B42  0E7F               	movlw	127
  1146   000B44  6EAF               	movwf	175,c	;volatile
  1147                           
  1148                           ;src/librerias/UART.c: 59:             break;
  1149   000B46  EF2A  F006         	goto	l108
  1150   000B4A                     l1550:
  1151                           
  1152                           ;src/librerias/UART.c: 61:             SPBRGH = 0x02;
  1153   000B4A  0E02               	movlw	2
  1154   000B4C  6EB0               	movwf	176,c	;volatile
  1155                           
  1156                           ;src/librerias/UART.c: 62:             SPBRG = 0x70;
  1157   000B4E  0E70               	movlw	112
  1158   000B50  6EAF               	movwf	175,c	;volatile
  1159                           
  1160                           ;src/librerias/UART.c: 63:             break;
  1161   000B52  EF2A  F006         	goto	l108
  1162   000B56                     l1552:
  1163                           
  1164                           ;src/librerias/UART.c: 65:             SPBRGH = 0x00;
  1165   000B56  0E00               	movlw	0
  1166   000B58  6EB0               	movwf	176,c	;volatile
  1167                           
  1168                           ;src/librerias/UART.c: 66:             SPBRG = 0xCF;
  1169   000B5A  0ECF               	movlw	207
  1170   000B5C  6EAF               	movwf	175,c	;volatile
  1171                           
  1172                           ;src/librerias/UART.c: 67:             break;
  1173   000B5E  EF2A  F006         	goto	l108
  1174   000B62                     l1554:
  1175                           
  1176                           ;src/librerias/UART.c: 69:             SPBRGH = 0x00;
  1177   000B62  0E00               	movlw	0
  1178   000B64  6EB0               	movwf	176,c	;volatile
  1179                           
  1180                           ;src/librerias/UART.c: 70:             SPBRG = 0x67;
  1181   000B66  0E67               	movlw	103
  1182   000B68  6EAF               	movwf	175,c	;volatile
  1183                           
  1184                           ;src/librerias/UART.c: 71:             break;
  1185   000B6A  EF2A  F006         	goto	l108
  1186   000B6E                     l1556:
  1187                           
  1188                           ;src/librerias/UART.c: 73:             SPBRGH = 0x04;
  1189   000B6E  0E04               	movlw	4
  1190   000B70  6EB0               	movwf	176,c	;volatile
  1191                           
  1192                           ;src/librerias/UART.c: 74:             SPBRG = 0xE1;
  1193   000B72  0EE1               	movlw	225
  1194   000B74  6EAF               	movwf	175,c	;volatile
  1195                           
  1196                           ;src/librerias/UART.c: 75:             break;
  1197   000B76  EF2A  F006         	goto	l108
  1198   000B7A                     l1560:
  1199   000B7A  C026  F02A         	movff	UART_select_baud@baudrate,??_UART_select_baud
  1200   000B7E  C027  F02B         	movff	UART_select_baud@baudrate+1,??_UART_select_baud+1
  1201   000B82  C028  F02C         	movff	UART_select_baud@baudrate+2,??_UART_select_baud+2
  1202   000B86  C029  F02D         	movff	UART_select_baud@baudrate+3,??_UART_select_baud+3
  1203                           
  1204                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 3 sub-sw
      +                          itches
  1205                           ; Switch size 1, requested type "simple"
  1206                           ; Number of cases is 1, Range of values is 0 to 0
  1207                           ; switch strategies available:
  1208                           ; Name         Instructions Cycles
  1209                           ; simple_byte            4     3 (average)
  1210                           ;	Chosen strategy is simple_byte
  1211   000B8A  502D               	movf	(??_UART_select_baud+3)^0,w,c
  1212   000B8C  0A00               	xorlw	0	; case 0
  1213   000B8E  B4D8               	btfsc	status,2,c
  1214   000B90  EF1F  F006         	goto	l1974
  1215   000B94  EFB7  F005         	goto	l1556
  1216   000B98                     l1970:
  1217                           
  1218                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 6 sub-sw
      +                          itches
  1219                           ; Switch size 1, requested type "simple"
  1220                           ; Number of cases is 6, Range of values is 1 to 225
  1221                           ; switch strategies available:
  1222                           ; Name         Instructions Cycles
  1223                           ; simple_byte           19    10 (average)
  1224                           ;	Chosen strategy is simple_byte
  1225   000B98  502B               	movf	(??_UART_select_baud+1)^0,w,c
  1226   000B9A  0A01               	xorlw	1	; case 1
  1227   000B9C  B4D8               	btfsc	status,2,c
  1228   000B9E  EFE7  F005         	goto	l1976
  1229   000BA2  0A05               	xorlw	5	; case 4
  1230   000BA4  B4D8               	btfsc	status,2,c
  1231   000BA6  EFEE  F005         	goto	l1978
  1232   000BAA  0A0D               	xorlw	13	; case 9
  1233   000BAC  B4D8               	btfsc	status,2,c
  1234   000BAE  EFF5  F005         	goto	l1980
  1235   000BB2  0A21               	xorlw	33	; case 40
  1236   000BB4  B4D8               	btfsc	status,2,c
  1237   000BB6  EFFC  F005         	goto	l1982
  1238   000BBA  0A63               	xorlw	99	; case 75
  1239   000BBC  B4D8               	btfsc	status,2,c
  1240   000BBE  EF03  F006         	goto	l1984
  1241   000BC2  0AAA               	xorlw	170	; case 225
  1242   000BC4  B4D8               	btfsc	status,2,c
  1243   000BC6  EF0A  F006         	goto	l1986
  1244   000BCA  EFB7  F005         	goto	l1556
  1245   000BCE                     l1976:
  1246                           
  1247                           ; Switch size 1, requested type "simple"
  1248                           ; Number of cases is 1, Range of values is 44 to 44
  1249                           ; switch strategies available:
  1250                           ; Name         Instructions Cycles
  1251                           ; simple_byte            4     3 (average)
  1252                           ;	Chosen strategy is simple_byte
  1253   000BCE  502A               	movf	??_UART_select_baud^0,w,c
  1254   000BD0  0A2C               	xorlw	44	; case 44
  1255   000BD2  B4D8               	btfsc	status,2,c
  1256   000BD4  EF8D  F005         	goto	l1542
  1257   000BD8  EFB7  F005         	goto	l1556
  1258   000BDC                     l1978:
  1259                           
  1260                           ; Switch size 1, requested type "simple"
  1261                           ; Number of cases is 1, Range of values is 176 to 176
  1262                           ; switch strategies available:
  1263                           ; Name         Instructions Cycles
  1264                           ; simple_byte            4     3 (average)
  1265                           ;	Chosen strategy is simple_byte
  1266   000BDC  502A               	movf	??_UART_select_baud^0,w,c
  1267   000BDE  0AB0               	xorlw	176	; case 176
  1268   000BE0  B4D8               	btfsc	status,2,c
  1269   000BE2  EF93  F005         	goto	l1544
  1270   000BE6  EFB7  F005         	goto	l1556
  1271   000BEA                     l1980:
  1272                           
  1273                           ; Switch size 1, requested type "simple"
  1274                           ; Number of cases is 1, Range of values is 96 to 96
  1275                           ; switch strategies available:
  1276                           ; Name         Instructions Cycles
  1277                           ; simple_byte            4     3 (average)
  1278                           ;	Chosen strategy is simple_byte
  1279   000BEA  502A               	movf	??_UART_select_baud^0,w,c
  1280   000BEC  0A60               	xorlw	96	; case 96
  1281   000BEE  B4D8               	btfsc	status,2,c
  1282   000BF0  EF99  F005         	goto	l1546
  1283   000BF4  EFB7  F005         	goto	l1556
  1284   000BF8                     l1982:
  1285                           
  1286                           ; Switch size 1, requested type "simple"
  1287                           ; Number of cases is 1, Range of values is 177 to 177
  1288                           ; switch strategies available:
  1289                           ; Name         Instructions Cycles
  1290                           ; simple_byte            4     3 (average)
  1291                           ;	Chosen strategy is simple_byte
  1292   000BF8  502A               	movf	??_UART_select_baud^0,w,c
  1293   000BFA  0AB1               	xorlw	177	; case 177
  1294   000BFC  B4D8               	btfsc	status,2,c
  1295   000BFE  EF9F  F005         	goto	l1548
  1296   000C02  EFB7  F005         	goto	l1556
  1297   000C06                     l1984:
  1298                           
  1299                           ; Switch size 1, requested type "simple"
  1300                           ; Number of cases is 1, Range of values is 0 to 0
  1301                           ; switch strategies available:
  1302                           ; Name         Instructions Cycles
  1303                           ; simple_byte            4     3 (average)
  1304                           ;	Chosen strategy is simple_byte
  1305   000C06  502A               	movf	??_UART_select_baud^0,w,c
  1306   000C08  0A00               	xorlw	0	; case 0
  1307   000C0A  B4D8               	btfsc	status,2,c
  1308   000C0C  EFA5  F005         	goto	l1550
  1309   000C10  EFB7  F005         	goto	l1556
  1310   000C14                     l1986:
  1311                           
  1312                           ; Switch size 1, requested type "simple"
  1313                           ; Number of cases is 1, Range of values is 0 to 0
  1314                           ; switch strategies available:
  1315                           ; Name         Instructions Cycles
  1316                           ; simple_byte            4     3 (average)
  1317                           ;	Chosen strategy is simple_byte
  1318   000C14  502A               	movf	??_UART_select_baud^0,w,c
  1319   000C16  0A00               	xorlw	0	; case 0
  1320   000C18  B4D8               	btfsc	status,2,c
  1321   000C1A  EFAB  F005         	goto	l1552
  1322   000C1E  EFB7  F005         	goto	l1556
  1323   000C22                     l1972:
  1324                           
  1325                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1326                           ; Switch size 1, requested type "simple"
  1327                           ; Number of cases is 1, Range of values is 194 to 194
  1328                           ; switch strategies available:
  1329                           ; Name         Instructions Cycles
  1330                           ; simple_byte            4     3 (average)
  1331                           ;	Chosen strategy is simple_byte
  1332   000C22  502B               	movf	(??_UART_select_baud+1)^0,w,c
  1333   000C24  0AC2               	xorlw	194	; case 194
  1334   000C26  B4D8               	btfsc	status,2,c
  1335   000C28  EF18  F006         	goto	l1988
  1336   000C2C  EFB7  F005         	goto	l1556
  1337   000C30                     l1988:
  1338                           
  1339                           ; Switch size 1, requested type "simple"
  1340                           ; Number of cases is 1, Range of values is 0 to 0
  1341                           ; switch strategies available:
  1342                           ; Name         Instructions Cycles
  1343                           ; simple_byte            4     3 (average)
  1344                           ;	Chosen strategy is simple_byte
  1345   000C30  502A               	movf	??_UART_select_baud^0,w,c
  1346   000C32  0A00               	xorlw	0	; case 0
  1347   000C34  B4D8               	btfsc	status,2,c
  1348   000C36  EFB1  F005         	goto	l1554
  1349   000C3A  EFB7  F005         	goto	l1556
  1350   000C3E                     l1974:
  1351                           
  1352                           ; Switch size 1, requested type "simple"
  1353                           ; Number of cases is 2, Range of values is 0 to 1
  1354                           ; switch strategies available:
  1355                           ; Name         Instructions Cycles
  1356                           ; simple_byte            7     4 (average)
  1357                           ;	Chosen strategy is simple_byte
  1358   000C3E  502C               	movf	(??_UART_select_baud+2)^0,w,c
  1359   000C40  0A00               	xorlw	0	; case 0
  1360   000C42  B4D8               	btfsc	status,2,c
  1361   000C44  EFCC  F005         	goto	l1970
  1362   000C48  0A01               	xorlw	1	; case 1
  1363   000C4A  B4D8               	btfsc	status,2,c
  1364   000C4C  EF11  F006         	goto	l1972
  1365   000C50  EFB7  F005         	goto	l1556
  1366   000C54                     l108:
  1367   000C54  0012               	return		;funcret
  1368   000C56                     __end_of_UART_select_baud:
  1369                           	callstack 0
  1370                           
  1371 ;; *************** function _UART_config_show *****************
  1372 ;; Defined at:
  1373 ;;		line 13 in file "src/librerias/UART.c"
  1374 ;; Parameters:    Size  Location     Type
  1375 ;;		None
  1376 ;; Auto vars:     Size  Location     Type
  1377 ;;		None
  1378 ;; Return value:  Size  Location     Type
  1379 ;;                  1    wreg      void 
  1380 ;; Registers used:
  1381 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1382 ;; Tracked objects:
  1383 ;;		On entry : 0/0
  1384 ;;		On exit  : 0/0
  1385 ;;		Unchanged: 0/0
  1386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1387 ;;      Params:         0       0       0       0       0       0       0       0       0
  1388 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1389 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1390 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1391 ;;Total ram usage:        0 bytes
  1392 ;; Hardware stack levels used: 1
  1393 ;; Hardware stack levels required when called: 6
  1394 ;; This function calls:
  1395 ;;		_printf
  1396 ;; This function is called by:
  1397 ;;		_UART_Init
  1398 ;; This function uses a non-reentrant model
  1399 ;;
  1400                           
  1401                           	psect	text8
  1402   000C56                     __ptext8:
  1403                           	callstack 0
  1404   000C56                     _UART_config_show:
  1405                           	callstack 23
  1406   000C56                     
  1407                           ;src/librerias/UART.c: 14:     printf("Modo: ");
  1408   000C56  0EF7               	movlw	low STR_1
  1409   000C58  6E3A               	movwf	printf@fmt^0,c
  1410   000C5A  EC1B  F008         	call	_printf	;wreg free
  1411   000C5E                     
  1412                           ;src/librerias/UART.c: 15:     (SYNC1) ? printf("Sincrono "):printf("Asincrono ");
  1413   000C5E  A8AC               	btfss	4012,4,c	;volatile
  1414   000C60  EF34  F006         	goto	u531
  1415   000C64  EF36  F006         	goto	u530
  1416   000C68                     u531:
  1417   000C68  EF3C  F006         	goto	l1508
  1418   000C6C                     u530:
  1419   000C6C  0ECB               	movlw	low STR_2
  1420   000C6E  6E3A               	movwf	printf@fmt^0,c
  1421   000C70  EC1B  F008         	call	_printf	;wreg free
  1422   000C74  EF40  F006         	goto	l1510
  1423   000C78                     l1508:
  1424   000C78  0EB6               	movlw	low STR_3
  1425   000C7A  6E3A               	movwf	printf@fmt^0,c
  1426   000C7C  EC1B  F008         	call	_printf	;wreg free
  1427   000C80                     l1510:
  1428                           
  1429                           ;src/librerias/UART.c: 16:     (BRGH1) ? printf("alta velocidad \r\n"):printf("baja velo
      +                          cidad \r\n");
  1430   000C80  A4AC               	btfss	4012,2,c	;volatile
  1431   000C82  EF45  F006         	goto	u541
  1432   000C86  EF47  F006         	goto	u540
  1433   000C8A                     u541:
  1434   000C8A  EF4D  F006         	goto	l1514
  1435   000C8E                     u540:
  1436   000C8E  0E62               	movlw	low STR_4
  1437   000C90  6E3A               	movwf	printf@fmt^0,c
  1438   000C92  EC1B  F008         	call	_printf	;wreg free
  1439   000C96  EF51  F006         	goto	l75
  1440   000C9A                     l1514:
  1441   000C9A  0E50               	movlw	low STR_5
  1442   000C9C  6E3A               	movwf	printf@fmt^0,c
  1443   000C9E  EC1B  F008         	call	_printf	;wreg free
  1444   000CA2                     l75:
  1445                           
  1446                           ;src/librerias/UART.c: 17:     printf("Baudrate: ");
  1447   000CA2  0EA0               	movlw	low STR_6
  1448   000CA4  6E3A               	movwf	printf@fmt^0,c
  1449   000CA6  EC1B  F008         	call	_printf	;wreg free
  1450   000CAA                     
  1451                           ;src/librerias/UART.c: 18:     (BRG161) ? printf("16 bits "):printf("8 bits ");
  1452   000CAA  A6B8               	btfss	4024,3,c	;volatile
  1453   000CAC  EF5A  F006         	goto	u551
  1454   000CB0  EF5C  F006         	goto	u550
  1455   000CB4                     u551:
  1456   000CB4  EF62  F006         	goto	l1520
  1457   000CB8                     u550:
  1458   000CB8  0EDE               	movlw	low STR_7
  1459   000CBA  6E3A               	movwf	printf@fmt^0,c
  1460   000CBC  EC1B  F008         	call	_printf	;wreg free
  1461   000CC0  EF66  F006         	goto	l79
  1462   000CC4                     l1520:
  1463   000CC4  0EEF               	movlw	low STR_8
  1464   000CC6  6E3A               	movwf	printf@fmt^0,c
  1465   000CC8  EC1B  F008         	call	_printf	;wreg free
  1466   000CCC                     l79:
  1467                           
  1468                           ;src/librerias/UART.c: 19:     printf("x baudios \r\n");
  1469   000CCC  0E93               	movlw	low STR_9
  1470   000CCE  6E3A               	movwf	printf@fmt^0,c
  1471   000CD0  EC1B  F008         	call	_printf	;wreg free
  1472                           
  1473                           ;src/librerias/UART.c: 20:     printf("Puerto: ");
  1474   000CD4  0ED5               	movlw	low STR_10
  1475   000CD6  6E3A               	movwf	printf@fmt^0,c
  1476   000CD8  EC1B  F008         	call	_printf	;wreg free
  1477   000CDC                     
  1478                           ;src/librerias/UART.c: 21:     (SPEN) ? printf("Habilitado \r\n"):printf("Deshabilitado 
      +                          \r\n");
  1479   000CDC  AEAB               	btfss	4011,7,c	;volatile
  1480   000CDE  EF73  F006         	goto	u561
  1481   000CE2  EF75  F006         	goto	u560
  1482   000CE6                     u561:
  1483   000CE6  EF7B  F006         	goto	l1526
  1484   000CEA                     u560:
  1485   000CEA  0E85               	movlw	low STR_11
  1486   000CEC  6E3A               	movwf	printf@fmt^0,c
  1487   000CEE  EC1B  F008         	call	_printf	;wreg free
  1488   000CF2  EF7F  F006         	goto	l83
  1489   000CF6                     l1526:
  1490   000CF6  0E74               	movlw	low STR_12
  1491   000CF8  6E3A               	movwf	printf@fmt^0,c
  1492   000CFA  EC1B  F008         	call	_printf	;wreg free
  1493   000CFE                     l83:
  1494                           
  1495                           ;src/librerias/UART.c: 22:     printf("Transor: ");
  1496   000CFE  0EC1               	movlw	low STR_13
  1497   000D00  6E3A               	movwf	printf@fmt^0,c
  1498   000D02  EC1B  F008         	call	_printf	;wreg free
  1499   000D06                     
  1500                           ;src/librerias/UART.c: 23:     (TXEN1) ? printf("Habilitado \r\n"):printf("Deshabilitado
      +                           \r\n");
  1501   000D06  AAAC               	btfss	4012,5,c	;volatile
  1502   000D08  EF88  F006         	goto	u571
  1503   000D0C  EF8A  F006         	goto	u570
  1504   000D10                     u571:
  1505   000D10  EF90  F006         	goto	l1532
  1506   000D14                     u570:
  1507   000D14  0E85               	movlw	low STR_11
  1508   000D16  6E3A               	movwf	printf@fmt^0,c
  1509   000D18  EC1B  F008         	call	_printf	;wreg free
  1510   000D1C  EF94  F006         	goto	l87
  1511   000D20                     l1532:
  1512   000D20  0E74               	movlw	low STR_12
  1513   000D22  6E3A               	movwf	printf@fmt^0,c
  1514   000D24  EC1B  F008         	call	_printf	;wreg free
  1515   000D28                     l87:
  1516                           
  1517                           ;src/librerias/UART.c: 24:     printf("Receptor: ");
  1518   000D28  0EAB               	movlw	low STR_16
  1519   000D2A  6E3A               	movwf	printf@fmt^0,c
  1520   000D2C  EC1B  F008         	call	_printf	;wreg free
  1521   000D30                     
  1522                           ;src/librerias/UART.c: 25:     (CREN) ? printf("Habilitado \r\n"):printf("Deshabilitado 
      +                          \r\n");
  1523   000D30  A8AB               	btfss	4011,4,c	;volatile
  1524   000D32  EF9D  F006         	goto	u581
  1525   000D36  EF9F  F006         	goto	u580
  1526   000D3A                     u581:
  1527   000D3A  EFA5  F006         	goto	l1538
  1528   000D3E                     u580:
  1529   000D3E  0E85               	movlw	low STR_11
  1530   000D40  6E3A               	movwf	printf@fmt^0,c
  1531   000D42  EC1B  F008         	call	_printf	;wreg free
  1532   000D46  EFA9  F006         	goto	l92
  1533   000D4A                     l1538:
  1534   000D4A  0E74               	movlw	low STR_12
  1535   000D4C  6E3A               	movwf	printf@fmt^0,c
  1536   000D4E  EC1B  F008         	call	_printf	;wreg free
  1537   000D52                     l92:
  1538   000D52  0012               	return		;funcret
  1539   000D54                     __end_of_UART_config_show:
  1540                           	callstack 0
  1541                           
  1542 ;; *************** function _printf *****************
  1543 ;; Defined at:
  1544 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\printf.c"
  1545 ;; Parameters:    Size  Location     Type
  1546 ;;  fmt             1   20[COMRAM] PTR const unsigned char 
  1547 ;;		 -> STR_22(26), STR_21(26), STR_20(27), STR_19(8), 
  1548 ;;		 -> STR_18(17), STR_17(14), STR_16(11), STR_15(17), 
  1549 ;;		 -> STR_14(14), STR_13(10), STR_12(17), STR_11(14), 
  1550 ;;		 -> STR_10(9), STR_9(13), STR_8(8), STR_7(9), 
  1551 ;;		 -> STR_6(11), STR_5(18), STR_4(18), STR_3(11), 
  1552 ;;		 -> STR_2(10), STR_1(7), 
  1553 ;; Auto vars:     Size  Location     Type
  1554 ;;  ret             2    0        int 
  1555 ;;  ap              1   21[COMRAM] PTR void [1]
  1556 ;;		 -> ?_printf(2), 
  1557 ;; Return value:  Size  Location     Type
  1558 ;;                  2   20[COMRAM] int 
  1559 ;; Registers used:
  1560 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1561 ;; Tracked objects:
  1562 ;;		On entry : 0/0
  1563 ;;		On exit  : 0/0
  1564 ;;		Unchanged: 0/0
  1565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1566 ;;      Params:         1       0       0       0       0       0       0       0       0
  1567 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1568 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1569 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1570 ;;Total ram usage:        2 bytes
  1571 ;; Hardware stack levels used: 1
  1572 ;; Hardware stack levels required when called: 5
  1573 ;; This function calls:
  1574 ;;		_vfprintf
  1575 ;; This function is called by:
  1576 ;;		_UART_config_show
  1577 ;;		_UART_ErrorHandler
  1578 ;; This function uses a non-reentrant model
  1579 ;;
  1580                           
  1581                           	psect	text9
  1582   001036                     __ptext9:
  1583                           	callstack 0
  1584   001036                     _printf:
  1585                           	callstack 23
  1586   001036  0E3B               	movlw	low (?_printf+1)
  1587   001038  6E3B               	movwf	printf@ap^0,c
  1588   00103A  0E00               	movlw	0
  1589   00103C  6E35               	movwf	vfprintf@fp^0,c
  1590   00103E  0E00               	movlw	0
  1591   001040  6E36               	movwf	(vfprintf@fp+1)^0,c
  1592   001042  C03A  F037         	movff	printf@fmt,vfprintf@fmt
  1593   001046  0E3B               	movlw	low printf@ap
  1594   001048  6E38               	movwf	vfprintf@ap^0,c
  1595   00104A  ECA7  F007         	call	_vfprintf	;wreg free
  1596   00104E  0012               	return		;funcret
  1597   001050                     __end_of_printf:
  1598                           	callstack 0
  1599                           
  1600 ;; *************** function _vfprintf *****************
  1601 ;; Defined at:
  1602 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  1603 ;; Parameters:    Size  Location     Type
  1604 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
  1605 ;;		 -> NULL(0), 
  1606 ;;  fmt             1   17[COMRAM] PTR const unsigned char 
  1607 ;;		 -> STR_22(26), STR_21(26), STR_20(27), STR_19(8), 
  1608 ;;		 -> STR_18(17), STR_17(14), STR_16(11), STR_15(17), 
  1609 ;;		 -> STR_14(14), STR_13(10), STR_12(17), STR_11(14), 
  1610 ;;		 -> STR_10(9), STR_9(13), STR_8(8), STR_7(9), 
  1611 ;;		 -> STR_6(11), STR_5(18), STR_4(18), STR_3(11), 
  1612 ;;		 -> STR_2(10), STR_1(7), 
  1613 ;;  ap              1   18[COMRAM] PTR PTR void 
  1614 ;;		 -> printf@ap(1), 
  1615 ;; Auto vars:     Size  Location     Type
  1616 ;;  cfmt            1   19[COMRAM] PTR unsigned char 
  1617 ;;		 -> STR_22(26), STR_21(26), STR_20(27), STR_19(8), 
  1618 ;;		 -> STR_18(17), STR_17(14), STR_16(11), STR_15(17), 
  1619 ;;		 -> STR_14(14), STR_13(10), STR_12(17), STR_11(14), 
  1620 ;;		 -> STR_10(9), STR_9(13), STR_8(8), STR_7(9), 
  1621 ;;		 -> STR_6(11), STR_5(18), STR_4(18), STR_3(11), 
  1622 ;;		 -> STR_2(10), STR_1(7), 
  1623 ;; Return value:  Size  Location     Type
  1624 ;;                  2   15[COMRAM] int 
  1625 ;; Registers used:
  1626 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1627 ;; Tracked objects:
  1628 ;;		On entry : 0/0
  1629 ;;		On exit  : 0/0
  1630 ;;		Unchanged: 0/0
  1631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1632 ;;      Params:         4       0       0       0       0       0       0       0       0
  1633 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1634 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1635 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1636 ;;Total ram usage:        5 bytes
  1637 ;; Hardware stack levels used: 1
  1638 ;; Hardware stack levels required when called: 4
  1639 ;; This function calls:
  1640 ;;		_vfpfcnvrt
  1641 ;; This function is called by:
  1642 ;;		_printf
  1643 ;; This function uses a non-reentrant model
  1644 ;;
  1645                           
  1646                           	psect	text10
  1647   000F4E                     __ptext10:
  1648                           	callstack 0
  1649   000F4E                     _vfprintf:
  1650                           	callstack 23
  1651   000F4E                     
  1652                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  1653   000F4E  C037  F039         	movff	vfprintf@fmt,vfprintf@cfmt
  1654                           
  1655                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1656   000F52  EFB5  F007         	goto	l1490
  1657   000F56                     l1488:
  1658                           
  1659                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1660   000F56  C035  F031         	movff	vfprintf@fp,vfpfcnvrt@fp
  1661   000F5A  C036  F032         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1662   000F5E  0E39               	movlw	low vfprintf@cfmt
  1663   000F60  6E33               	movwf	vfpfcnvrt@fmt^0,c
  1664   000F62  C038  F034         	movff	vfprintf@ap,vfpfcnvrt@ap
  1665   000F66  EC4C  F007         	call	_vfpfcnvrt	;wreg free
  1666   000F6A                     l1490:
  1667                           
  1668                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1669   000F6A  C039  FFF6         	movff	vfprintf@cfmt,tblptrl
  1670   000F6E                     	if	1	;There is more than 1 active tblptr byte
  1671   000F6E  0E08               	movlw	high __smallconst
  1672   000F70  6EF7               	movwf	tblptrh,c
  1673   000F72                     	endif
  1674   000F72                     	if	0	;tblptru may be non-zero
  1675   000F72                     	endif
  1676   000F72                     	if	0	;tblptru may be non-zero
  1677   000F72                     	endif
  1678   000F72  0008               	tblrd		*
  1679   000F74  50F5               	movf	tablat,w,c
  1680   000F76  0900               	iorlw	0
  1681   000F78  A4D8               	btfss	status,2,c
  1682   000F7A  EFC1  F007         	goto	u521
  1683   000F7E  EFC3  F007         	goto	u520
  1684   000F82                     u521:
  1685   000F82  EFAB  F007         	goto	l1488
  1686   000F86                     u520:
  1687   000F86                     
  1688                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  1689   000F86  0E00               	movlw	0
  1690   000F88  6E36               	movwf	(?_vfprintf+1)^0,c
  1691   000F8A  0E00               	movlw	0
  1692   000F8C  6E35               	movwf	?_vfprintf^0,c
  1693   000F8E  0012               	return		;funcret
  1694   000F90                     __end_of_vfprintf:
  1695                           	callstack 0
  1696                           
  1697 ;; *************** function _vfpfcnvrt *****************
  1698 ;; Defined at:
  1699 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  1700 ;; Parameters:    Size  Location     Type
  1701 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  1702 ;;		 -> NULL(0), 
  1703 ;;  fmt             1   13[COMRAM] PTR PTR unsigned char 
  1704 ;;		 -> vfprintf@cfmt(1), 
  1705 ;;  ap              1   14[COMRAM] PTR PTR void 
  1706 ;;		 -> printf@ap(1), 
  1707 ;; Auto vars:     Size  Location     Type
  1708 ;;  cp              3    0        PTR unsigned char 
  1709 ;;  done            1    0        _Bool 
  1710 ;;  c               1    0        unsigned char 
  1711 ;; Return value:  Size  Location     Type
  1712 ;;                  1    wreg      void 
  1713 ;; Registers used:
  1714 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1715 ;; Tracked objects:
  1716 ;;		On entry : 0/0
  1717 ;;		On exit  : 0/0
  1718 ;;		Unchanged: 0/0
  1719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1720 ;;      Params:         4       0       0       0       0       0       0       0       0
  1721 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1722 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1723 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1724 ;;Total ram usage:        4 bytes
  1725 ;; Hardware stack levels used: 1
  1726 ;; Hardware stack levels required when called: 3
  1727 ;; This function calls:
  1728 ;;		_fputc
  1729 ;; This function is called by:
  1730 ;;		_vfprintf
  1731 ;; This function uses a non-reentrant model
  1732 ;;
  1733                           
  1734                           	psect	text11
  1735   000E98                     __ptext11:
  1736                           	callstack 0
  1737   000E98                     _vfpfcnvrt:
  1738                           	callstack 23
  1739   000E98                     
  1740                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  1741   000E98  5033               	movf	vfpfcnvrt@fmt^0,w,c
  1742   000E9A  6ED9               	movwf	fsr2l,c
  1743   000E9C  6ADA               	clrf	fsr2h,c
  1744   000E9E  CFDF FFF6          	movff	indf2,tblptrl
  1745   000EA2                     	if	1	;There is more than 1 active tblptr byte
  1746   000EA2  0E08               	movlw	high __smallconst
  1747   000EA4  6EF7               	movwf	tblptrh,c
  1748   000EA6                     	endif
  1749   000EA6                     	if	0	;tblptru may be non-zero
  1750   000EA6                     	endif
  1751   000EA6                     	if	0	;tblptru may be non-zero
  1752   000EA6                     	endif
  1753   000EA6  0008               	tblrd		*
  1754   000EA8  50F5               	movf	tablat,w,c
  1755   000EAA  0A25               	xorlw	37
  1756   000EAC  A4D8               	btfss	status,2,c
  1757   000EAE  EF5B  F007         	goto	u511
  1758   000EB2  EF5D  F007         	goto	u510
  1759   000EB6                     u511:
  1760   000EB6  EF6F  F007         	goto	l1480
  1761   000EBA                     u510:
  1762   000EBA                     
  1763                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  1764   000EBA  5033               	movf	vfpfcnvrt@fmt^0,w,c
  1765   000EBC  6ED9               	movwf	fsr2l,c
  1766   000EBE  6ADA               	clrf	fsr2h,c
  1767   000EC0  2ADF               	incf	indf2,f,c
  1768   000EC2                     
  1769                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  1770   000EC2  0E00               	movlw	0
  1771   000EC4  6E22               	movwf	(_width+1)^0,c
  1772   000EC6  0E00               	movlw	0
  1773   000EC8  6E21               	movwf	_width^0,c
  1774   000ECA  C021  F025         	movff	_width,_flags
  1775   000ECE                     
  1776                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  1777   000ECE  6823               	setf	_prec^0,c
  1778   000ED0  6824               	setf	(_prec+1)^0,c
  1779   000ED2                     l1476:
  1780                           
  1781                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  1782   000ED2  5033               	movf	vfpfcnvrt@fmt^0,w,c
  1783   000ED4  6ED9               	movwf	fsr2l,c
  1784   000ED6  6ADA               	clrf	fsr2h,c
  1785   000ED8  2ADF               	incf	indf2,f,c
  1786   000EDA  EF82  F007         	goto	l882
  1787   000EDE                     l1480:
  1788                           
  1789                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  1790   000EDE  5033               	movf	vfpfcnvrt@fmt^0,w,c
  1791   000EE0  6ED9               	movwf	fsr2l,c
  1792   000EE2  6ADA               	clrf	fsr2h,c
  1793   000EE4  CFDF FFF6          	movff	indf2,tblptrl
  1794   000EE8                     	if	1	;There is more than 1 active tblptr byte
  1795   000EE8  0E08               	movlw	high __smallconst
  1796   000EEA  6EF7               	movwf	tblptrh,c
  1797   000EEC                     	endif
  1798   000EEC                     	if	0	;tblptru may be non-zero
  1799   000EEC                     	endif
  1800   000EEC                     	if	0	;tblptru may be non-zero
  1801   000EEC                     	endif
  1802   000EEC  0008               	tblrd		*
  1803   000EEE  50F5               	movf	tablat,w,c
  1804   000EF0  6E28               	movwf	fputc@c^0,c
  1805   000EF2  6A29               	clrf	(fputc@c+1)^0,c
  1806   000EF4  C031  F02A         	movff	vfpfcnvrt@fp,fputc@fp
  1807   000EF8  C032  F02B         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1808   000EFC  ECAA  F006         	call	_fputc	;wreg free
  1809   000F00  EF69  F007         	goto	l1476
  1810   000F04                     l882:
  1811   000F04  0012               	return		;funcret
  1812   000F06                     __end_of_vfpfcnvrt:
  1813                           	callstack 0
  1814                           
  1815 ;; *************** function _fputc *****************
  1816 ;; Defined at:
  1817 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_fputc.c"
  1818 ;; Parameters:    Size  Location     Type
  1819 ;;  c               2    2[COMRAM] int 
  1820 ;;  fp              2    4[COMRAM] PTR struct _IO_FILE
  1821 ;;		 -> NULL(0), 
  1822 ;; Auto vars:     Size  Location     Type
  1823 ;;		None
  1824 ;; Return value:  Size  Location     Type
  1825 ;;                  2    2[COMRAM] int 
  1826 ;; Registers used:
  1827 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1828 ;; Tracked objects:
  1829 ;;		On entry : 0/0
  1830 ;;		On exit  : 0/0
  1831 ;;		Unchanged: 0/0
  1832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1833 ;;      Params:         4       0       0       0       0       0       0       0       0
  1834 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1835 ;;      Temps:          5       0       0       0       0       0       0       0       0
  1836 ;;      Totals:         9       0       0       0       0       0       0       0       0
  1837 ;;Total ram usage:        9 bytes
  1838 ;; Hardware stack levels used: 1
  1839 ;; Hardware stack levels required when called: 2
  1840 ;; This function calls:
  1841 ;;		_putch
  1842 ;; This function is called by:
  1843 ;;		_vfpfcnvrt
  1844 ;; This function uses a non-reentrant model
  1845 ;;
  1846                           
  1847                           	psect	text12
  1848   000D54                     __ptext12:
  1849                           	callstack 0
  1850   000D54                     _fputc:
  1851                           	callstack 23
  1852   000D54  502A               	movf	fputc@fp^0,w,c
  1853   000D56  102B               	iorwf	(fputc@fp+1)^0,w,c
  1854   000D58  B4D8               	btfsc	status,2,c
  1855   000D5A  EFB1  F006         	goto	u471
  1856   000D5E  EFB3  F006         	goto	u470
  1857   000D62                     u471:
  1858   000D62  EFBC  F006         	goto	l1458
  1859   000D66                     u470:
  1860   000D66  502A               	movf	fputc@fp^0,w,c
  1861   000D68  102B               	iorwf	(fputc@fp+1)^0,w,c
  1862   000D6A  A4D8               	btfss	status,2,c
  1863   000D6C  EFBA  F006         	goto	u481
  1864   000D70  EFBC  F006         	goto	u480
  1865   000D74                     u481:
  1866   000D74  EFC1  F006         	goto	l1460
  1867   000D78                     u480:
  1868   000D78                     l1458:
  1869   000D78  5028               	movf	fputc@c^0,w,c
  1870   000D7A  EC48  F008         	call	_putch
  1871   000D7E  EF0E  F007         	goto	l900
  1872   000D82                     l1460:
  1873   000D82  EE20 F00A          	lfsr	2,10
  1874   000D86  502A               	movf	fputc@fp^0,w,c
  1875   000D88  26D9               	addwf	fsr2l,f,c
  1876   000D8A  502B               	movf	(fputc@fp+1)^0,w,c
  1877   000D8C  22DA               	addwfc	fsr2h,f,c
  1878   000D8E  50DE               	movf	postinc2,w,c
  1879   000D90  10DE               	iorwf	postinc2,w,c
  1880   000D92  B4D8               	btfsc	status,2,c
  1881   000D94  EFCE  F006         	goto	u491
  1882   000D98  EFD0  F006         	goto	u490
  1883   000D9C                     u491:
  1884   000D9C  EFEB  F006         	goto	l1464
  1885   000DA0                     u490:
  1886   000DA0  EE20 F00A          	lfsr	2,10
  1887   000DA4  502A               	movf	fputc@fp^0,w,c
  1888   000DA6  26D9               	addwf	fsr2l,f,c
  1889   000DA8  502B               	movf	(fputc@fp+1)^0,w,c
  1890   000DAA  22DA               	addwfc	fsr2h,f,c
  1891   000DAC  EE10 F003          	lfsr	1,3
  1892   000DB0  502A               	movf	fputc@fp^0,w,c
  1893   000DB2  26E1               	addwf	fsr1l,f,c
  1894   000DB4  502B               	movf	(fputc@fp+1)^0,w,c
  1895   000DB6  22E2               	addwfc	fsr1h,f,c
  1896   000DB8  50DE               	movf	postinc2,w,c
  1897   000DBA  5CE6               	subwf	postinc1,w,c
  1898   000DBC  50E6               	movf	postinc1,w,c
  1899   000DBE  0A80               	xorlw	128
  1900   000DC0  6E30               	movwf	(??_fputc+4)^0,c
  1901   000DC2  50DE               	movf	postinc2,w,c
  1902   000DC4  0A80               	xorlw	128
  1903   000DC6  5830               	subwfb	(??_fputc+4)^0,w,c
  1904   000DC8  B0D8               	btfsc	status,0,c
  1905   000DCA  EFE9  F006         	goto	u501
  1906   000DCE  EFEB  F006         	goto	u500
  1907   000DD2                     u501:
  1908   000DD2  EF0E  F007         	goto	l900
  1909   000DD6                     u500:
  1910   000DD6                     l1464:
  1911   000DD6  EE20 F003          	lfsr	2,3
  1912   000DDA  502A               	movf	fputc@fp^0,w,c
  1913   000DDC  26D9               	addwf	fsr2l,f,c
  1914   000DDE  502B               	movf	(fputc@fp+1)^0,w,c
  1915   000DE0  22DA               	addwfc	fsr2h,f,c
  1916   000DE2  CFDE F02C          	movff	postinc2,??_fputc
  1917   000DE6  CFDD F02D          	movff	postdec2,??_fputc+1
  1918   000DEA  C02A  FFD9         	movff	fputc@fp,fsr2l
  1919   000DEE  C02B  FFDA         	movff	fputc@fp+1,fsr2h
  1920   000DF2  CFDE F02E          	movff	postinc2,??_fputc+2
  1921   000DF6  CFDD F02F          	movff	postdec2,??_fputc+3
  1922   000DFA  502C               	movf	??_fputc^0,w,c
  1923   000DFC  242E               	addwf	(??_fputc+2)^0,w,c
  1924   000DFE  6ED9               	movwf	fsr2l,c
  1925   000E00  502D               	movf	(??_fputc+1)^0,w,c
  1926   000E02  202F               	addwfc	(??_fputc+3)^0,w,c
  1927   000E04  6EDA               	movwf	fsr2h,c
  1928   000E06  C028  FFDF         	movff	fputc@c,indf2
  1929   000E0A  EE20 F003          	lfsr	2,3
  1930   000E0E  502A               	movf	fputc@fp^0,w,c
  1931   000E10  26D9               	addwf	fsr2l,f,c
  1932   000E12  502B               	movf	(fputc@fp+1)^0,w,c
  1933   000E14  22DA               	addwfc	fsr2h,f,c
  1934   000E16  2ADE               	incf	postinc2,f,c
  1935   000E18  0E00               	movlw	0
  1936   000E1A  22DD               	addwfc	postdec2,f,c
  1937   000E1C                     l900:
  1938   000E1C  0012               	return		;funcret
  1939   000E1E                     __end_of_fputc:
  1940                           	callstack 0
  1941                           
  1942 ;; *************** function _putch *****************
  1943 ;; Defined at:
  1944 ;;		line 84 in file "src/librerias/UART.c"
  1945 ;; Parameters:    Size  Location     Type
  1946 ;;  data            1    wreg     unsigned char 
  1947 ;; Auto vars:     Size  Location     Type
  1948 ;;  data            1    1[COMRAM] unsigned char 
  1949 ;; Return value:  Size  Location     Type
  1950 ;;                  1    wreg      void 
  1951 ;; Registers used:
  1952 ;;		wreg, status,2, cstack
  1953 ;; Tracked objects:
  1954 ;;		On entry : 0/0
  1955 ;;		On exit  : 0/0
  1956 ;;		Unchanged: 0/0
  1957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1958 ;;      Params:         0       0       0       0       0       0       0       0       0
  1959 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1960 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1961 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1962 ;;Total ram usage:        1 bytes
  1963 ;; Hardware stack levels used: 1
  1964 ;; Hardware stack levels required when called: 1
  1965 ;; This function calls:
  1966 ;;		_UART_Tx
  1967 ;; This function is called by:
  1968 ;;		_fputc
  1969 ;; This function uses a non-reentrant model
  1970 ;;
  1971                           
  1972                           	psect	text13
  1973   001090                     __ptext13:
  1974                           	callstack 0
  1975   001090                     _putch:
  1976                           	callstack 23
  1977                           
  1978                           ;incstack = 0
  1979                           ;putch@data stored from wreg
  1980   001090  6E27               	movwf	putch@data^0,c
  1981   001092                     
  1982                           ;src/librerias/UART.c: 85:     UART_Tx(data);
  1983   001092  5027               	movf	putch@data^0,w,c
  1984   001094  EC33  F008         	call	_UART_Tx
  1985   001098  0012               	return		;funcret
  1986   00109A                     __end_of_putch:
  1987                           	callstack 0
  1988                           
  1989 ;; *************** function _UART_Tx *****************
  1990 ;; Defined at:
  1991 ;;		line 79 in file "src/librerias/UART.c"
  1992 ;; Parameters:    Size  Location     Type
  1993 ;;  dato            1    wreg     unsigned char 
  1994 ;; Auto vars:     Size  Location     Type
  1995 ;;  dato            1    0[COMRAM] unsigned char 
  1996 ;; Return value:  Size  Location     Type
  1997 ;;                  1    wreg      void 
  1998 ;; Registers used:
  1999 ;;		wreg
  2000 ;; Tracked objects:
  2001 ;;		On entry : 0/0
  2002 ;;		On exit  : 0/0
  2003 ;;		Unchanged: 0/0
  2004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2005 ;;      Params:         0       0       0       0       0       0       0       0       0
  2006 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2007 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2008 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2009 ;;Total ram usage:        1 bytes
  2010 ;; Hardware stack levels used: 1
  2011 ;; This function calls:
  2012 ;;		Nothing
  2013 ;; This function is called by:
  2014 ;;		_main
  2015 ;;		_putch
  2016 ;; This function uses a non-reentrant model
  2017 ;;
  2018                           
  2019                           	psect	text14
  2020   001066                     __ptext14:
  2021                           	callstack 0
  2022   001066                     _UART_Tx:
  2023                           	callstack 30
  2024                           
  2025                           ;incstack = 0
  2026                           ;UART_Tx@dato stored from wreg
  2027   001066  6E26               	movwf	UART_Tx@dato^0,c
  2028   001068                     l111:
  2029   001068  A2AC               	btfss	4012,1,c	;volatile
  2030   00106A  EF39  F008         	goto	u11
  2031   00106E  EF3B  F008         	goto	u10
  2032   001072                     u11:
  2033   001072  EF34  F008         	goto	l111
  2034   001076                     u10:
  2035   001076                     
  2036                           ;src/librerias/UART.c: 81:     TXREG1 = dato;
  2037   001076  C026  FFAD         	movff	UART_Tx@dato,4013	;volatile
  2038   00107A  0012               	return		;funcret
  2039   00107C                     __end_of_UART_Tx:
  2040                           	callstack 0
  2041                           
  2042 ;; *************** function _Clock_Init *****************
  2043 ;; Defined at:
  2044 ;;		line 3 in file "src/librerias/clock.c"
  2045 ;; Parameters:    Size  Location     Type
  2046 ;;  s16Timeout      2    0[COMRAM] short 
  2047 ;; Auto vars:     Size  Location     Type
  2048 ;;  bStatus         1    5[COMRAM] _Bool 
  2049 ;;  bStatus         1    4[COMRAM] _Bool 
  2050 ;;  bStatus         1    3[COMRAM] _Bool 
  2051 ;;  bStatus         1    2[COMRAM] _Bool 
  2052 ;;  returnCode      1    7[COMRAM] enum E5188
  2053 ;;  bItTimeEn       1    6[COMRAM] _Bool 
  2054 ;; Return value:  Size  Location     Type
  2055 ;;                  1    wreg      enum E5188
  2056 ;; Registers used:
  2057 ;;		wreg, status,2, status,0
  2058 ;; Tracked objects:
  2059 ;;		On entry : 0/0
  2060 ;;		On exit  : 0/0
  2061 ;;		Unchanged: 0/0
  2062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2063 ;;      Params:         2       0       0       0       0       0       0       0       0
  2064 ;;      Locals:         6       0       0       0       0       0       0       0       0
  2065 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2066 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2067 ;;Total ram usage:        8 bytes
  2068 ;; Hardware stack levels used: 1
  2069 ;; This function calls:
  2070 ;;		Nothing
  2071 ;; This function is called by:
  2072 ;;		_main
  2073 ;; This function uses a non-reentrant model
  2074 ;;
  2075                           
  2076                           	psect	text15
  2077   000900                     __ptext15:
  2078                           	callstack 0
  2079   000900                     _Clock_Init:
  2080                           	callstack 30
  2081   000900                     
  2082                           ;src/librerias/clock.c: 4:     CLK_ERROR_CODE returnCode = ERROR_CODE_OK;
  2083   000900  0E00               	movlw	0
  2084   000902  6E2D               	movwf	Clock_Init@returnCode^0,c
  2085   000904                     
  2086                           ;src/librerias/clock.c: 5:     _Bool bItTimeEn = (0 >= s16Timeout) ? 0 : 1;
  2087   000904  BE27               	btfsc	(Clock_Init@s16Timeout+1)^0,7,c
  2088   000906  EF90  F004         	goto	u600
  2089   00090A  5027               	movf	(Clock_Init@s16Timeout+1)^0,w,c
  2090   00090C  E106               	bnz	u601
  2091   00090E  0426               	decf	Clock_Init@s16Timeout^0,w,c
  2092   000910  B0D8               	btfsc	status,0,c
  2093   000912  EF8D  F004         	goto	u601
  2094   000916  EF90  F004         	goto	u600
  2095   00091A                     u601:
  2096   00091A  0E01               	movlw	1
  2097   00091C  EF91  F004         	goto	u610
  2098   000920                     u600:
  2099   000920  0E00               	movlw	0
  2100   000922                     u610:
  2101   000922  6E2C               	movwf	Clock_Init@bItTimeEn^0,c
  2102   000924                     l154:
  2103                           
  2104                           ;src/librerias/clock.c: 10:             bStatus = OSCCON2bits.HFIOFR;
  2105   000924  B2D2               	btfsc	210,1,c	;volatile
  2106   000926  EF97  F004         	goto	u621
  2107   00092A  EF9A  F004         	goto	u620
  2108   00092E                     u621:
  2109   00092E  0E01               	movlw	1
  2110   000930  EF9B  F004         	goto	u626
  2111   000934                     u620:
  2112   000934  0E00               	movlw	0
  2113   000936                     u626:
  2114   000936  6E28               	movwf	Clock_Init@bStatus^0,c
  2115   000938                     
  2116                           ;src/librerias/clock.c: 11:             s16Timeout--;
  2117   000938  0626               	decf	Clock_Init@s16Timeout^0,f,c
  2118   00093A  A0D8               	btfss	status,0,c
  2119   00093C  0627               	decf	(Clock_Init@s16Timeout+1)^0,f,c
  2120   00093E                     
  2121                           ;src/librerias/clock.c: 12:         }while((0 == bStatus) && ((0 < s16Timeout) || (0 == 
      +                          bItTimeEn)));
  2122   00093E  5028               	movf	Clock_Init@bStatus^0,w,c
  2123   000940  A4D8               	btfss	status,2,c
  2124   000942  EFA5  F004         	goto	u631
  2125   000946  EFA7  F004         	goto	u630
  2126   00094A                     u631:
  2127   00094A  EFBC  F004         	goto	l1638
  2128   00094E                     u630:
  2129   00094E  BE27               	btfsc	(Clock_Init@s16Timeout+1)^0,7,c
  2130   000950  EFB4  F004         	goto	u640
  2131   000954  5027               	movf	(Clock_Init@s16Timeout+1)^0,w,c
  2132   000956  E106               	bnz	u641
  2133   000958  0426               	decf	Clock_Init@s16Timeout^0,w,c
  2134   00095A  B0D8               	btfsc	status,0,c
  2135   00095C  EFB2  F004         	goto	u641
  2136   000960  EFB4  F004         	goto	u640
  2137   000964                     u641:
  2138   000964  EF92  F004         	goto	l154
  2139   000968                     u640:
  2140   000968  502C               	movf	Clock_Init@bItTimeEn^0,w,c
  2141   00096A  B4D8               	btfsc	status,2,c
  2142   00096C  EFBA  F004         	goto	u651
  2143   000970  EFBC  F004         	goto	u650
  2144   000974                     u651:
  2145   000974  EF92  F004         	goto	l154
  2146   000978                     u650:
  2147   000978                     l1638:
  2148                           
  2149                           ;src/librerias/clock.c: 13:         if (0 == bStatus){
  2150   000978  5028               	movf	Clock_Init@bStatus^0,w,c
  2151   00097A  A4D8               	btfss	status,2,c
  2152   00097C  EFC2  F004         	goto	u661
  2153   000980  EFC4  F004         	goto	u660
  2154   000984                     u661:
  2155   000984  EFC6  F004         	goto	l153
  2156   000988                     u660:
  2157   000988                     
  2158                           ;src/librerias/clock.c: 14:             returnCode = ERROR_CODE_TIMEOUT;
  2159   000988  0E01               	movlw	1
  2160   00098A  6E2D               	movwf	Clock_Init@returnCode^0,c
  2161   00098C                     l153:
  2162                           
  2163                           ;src/librerias/clock.c: 18:     if(ERROR_CODE_OK == returnCode){
  2164   00098C  502D               	movf	Clock_Init@returnCode^0,w,c
  2165   00098E  A4D8               	btfss	status,2,c
  2166   000990  EFCC  F004         	goto	u671
  2167   000994  EFCE  F004         	goto	u670
  2168   000998                     u671:
  2169   000998  EF05  F005         	goto	l159
  2170   00099C                     u670:
  2171   00099C                     
  2172                           ;src/librerias/clock.c: 19:         OSCCON2bits.INTSRC = 1;
  2173   00099C  8AD2               	bsf	210,5,c	;volatile
  2174   00099E                     
  2175                           ;src/librerias/clock.c: 20:         OSCCONbits.IRCF = 7;
  2176   00099E  0E70               	movlw	112
  2177   0009A0  12D3               	iorwf	211,f,c	;volatile
  2178   0009A2                     l160:
  2179                           
  2180                           ;src/librerias/clock.c: 24:             bStatus = OSCCONbits.HFIOFS;
  2181   0009A2  B4D3               	btfsc	211,2,c	;volatile
  2182   0009A4  EFD6  F004         	goto	u681
  2183   0009A8  EFD9  F004         	goto	u680
  2184   0009AC                     u681:
  2185   0009AC  0E01               	movlw	1
  2186   0009AE  EFDA  F004         	goto	u686
  2187   0009B2                     u680:
  2188   0009B2  0E00               	movlw	0
  2189   0009B4                     u686:
  2190   0009B4  6E29               	movwf	Clock_Init@bStatus_467^0,c
  2191   0009B6                     
  2192                           ;src/librerias/clock.c: 25:             s16Timeout--;
  2193   0009B6  0626               	decf	Clock_Init@s16Timeout^0,f,c
  2194   0009B8  A0D8               	btfss	status,0,c
  2195   0009BA  0627               	decf	(Clock_Init@s16Timeout+1)^0,f,c
  2196   0009BC                     
  2197                           ;src/librerias/clock.c: 26:         }while((0 == bStatus) && ((0 < s16Timeout) || (0 == 
      +                          bItTimeEn)));
  2198   0009BC  5029               	movf	Clock_Init@bStatus_467^0,w,c
  2199   0009BE  A4D8               	btfss	status,2,c
  2200   0009C0  EFE4  F004         	goto	u691
  2201   0009C4  EFE6  F004         	goto	u690
  2202   0009C8                     u691:
  2203   0009C8  EFFB  F004         	goto	l1654
  2204   0009CC                     u690:
  2205   0009CC  BE27               	btfsc	(Clock_Init@s16Timeout+1)^0,7,c
  2206   0009CE  EFF3  F004         	goto	u700
  2207   0009D2  5027               	movf	(Clock_Init@s16Timeout+1)^0,w,c
  2208   0009D4  E106               	bnz	u701
  2209   0009D6  0426               	decf	Clock_Init@s16Timeout^0,w,c
  2210   0009D8  B0D8               	btfsc	status,0,c
  2211   0009DA  EFF1  F004         	goto	u701
  2212   0009DE  EFF3  F004         	goto	u700
  2213   0009E2                     u701:
  2214   0009E2  EFD1  F004         	goto	l160
  2215   0009E6                     u700:
  2216   0009E6  502C               	movf	Clock_Init@bItTimeEn^0,w,c
  2217   0009E8  B4D8               	btfsc	status,2,c
  2218   0009EA  EFF9  F004         	goto	u711
  2219   0009EE  EFFB  F004         	goto	u710
  2220   0009F2                     u711:
  2221   0009F2  EFD1  F004         	goto	l160
  2222   0009F6                     u710:
  2223   0009F6                     l1654:
  2224                           
  2225                           ;src/librerias/clock.c: 27:         if (0 == bStatus){
  2226   0009F6  5029               	movf	Clock_Init@bStatus_467^0,w,c
  2227   0009F8  A4D8               	btfss	status,2,c
  2228   0009FA  EF01  F005         	goto	u721
  2229   0009FE  EF03  F005         	goto	u720
  2230   000A02                     u721:
  2231   000A02  EF05  F005         	goto	l159
  2232   000A06                     u720:
  2233   000A06                     
  2234                           ;src/librerias/clock.c: 28:             returnCode = ERROR_CODE_TIMEOUT;
  2235   000A06  0E01               	movlw	1
  2236   000A08  6E2D               	movwf	Clock_Init@returnCode^0,c
  2237   000A0A                     l159:
  2238                           
  2239                           ;src/librerias/clock.c: 32:     if(ERROR_CODE_OK == returnCode){
  2240   000A0A  502D               	movf	Clock_Init@returnCode^0,w,c
  2241   000A0C  A4D8               	btfss	status,2,c
  2242   000A0E  EF0B  F005         	goto	u731
  2243   000A12  EF0D  F005         	goto	u730
  2244   000A16                     u731:
  2245   000A16  EF41  F005         	goto	l165
  2246   000A1A                     u730:
  2247   000A1A                     l166:
  2248                           
  2249                           ;src/librerias/clock.c: 35:             bStatus = OSCCONbits.OSTS;
  2250   000A1A  B6D3               	btfsc	211,3,c	;volatile
  2251   000A1C  EF12  F005         	goto	u741
  2252   000A20  EF15  F005         	goto	u740
  2253   000A24                     u741:
  2254   000A24  0E01               	movlw	1
  2255   000A26  EF16  F005         	goto	u746
  2256   000A2A                     u740:
  2257   000A2A  0E00               	movlw	0
  2258   000A2C                     u746:
  2259   000A2C  6E2A               	movwf	Clock_Init@bStatus_468^0,c
  2260   000A2E                     
  2261                           ;src/librerias/clock.c: 36:             s16Timeout--;
  2262   000A2E  0626               	decf	Clock_Init@s16Timeout^0,f,c
  2263   000A30  A0D8               	btfss	status,0,c
  2264   000A32  0627               	decf	(Clock_Init@s16Timeout+1)^0,f,c
  2265   000A34                     
  2266                           ;src/librerias/clock.c: 37:         }while((0 == bStatus) && ((0 < s16Timeout) || (0 == 
      +                          bItTimeEn)));
  2267   000A34  502A               	movf	Clock_Init@bStatus_468^0,w,c
  2268   000A36  A4D8               	btfss	status,2,c
  2269   000A38  EF20  F005         	goto	u751
  2270   000A3C  EF22  F005         	goto	u750
  2271   000A40                     u751:
  2272   000A40  EF37  F005         	goto	l1668
  2273   000A44                     u750:
  2274   000A44  BE27               	btfsc	(Clock_Init@s16Timeout+1)^0,7,c
  2275   000A46  EF2F  F005         	goto	u760
  2276   000A4A  5027               	movf	(Clock_Init@s16Timeout+1)^0,w,c
  2277   000A4C  E106               	bnz	u761
  2278   000A4E  0426               	decf	Clock_Init@s16Timeout^0,w,c
  2279   000A50  B0D8               	btfsc	status,0,c
  2280   000A52  EF2D  F005         	goto	u761
  2281   000A56  EF2F  F005         	goto	u760
  2282   000A5A                     u761:
  2283   000A5A  EF0D  F005         	goto	l166
  2284   000A5E                     u760:
  2285   000A5E  502C               	movf	Clock_Init@bItTimeEn^0,w,c
  2286   000A60  B4D8               	btfsc	status,2,c
  2287   000A62  EF35  F005         	goto	u771
  2288   000A66  EF37  F005         	goto	u770
  2289   000A6A                     u771:
  2290   000A6A  EF0D  F005         	goto	l166
  2291   000A6E                     u770:
  2292   000A6E                     l1668:
  2293                           
  2294                           ;src/librerias/clock.c: 38:         if (0 == bStatus){
  2295   000A6E  502A               	movf	Clock_Init@bStatus_468^0,w,c
  2296   000A70  A4D8               	btfss	status,2,c
  2297   000A72  EF3D  F005         	goto	u781
  2298   000A76  EF3F  F005         	goto	u780
  2299   000A7A                     u781:
  2300   000A7A  EF41  F005         	goto	l165
  2301   000A7E                     u780:
  2302   000A7E                     
  2303                           ;src/librerias/clock.c: 39:             returnCode = ERROR_CODE_TIMEOUT;
  2304   000A7E  0E01               	movlw	1
  2305   000A80  6E2D               	movwf	Clock_Init@returnCode^0,c
  2306   000A82                     l165:
  2307                           
  2308                           ;src/librerias/clock.c: 42:         if(ERROR_CODE_OK == returnCode){
  2309   000A82  502D               	movf	Clock_Init@returnCode^0,w,c
  2310   000A84  A4D8               	btfss	status,2,c
  2311   000A86  EF47  F005         	goto	u791
  2312   000A8A  EF49  F005         	goto	u790
  2313   000A8E                     u791:
  2314   000A8E  EF7F  F005         	goto	l171
  2315   000A92                     u790:
  2316   000A92                     
  2317                           ;src/librerias/clock.c: 43:         OSCTUNEbits.SPLLMULT = 1;
  2318   000A92  8E9B               	bsf	155,7,c	;volatile
  2319                           
  2320                           ;src/librerias/clock.c: 44:         OSCCON2bits.PLLEN = 1;
  2321   000A94  88D2               	bsf	210,4,c	;volatile
  2322   000A96                     l172:
  2323                           
  2324                           ;src/librerias/clock.c: 47:             bStatus = OSCCON2bits.PLLRDY;
  2325   000A96  BED2               	btfsc	210,7,c	;volatile
  2326   000A98  EF50  F005         	goto	u801
  2327   000A9C  EF53  F005         	goto	u800
  2328   000AA0                     u801:
  2329   000AA0  0E01               	movlw	1
  2330   000AA2  EF54  F005         	goto	u806
  2331   000AA6                     u800:
  2332   000AA6  0E00               	movlw	0
  2333   000AA8                     u806:
  2334   000AA8  6E2B               	movwf	Clock_Init@bStatus_471^0,c
  2335   000AAA                     
  2336                           ;src/librerias/clock.c: 48:             s16Timeout--;
  2337   000AAA  0626               	decf	Clock_Init@s16Timeout^0,f,c
  2338   000AAC  A0D8               	btfss	status,0,c
  2339   000AAE  0627               	decf	(Clock_Init@s16Timeout+1)^0,f,c
  2340   000AB0                     
  2341                           ;src/librerias/clock.c: 49:         }while((0 == bStatus) && ((0 < s16Timeout) || (0 == 
      +                          bItTimeEn)));
  2342   000AB0  502B               	movf	Clock_Init@bStatus_471^0,w,c
  2343   000AB2  A4D8               	btfss	status,2,c
  2344   000AB4  EF5E  F005         	goto	u811
  2345   000AB8  EF60  F005         	goto	u810
  2346   000ABC                     u811:
  2347   000ABC  EF75  F005         	goto	l1684
  2348   000AC0                     u810:
  2349   000AC0  BE27               	btfsc	(Clock_Init@s16Timeout+1)^0,7,c
  2350   000AC2  EF6D  F005         	goto	u820
  2351   000AC6  5027               	movf	(Clock_Init@s16Timeout+1)^0,w,c
  2352   000AC8  E106               	bnz	u821
  2353   000ACA  0426               	decf	Clock_Init@s16Timeout^0,w,c
  2354   000ACC  B0D8               	btfsc	status,0,c
  2355   000ACE  EF6B  F005         	goto	u821
  2356   000AD2  EF6D  F005         	goto	u820
  2357   000AD6                     u821:
  2358   000AD6  EF4B  F005         	goto	l172
  2359   000ADA                     u820:
  2360   000ADA  502C               	movf	Clock_Init@bItTimeEn^0,w,c
  2361   000ADC  B4D8               	btfsc	status,2,c
  2362   000ADE  EF73  F005         	goto	u831
  2363   000AE2  EF75  F005         	goto	u830
  2364   000AE6                     u831:
  2365   000AE6  EF4B  F005         	goto	l172
  2366   000AEA                     u830:
  2367   000AEA                     l1684:
  2368                           
  2369                           ;src/librerias/clock.c: 50:         if (0 == bStatus){
  2370   000AEA  502B               	movf	Clock_Init@bStatus_471^0,w,c
  2371   000AEC  A4D8               	btfss	status,2,c
  2372   000AEE  EF7B  F005         	goto	u841
  2373   000AF2  EF7D  F005         	goto	u840
  2374   000AF6                     u841:
  2375   000AF6  EF7F  F005         	goto	l171
  2376   000AFA                     u840:
  2377   000AFA                     
  2378                           ;src/librerias/clock.c: 51:             returnCode = ERROR_CODE_TIMEOUT;
  2379   000AFA  0E01               	movlw	1
  2380   000AFC  6E2D               	movwf	Clock_Init@returnCode^0,c
  2381   000AFE                     l171:
  2382                           
  2383                           ;src/librerias/clock.c: 56:     if(ERROR_CODE_OK == returnCode){
  2384   000AFE  502D               	movf	Clock_Init@returnCode^0,w,c
  2385   000B00  A4D8               	btfss	status,2,c
  2386   000B02  EF85  F005         	goto	u851
  2387   000B06  EF87  F005         	goto	u850
  2388   000B0A                     u851:
  2389   000B0A  EF8A  F005         	goto	l178
  2390   000B0E                     u850:
  2391   000B0E                     
  2392                           ;src/librerias/clock.c: 57:         OSCCON2bits.PRISD = 0;
  2393   000B0E  94D2               	bcf	210,2,c	;volatile
  2394   000B10                     
  2395                           ;src/librerias/clock.c: 58:         OSCCONbits.SCS = 0;
  2396   000B10  0EFC               	movlw	-4
  2397   000B12  16D3               	andwf	211,f,c	;volatile
  2398   000B14                     l178:
  2399   000B14  0012               	return		;funcret
  2400   000B16                     __end_of_Clock_Init:
  2401                           	callstack 0
  2402                           
  2403                           	psect	rparam
  2404   000000                     
  2405                           	psect	config
  2406                           
  2407                           ;Config register CONFIG1L @ 0x300000
  2408                           ;	PLL Selection
  2409                           ;	PLLSEL = PLL3X, 3x clock multiplier
  2410                           ;	PLL Enable Configuration bit
  2411                           ;	CFGPLLEN = ON, PLL Enabled
  2412                           ;	CPU System Clock Postscaler
  2413                           ;	CPUDIV = NOCLKDIV, CPU uses system clock (no divide)
  2414                           ;	Low Speed USB mode with 48 MHz system clock
  2415                           ;	LS48MHZ = SYS48X8, System clock at 48 MHz, USB clock divider is set to 8
  2416   300000                     	org	3145728
  2417   300000  23                 	db	35
  2418                           
  2419                           ;Config register CONFIG1H @ 0x300001
  2420                           ;	Oscillator Selection
  2421                           ;	FOSC = INTOSCCLKO, Internal oscillator, clock output on OSC2
  2422                           ;	Primary Oscillator Shutdown
  2423                           ;	PCLKEN = OFF, Primary oscillator shutdown firmware controlled
  2424                           ;	Fail-Safe Clock Monitor
  2425                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  2426                           ;	Internal/External Oscillator Switchover
  2427                           ;	IESO = OFF, Oscillator Switchover mode disabled
  2428   300001                     	org	3145729
  2429   300001  09                 	db	9
  2430                           
  2431                           ;Config register CONFIG2L @ 0x300002
  2432                           ;	Power-up Timer Enable
  2433                           ;	nPWRTEN = OFF, Power up timer disabled
  2434                           ;	Brown-out Reset Enable
  2435                           ;	BOREN = SBORDIS, BOR enabled in hardware (SBOREN is ignored)
  2436                           ;	Brown-out Reset Voltage
  2437                           ;	BORV = 190, BOR set to 1.9V nominal
  2438                           ;	Low-Power Brown-out Reset
  2439                           ;	nLPBOR = OFF, Low-Power Brown-out Reset disabled
  2440   300002                     	org	3145730
  2441   300002  5F                 	db	95
  2442                           
  2443                           ;Config register CONFIG2H @ 0x300003
  2444                           ;	Watchdog Timer Enable bits
  2445                           ;	WDTEN = OFF, WDT disabled in hardware (SWDTEN ignored)
  2446                           ;	Watchdog Timer Postscaler
  2447                           ;	WDTPS = 32768, 1:32768
  2448   300003                     	org	3145731
  2449   300003  3C                 	db	60
  2450                           
  2451                           ; Padding undefined space
  2452   300004                     	org	3145732
  2453   300004  FF                 	db	255
  2454                           
  2455                           ;Config register CONFIG3H @ 0x300005
  2456                           ;	CCP2 MUX bit
  2457                           ;	CCP2MX = RC1, CCP2 input/output is multiplexed with RC1
  2458                           ;	PORTB A/D Enable bit
  2459                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  2460                           ;	Timer3 Clock Input MUX bit
  2461                           ;	T3CMX = RC0, T3CKI function is on RC0
  2462                           ;	SDO Output MUX bit
  2463                           ;	SDOMX = RB3, SDO function is on RB3
  2464                           ;	Master Clear Reset Pin Enable
  2465                           ;	MCLRE = ON, MCLR pin enabled; RE3 input disabled
  2466   300005                     	org	3145733
  2467   300005  D3                 	db	211
  2468                           
  2469                           ;Config register CONFIG4L @ 0x300006
  2470                           ;	Stack Full/Underflow Reset
  2471                           ;	STVREN = ON, Stack full/underflow will cause Reset
  2472                           ;	Single-Supply ICSP Enable bit
  2473                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
  2474                           ;	Dedicated In-Circuit Debug/Programming Port Enable
  2475                           ;	ICPRT = OFF, ICPORT disabled
  2476                           ;	Extended Instruction Set Enable bit
  2477                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled
  2478                           ;	Background Debugger Enable bit
  2479                           ;	DEBUG = 0x1, unprogrammed default
  2480   300006                     	org	3145734
  2481   300006  85                 	db	133
  2482                           
  2483                           ; Padding undefined space
  2484   300007                     	org	3145735
  2485   300007  FF                 	db	255
  2486                           
  2487                           ;Config register CONFIG5L @ 0x300008
  2488                           ;	Block 0 Code Protect
  2489                           ;	CP0 = OFF, Block 0 is not code-protected
  2490                           ;	Block 1 Code Protect
  2491                           ;	CP1 = OFF, Block 1 is not code-protected
  2492                           ;	Block 2 Code Protect
  2493                           ;	CP2 = OFF, Block 2 is not code-protected
  2494                           ;	Block 3 Code Protect
  2495                           ;	CP3 = OFF, Block 3 is not code-protected
  2496   300008                     	org	3145736
  2497   300008  0F                 	db	15
  2498                           
  2499                           ;Config register CONFIG5H @ 0x300009
  2500                           ;	Boot Block Code Protect
  2501                           ;	CPB = OFF, Boot block is not code-protected
  2502                           ;	Data EEPROM Code Protect
  2503                           ;	CPD = OFF, Data EEPROM is not code-protected
  2504   300009                     	org	3145737
  2505   300009  C0                 	db	192
  2506                           
  2507                           ;Config register CONFIG6L @ 0x30000A
  2508                           ;	Block 0 Write Protect
  2509                           ;	WRT0 = OFF, Block 0 (0800-1FFFh) is not write-protected
  2510                           ;	Block 1 Write Protect
  2511                           ;	WRT1 = OFF, Block 1 (2000-3FFFh) is not write-protected
  2512                           ;	Block 2 Write Protect
  2513                           ;	WRT2 = OFF, Block 2 (04000-5FFFh) is not write-protected
  2514                           ;	Block 3 Write Protect
  2515                           ;	WRT3 = OFF, Block 3 (06000-7FFFh) is not write-protected
  2516   30000A                     	org	3145738
  2517   30000A  0F                 	db	15
  2518                           
  2519                           ;Config register CONFIG6H @ 0x30000B
  2520                           ;	Configuration Registers Write Protect
  2521                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  2522                           ;	Boot Block Write Protect
  2523                           ;	WRTB = OFF, Boot block (0000-7FFh) is not write-protected
  2524                           ;	Data EEPROM Write Protect
  2525                           ;	WRTD = OFF, Data EEPROM is not write-protected
  2526   30000B                     	org	3145739
  2527   30000B  E0                 	db	224
  2528                           
  2529                           ;Config register CONFIG7L @ 0x30000C
  2530                           ;	Block 0 Table Read Protect
  2531                           ;	EBTR0 = OFF, Block 0 is not protected from table reads executed in other blocks
  2532                           ;	Block 1 Table Read Protect
  2533                           ;	EBTR1 = OFF, Block 1 is not protected from table reads executed in other blocks
  2534                           ;	Block 2 Table Read Protect
  2535                           ;	EBTR2 = OFF, Block 2 is not protected from table reads executed in other blocks
  2536                           ;	Block 3 Table Read Protect
  2537                           ;	EBTR3 = OFF, Block 3 is not protected from table reads executed in other blocks
  2538   30000C                     	org	3145740
  2539   30000C  0F                 	db	15
  2540                           
  2541                           ;Config register CONFIG7H @ 0x30000D
  2542                           ;	Boot Block Table Read Protect
  2543                           ;	EBTRB = OFF, Boot block is not protected from table reads executed in other blocks
  2544   30000D                     	org	3145741
  2545   30000D  40                 	db	64
  2546                           tosu	equ	0xFFF
  2547                           tosh	equ	0xFFE
  2548                           tosl	equ	0xFFD
  2549                           stkptr	equ	0xFFC
  2550                           pclatu	equ	0xFFB
  2551                           pclath	equ	0xFFA
  2552                           pcl	equ	0xFF9
  2553                           tblptru	equ	0xFF8
  2554                           tblptrh	equ	0xFF7
  2555                           tblptrl	equ	0xFF6
  2556                           tablat	equ	0xFF5
  2557                           prodh	equ	0xFF4
  2558                           prodl	equ	0xFF3
  2559                           indf0	equ	0xFEF
  2560                           postinc0	equ	0xFEE
  2561                           postdec0	equ	0xFED
  2562                           preinc0	equ	0xFEC
  2563                           plusw0	equ	0xFEB
  2564                           fsr0h	equ	0xFEA
  2565                           fsr0l	equ	0xFE9
  2566                           wreg	equ	0xFE8
  2567                           indf1	equ	0xFE7
  2568                           postinc1	equ	0xFE6
  2569                           postdec1	equ	0xFE5
  2570                           preinc1	equ	0xFE4
  2571                           plusw1	equ	0xFE3
  2572                           fsr1h	equ	0xFE2
  2573                           fsr1l	equ	0xFE1
  2574                           bsr	equ	0xFE0
  2575                           indf2	equ	0xFDF
  2576                           postinc2	equ	0xFDE
  2577                           postdec2	equ	0xFDD
  2578                           preinc2	equ	0xFDC
  2579                           plusw2	equ	0xFDB
  2580                           fsr2h	equ	0xFDA
  2581                           fsr2l	equ	0xFD9
  2582                           status	equ	0xFD8

Data Sizes:
    Strings     253
    Constant    0
    Data        0
    BSS         37
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     27      64
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    printf@fmt	PTR const unsigned char  size(1) Largest target is 27
		 -> STR_1(CODE[7]), STR_10(CODE[9]), STR_11(CODE[14]), STR_12(CODE[17]), 
		 -> STR_13(CODE[10]), STR_14(CODE[14]), STR_15(CODE[17]), STR_16(CODE[11]), 
		 -> STR_17(CODE[14]), STR_18(CODE[17]), STR_19(CODE[8]), STR_2(CODE[10]), 
		 -> STR_20(CODE[27]), STR_21(CODE[26]), STR_22(CODE[26]), STR_3(CODE[11]), 
		 -> STR_4(CODE[18]), STR_5(CODE[18]), STR_6(CODE[11]), STR_7(CODE[9]), 
		 -> STR_8(CODE[8]), STR_9(CODE[13]), 

    S913$buffer	PTR unsigned char  size(2) Largest target is 0

    S913$source	PTR const unsigned char  size(2) Largest target is 0

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(COMRAM[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 27
		 -> STR_1(CODE[7]), STR_10(CODE[9]), STR_11(CODE[14]), STR_12(CODE[17]), 
		 -> STR_13(CODE[10]), STR_14(CODE[14]), STR_15(CODE[17]), STR_16(CODE[11]), 
		 -> STR_17(CODE[14]), STR_18(CODE[17]), STR_19(CODE[8]), STR_2(CODE[10]), 
		 -> STR_20(CODE[27]), STR_21(CODE[26]), STR_22(CODE[26]), STR_3(CODE[11]), 
		 -> STR_4(CODE[18]), STR_5(CODE[18]), STR_6(CODE[11]), STR_7(CODE[9]), 
		 -> STR_8(CODE[8]), STR_9(CODE[13]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 27
		 -> STR_1(CODE[7]), STR_10(CODE[9]), STR_11(CODE[14]), STR_12(CODE[17]), 
		 -> STR_13(CODE[10]), STR_14(CODE[14]), STR_15(CODE[17]), STR_16(CODE[11]), 
		 -> STR_17(CODE[14]), STR_18(CODE[17]), STR_19(CODE[8]), STR_2(CODE[10]), 
		 -> STR_20(CODE[27]), STR_21(CODE[26]), STR_22(CODE[26]), STR_3(CODE[11]), 
		 -> STR_4(CODE[18]), STR_5(CODE[18]), STR_6(CODE[11]), STR_7(CODE[9]), 
		 -> STR_8(CODE[8]), STR_9(CODE[13]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _main->_UART_Init
    _UART_RxAvailable->_UART_ErrorHandler
    _UART_Rx->_UART_ErrorHandler
    _UART_ErrorHandler->_printf
    _UART_config_show->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_fputc
    _fputc->_putch
    _putch->_UART_Tx

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   10179
                                             26 COMRAM     1     1      0
                         _Clock_Init
                          _UART_Init
                            _UART_Rx
                   _UART_RxAvailable
                            _UART_Tx
 ---------------------------------------------------------------------------------
 (1) _UART_RxAvailable                                     0     0      0    3135
                  _UART_ErrorHandler
 ---------------------------------------------------------------------------------
 (1) _UART_Rx                                              0     0      0    3135
                  _UART_ErrorHandler
                    _UART_Rx_FRAMING
                   _UART_Rx_OVERFLOW
 ---------------------------------------------------------------------------------
 (2) _UART_Rx_OVERFLOW                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UART_Rx_FRAMING                                      1     1      0       0
 ---------------------------------------------------------------------------------
 (2) _UART_ErrorHandler                                    3     3      0    3135
                                             22 COMRAM     3     3      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            4     0      4    3287
                                             22 COMRAM     4     0      4
                   _UART_config_show
                   _UART_select_baud
 ---------------------------------------------------------------------------------
 (2) _UART_select_baud                                     8     4      4      98
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _UART_config_show                                     0     0      0    3091
                             _printf
 ---------------------------------------------------------------------------------
 (3) _printf                                               4     3      1    3091
                                             20 COMRAM     2     1      1
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             5     1      4    1367
                                             15 COMRAM     5     1      4
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                            9     5      4    1020
                                             11 COMRAM     4     0      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4     660
                                              2 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0      30
                                              1 COMRAM     1     1      0
                            _UART_Tx
 ---------------------------------------------------------------------------------
 (1) _UART_Tx                                              1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Clock_Init                                           8     6      2     584
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Clock_Init
   _UART_Init
     _UART_config_show
       _printf
         _vfprintf
           _vfpfcnvrt
             _fputc
               _putch
                 _UART_Tx
     _UART_select_baud
   _UART_Rx
     _UART_ErrorHandler
       _printf
     _UART_Rx_FRAMING
     _UART_Rx_OVERFLOW
   _UART_RxAvailable
     _UART_ErrorHandler
   _UART_Tx

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      29        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     1B      40       1       67.4%
BITBIGSFRllh        36      0       0      26        0.0%
BITBIGSFRhhh        2C      0       0      20        0.0%
BITBIGSFRhhl        19      0       0      21        0.0%
BITBIGSFRlhh         C      0       0      23        0.0%
BITBIGSFRlll         A      0       0      27        0.0%
BITBIGSFRhlh         7      0       0      22        0.0%
BITBIGSFRlhll        6      0       0      25        0.0%
BITBIGSFRlhlh        2      0       0      24        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      40      28        0.0%
DATA                 0      0      40       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Sat Oct 05 21:12:30 2024

                        l83 0CFE                          l75 0CA2                          l92 0D52  
                        l87 0D28                          l79 0CCC                          l95 0FFE  
                        u10 1076                          u11 1072  UART_ErrorHandler@errorCode 003E  
                       l111 1068                         l121 101A                         l114 107A  
                       l131 0FB8                         l108 0C54                         l117 1098  
                       l125 1034                         l134 0FCC                         l160 09A2  
                       l128 108E                         l153 098C                         l154 0924  
                       l171 0AFE                         l139 0E96                         l172 0A96  
                       l165 0A82                         l166 0A1A                         l159 0A0A  
                       l178 0B14                         l900 0E1C                         l910 1068  
                       l912 1076                         l914 1092                         l882 0F04  
                       l859 104E                         l888 0F8E                         u140 100E  
                       u141 100A                         u150 102A                         u151 1026  
                       u500 0DD6                         u501 0DD2                         u510 0EBA  
                       u511 0EB6                         u600 0920                         u520 0F86  
                       u601 091A                         u521 0F82                         u610 0922  
                       u530 0C6C                         u531 0C68                         u700 09E6  
                       u620 0934                         u540 0C8E                         u701 09E2  
                       u621 092E                         u541 0C8A                         u710 09F6  
                       u630 094E                         u470 0D66                         u550 0CB8  
                       u711 09F2                         u631 094A                         u471 0D62  
                       u551 0CB4                         u800 0AA6                         u720 0A06  
                       u640 0968                         u480 0D78                         u560 0CEA  
                       u801 0AA0                         u721 0A02                         u641 0964  
                       u481 0D74                         u561 0CE6                         u810 0AC0  
                       u730 0A1A                         u650 0978                         u626 0936  
                       u490 0DA0                         u570 0D14                         u811 0ABC  
                       u731 0A16                         u651 0974                         u491 0D9C  
                       u571 0D10                         u820 0ADA                         u740 0A2A  
                       u660 0988                         u580 0D3E                         u821 0AD6  
                       u741 0A24                         u661 0984                         u581 0D3A  
                       u830 0AEA                         u806 0AA8                         u750 0A44  
                       u670 099C                         u590 0E30                         u831 0AE6  
                       u751 0A40                         u671 0998                         u591 0E2C  
                       u840 0AFA                         u760 0A5E                         u680 09B2  
                       u841 0AF6                         u761 0A5A                         u681 09AC  
                       u850 0B0E                         u770 0A6E                         u746 0A2C  
                       u690 09CC                         u851 0B0A                         u771 0A6A  
                       u691 09C8                         u780 0A7E                         u860 0F9E  
                       u781 0A7A                         u861 0F9A                         u790 0A92  
                       u686 09B4                         u870 0FAC                         u791 0A8E  
                       u871 0FA8                         u880 0FC6                         u881 0FC2  
                       u890 0F3A                         u891 0F36                         wreg 0FE8  
                _TXSTA1bits 0FAC                        l1080 102C                        l1072 1018  
                      l1064 1000                        l1066 100E                        l1084 1032  
                      l1076 101C                        l1068 1012                        l1510 0C80  
                      l1502 0C56                        l1078 102A                        l1520 0CC4  
                      l1512 0C8E                        l1504 0C5E                        l1530 0D14  
                      l1522 0CDC                        l1514 0C9A                        l1506 0C6C  
                      l1610 0E4C                        l1602 0E20                        l1460 0D82  
                      l1532 0D20                        l1524 0CEA                        l1516 0CAA  
                      l1508 0C78                        l1540 0B16                        l1700 0FEA  
                      l1612 0E58                        l1630 0938                        l1622 0900  
                      l1462 0DA0                        l1454 0D54                        l1470 0EBA  
                      l1534 0D30                        l1526 0CF6                        l1518 0CB8  
                      l1550 0B4A                        l1542 0B1A                        l1710 0FF4  
                      l1702 0FEC                        l1606 0E34                        l1640 0988  
                      l1632 093E                        l1624 0904                        l1464 0DD6  
                      l1456 0D66                        l1472 0EC2                        l1480 0EDE  
                      l1536 0D3E                        l1528 0D06                        l1552 0B56  
                      l1544 0B26                        l1560 0B7A                        l1712 0FF8  
                      l1704 0FEE                        l1608 0E40                        l1616 0E64  
                      l1720 0FB2                        l1650 09CC                        l1642 099C  
                      l1634 094E                        l1626 0924                        l1458 0D78  
                      l1474 0ECE                        l1490 0F6A                        l1538 0D4A  
                      l1554 0B62                        l1546 0B32                        l1706 0FF0  
                      l1714 0F90                        l1660 0A2E                        l1652 09E6  
                      l1644 099E                        l1636 0968                        l1628 0924  
                      l1476 0ED2                        l1468 0E98                        l1492 0F86  
                      l1556 0B6E                        l1548 0B3E                        l1708 0FF2  
                      l1732 107C                        l1716 0F9E                        l1740 0F12  
                      l1670 0A7E                        l1662 0A34                        l1654 09F6  
                      l1646 09B6                        l1638 0978                        l1486 0F4E  
                      l1734 108C                        l1718 0FAC                        l1742 0F26  
                      l1680 0AC0                        l1672 0A92                        l1664 0A44  
                      l1656 0A06                        l1648 09BC                        l1488 0F56  
                      l1496 1036                        l1728 0FCA                        l1744 0F3A  
                      l1690 0B10                        l1682 0ADA                        l1674 0A96  
                      l1666 0A5E                        l1658 0A1A                        l1498 103A  
                      l1746 0F40                        l1738 0F06                        l1684 0AEA  
                      l1676 0AAA                        l1668 0A6E                        l1686 0AFA  
                      l1678 0AB0                        l1694 0FCE                        l1688 0B0E  
                      l1696 0FD2                        l1970 0B98                        l1698 0FD6  
                      l1972 0C22                        l1980 0BEA                        l1982 0BF8  
                      l1974 0C3E                        l1984 0C06                        l1976 0BCE  
                      l1968 0E78                        l1986 0C14                        l1978 0BDC  
                      l1988 0C30                        STR_1 08F7                        STR_2 08CB  
                      STR_3 08B6                        STR_4 0862                        STR_5 0850  
                      STR_6 08A0                        STR_7 08DE                        STR_8 08EF  
                      STR_9 0893                        _CREN 7D5C                        _SPEN 7D5F  
                      _TRMT 7D61             __end_of_UART_Rx 1090             __end_of_UART_Tx 107C  
                      _dbuf 0001                        _main 0F06                        _prec 0023  
                      fsr1h 0FE2                        fsr2h 0FDA                        indf2 0FDF  
                      fsr1l 0FE1                        fsr2l 0FD9                        start 0000  
              ___param_bank 0000    UART_select_baud@baudrate 0026                  _Clock_Init 0900  
                     ?_main 0026                       STR_10 08D5                       STR_11 0885  
                     STR_12 0874                       STR_20 0801                       STR_13 08C1  
                     STR_21 0836                       STR_14 0885                       STR_22 081C  
                     STR_15 0874                       STR_16 08AB                       STR_17 0885  
                     STR_18 0874                       STR_19 08E7                       _BRGH1 7D62  
                     _RC1IF 7CF5                       _RCREG 0FAE           Clock_Init@bStatus 0028  
              vfpfcnvrt@fmt 0033            _UART_config_show 0C56                       _SPBRG 0FAF  
                     _TXEN1 7D65                       _SYNC1 7D64            ?_UART_Rx_FRAMING 0026  
                     _flags 0025                       _fputc 0D54                       _width 0021  
                     _putch 1090                       main@x 0040                       tablat 0FF5  
                     status 0FD8             __initialization 1050                __end_of_main 0F4E  
                    ??_main 0040               __activetblptr 0002                   ??_UART_Rx 003F  
                 ??_UART_Tx 0026                      ?_fputc 0028                      _BRG161 7DC3  
                    ?_putch 0026                      _ANSELC 0F5D                      _RCREG1 0FAE  
                    _SPBRGH 0FB0                      _TRISC6 7CA6                      _TRISC7 7CA7  
                    _TXREG1 0FAD                vfprintf@cfmt 0039           __end_of_UART_Init 1000  
               ?_Clock_Init 0026                      clear_0 1056                      isa$std 0001  
                    _printf 1036           ?_UART_RxAvailable 0026           ?_UART_Rx_OVERFLOW 0026  
                    fputc@c 0028          ??_UART_RxAvailable 003F          ??_UART_Rx_OVERFLOW 0026  
              __mediumconst 0000                      tblptrh 0FF7                      tblptrl 0FF6  
                    tblptru 0FF8            __end_of_vfprintf 0F90                  __accesstop 0060  
   __end_of__initialization 105C               ___rparam_used 0001            _UART_select_baud 0B16  
            __pcstackCOMRAM 0026               __end_of_fputc 0E1E           _UART_ErrorHandler 0E1E  
             __end_of_putch 109A          ?_UART_ErrorHandler 0026         ??_UART_ErrorHandler 003C  
                   ??_fputc 002C                     ??_putch 0027    __end_of_UART_config_show 0D54  
       Clock_Init@bItTimeEn 002C   __end_of_UART_ErrorHandler 0E98                     ?_printf 003A  
                   _UART_Rx 107C                     _UART_Tx 1066                     __Hparam 0000  
                   __Lparam 0000                   ?_vfprintf 0035                __psmallconst 0800  
                   __pcinit 1050                     __ramtop 0800                     __ptext0 0F06  
                   __ptext1 0F90                     __ptext2 107C                     __ptext3 1000  
                   __ptext4 101C                     __ptext5 0E1E                     __ptext6 0FCE  
                   __ptext7 0B16                     __ptext8 0C56                     __ptext9 1036  
               UART_Tx@dato 0026        end_of_initialization 105C                     fputc@fp 002A  
             __Lmediumconst 0000       Clock_Init@bStatus_471 002B       Clock_Init@bStatus_467 0029  
     Clock_Init@bStatus_468 002A           __end_of_vfpfcnvrt 0F06                   _RCSTAbits 0FAB  
                   postdec2 0FDD                     postinc0 0FEE                     postinc1 0FE6  
                   postinc2 0FDE                ??_Clock_Init 0028                  ??_vfprintf 0039  
                 _UART_Init 0FCE    __end_of_UART_select_baud 0C56          __end_of_Clock_Init 0B16  
                 _TXSTAbits 0FAC                 vfpfcnvrt@ap 0034                 vfpfcnvrt@fp 0031  
                ?_UART_Init 003C              __end_of_printf 1050         start_initialization 1050  
      Clock_Init@s16Timeout 0026           ?_UART_config_show 0026                 vfprintf@fmt 0037  
         ??_UART_Rx_FRAMING 0026          ??_UART_config_show 003C                    ??_printf 003B  
               __pbssCOMRAM 0001                    ?_UART_Rx 0026                    ?_UART_Tx 0026  
               ??_UART_Init 0040                 __smallconst 0800                    _BAUDCON1 0FB8  
          _UART_RxAvailable 0F90            _UART_Rx_OVERFLOW 1000                   _vfpfcnvrt 0E98  
         UART_Init@baudrate 003C           ?_UART_select_baud 0026          ??_UART_select_baud 002A  
                  __Hrparam 0000                  vfprintf@ap 0038                    __Lrparam 0000  
                vfprintf@fp 0035                  ?_vfpfcnvrt 0031                    __ptext10 0F4E  
                  __ptext11 0E98                    __ptext12 0D54                    __ptext13 1090  
                  __ptext14 1066                    __ptext15 0900             _UART_Rx_FRAMING 101C  
               _OSCCON2bits 0FD2                    isa$xinst 0000                    _vfprintf 0F4E  
                 printf@fmt 003A                   putch@data 0027                 _OSCTUNEbits 0F9B  
                _OSCCONbits 0FD3                    printf@ap 003B                 ??_vfpfcnvrt 0035  
  __end_of_UART_RxAvailable 0FCE    __end_of_UART_Rx_OVERFLOW 101C        Clock_Init@returnCode 002D  
   __end_of_UART_Rx_FRAMING 1036  
