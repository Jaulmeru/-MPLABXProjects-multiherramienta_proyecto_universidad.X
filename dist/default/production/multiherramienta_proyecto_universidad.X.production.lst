

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Fri Oct 11 20:20:15 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F45K50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    47                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    48                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    49   000000                     
    50                           ; Generated 12/10/2023 GMT
    51                           ; 
    52                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    53                           ; All rights reserved.
    54                           ; 
    55                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    56                           ; 
    57                           ; Redistribution and use in source and binary forms, with or without modification, are
    58                           ; permitted provided that the following conditions are met:
    59                           ; 
    60                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    61                           ;        conditions and the following disclaimer.
    62                           ; 
    63                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    64                           ;        of conditions and the following disclaimer in the documentation and/or other
    65                           ;        materials provided with the distribution. Publication is not required when
    66                           ;        this file is used in an embedded application.
    67                           ; 
    68                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    69                           ;        software without specific prior written permission.
    70                           ; 
    71                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    72                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    73                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    74                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    75                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    76                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    77                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    78                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    79                           ; 
    80                           ; 
    81                           ; Code-generator required, PIC18F45K50 Definitions
    82                           ; 
    83                           ; SFR Addresses
    84   000000                     
    85                           	psect	idataCOMRAM
    86   006932                     __pidataCOMRAM:
    87                           	callstack 0
    88                           
    89                           ;initializer for _comandos
    90   006932  A1                 	db	low STR_24
    91   006933  7F                 	db	high STR_24
    92   006934  F6                 	db	low STR_25
    93   006935  7F                 	db	high STR_25
    94   006936  BF                 	db	low STR_26
    95   006937  7F                 	db	high STR_26
    96                           
    97                           	psect	mediumconst
    98   007D2C                     __pmediumconst:
    99                           	callstack 0
   100   007D2C  00                 	db	0
   101   007D2D                     _cantParams:
   102                           	callstack 0
   103   007D2D  00                 	db	0
   104   007D2E  00                 	db	0
   105   007D2F  03                 	db	3
   106   007D30                     __end_of_cantParams:
   107                           	callstack 0
   108   007D30  0A                 	db	10
   109   007D31                     __end_of_charStop:
   110                           	callstack 0
   111   000000                     _RCREG	set	4014
   112   000000                     _TXREG1	set	4013
   113   000000                     _SPBRG	set	4015
   114   000000                     _SPBRGH	set	4016
   115   000000                     _BRG161	set	32195
   116   000000                     _RCREG1	set	4014
   117   000000                     _TXSTAbits	set	4012
   118   000000                     _RCSTAbits	set	4011
   119   000000                     _BAUDCON1	set	4024
   120   000000                     _TXSTA1bits	set	4012
   121   000000                     _TRMT	set	32097
   122   000000                     _TRISC7	set	31911
   123   000000                     _CREN	set	32092
   124   000000                     _TXEN1	set	32101
   125   000000                     _BRGH1	set	32098
   126   000000                     _ANSELC	set	3933
   127   000000                     _TRISC6	set	31910
   128   000000                     _SPEN	set	32095
   129   000000                     _SYNC1	set	32100
   130   000000                     _OSCCON2bits	set	4050
   131   000000                     _OSCTUNEbits	set	3995
   132   000000                     _RC1IF	set	31989
   133   000000                     _OSCCONbits	set	4051
   134   007D31                     STR_32:
   135   007D31  5B                 	db	91	;'['
   136   007D32  45                 	db	69	;'E'
   137   007D33  73                 	db	115	;'s'
   138   007D34  63                 	db	99	;'c'
   139   007D35  61                 	db	97	;'a'
   140   007D36  70                 	db	112	;'p'
   141   007D37  65                 	db	101	;'e'
   142   007D38  5D                 	db	93	;']'
   143   007D39  20                 	db	32
   144   007D3A  20                 	db	32
   145   007D3B  20                 	db	32
   146   007D3C  20                 	db	32
   147   007D3D  43                 	db	67	;'C'
   148   007D3E  61                 	db	97	;'a'
   149   007D3F  6E                 	db	110	;'n'
   150   007D40  63                 	db	99	;'c'
   151   007D41  65                 	db	101	;'e'
   152   007D42  6C                 	db	108	;'l'
   153   007D43  61                 	db	97	;'a'
   154   007D44  72                 	db	114	;'r'
   155   007D45  20                 	db	32
   156   007D46  6C                 	db	108	;'l'
   157   007D47  61                 	db	97	;'a'
   158   007D48  20                 	db	32
   159   007D49  65                 	db	101	;'e'
   160   007D4A  73                 	db	115	;'s'
   161   007D4B  63                 	db	99	;'c'
   162   007D4C  72                 	db	114	;'r'
   163   007D4D  69                 	db	105	;'i'
   164   007D4E  74                 	db	116	;'t'
   165   007D4F  75                 	db	117	;'u'
   166   007D50  72                 	db	114	;'r'
   167   007D51  61                 	db	97	;'a'
   168   007D52  20                 	db	32
   169   007D53  64                 	db	100	;'d'
   170   007D54  65                 	db	101	;'e'
   171   007D55  20                 	db	32
   172   007D56  75                 	db	117	;'u'
   173   007D57  6E                 	db	110	;'n'
   174   007D58  20                 	db	32
   175   007D59  63                 	db	99	;'c'
   176   007D5A  6F                 	db	111	;'o'
   177   007D5B  6D                 	db	109	;'m'
   178   007D5C  61                 	db	97	;'a'
   179   007D5D  6E                 	db	110	;'n'
   180   007D5E  64                 	db	100	;'d'
   181   007D5F  6F                 	db	111	;'o'
   182   007D60  0D                 	db	13
   183   007D61  0A                 	db	10
   184   007D62  00                 	db	0
   185   007D63                     STR_29:
   186   007D63  3C                 	db	60	;'<'
   187   007D64  63                 	db	99	;'c'
   188   007D65  6F                 	db	111	;'o'
   189   007D66  6D                 	db	109	;'m'
   190   007D67  61                 	db	97	;'a'
   191   007D68  6E                 	db	110	;'n'
   192   007D69  64                 	db	100	;'d'
   193   007D6A  6F                 	db	111	;'o'
   194   007D6B  3E                 	db	62	;'>'
   195   007D6C  20                 	db	32
   196   007D6D  3C                 	db	60	;'<'
   197   007D6E  70                 	db	112	;'p'
   198   007D6F  61                 	db	97	;'a'
   199   007D70  72                 	db	114	;'r'
   200   007D71  61                 	db	97	;'a'
   201   007D72  6D                 	db	109	;'m'
   202   007D73  65                 	db	101	;'e'
   203   007D74  74                 	db	116	;'t'
   204   007D75  72                 	db	114	;'r'
   205   007D76  6F                 	db	111	;'o'
   206   007D77  31                 	db	49	;'1'
   207   007D78  3E                 	db	62	;'>'
   208   007D79  20                 	db	32
   209   007D7A  3C                 	db	60	;'<'
   210   007D7B  70                 	db	112	;'p'
   211   007D7C  61                 	db	97	;'a'
   212   007D7D  72                 	db	114	;'r'
   213   007D7E  61                 	db	97	;'a'
   214   007D7F  6D                 	db	109	;'m'
   215   007D80  65                 	db	101	;'e'
   216   007D81  74                 	db	116	;'t'
   217   007D82  72                 	db	114	;'r'
   218   007D83  6F                 	db	111	;'o'
   219   007D84  4E                 	db	78	;'N'
   220   007D85  3E                 	db	62	;'>'
   221   007D86  0D                 	db	13
   222   007D87  0A                 	db	10
   223   007D88  00                 	db	0
   224   007D89                     STR_31:
   225   007D89  5B                 	db	91	;'['
   226   007D8A  42                 	db	66	;'B'
   227   007D8B  61                 	db	97	;'a'
   228   007D8C  63                 	db	99	;'c'
   229   007D8D  6B                 	db	107	;'k'
   230   007D8E  73                 	db	115	;'s'
   231   007D8F  70                 	db	112	;'p'
   232   007D90  61                 	db	97	;'a'
   233   007D91  63                 	db	99	;'c'
   234   007D92  65                 	db	101	;'e'
   235   007D93  5D                 	db	93	;']'
   236   007D94  20                 	db	32
   237   007D95  50                 	db	80	;'P'
   238   007D96  61                 	db	97	;'a'
   239   007D97  72                 	db	114	;'r'
   240   007D98  61                 	db	97	;'a'
   241   007D99  20                 	db	32
   242   007D9A  62                 	db	98	;'b'
   243   007D9B  6F                 	db	111	;'o'
   244   007D9C  72                 	db	114	;'r'
   245   007D9D  72                 	db	114	;'r'
   246   007D9E  61                 	db	97	;'a'
   247   007D9F  72                 	db	114	;'r'
   248   007DA0  20                 	db	32
   249   007DA1  75                 	db	117	;'u'
   250   007DA2  6E                 	db	110	;'n'
   251   007DA3  20                 	db	32
   252   007DA4  63                 	db	99	;'c'
   253   007DA5  61                 	db	97	;'a'
   254   007DA6  72                 	db	114	;'r'
   255   007DA7  61                 	db	97	;'a'
   256   007DA8  63                 	db	99	;'c'
   257   007DA9  74                 	db	116	;'t'
   258   007DAA  65                 	db	101	;'e'
   259   007DAB  72                 	db	114	;'r'
   260   007DAC  0D                 	db	13
   261   007DAD  0A                 	db	10
   262   007DAE  00                 	db	0
   263   007DAF                     STR_30:
   264   007DAF  5B                 	db	91	;'['
   265   007DB0  45                 	db	69	;'E'
   266   007DB1  6E                 	db	110	;'n'
   267   007DB2  74                 	db	116	;'t'
   268   007DB3  65                 	db	101	;'e'
   269   007DB4  72                 	db	114	;'r'
   270   007DB5  5D                 	db	93	;']'
   271   007DB6  20                 	db	32
   272   007DB7  20                 	db	32
   273   007DB8  20                 	db	32
   274   007DB9  20                 	db	32
   275   007DBA  20                 	db	32
   276   007DBB  50                 	db	80	;'P'
   277   007DBC  61                 	db	97	;'a'
   278   007DBD  72                 	db	114	;'r'
   279   007DBE  61                 	db	97	;'a'
   280   007DBF  20                 	db	32
   281   007DC0  65                 	db	101	;'e'
   282   007DC1  6E                 	db	110	;'n'
   283   007DC2  76                 	db	118	;'v'
   284   007DC3  69                 	db	105	;'i'
   285   007DC4  61                 	db	97	;'a'
   286   007DC5  72                 	db	114	;'r'
   287   007DC6  20                 	db	32
   288   007DC7  65                 	db	101	;'e'
   289   007DC8  6C                 	db	108	;'l'
   290   007DC9  20                 	db	32
   291   007DCA  63                 	db	99	;'c'
   292   007DCB  6F                 	db	111	;'o'
   293   007DCC  6D                 	db	109	;'m'
   294   007DCD  61                 	db	97	;'a'
   295   007DCE  6E                 	db	110	;'n'
   296   007DCF  64                 	db	100	;'d'
   297   007DD0  6F                 	db	111	;'o'
   298   007DD1  0D                 	db	13
   299   007DD2  0A                 	db	10
   300   007DD3  00                 	db	0
   301   007DD4                     STR_34:
   302   007DD4  0D                 	db	13
   303   007DD5  0A                 	db	10
   304   007DD6  4C                 	db	76	;'L'
   305   007DD7  69                 	db	105	;'i'
   306   007DD8  6E                 	db	110	;'n'
   307   007DD9  65                 	db	101	;'e'
   308   007DDA  61                 	db	97	;'a'
   309   007DDB  20                 	db	32
   310   007DDC  64                 	db	100	;'d'
   311   007DDD  65                 	db	101	;'e'
   312   007DDE  20                 	db	32
   313   007DDF  63                 	db	99	;'c'
   314   007DE0  6F                 	db	111	;'o'
   315   007DE1  6D                 	db	109	;'m'
   316   007DE2  61                 	db	97	;'a'
   317   007DE3  6E                 	db	110	;'n'
   318   007DE4  64                 	db	100	;'d'
   319   007DE5  6F                 	db	111	;'o'
   320   007DE6  73                 	db	115	;'s'
   321   007DE7  20                 	db	32
   322   007DE8  64                 	db	100	;'d'
   323   007DE9  65                 	db	101	;'e'
   324   007DEA  73                 	db	115	;'s'
   325   007DEB  61                 	db	97	;'a'
   326   007DEC  63                 	db	99	;'c'
   327   007DED  74                 	db	116	;'t'
   328   007DEE  69                 	db	105	;'i'
   329   007DEF  76                 	db	118	;'v'
   330   007DF0  61                 	db	97	;'a'
   331   007DF1  64                 	db	100	;'d'
   332   007DF2  61                 	db	97	;'a'
   333   007DF3  0D                 	db	13
   334   007DF4  0A                 	db	10
   335   007DF5  0D                 	db	13
   336   007DF6  0A                 	db	10
   337   007DF7  00                 	db	0
   338   007DF8                     STR_27:
   339   007DF8  4C                 	db	76	;'L'
   340   007DF9  69                 	db	105	;'i'
   341   007DFA  6E                 	db	110	;'n'
   342   007DFB  65                 	db	101	;'e'
   343   007DFC  61                 	db	97	;'a'
   344   007DFD  20                 	db	32
   345   007DFE  64                 	db	100	;'d'
   346   007DFF  65                 	db	101	;'e'
   347   007E00  20                 	db	32
   348   007E01  63                 	db	99	;'c'
   349   007E02  6F                 	db	111	;'o'
   350   007E03  6D                 	db	109	;'m'
   351   007E04  61                 	db	97	;'a'
   352   007E05  6E                 	db	110	;'n'
   353   007E06  64                 	db	100	;'d'
   354   007E07  6F                 	db	111	;'o'
   355   007E08  73                 	db	115	;'s'
   356   007E09  20                 	db	32
   357   007E0A  69                 	db	105	;'i'
   358   007E0B  6E                 	db	110	;'n'
   359   007E0C  69                 	db	105	;'i'
   360   007E0D  63                 	db	99	;'c'
   361   007E0E  69                 	db	105	;'i'
   362   007E0F  61                 	db	97	;'a'
   363   007E10  64                 	db	100	;'d'
   364   007E11  61                 	db	97	;'a'
   365   007E12  0D                 	db	13
   366   007E13  0A                 	db	10
   367   007E14  00                 	db	0
   368   007E15                     STR_21:
   369   007E15  45                 	db	69	;'E'
   370   007E16  52                 	db	82	;'R'
   371   007E17  52                 	db	82	;'R'
   372   007E18  4F                 	db	79	;'O'
   373   007E19  52                 	db	82	;'R'
   374   007E1A  5F                 	db	95	;'_'
   375   007E1B  43                 	db	67	;'C'
   376   007E1C  4F                 	db	79	;'O'
   377   007E1D  44                 	db	68	;'D'
   378   007E1E  45                 	db	69	;'E'
   379   007E1F  5F                 	db	95	;'_'
   380   007E20  55                 	db	85	;'U'
   381   007E21  41                 	db	65	;'A'
   382   007E22  52                 	db	82	;'R'
   383   007E23  54                 	db	84	;'T'
   384   007E24  5F                 	db	95	;'_'
   385   007E25  4F                 	db	79	;'O'
   386   007E26  56                 	db	86	;'V'
   387   007E27  45                 	db	69	;'E'
   388   007E28  52                 	db	82	;'R'
   389   007E29  46                 	db	70	;'F'
   390   007E2A  4C                 	db	76	;'L'
   391   007E2B  4F                 	db	79	;'O'
   392   007E2C  57                 	db	87	;'W'
   393   007E2D  0D                 	db	13
   394   007E2E  0A                 	db	10
   395   007E2F  00                 	db	0
   396   007E30                     STR_23:
   397   007E30  45                 	db	69	;'E'
   398   007E31  52                 	db	82	;'R'
   399   007E32  52                 	db	82	;'R'
   400   007E33  4F                 	db	79	;'O'
   401   007E34  52                 	db	82	;'R'
   402   007E35  5F                 	db	95	;'_'
   403   007E36  43                 	db	67	;'C'
   404   007E37  4F                 	db	79	;'O'
   405   007E38  44                 	db	68	;'D'
   406   007E39  45                 	db	69	;'E'
   407   007E3A  5F                 	db	95	;'_'
   408   007E3B  55                 	db	85	;'U'
   409   007E3C  41                 	db	65	;'A'
   410   007E3D  52                 	db	82	;'R'
   411   007E3E  54                 	db	84	;'T'
   412   007E3F  5F                 	db	95	;'_'
   413   007E40  43                 	db	67	;'C'
   414   007E41  4F                 	db	79	;'O'
   415   007E42  4E                 	db	78	;'N'
   416   007E43  46                 	db	70	;'F'
   417   007E44  49                 	db	73	;'I'
   418   007E45  47                 	db	71	;'G'
   419   007E46  20                 	db	32
   420   007E47  0D                 	db	13
   421   007E48  0A                 	db	10
   422   007E49  00                 	db	0
   423   007E4A                     STR_22:
   424   007E4A  45                 	db	69	;'E'
   425   007E4B  52                 	db	82	;'R'
   426   007E4C  52                 	db	82	;'R'
   427   007E4D  4F                 	db	79	;'O'
   428   007E4E  52                 	db	82	;'R'
   429   007E4F  5F                 	db	95	;'_'
   430   007E50  43                 	db	67	;'C'
   431   007E51  4F                 	db	79	;'O'
   432   007E52  44                 	db	68	;'D'
   433   007E53  45                 	db	69	;'E'
   434   007E54  5F                 	db	95	;'_'
   435   007E55  55                 	db	85	;'U'
   436   007E56  41                 	db	65	;'A'
   437   007E57  52                 	db	82	;'R'
   438   007E58  54                 	db	84	;'T'
   439   007E59  5F                 	db	95	;'_'
   440   007E5A  46                 	db	70	;'F'
   441   007E5B  52                 	db	82	;'R'
   442   007E5C  41                 	db	65	;'A'
   443   007E5D  4D                 	db	77	;'M'
   444   007E5E  49                 	db	73	;'I'
   445   007E5F  4E                 	db	78	;'N'
   446   007E60  47                 	db	71	;'G'
   447   007E61  0D                 	db	13
   448   007E62  0A                 	db	10
   449   007E63  00                 	db	0
   450   007E64                     STR_44:
   451   007E64  0D                 	db	13
   452   007E65  0A                 	db	10
   453   007E66  45                 	db	69	;'E'
   454   007E67  43                 	db	67	;'C'
   455   007E68  5F                 	db	95	;'_'
   456   007E69  43                 	db	67	;'C'
   457   007E6A  4C                 	db	76	;'L'
   458   007E6B  5F                 	db	95	;'_'
   459   007E6C  57                 	db	87	;'W'
   460   007E6D  52                 	db	82	;'R'
   461   007E6E  4F                 	db	79	;'O'
   462   007E6F  4E                 	db	78	;'N'
   463   007E70  47                 	db	71	;'G'
   464   007E71  4E                 	db	78	;'N'
   465   007E72  55                 	db	85	;'U'
   466   007E73  4D                 	db	77	;'M'
   467   007E74  50                 	db	80	;'P'
   468   007E75  41                 	db	65	;'A'
   469   007E76  52                 	db	82	;'R'
   470   007E77  41                 	db	65	;'A'
   471   007E78  4D                 	db	77	;'M'
   472   007E79  53                 	db	83	;'S'
   473   007E7A  0D                 	db	13
   474   007E7B  0A                 	db	10
   475   007E7C  00                 	db	0
   476   007E7D                     STR_45:
   477   007E7D  0D                 	db	13
   478   007E7E  0A                 	db	10
   479   007E7F  45                 	db	69	;'E'
   480   007E80  43                 	db	67	;'C'
   481   007E81  5F                 	db	95	;'_'
   482   007E82  43                 	db	67	;'C'
   483   007E83  4C                 	db	76	;'L'
   484   007E84  5F                 	db	95	;'_'
   485   007E85  57                 	db	87	;'W'
   486   007E86  52                 	db	82	;'R'
   487   007E87  4F                 	db	79	;'O'
   488   007E88  4E                 	db	78	;'N'
   489   007E89  47                 	db	71	;'G'
   490   007E8A  43                 	db	67	;'C'
   491   007E8B  4F                 	db	79	;'O'
   492   007E8C  4D                 	db	77	;'M'
   493   007E8D  4D                 	db	77	;'M'
   494   007E8E  41                 	db	65	;'A'
   495   007E8F  4E                 	db	78	;'N'
   496   007E90  44                 	db	68	;'D'
   497   007E91  0D                 	db	13
   498   007E92  0A                 	db	10
   499   007E93  00                 	db	0
   500   007E94                     STR_43:
   501   007E94  0D                 	db	13
   502   007E95  0A                 	db	10
   503   007E96  45                 	db	69	;'E'
   504   007E97  43                 	db	67	;'C'
   505   007E98  5F                 	db	95	;'_'
   506   007E99  43                 	db	67	;'C'
   507   007E9A  4C                 	db	76	;'L'
   508   007E9B  5F                 	db	95	;'_'
   509   007E9C  4D                 	db	77	;'M'
   510   007E9D  41                 	db	65	;'A'
   511   007E9E  58                 	db	88	;'X'
   512   007E9F  4E                 	db	78	;'N'
   513   007EA0  55                 	db	85	;'U'
   514   007EA1  4D                 	db	77	;'M'
   515   007EA2  50                 	db	80	;'P'
   516   007EA3  41                 	db	65	;'A'
   517   007EA4  52                 	db	82	;'R'
   518   007EA5  41                 	db	65	;'A'
   519   007EA6  4D                 	db	77	;'M'
   520   007EA7  53                 	db	83	;'S'
   521   007EA8  0D                 	db	13
   522   007EA9  0A                 	db	10
   523   007EAA  00                 	db	0
   524   007EAB                     STR_50:
   525   007EAB  4C                 	db	76	;'L'
   526   007EAC  69                 	db	105	;'i'
   527   007EAD  73                 	db	115	;'s'
   528   007EAE  74                 	db	116	;'t'
   529   007EAF  61                 	db	97	;'a'
   530   007EB0  20                 	db	32
   531   007EB1  64                 	db	100	;'d'
   532   007EB2  65                 	db	101	;'e'
   533   007EB3  20                 	db	32
   534   007EB4  63                 	db	99	;'c'
   535   007EB5  6F                 	db	111	;'o'
   536   007EB6  6D                 	db	109	;'m'
   537   007EB7  61                 	db	97	;'a'
   538   007EB8  6E                 	db	110	;'n'
   539   007EB9  64                 	db	100	;'d'
   540   007EBA  6F                 	db	111	;'o'
   541   007EBB  73                 	db	115	;'s'
   542   007EBC  3A                 	db	58	;':'
   543   007EBD  0D                 	db	13
   544   007EBE  0A                 	db	10
   545   007EBF  00                 	db	0
   546   007EC0                     STR_42:
   547   007EC0  0D                 	db	13
   548   007EC1  0A                 	db	10
   549   007EC2  45                 	db	69	;'E'
   550   007EC3  43                 	db	67	;'C'
   551   007EC4  5F                 	db	95	;'_'
   552   007EC5  43                 	db	67	;'C'
   553   007EC6  4C                 	db	76	;'L'
   554   007EC7  5F                 	db	95	;'_'
   555   007EC8  57                 	db	87	;'W'
   556   007EC9  4F                 	db	79	;'O'
   557   007ECA  52                 	db	82	;'R'
   558   007ECB  44                 	db	68	;'D'
   559   007ECC  4F                 	db	79	;'O'
   560   007ECD  56                 	db	86	;'V'
   561   007ECE  45                 	db	69	;'E'
   562   007ECF  52                 	db	82	;'R'
   563   007ED0  0D                 	db	13
   564   007ED1  0A                 	db	10
   565   007ED2  00                 	db	0
   566   007ED3                     STR_40:
   567   007ED3  0D                 	db	13
   568   007ED4  0A                 	db	10
   569   007ED5  45                 	db	69	;'E'
   570   007ED6  43                 	db	67	;'C'
   571   007ED7  5F                 	db	95	;'_'
   572   007ED8  43                 	db	67	;'C'
   573   007ED9  4C                 	db	76	;'L'
   574   007EDA  5F                 	db	95	;'_'
   575   007EDB  42                 	db	66	;'B'
   576   007EDC  55                 	db	85	;'U'
   577   007EDD  46                 	db	70	;'F'
   578   007EDE  46                 	db	70	;'F'
   579   007EDF  4F                 	db	79	;'O'
   580   007EE0  56                 	db	86	;'V'
   581   007EE1  45                 	db	69	;'E'
   582   007EE2  52                 	db	82	;'R'
   583   007EE3  0D                 	db	13
   584   007EE4  0A                 	db	10
   585   007EE5  00                 	db	0
   586   007EE6                     STR_39:
   587   007EE6  50                 	db	80	;'P'
   588   007EE7  61                 	db	97	;'a'
   589   007EE8  72                 	db	114	;'r'
   590   007EE9  61                 	db	97	;'a'
   591   007EEA  6D                 	db	109	;'m'
   592   007EEB  65                 	db	101	;'e'
   593   007EEC  74                 	db	116	;'t'
   594   007EED  72                 	db	114	;'r'
   595   007EEE  6F                 	db	111	;'o'
   596   007EEF  20                 	db	32
   597   007EF0  25                 	db	37
   598   007EF1  64                 	db	100	;'d'
   599   007EF2  3A                 	db	58	;':'
   600   007EF3  20                 	db	32
   601   007EF4  25                 	db	37
   602   007EF5  73                 	db	115	;'s'
   603   007EF6  0D                 	db	13
   604   007EF7  0A                 	db	10
   605   007EF8  00                 	db	0
   606   007EF9                     STR_41:
   607   007EF9  0D                 	db	13
   608   007EFA  0A                 	db	10
   609   007EFB  45                 	db	69	;'E'
   610   007EFC  43                 	db	67	;'C'
   611   007EFD  5F                 	db	95	;'_'
   612   007EFE  43                 	db	67	;'C'
   613   007EFF  4C                 	db	76	;'L'
   614   007F00  5F                 	db	95	;'_'
   615   007F01  4E                 	db	78	;'N'
   616   007F02  4F                 	db	79	;'O'
   617   007F03  57                 	db	87	;'W'
   618   007F04  4F                 	db	79	;'O'
   619   007F05  52                 	db	82	;'R'
   620   007F06  44                 	db	68	;'D'
   621   007F07  53                 	db	83	;'S'
   622   007F08  0D                 	db	13
   623   007F09  0A                 	db	10
   624   007F0A  00                 	db	0
   625   007F0B                     STR_5:
   626   007F0B  62                 	db	98	;'b'
   627   007F0C  61                 	db	97	;'a'
   628   007F0D  6A                 	db	106	;'j'
   629   007F0E  61                 	db	97	;'a'
   630   007F0F  20                 	db	32
   631   007F10  76                 	db	118	;'v'
   632   007F11  65                 	db	101	;'e'
   633   007F12  6C                 	db	108	;'l'
   634   007F13  6F                 	db	111	;'o'
   635   007F14  63                 	db	99	;'c'
   636   007F15  69                 	db	105	;'i'
   637   007F16  64                 	db	100	;'d'
   638   007F17  61                 	db	97	;'a'
   639   007F18  64                 	db	100	;'d'
   640   007F19  20                 	db	32
   641   007F1A  0D                 	db	13
   642   007F1B  0A                 	db	10
   643   007F1C  00                 	db	0
   644   007F1D                     STR_4:
   645   007F1D  61                 	db	97	;'a'
   646   007F1E  6C                 	db	108	;'l'
   647   007F1F  74                 	db	116	;'t'
   648   007F20  61                 	db	97	;'a'
   649   007F21  20                 	db	32
   650   007F22  76                 	db	118	;'v'
   651   007F23  65                 	db	101	;'e'
   652   007F24  6C                 	db	108	;'l'
   653   007F25  6F                 	db	111	;'o'
   654   007F26  63                 	db	99	;'c'
   655   007F27  69                 	db	105	;'i'
   656   007F28  64                 	db	100	;'d'
   657   007F29  61                 	db	97	;'a'
   658   007F2A  64                 	db	100	;'d'
   659   007F2B  20                 	db	32
   660   007F2C  0D                 	db	13
   661   007F2D  0A                 	db	10
   662   007F2E  00                 	db	0
   663   007F2F                     STR_12:
   664   007F2F  44                 	db	68	;'D'
   665   007F30  65                 	db	101	;'e'
   666   007F31  73                 	db	115	;'s'
   667   007F32  68                 	db	104	;'h'
   668   007F33  61                 	db	97	;'a'
   669   007F34  62                 	db	98	;'b'
   670   007F35  69                 	db	105	;'i'
   671   007F36  6C                 	db	108	;'l'
   672   007F37  69                 	db	105	;'i'
   673   007F38  74                 	db	116	;'t'
   674   007F39  61                 	db	97	;'a'
   675   007F3A  64                 	db	100	;'d'
   676   007F3B  6F                 	db	111	;'o'
   677   007F3C  20                 	db	32
   678   007F3D  0D                 	db	13
   679   007F3E  0A                 	db	10
   680   007F3F  00                 	db	0
   681   007F40                     STR_38:
   682   007F40  43                 	db	67	;'C'
   683   007F41  6F                 	db	111	;'o'
   684   007F42  6D                 	db	109	;'m'
   685   007F43  61                 	db	97	;'a'
   686   007F44  6E                 	db	110	;'n'
   687   007F45  64                 	db	100	;'d'
   688   007F46  6F                 	db	111	;'o'
   689   007F47  3A                 	db	58	;':'
   690   007F48  20                 	db	32
   691   007F49  25                 	db	37
   692   007F4A  73                 	db	115	;'s'
   693   007F4B  0D                 	db	13
   694   007F4C  0A                 	db	10
   695   007F4D  00                 	db	0
   696   007F4E                     STR_11:
   697   007F4E  48                 	db	72	;'H'
   698   007F4F  61                 	db	97	;'a'
   699   007F50  62                 	db	98	;'b'
   700   007F51  69                 	db	105	;'i'
   701   007F52  6C                 	db	108	;'l'
   702   007F53  69                 	db	105	;'i'
   703   007F54  74                 	db	116	;'t'
   704   007F55  61                 	db	97	;'a'
   705   007F56  64                 	db	100	;'d'
   706   007F57  6F                 	db	111	;'o'
   707   007F58  20                 	db	32
   708   007F59  0D                 	db	13
   709   007F5A  0A                 	db	10
   710   007F5B  00                 	db	0
   711   007F5C                     STR_9:
   712   007F5C  78                 	db	120	;'x'
   713   007F5D  20                 	db	32
   714   007F5E  62                 	db	98	;'b'
   715   007F5F  61                 	db	97	;'a'
   716   007F60  75                 	db	117	;'u'
   717   007F61  64                 	db	100	;'d'
   718   007F62  69                 	db	105	;'i'
   719   007F63  6F                 	db	111	;'o'
   720   007F64  73                 	db	115	;'s'
   721   007F65  20                 	db	32
   722   007F66  0D                 	db	13
   723   007F67  0A                 	db	10
   724   007F68  00                 	db	0
   725   007F69                     STR_28:
   726   007F69  53                 	db	83	;'S'
   727   007F6A  69                 	db	105	;'i'
   728   007F6B  6E                 	db	110	;'n'
   729   007F6C  74                 	db	116	;'t'
   730   007F6D  61                 	db	97	;'a'
   731   007F6E  78                 	db	120	;'x'
   732   007F6F  69                 	db	105	;'i'
   733   007F70  73                 	db	115	;'s'
   734   007F71  3A                 	db	58	;':'
   735   007F72  0D                 	db	13
   736   007F73  0A                 	db	10
   737   007F74  00                 	db	0
   738   007F75                     STR_49:
   739   007F75  63                 	db	99	;'c'
   740   007F76  6F                 	db	111	;'o'
   741   007F77  6D                 	db	109	;'m'
   742   007F78  61                 	db	97	;'a'
   743   007F79  6E                 	db	110	;'n'
   744   007F7A  64                 	db	100	;'d'
   745   007F7B  20                 	db	32
   746   007F7C  33                 	db	51	;'3'
   747   007F7D  0D                 	db	13
   748   007F7E  0A                 	db	10
   749   007F7F  00                 	db	0
   750   007F80                     STR_6:
   751   007F80  42                 	db	66	;'B'
   752   007F81  61                 	db	97	;'a'
   753   007F82  75                 	db	117	;'u'
   754   007F83  64                 	db	100	;'d'
   755   007F84  72                 	db	114	;'r'
   756   007F85  61                 	db	97	;'a'
   757   007F86  74                 	db	116	;'t'
   758   007F87  65                 	db	101	;'e'
   759   007F88  3A                 	db	58	;':'
   760   007F89  20                 	db	32
   761   007F8A  00                 	db	0
   762   007F8B                     STR_16:
   763   007F8B  52                 	db	82	;'R'
   764   007F8C  65                 	db	101	;'e'
   765   007F8D  63                 	db	99	;'c'
   766   007F8E  65                 	db	101	;'e'
   767   007F8F  70                 	db	112	;'p'
   768   007F90  74                 	db	116	;'t'
   769   007F91  6F                 	db	111	;'o'
   770   007F92  72                 	db	114	;'r'
   771   007F93  3A                 	db	58	;':'
   772   007F94  20                 	db	32
   773   007F95  00                 	db	0
   774   007F96                     STR_3:
   775   007F96  41                 	db	65	;'A'
   776   007F97  73                 	db	115	;'s'
   777   007F98  69                 	db	105	;'i'
   778   007F99  6E                 	db	110	;'n'
   779   007F9A  63                 	db	99	;'c'
   780   007F9B  72                 	db	114	;'r'
   781   007F9C  6F                 	db	111	;'o'
   782   007F9D  6E                 	db	110	;'n'
   783   007F9E  6F                 	db	111	;'o'
   784   007F9F  20                 	db	32
   785   007FA0  00                 	db	0
   786   007FA1                     STR_24:
   787   007FA1  63                 	db	99	;'c'
   788   007FA2  6C                 	db	108	;'l'
   789   007FA3  69                 	db	105	;'i'
   790   007FA4  44                 	db	68	;'D'
   791   007FA5  65                 	db	101	;'e'
   792   007FA6  69                 	db	105	;'i'
   793   007FA7  6E                 	db	110	;'n'
   794   007FA8  69                 	db	105	;'i'
   795   007FA9  74                 	db	116	;'t'
   796   007FAA  00                 	db	0
   797   007FAB                     STR_13:
   798   007FAB  54                 	db	84	;'T'
   799   007FAC  72                 	db	114	;'r'
   800   007FAD  61                 	db	97	;'a'
   801   007FAE  6E                 	db	110	;'n'
   802   007FAF  73                 	db	115	;'s'
   803   007FB0  6F                 	db	111	;'o'
   804   007FB1  72                 	db	114	;'r'
   805   007FB2  3A                 	db	58	;':'
   806   007FB3  20                 	db	32
   807   007FB4  00                 	db	0
   808   007FB5                     STR_2:
   809   007FB5  53                 	db	83	;'S'
   810   007FB6  69                 	db	105	;'i'
   811   007FB7  6E                 	db	110	;'n'
   812   007FB8  63                 	db	99	;'c'
   813   007FB9  72                 	db	114	;'r'
   814   007FBA  6F                 	db	111	;'o'
   815   007FBB  6E                 	db	110	;'n'
   816   007FBC  6F                 	db	111	;'o'
   817   007FBD  20                 	db	32
   818   007FBE  00                 	db	0
   819   007FBF                     STR_26:
   820   007FBF  63                 	db	99	;'c'
   821   007FC0  6F                 	db	111	;'o'
   822   007FC1  6D                 	db	109	;'m'
   823   007FC2  61                 	db	97	;'a'
   824   007FC3  6E                 	db	110	;'n'
   825   007FC4  64                 	db	100	;'d'
   826   007FC5  6F                 	db	111	;'o'
   827   007FC6  33                 	db	51	;'3'
   828   007FC7  00                 	db	0
   829   007FC8                     STR_10:
   830   007FC8  50                 	db	80	;'P'
   831   007FC9  75                 	db	117	;'u'
   832   007FCA  65                 	db	101	;'e'
   833   007FCB  72                 	db	114	;'r'
   834   007FCC  74                 	db	116	;'t'
   835   007FCD  6F                 	db	111	;'o'
   836   007FCE  3A                 	db	58	;':'
   837   007FCF  20                 	db	32
   838   007FD0  00                 	db	0
   839   007FD1                     STR_7:
   840   007FD1  31                 	db	49	;'1'
   841   007FD2  36                 	db	54	;'6'
   842   007FD3  20                 	db	32
   843   007FD4  62                 	db	98	;'b'
   844   007FD5  69                 	db	105	;'i'
   845   007FD6  74                 	db	116	;'t'
   846   007FD7  73                 	db	115	;'s'
   847   007FD8  20                 	db	32
   848   007FD9  00                 	db	0
   849   007FDA                     STR_20:
   850   007FDA  45                 	db	69	;'E'
   851   007FDB  72                 	db	114	;'r'
   852   007FDC  72                 	db	114	;'r'
   853   007FDD  6F                 	db	111	;'o'
   854   007FDE  72                 	db	114	;'r'
   855   007FDF  3A                 	db	58	;':'
   856   007FE0  20                 	db	32
   857   007FE1  00                 	db	0
   858   007FE2                     STR_8:
   859   007FE2  38                 	db	56	;'8'
   860   007FE3  20                 	db	32
   861   007FE4  62                 	db	98	;'b'
   862   007FE5  69                 	db	105	;'i'
   863   007FE6  74                 	db	116	;'t'
   864   007FE7  73                 	db	115	;'s'
   865   007FE8  20                 	db	32
   866   007FE9  00                 	db	0
   867   007FEA                     STR_1:
   868   007FEA  4D                 	db	77	;'M'
   869   007FEB  6F                 	db	111	;'o'
   870   007FEC  64                 	db	100	;'d'
   871   007FED  6F                 	db	111	;'o'
   872   007FEE  3A                 	db	58	;':'
   873   007FEF  20                 	db	32
   874   007FF0  00                 	db	0
   875   007FF1                     STR_33:
   876   007FF1  0D                 	db	13
   877   007FF2  0A                 	db	10
   878   007FF3  3E                 	db	62	;'>'
   879   007FF4  20                 	db	32
   880   007FF5  00                 	db	0
   881   007FF6                     STR_25:
   882   007FF6  68                 	db	104	;'h'
   883   007FF7  65                 	db	101	;'e'
   884   007FF8  6C                 	db	108	;'l'
   885   007FF9  70                 	db	112	;'p'
   886   007FFA  00                 	db	0
   887   007FFB                     STR_37:
   888   007FFB  08                 	db	8
   889   007FFC  20                 	db	32
   890   007FFD  08                 	db	8
   891   007FFE  00                 	db	0
   892   007FFF  00                 	db	0	; dummy byte at the end
   893   000000                     
   894                           ; #config settings
   895                           
   896                           	psect	cinit
   897   006BA0                     __pcinit:
   898                           	callstack 0
   899   006BA0                     start_initialization:
   900                           	callstack 0
   901   006BA0                     __initialization:
   902                           	callstack 0
   903                           
   904                           ; Initialize objects allocated to COMRAM (6 bytes)
   905                           ; load TBLPTR registers with __pidataCOMRAM
   906   006BA0  0E32               	movlw	low __pidataCOMRAM
   907   006BA2  6EF6               	movwf	tblptrl,c
   908   006BA4  0E69               	movlw	high __pidataCOMRAM
   909   006BA6  6EF7               	movwf	tblptrh,c
   910   006BA8  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   911   006BAA  6EF8               	movwf	tblptru,c
   912   006BAC  EE00  F050         	lfsr	0,__pdataCOMRAM
   913   006BB0  EE10 F006          	lfsr	1,6
   914   006BB4                     copy_data0:
   915   006BB4  0009               	tblrd		*+
   916   006BB6  CFF5 FFEE          	movff	tablat,postinc0
   917   006BBA  50E5               	movf	postdec1,w,c
   918   006BBC  50E1               	movf	fsr1l,w,c
   919   006BBE  E1FA               	bnz	copy_data0
   920                           
   921                           ; Clear objects allocated to BANK1 (80 bytes)
   922   006BC0  EE01  F000         	lfsr	0,__pbssBANK1
   923   006BC4  0E50               	movlw	80
   924   006BC6                     clear_0:
   925   006BC6  6AEE               	clrf	postinc0,c
   926   006BC8  06E8               	decf	wreg,f,c
   927   006BCA  E1FD               	bnz	clear_0
   928                           
   929                           ; Clear objects allocated to BANK0 (132 bytes)
   930   006BCC  EE00  F060         	lfsr	0,__pbssBANK0
   931   006BD0  0E84               	movlw	132
   932   006BD2                     clear_1:
   933   006BD2  6AEE               	clrf	postinc0,c
   934   006BD4  06E8               	decf	wreg,f,c
   935   006BD6  E1FD               	bnz	clear_1
   936                           
   937                           ; Clear objects allocated to COMRAM (24 bytes)
   938   006BD8  EE00  F038         	lfsr	0,__pbssCOMRAM
   939   006BDC  0E18               	movlw	24
   940   006BDE                     clear_2:
   941   006BDE  6AEE               	clrf	postinc0,c
   942   006BE0  06E8               	decf	wreg,f,c
   943   006BE2  E1FD               	bnz	clear_2
   944   006BE4                     end_of_initialization:
   945                           	callstack 0
   946   006BE4                     __end_of__initialization:
   947                           	callstack 0
   948   006BE4  0E00               	movlw	low (__Lmediumconst shr (0+16))
   949   006BE6  6EF8               	movwf	tblptru,c
   950   006BE8  0100               	movlb	0
   951   006BEA  EFF7  F035         	goto	_main	;jump to C main() function
   952                           
   953                           	psect	bssCOMRAM
   954   000038                     __pbssCOMRAM:
   955                           	callstack 0
   956   000038                     _width:
   957                           	callstack 0
   958   000038                     	ds	2
   959   00003A                     _prec:
   960                           	callstack 0
   961   00003A                     	ds	2
   962   00003C                     _flags:
   963                           	callstack 0
   964   00003C                     	ds	1
   965   00003D                     _flagCommandReady:
   966                           	callstack 0
   967   00003D                     	ds	1
   968   00003E                     _commandLineEnable:
   969                           	callstack 0
   970   00003E                     	ds	1
   971   00003F                     _buffCount:
   972                           	callstack 0
   973   00003F                     	ds	1
   974   000040                     _command:
   975                           	callstack 0
   976   000040                     	ds	16
   977                           
   978                           	psect	dataCOMRAM
   979   000050                     __pdataCOMRAM:
   980                           	callstack 0
   981   000050                     _comandos:
   982                           	callstack 0
   983   000050                     	ds	6
   984                           
   985                           	psect	bssBANK0
   986   000060                     __pbssBANK0:
   987                           	callstack 0
   988   000060                     _charBuff:
   989                           	callstack 0
   990   000060                     	ds	100
   991   0000C4                     _dbuf:
   992                           	callstack 0
   993   0000C4                     	ds	32
   994                           
   995                           	psect	bssBANK1
   996   000100                     __pbssBANK1:
   997                           	callstack 0
   998   000100                     _param:
   999                           	callstack 0
  1000   000100                     	ds	80
  1001                           
  1002                           	psect	cstackCOMRAM
  1003   000001                     __pcstackCOMRAM:
  1004                           	callstack 0
  1005   000001                     ?_strcmp:
  1006                           	callstack 0
  1007   000001                     ?___awdiv:
  1008                           	callstack 0
  1009   000001                     ?___awmod:
  1010                           	callstack 0
  1011   000001                     UART_Tx@dato:
  1012                           	callstack 0
  1013   000001                     clearBuff@i:
  1014                           	callstack 0
  1015   000001                     countWords@numWords:
  1016                           	callstack 0
  1017   000001                     strcmp@l:
  1018                           	callstack 0
  1019   000001                     Clock_Init@s16Timeout:
  1020                           	callstack 0
  1021   000001                     clearArray@array:
  1022                           	callstack 0
  1023   000001                     getWord@pWord:
  1024                           	callstack 0
  1025   000001                     ___awdiv@dividend:
  1026                           	callstack 0
  1027   000001                     ___awmod@dividend:
  1028                           	callstack 0
  1029   000001                     UART_select_baud@baudrate:
  1030                           	callstack 0
  1031                           
  1032                           ; 4 bytes @ 0x0
  1033   000001                     	ds	1
  1034   000002                     putch@data:
  1035                           	callstack 0
  1036   000002                     countWords@i:
  1037                           	callstack 0
  1038   000002                     strcmp@r:
  1039                           	callstack 0
  1040                           
  1041                           ; 2 bytes @ 0x1
  1042   000002                     	ds	1
  1043   000003                     Clock_Init@bStatus:
  1044                           	callstack 0
  1045   000003                     clearArray@len:
  1046                           	callstack 0
  1047   000003                     countWords@currChar:
  1048                           	callstack 0
  1049   000003                     ___awdiv@divisor:
  1050                           	callstack 0
  1051   000003                     ___awmod@divisor:
  1052                           	callstack 0
  1053   000003                     fputc@c:
  1054                           	callstack 0
  1055                           
  1056                           ; 2 bytes @ 0x2
  1057   000003                     	ds	1
  1058   000004                     ??_strcmp:
  1059   000004                     Clock_Init@bStatus_497:
  1060                           	callstack 0
  1061   000004                     clearArray@i:
  1062                           	callstack 0
  1063   000004                     getWord@tmpWord:
  1064                           	callstack 0
  1065                           
  1066                           ; 16 bytes @ 0x3
  1067   000004                     	ds	1
  1068   000005                     ??_UART_select_baud:
  1069   000005                     Clock_Init@bStatus_498:
  1070                           	callstack 0
  1071   000005                     ___awdiv@counter:
  1072                           	callstack 0
  1073   000005                     ___awmod@counter:
  1074                           	callstack 0
  1075   000005                     fputc@fp:
  1076                           	callstack 0
  1077                           
  1078                           ; 2 bytes @ 0x4
  1079   000005                     	ds	1
  1080   000006                     Clock_Init@bStatus_501:
  1081                           	callstack 0
  1082   000006                     ___awdiv@sign:
  1083                           	callstack 0
  1084   000006                     ___awmod@sign:
  1085                           	callstack 0
  1086                           
  1087                           ; 1 bytes @ 0x5
  1088   000006                     	ds	1
  1089   000007                     ??_fputc:
  1090   000007                     ?_abs:
  1091                           	callstack 0
  1092   000007                     Clock_Init@bItTimeEn:
  1093                           	callstack 0
  1094   000007                     ___awdiv@quotient:
  1095                           	callstack 0
  1096   000007                     abs@a:
  1097                           	callstack 0
  1098                           
  1099                           ; 2 bytes @ 0x6
  1100   000007                     	ds	1
  1101   000008                     Clock_Init@returnCode:
  1102                           	callstack 0
  1103                           
  1104                           ; 1 bytes @ 0x7
  1105   000008                     	ds	1
  1106   000009                     ??_abs:
  1107                           
  1108                           ; 1 bytes @ 0x8
  1109   000009                     	ds	3
  1110   00000C                     vfpfcnvrt@fp:
  1111                           	callstack 0
  1112                           
  1113                           ; 2 bytes @ 0xB
  1114   00000C                     	ds	2
  1115   00000E                     vfpfcnvrt@fmt:
  1116                           	callstack 0
  1117                           
  1118                           ; 1 bytes @ 0xD
  1119   00000E                     	ds	1
  1120   00000F                     vfpfcnvrt@ap:
  1121                           	callstack 0
  1122                           
  1123                           ; 1 bytes @ 0xE
  1124   00000F                     	ds	1
  1125   000010                     ??_vfpfcnvrt:
  1126                           
  1127                           ; 1 bytes @ 0xF
  1128   000010                     	ds	2
  1129   000012                     vfpfcnvrt@cp_1156:
  1130                           	callstack 0
  1131                           
  1132                           ; 2 bytes @ 0x11
  1133   000012                     	ds	2
  1134   000014                     getWord@delimitCount:
  1135                           	callstack 0
  1136   000014                     vfpfcnvrt@cp:
  1137                           	callstack 0
  1138                           
  1139                           ; 2 bytes @ 0x13
  1140   000014                     	ds	1
  1141   000015                     getWord@wordNum:
  1142                           	callstack 0
  1143                           
  1144                           ; 1 bytes @ 0x14
  1145   000015                     	ds	1
  1146   000016                     getWord@wordId:
  1147                           	callstack 0
  1148   000016                     vfpfcnvrt@done:
  1149                           	callstack 0
  1150                           
  1151                           ; 1 bytes @ 0x15
  1152   000016                     	ds	1
  1153   000017                     getWord@active:
  1154                           	callstack 0
  1155   000017                     vfpfcnvrt@convarg:
  1156                           	callstack 0
  1157                           
  1158                           ; 4 bytes @ 0x16
  1159   000017                     	ds	1
  1160   000018                     getWord@i:
  1161                           	callstack 0
  1162                           
  1163                           ; 2 bytes @ 0x17
  1164   000018                     	ds	2
  1165   00001A                     getWord@buffId:
  1166                           	callstack 0
  1167                           
  1168                           ; 1 bytes @ 0x19
  1169   00001A                     	ds	1
  1170   00001B                     vfpfcnvrt@c:
  1171                           	callstack 0
  1172                           
  1173                           ; 1 bytes @ 0x1A
  1174   00001B                     	ds	1
  1175   00001C                     ?_vfprintf:
  1176                           	callstack 0
  1177   00001C                     vfprintf@fp:
  1178                           	callstack 0
  1179                           
  1180                           ; 2 bytes @ 0x1B
  1181   00001C                     	ds	2
  1182   00001E                     vfprintf@fmt:
  1183                           	callstack 0
  1184                           
  1185                           ; 2 bytes @ 0x1D
  1186   00001E                     	ds	2
  1187   000020                     vfprintf@ap:
  1188                           	callstack 0
  1189                           
  1190                           ; 1 bytes @ 0x1F
  1191   000020                     	ds	1
  1192   000021                     vfprintf@cfmt:
  1193                           	callstack 0
  1194                           
  1195                           ; 2 bytes @ 0x20
  1196   000021                     	ds	2
  1197   000023                     ?_printf:
  1198                           	callstack 0
  1199   000023                     printf@fmt:
  1200                           	callstack 0
  1201                           
  1202                           ; 2 bytes @ 0x22
  1203   000023                     	ds	6
  1204   000029                     printf@ap:
  1205                           	callstack 0
  1206                           
  1207                           ; 1 bytes @ 0x28
  1208   000029                     	ds	1
  1209   00002A                     ??_CL_ErrorHandler:
  1210   00002A                     ??_UART_ErrorHandler:
  1211   00002A                     cliHelp@i:
  1212                           	callstack 0
  1213   00002A                     UART_Init@baudrate:
  1214                           	callstack 0
  1215                           
  1216                           ; 4 bytes @ 0x29
  1217   00002A                     	ds	1
  1218   00002B                     ??_CL_CommandHandler:
  1219                           
  1220                           ; 1 bytes @ 0x2A
  1221   00002B                     	ds	1
  1222   00002C                     UART_ErrorHandler@errorCode:
  1223                           	callstack 0
  1224   00002C                     CL_ErrorHandler@errorCode:
  1225                           	callstack 0
  1226                           
  1227                           ; 1 bytes @ 0x2B
  1228   00002C                     	ds	1
  1229   00002D                     addToBuffer@newchar:
  1230                           	callstack 0
  1231   00002D                     CL_CommandHandler@numParams:
  1232                           	callstack 0
  1233                           
  1234                           ; 1 bytes @ 0x2C
  1235   00002D                     	ds	1
  1236   00002E                     CL_CommandHandler@i:
  1237                           	callstack 0
  1238                           
  1239                           ; 2 bytes @ 0x2D
  1240   00002E                     	ds	2
  1241   000030                     ??_commandProcess:
  1242                           
  1243                           ; 1 bytes @ 0x2F
  1244   000030                     	ds	5
  1245   000035                     commandProcess@nWords:
  1246                           	callstack 0
  1247                           
  1248                           ; 1 bytes @ 0x34
  1249   000035                     	ds	1
  1250   000036                     commandProcess@i:
  1251                           	callstack 0
  1252                           
  1253                           ; 1 bytes @ 0x35
  1254   000036                     	ds	1
  1255   000037                     commandProcess@status:
  1256                           	callstack 0
  1257                           
  1258                           ; 1 bytes @ 0x36
  1259   000037                     	ds	1
  1260   000038                     
  1261                           ; 1 bytes @ 0x37
  1262 ;;
  1263 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1264 ;;
  1265 ;; *************** function _main *****************
  1266 ;; Defined at:
  1267 ;;		line 17 in file "src/main.c"
  1268 ;; Parameters:    Size  Location     Type
  1269 ;;		None
  1270 ;; Auto vars:     Size  Location     Type
  1271 ;;		None
  1272 ;; Return value:  Size  Location     Type
  1273 ;;                  2   34[None  ] int 
  1274 ;; Registers used:
  1275 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1276 ;; Tracked objects:
  1277 ;;		On entry : 0/0
  1278 ;;		On exit  : 0/0
  1279 ;;		Unchanged: 0/0
  1280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1281 ;;      Params:         0       0       0       0       0       0       0       0       0
  1282 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1283 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1284 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1285 ;;Total ram usage:        0 bytes
  1286 ;; Hardware stack levels required when called: 9
  1287 ;; This function calls:
  1288 ;;		_CL_ErrorHandler
  1289 ;;		_Clock_Init
  1290 ;;		_UART_Init
  1291 ;;		_UART_Rx
  1292 ;;		_UART_RxAvailable
  1293 ;;		_addToBuffer
  1294 ;;		_commandLineInit
  1295 ;;		_commandProcess
  1296 ;; This function is called by:
  1297 ;;		Startup code after reset
  1298 ;; This function uses a non-reentrant model
  1299 ;;
  1300                           
  1301                           	psect	text0
  1302   006BEE                     __ptext0:
  1303                           	callstack 0
  1304   006BEE                     _main:
  1305                           	callstack 22
  1306   006BEE                     
  1307                           ;src/main.c: 19:     Clock_Init(16000);
  1308   006BEE  0E3E               	movlw	62
  1309   006BF0  6E02               	movwf	(Clock_Init@s16Timeout+1)^0,c
  1310   006BF2  0E80               	movlw	128
  1311   006BF4  6E01               	movwf	Clock_Init@s16Timeout^0,c
  1312   006BF6  ECE8  F03B         	call	_Clock_Init	;wreg free
  1313   006BFA                     
  1314                           ;src/main.c: 20:     UART_Init(9600);
  1315   006BFA  0E80               	movlw	128
  1316   006BFC  6E2A               	movwf	UART_Init@baudrate^0,c
  1317   006BFE  0E25               	movlw	37
  1318   006C00  6E2B               	movwf	(UART_Init@baudrate+1)^0,c
  1319   006C02  0E00               	movlw	0
  1320   006C04  6E2C               	movwf	(UART_Init@baudrate+2)^0,c
  1321   006C06  0E00               	movlw	0
  1322   006C08  6E2D               	movwf	(UART_Init@baudrate+3)^0,c
  1323   006C0A  EC39  F035         	call	_UART_Init	;wreg free
  1324   006C0E                     
  1325                           ;src/main.c: 21:     commandLineInit();
  1326   006C0E  EC1F  F036         	call	_commandLineInit	;wreg free
  1327   006C12                     l3350:
  1328                           
  1329                           ;src/main.c: 24:     {;src/main.c: 25:         if(UART_RxAvailable()){
  1330   006C12  EC6C  F035         	call	_UART_RxAvailable	;wreg free
  1331   006C16  0900               	iorlw	0
  1332   006C18  B4D8               	btfsc	status,2,c
  1333   006C1A  EF11  F036         	goto	u2511
  1334   006C1E  EF13  F036         	goto	u2510
  1335   006C22                     u2511:
  1336   006C22  EF17  F036         	goto	l3354
  1337   006C26                     u2510:
  1338   006C26                     
  1339                           ;src/main.c: 26:             addToBuffer(UART_Rx());
  1340   006C26  ECA1  F034         	call	_UART_Rx	;wreg free
  1341   006C2A  ECB5  F037         	call	_addToBuffer
  1342   006C2E                     l3354:
  1343                           
  1344                           ;src/main.c: 28:         CL_ErrorHandler(commandProcess());
  1345   006C2E  EC37  F03B         	call	_commandProcess	;wreg free
  1346   006C32  EC7E  F038         	call	_CL_ErrorHandler
  1347   006C36  EF09  F036         	goto	l3350
  1348   006C3A  EF00  F000         	goto	start
  1349   006C3E                     __end_of_main:
  1350                           	callstack 0
  1351                           
  1352 ;; *************** function _commandProcess *****************
  1353 ;; Defined at:
  1354 ;;		line 86 in file "src/librerias/commandLine.c"
  1355 ;; Parameters:    Size  Location     Type
  1356 ;;		None
  1357 ;; Auto vars:     Size  Location     Type
  1358 ;;  i               1   53[COMRAM] unsigned char 
  1359 ;;  status          1   54[COMRAM] enum E5215
  1360 ;;  nWords          1   52[COMRAM] unsigned char 
  1361 ;; Return value:  Size  Location     Type
  1362 ;;                  1    wreg      enum E5221
  1363 ;; Registers used:
  1364 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1365 ;; Tracked objects:
  1366 ;;		On entry : 0/0
  1367 ;;		On exit  : 0/0
  1368 ;;		Unchanged: 0/0
  1369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1370 ;;      Params:         0       0       0       0       0       0       0       0       0
  1371 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1372 ;;      Temps:          5       0       0       0       0       0       0       0       0
  1373 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1374 ;;Total ram usage:        8 bytes
  1375 ;; Hardware stack levels used: 1
  1376 ;; Hardware stack levels required when called: 8
  1377 ;; This function calls:
  1378 ;;		_CL_CommandHandler
  1379 ;;		_commandLineReset
  1380 ;;		_countWords
  1381 ;;		_getWord
  1382 ;;		_printf
  1383 ;; This function is called by:
  1384 ;;		_main
  1385 ;; This function uses a non-reentrant model
  1386 ;;
  1387                           
  1388                           	psect	text1
  1389   00766E                     __ptext1:
  1390                           	callstack 0
  1391   00766E                     _commandProcess:
  1392                           	callstack 22
  1393   00766E                     
  1394                           ;src/librerias/commandLine.c: 87:     if(!flagCommandReady) return EC_CL_OK;
  1395   00766E  503D               	movf	_flagCommandReady^0,w,c
  1396   007670  A4D8               	btfss	status,2,c
  1397   007672  EF3D  F03B         	goto	u2411
  1398   007676  EF3F  F03B         	goto	u2410
  1399   00767A                     u2411:
  1400   00767A  EF42  F03B         	goto	l3298
  1401   00767E                     u2410:
  1402   00767E  0E00               	movlw	0
  1403   007680  EFE7  F03B         	goto	l278
  1404   007684                     l3298:
  1405                           
  1406                           ;src/librerias/commandLine.c: 88:     flagCommandReady = 0;
  1407   007684  0E00               	movlw	0
  1408   007686  6E3D               	movwf	_flagCommandReady^0,c
  1409                           
  1410                           ;src/librerias/commandLine.c: 89:     CL_ERROR_CODE status = EC_CL_OK;
  1411   007688  0E00               	movlw	0
  1412   00768A  6E37               	movwf	commandProcess@status^0,c
  1413   00768C                     
  1414                           ;src/librerias/commandLine.c: 91:     uint8_t nWords = countWords();
  1415   00768C  EC82  F036         	call	_countWords	;wreg free
  1416   007690  6E35               	movwf	commandProcess@nWords^0,c
  1417   007692                     
  1418                           ;src/librerias/commandLine.c: 94:     if(!nWords){
  1419   007692  5035               	movf	commandProcess@nWords^0,w,c
  1420   007694  A4D8               	btfss	status,2,c
  1421   007696  EF4F  F03B         	goto	u2421
  1422   00769A  EF51  F03B         	goto	u2420
  1423   00769E                     u2421:
  1424   00769E  EF53  F03B         	goto	l3306
  1425   0076A2                     u2420:
  1426   0076A2                     
  1427                           ;src/librerias/commandLine.c: 95:         status = EC_CL_NOWORDS;
  1428   0076A2  0E02               	movlw	2
  1429   0076A4  6E37               	movwf	commandProcess@status^0,c
  1430   0076A6                     l3306:
  1431                           
  1432                           ;src/librerias/commandLine.c: 98:     if(nWords > 5){
  1433   0076A6  0E05               	movlw	5
  1434   0076A8  6435               	cpfsgt	commandProcess@nWords^0,c
  1435   0076AA  EF59  F03B         	goto	u2431
  1436   0076AE  EF5B  F03B         	goto	u2430
  1437   0076B2                     u2431:
  1438   0076B2  EF5D  F03B         	goto	l280
  1439   0076B6                     u2430:
  1440   0076B6                     
  1441                           ;src/librerias/commandLine.c: 99:         status = EC_CL_MAXNUMPARAMS;
  1442   0076B6  0E04               	movlw	4
  1443   0076B8  6E37               	movwf	commandProcess@status^0,c
  1444   0076BA                     l280:
  1445                           
  1446                           ;src/librerias/commandLine.c: 102:     if(status == EC_CL_OK){
  1447   0076BA  5037               	movf	commandProcess@status^0,w,c
  1448   0076BC  A4D8               	btfss	status,2,c
  1449   0076BE  EF63  F03B         	goto	u2441
  1450   0076C2  EF65  F03B         	goto	u2440
  1451   0076C6                     u2441:
  1452   0076C6  EF88  F03B         	goto	l3318
  1453   0076CA                     u2440:
  1454   0076CA                     
  1455                           ;src/librerias/commandLine.c: 103:         if(nWords){
  1456   0076CA  5035               	movf	commandProcess@nWords^0,w,c
  1457   0076CC  B4D8               	btfsc	status,2,c
  1458   0076CE  EF6B  F03B         	goto	u2451
  1459   0076D2  EF6D  F03B         	goto	u2450
  1460   0076D6                     u2451:
  1461   0076D6  EF88  F03B         	goto	l3318
  1462   0076DA                     u2450:
  1463   0076DA                     
  1464                           ;src/librerias/commandLine.c: 104:             if(getWord(0,&command[0])) status = EC_CL
      +                          _WORDOVER;
  1465   0076DA  0E40               	movlw	low _command
  1466   0076DC  6E01               	movwf	getWord@pWord^0,c
  1467   0076DE  6A02               	clrf	(getWord@pWord+1)^0,c
  1468   0076E0  0E00               	movlw	0
  1469   0076E2  EC55  F039         	call	_getWord
  1470   0076E6  0900               	iorlw	0
  1471   0076E8  B4D8               	btfsc	status,2,c
  1472   0076EA  EF79  F03B         	goto	u2461
  1473   0076EE  EF7B  F03B         	goto	u2460
  1474   0076F2                     u2461:
  1475   0076F2  EF7F  F03B         	goto	l3316
  1476   0076F6                     u2460:
  1477   0076F6  0E03               	movlw	3
  1478   0076F8  6E37               	movwf	commandProcess@status^0,c
  1479   0076FA  EF88  F03B         	goto	l3318
  1480   0076FE                     l3316:
  1481   0076FE  0E40               	movlw	low STR_38
  1482   007700  6E23               	movwf	printf@fmt^0,c
  1483   007702  0E7F               	movlw	high STR_38
  1484   007704  6E24               	movwf	(printf@fmt+1)^0,c
  1485   007706  0E40               	movlw	low _command
  1486   007708  6E25               	movwf	(?_printf+2)^0,c
  1487   00770A  6A26               	clrf	(?_printf+3)^0,c
  1488   00770C  ECE9  F034         	call	_printf	;wreg free
  1489   007710                     l3318:
  1490                           
  1491                           ;src/librerias/commandLine.c: 108:     if(status == EC_CL_OK){
  1492   007710  5037               	movf	commandProcess@status^0,w,c
  1493   007712  A4D8               	btfss	status,2,c
  1494   007714  EF8E  F03B         	goto	u2471
  1495   007718  EF90  F03B         	goto	u2470
  1496   00771C                     u2471:
  1497   00771C  EFD8  F03B         	goto	l3334
  1498   007720                     u2470:
  1499   007720                     
  1500                           ;src/librerias/commandLine.c: 109:         for(uint8_t i = 0; i < nWords - 1; i++){
  1501   007720  0E00               	movlw	0
  1502   007722  6E36               	movwf	commandProcess@i^0,c
  1503   007724  EFC0  F03B         	goto	l3332
  1504   007728                     l3322:
  1505                           
  1506                           ;src/librerias/commandLine.c: 110:             if(getWord(i+1,&param[i][0])){
  1507   007728  5036               	movf	commandProcess@i^0,w,c
  1508   00772A  0D10               	mullw	16
  1509   00772C  0E00               	movlw	low _param
  1510   00772E  24F3               	addwf	243,w,c
  1511   007730  6E01               	movwf	getWord@pWord^0,c
  1512   007732  0E01               	movlw	high _param
  1513   007734  20F4               	addwfc	prodh,w,c
  1514   007736  6E02               	movwf	(getWord@pWord+1)^0,c
  1515   007738  2836               	incf	commandProcess@i^0,w,c
  1516   00773A  EC55  F039         	call	_getWord
  1517   00773E  0900               	iorlw	0
  1518   007740  B4D8               	btfsc	status,2,c
  1519   007742  EFA5  F03B         	goto	u2481
  1520   007746  EFA7  F03B         	goto	u2480
  1521   00774A                     u2481:
  1522   00774A  EFAB  F03B         	goto	l3328
  1523   00774E                     u2480:
  1524   00774E                     
  1525                           ;src/librerias/commandLine.c: 111:                  status = EC_CL_WORDOVER;
  1526   00774E  0E03               	movlw	3
  1527   007750  6E37               	movwf	commandProcess@status^0,c
  1528                           
  1529                           ;src/librerias/commandLine.c: 112:                  break;
  1530   007752  EFD8  F03B         	goto	l3334
  1531   007756                     l3328:
  1532   007756  0EE6               	movlw	low STR_39
  1533   007758  6E23               	movwf	printf@fmt^0,c
  1534   00775A  0E7E               	movlw	high STR_39
  1535   00775C  6E24               	movwf	(printf@fmt+1)^0,c
  1536   00775E  0E01               	movlw	1
  1537   007760  2436               	addwf	commandProcess@i^0,w,c
  1538   007762  6E25               	movwf	(?_printf+2)^0,c
  1539   007764  6A26               	clrf	(?_printf+3)^0,c
  1540   007766  0E00               	movlw	0
  1541   007768  2226               	addwfc	(?_printf+3)^0,f,c
  1542   00776A  5036               	movf	commandProcess@i^0,w,c
  1543   00776C  0D10               	mullw	16
  1544   00776E  0E00               	movlw	low _param
  1545   007770  24F3               	addwf	243,w,c
  1546   007772  6E27               	movwf	(?_printf+4)^0,c
  1547   007774  0E01               	movlw	high _param
  1548   007776  20F4               	addwfc	prodh,w,c
  1549   007778  6E28               	movwf	(?_printf+5)^0,c
  1550   00777A  ECE9  F034         	call	_printf	;wreg free
  1551   00777E                     
  1552                           ;src/librerias/commandLine.c: 115:         }
  1553   00777E  2A36               	incf	commandProcess@i^0,f,c
  1554   007780                     l3332:
  1555   007780  0EFF               	movlw	255
  1556   007782  2435               	addwf	commandProcess@nWords^0,w,c
  1557   007784  6E30               	movwf	??_commandProcess^0,c
  1558   007786  6A31               	clrf	(??_commandProcess+1)^0,c
  1559   007788  0EFF               	movlw	255
  1560   00778A  2231               	addwfc	(??_commandProcess+1)^0,f,c
  1561   00778C  5036               	movf	commandProcess@i^0,w,c
  1562   00778E  6E32               	movwf	(??_commandProcess+2)^0,c
  1563   007790  6A33               	clrf	(??_commandProcess+3)^0,c
  1564   007792  5030               	movf	??_commandProcess^0,w,c
  1565   007794  5C32               	subwf	(??_commandProcess+2)^0,w,c
  1566   007796  5033               	movf	(??_commandProcess+3)^0,w,c
  1567   007798  0A80               	xorlw	128
  1568   00779A  6E34               	movwf	(??_commandProcess+4)^0,c
  1569   00779C  5031               	movf	(??_commandProcess+1)^0,w,c
  1570   00779E  0A80               	xorlw	128
  1571   0077A0  5834               	subwfb	(??_commandProcess+4)^0,w,c
  1572   0077A2  A0D8               	btfss	status,0,c
  1573   0077A4  EFD6  F03B         	goto	u2491
  1574   0077A8  EFD8  F03B         	goto	u2490
  1575   0077AC                     u2491:
  1576   0077AC  EF94  F03B         	goto	l3322
  1577   0077B0                     u2490:
  1578   0077B0                     l3334:
  1579                           
  1580                           ;src/librerias/commandLine.c: 118:     if(status == EC_CL_OK){
  1581   0077B0  5037               	movf	commandProcess@status^0,w,c
  1582   0077B2  A4D8               	btfss	status,2,c
  1583   0077B4  EFDE  F03B         	goto	u2501
  1584   0077B8  EFE0  F03B         	goto	u2500
  1585   0077BC                     u2501:
  1586   0077BC  EFE4  F03B         	goto	l3338
  1587   0077C0                     u2500:
  1588   0077C0                     
  1589                           ;src/librerias/commandLine.c: 119:        status = CL_CommandHandler(nWords-1);
  1590   0077C0  0435               	decf	commandProcess@nWords^0,w,c
  1591   0077C2  ECE7  F038         	call	_CL_CommandHandler
  1592   0077C6  6E37               	movwf	commandProcess@status^0,c
  1593   0077C8                     l3338:
  1594                           
  1595                           ;src/librerias/commandLine.c: 122:     commandLineReset();
  1596   0077C8  EC21  F035         	call	_commandLineReset	;wreg free
  1597   0077CC                     
  1598                           ;src/librerias/commandLine.c: 123:     return status;
  1599   0077CC  5037               	movf	commandProcess@status^0,w,c
  1600   0077CE                     l278:
  1601   0077CE  0012               	return		;funcret
  1602   0077D0                     __end_of_commandProcess:
  1603                           	callstack 0
  1604                           
  1605 ;; *************** function _getWord *****************
  1606 ;; Defined at:
  1607 ;;		line 138 in file "src/librerias/commandLine.c"
  1608 ;; Parameters:    Size  Location     Type
  1609 ;;  wordNum         1    wreg     unsigned char 
  1610 ;;  pWord           2    0[COMRAM] PTR unsigned char 
  1611 ;;		 -> param(80), command(16), 
  1612 ;; Auto vars:     Size  Location     Type
  1613 ;;  wordNum         1   20[COMRAM] unsigned char 
  1614 ;;  i               2   23[COMRAM] int 
  1615 ;;  tmpWord        16    3[COMRAM] unsigned char [16]
  1616 ;;  buffId          1   25[COMRAM] unsigned char 
  1617 ;;  active          1   22[COMRAM] _Bool 
  1618 ;;  wordId          1   21[COMRAM] unsigned char 
  1619 ;;  delimitCount    1   19[COMRAM] unsigned char 
  1620 ;; Return value:  Size  Location     Type
  1621 ;;                  1    wreg      _Bool 
  1622 ;; Registers used:
  1623 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  1624 ;; Tracked objects:
  1625 ;;		On entry : 0/0
  1626 ;;		On exit  : 0/0
  1627 ;;		Unchanged: 0/0
  1628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1629 ;;      Params:         2       0       0       0       0       0       0       0       0
  1630 ;;      Locals:        23       0       0       0       0       0       0       0       0
  1631 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1632 ;;      Totals:        26       0       0       0       0       0       0       0       0
  1633 ;;Total ram usage:       26 bytes
  1634 ;; Hardware stack levels used: 1
  1635 ;; This function calls:
  1636 ;;		Nothing
  1637 ;; This function is called by:
  1638 ;;		_commandProcess
  1639 ;; This function uses a non-reentrant model
  1640 ;;
  1641                           
  1642                           	psect	text2
  1643   0072AA                     __ptext2:
  1644                           	callstack 0
  1645   0072AA                     _getWord:
  1646                           	callstack 29
  1647                           
  1648                           ;incstack = 0
  1649                           ;getWord@wordNum stored from wreg
  1650   0072AA  6E15               	movwf	getWord@wordNum^0,c
  1651   0072AC                     
  1652                           ;src/librerias/commandLine.c: 140:    uint8_t tmpWord[16];;src/librerias/commandLine.c: 
      +                          141:    uint8_t delimitCount = 0;
  1653   0072AC  0E00               	movlw	0
  1654   0072AE  6E14               	movwf	getWord@delimitCount^0,c
  1655                           
  1656                           ;src/librerias/commandLine.c: 142:    _Bool active = 0;
  1657   0072B0  0E00               	movlw	0
  1658   0072B2  6E17               	movwf	getWord@active^0,c
  1659                           
  1660                           ;src/librerias/commandLine.c: 143:    uint8_t buffId;;src/librerias/commandLine.c: 144: 
      +                             uint8_t wordId = 0;
  1661   0072B4  0E00               	movlw	0
  1662   0072B6  6E16               	movwf	getWord@wordId^0,c
  1663                           
  1664                           ;src/librerias/commandLine.c: 146:    for(buffId = 0;buffId < 100; buffId++){
  1665   0072B8  0E00               	movlw	0
  1666   0072BA  6E1A               	movwf	getWord@buffId^0,c
  1667   0072BC                     l3208:
  1668                           
  1669                           ;src/librerias/commandLine.c: 147:        if(!wordNum) active = 1;
  1670   0072BC  5015               	movf	getWord@wordNum^0,w,c
  1671   0072BE  A4D8               	btfss	status,2,c
  1672   0072C0  EF64  F039         	goto	u2261
  1673   0072C4  EF66  F039         	goto	u2260
  1674   0072C8                     u2261:
  1675   0072C8  EF68  F039         	goto	l3212
  1676   0072CC                     u2260:
  1677   0072CC  0E01               	movlw	1
  1678   0072CE  6E17               	movwf	getWord@active^0,c
  1679   0072D0                     l3212:
  1680                           
  1681                           ;src/librerias/commandLine.c: 148:        if(charBuff[buffId] == 0x20 && !active){
  1682   0072D0  501A               	movf	getWord@buffId^0,w,c
  1683   0072D2  0F60               	addlw	low _charBuff
  1684   0072D4  6ED9               	movwf	fsr2l,c
  1685   0072D6  6ADA               	clrf	fsr2h,c
  1686   0072D8  0E20               	movlw	32
  1687   0072DA  18DE               	xorwf	postinc2,w,c
  1688   0072DC  A4D8               	btfss	status,2,c
  1689   0072DE  EF73  F039         	goto	u2271
  1690   0072E2  EF75  F039         	goto	u2270
  1691   0072E6                     u2271:
  1692   0072E6  EF8A  F039         	goto	l3224
  1693   0072EA                     u2270:
  1694   0072EA  5017               	movf	getWord@active^0,w,c
  1695   0072EC  A4D8               	btfss	status,2,c
  1696   0072EE  EF7B  F039         	goto	u2281
  1697   0072F2  EF7D  F039         	goto	u2280
  1698   0072F6                     u2281:
  1699   0072F6  EF8A  F039         	goto	l3224
  1700   0072FA                     u2280:
  1701   0072FA                     
  1702                           ;src/librerias/commandLine.c: 149:            delimitCount++;
  1703   0072FA  2A14               	incf	getWord@delimitCount^0,f,c
  1704   0072FC                     
  1705                           ;src/librerias/commandLine.c: 150:            if(delimitCount == wordNum){
  1706   0072FC  5015               	movf	getWord@wordNum^0,w,c
  1707   0072FE  1814               	xorwf	getWord@delimitCount^0,w,c
  1708   007300  A4D8               	btfss	status,2,c
  1709   007302  EF85  F039         	goto	u2291
  1710   007306  EF87  F039         	goto	u2290
  1711   00730A                     u2291:
  1712   00730A  EF8A  F039         	goto	l3224
  1713   00730E                     u2290:
  1714   00730E                     
  1715                           ;src/librerias/commandLine.c: 151:                active = 1;
  1716   00730E  0E01               	movlw	1
  1717   007310  6E17               	movwf	getWord@active^0,c
  1718   007312                     
  1719                           ;src/librerias/commandLine.c: 152:                buffId++;
  1720   007312  2A1A               	incf	getWord@buffId^0,f,c
  1721   007314                     l3224:
  1722                           
  1723                           ;src/librerias/commandLine.c: 155:        if(active){
  1724   007314  5017               	movf	getWord@active^0,w,c
  1725   007316  B4D8               	btfsc	status,2,c
  1726   007318  EF90  F039         	goto	u2301
  1727   00731C  EF92  F039         	goto	u2300
  1728   007320                     u2301:
  1729   007320  EFB8  F039         	goto	l3234
  1730   007324                     u2300:
  1731   007324                     
  1732                           ;src/librerias/commandLine.c: 156:            if(charBuff[buffId] == 0x20 || charBuff[bu
      +                          ffId] == 0x00) break;
  1733   007324  501A               	movf	getWord@buffId^0,w,c
  1734   007326  0F60               	addlw	low _charBuff
  1735   007328  6ED9               	movwf	fsr2l,c
  1736   00732A  6ADA               	clrf	fsr2h,c
  1737   00732C  0E20               	movlw	32
  1738   00732E  18DE               	xorwf	postinc2,w,c
  1739   007330  B4D8               	btfsc	status,2,c
  1740   007332  EF9D  F039         	goto	u2311
  1741   007336  EF9F  F039         	goto	u2310
  1742   00733A                     u2311:
  1743   00733A  EFC1  F039         	goto	l3238
  1744   00733E                     u2310:
  1745   00733E  501A               	movf	getWord@buffId^0,w,c
  1746   007340  0F60               	addlw	low _charBuff
  1747   007342  6ED9               	movwf	fsr2l,c
  1748   007344  6ADA               	clrf	fsr2h,c
  1749   007346  50DF               	movf	indf2,w,c
  1750   007348  A4D8               	btfss	status,2,c
  1751   00734A  EFA9  F039         	goto	u2321
  1752   00734E  EFAB  F039         	goto	u2320
  1753   007352                     u2321:
  1754   007352  EFAD  F039         	goto	l3230
  1755   007356                     u2320:
  1756   007356  EFC1  F039         	goto	l3238
  1757   00735A                     l3230:
  1758                           
  1759                           ;src/librerias/commandLine.c: 157:            tmpWord[wordId++] = charBuff[buffId];
  1760   00735A  501A               	movf	getWord@buffId^0,w,c
  1761   00735C  0F60               	addlw	low _charBuff
  1762   00735E  6ED9               	movwf	fsr2l,c
  1763   007360  6ADA               	clrf	fsr2h,c
  1764   007362  5016               	movf	getWord@wordId^0,w,c
  1765   007364  0F04               	addlw	low getWord@tmpWord
  1766   007366  6EE1               	movwf	fsr1l,c
  1767   007368  6AE2               	clrf	fsr1h,c
  1768   00736A  CFDF FFE7          	movff	indf2,indf1
  1769   00736E  2A16               	incf	getWord@wordId^0,f,c
  1770   007370                     l3234:
  1771                           
  1772                           ;src/librerias/commandLine.c: 159:    }
  1773   007370  2A1A               	incf	getWord@buffId^0,f,c
  1774   007372  0E63               	movlw	99
  1775   007374  641A               	cpfsgt	getWord@buffId^0,c
  1776   007376  EFBF  F039         	goto	u2331
  1777   00737A  EFC1  F039         	goto	u2330
  1778   00737E                     u2331:
  1779   00737E  EF5E  F039         	goto	l3208
  1780   007382                     u2330:
  1781   007382                     l3238:
  1782                           
  1783                           ;src/librerias/commandLine.c: 161:     if(wordId > 16){
  1784   007382  0E10               	movlw	16
  1785   007384  6416               	cpfsgt	getWord@wordId^0,c
  1786   007386  EFC7  F039         	goto	u2341
  1787   00738A  EFC9  F039         	goto	u2340
  1788   00738E                     u2341:
  1789   00738E  EFCC  F039         	goto	l3244
  1790   007392                     u2340:
  1791   007392                     
  1792                           ;src/librerias/commandLine.c: 162:         return 1;
  1793   007392  0E01               	movlw	1
  1794   007394  EFED  F039         	goto	l314
  1795   007398                     l3244:
  1796                           
  1797                           ;src/librerias/commandLine.c: 164:     for(int i = 0; i < 16; i++){
  1798   007398  0E00               	movlw	0
  1799   00739A  6E19               	movwf	(getWord@i+1)^0,c
  1800   00739C  0E00               	movlw	0
  1801   00739E  6E18               	movwf	getWord@i^0,c
  1802   0073A0                     l3250:
  1803                           
  1804                           ;src/librerias/commandLine.c: 165:         *(pWord + i) = tmpWord[i];
  1805   0073A0  5018               	movf	getWord@i^0,w,c
  1806   0073A2  0F04               	addlw	low getWord@tmpWord
  1807   0073A4  6ED9               	movwf	fsr2l,c
  1808   0073A6  6ADA               	clrf	fsr2h,c
  1809   0073A8  5018               	movf	getWord@i^0,w,c
  1810   0073AA  2401               	addwf	getWord@pWord^0,w,c
  1811   0073AC  6EE1               	movwf	fsr1l,c
  1812   0073AE  5019               	movf	(getWord@i+1)^0,w,c
  1813   0073B0  2002               	addwfc	(getWord@pWord+1)^0,w,c
  1814   0073B2  6EE2               	movwf	fsr1h,c
  1815   0073B4  CFDF FFE7          	movff	indf2,indf1
  1816   0073B8                     
  1817                           ;src/librerias/commandLine.c: 166:     }
  1818   0073B8  4A18               	infsnz	getWord@i^0,f,c
  1819   0073BA  2A19               	incf	(getWord@i+1)^0,f,c
  1820   0073BC  BE19               	btfsc	(getWord@i+1)^0,7,c
  1821   0073BE  EFEA  F039         	goto	u2351
  1822   0073C2  5019               	movf	(getWord@i+1)^0,w,c
  1823   0073C4  E109               	bnz	u2350
  1824   0073C6  0E10               	movlw	16
  1825   0073C8  5C18               	subwf	getWord@i^0,w,c
  1826   0073CA  A0D8               	btfss	status,0,c
  1827   0073CC  EFEA  F039         	goto	u2351
  1828   0073D0  EFEC  F039         	goto	u2350
  1829   0073D4                     u2351:
  1830   0073D4  EFD0  F039         	goto	l3250
  1831   0073D8                     u2350:
  1832   0073D8                     
  1833                           ;src/librerias/commandLine.c: 167:    return 0;
  1834   0073D8  0E00               	movlw	0
  1835   0073DA                     l314:
  1836   0073DA  0012               	return		;funcret
  1837   0073DC                     __end_of_getWord:
  1838                           	callstack 0
  1839                           
  1840 ;; *************** function _countWords *****************
  1841 ;; Defined at:
  1842 ;;		line 126 in file "src/librerias/commandLine.c"
  1843 ;; Parameters:    Size  Location     Type
  1844 ;;		None
  1845 ;; Auto vars:     Size  Location     Type
  1846 ;;  i               1    1[COMRAM] unsigned char 
  1847 ;;  currChar        1    2[COMRAM] unsigned char 
  1848 ;;  numWords        1    0[COMRAM] unsigned char 
  1849 ;; Return value:  Size  Location     Type
  1850 ;;                  1    wreg      unsigned char 
  1851 ;; Registers used:
  1852 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1853 ;; Tracked objects:
  1854 ;;		On entry : 0/0
  1855 ;;		On exit  : 0/0
  1856 ;;		Unchanged: 0/0
  1857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1858 ;;      Params:         0       0       0       0       0       0       0       0       0
  1859 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1860 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1861 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1862 ;;Total ram usage:        3 bytes
  1863 ;; Hardware stack levels used: 1
  1864 ;; This function calls:
  1865 ;;		Nothing
  1866 ;; This function is called by:
  1867 ;;		_commandProcess
  1868 ;; This function uses a non-reentrant model
  1869 ;;
  1870                           
  1871                           	psect	text3
  1872   006D04                     __ptext3:
  1873                           	callstack 0
  1874   006D04                     _countWords:
  1875                           	callstack 29
  1876   006D04                     
  1877                           ;src/librerias/commandLine.c: 127:    uint8_t numWords = 0;
  1878   006D04  0E00               	movlw	0
  1879   006D06  6E01               	movwf	countWords@numWords^0,c
  1880   006D08                     
  1881                           ;src/librerias/commandLine.c: 128:    uint8_t currChar = charBuff[0];
  1882   006D08  C060  F003         	movff	_charBuff,countWords@currChar
  1883                           
  1884                           ;src/librerias/commandLine.c: 130:    if(currChar) numWords++;
  1885   006D0C  5003               	movf	countWords@currChar^0,w,c
  1886   006D0E  B4D8               	btfsc	status,2,c
  1887   006D10  EF8C  F036         	goto	u1631
  1888   006D14  EF8E  F036         	goto	u1630
  1889   006D18                     u1631:
  1890   006D18  EF8F  F036         	goto	l2574
  1891   006D1C                     u1630:
  1892   006D1C  2A01               	incf	countWords@numWords^0,f,c
  1893   006D1E                     l2574:
  1894                           
  1895                           ;src/librerias/commandLine.c: 131:    for(uint8_t i=0;i<100 && currChar;i++){
  1896   006D1E  0E00               	movlw	0
  1897   006D20  6E02               	movwf	countWords@i^0,c
  1898   006D22  EFA4  F036         	goto	l2582
  1899   006D26                     l2576:
  1900                           
  1901                           ;src/librerias/commandLine.c: 132:       currChar = charBuff[i];
  1902   006D26  5002               	movf	countWords@i^0,w,c
  1903   006D28  0F60               	addlw	low _charBuff
  1904   006D2A  6ED9               	movwf	fsr2l,c
  1905   006D2C  6ADA               	clrf	fsr2h,c
  1906   006D2E  50DF               	movf	indf2,w,c
  1907   006D30  6E03               	movwf	countWords@currChar^0,c
  1908   006D32                     
  1909                           ;src/librerias/commandLine.c: 133:       if(currChar==0x20) numWords++;
  1910   006D32  0E20               	movlw	32
  1911   006D34  1803               	xorwf	countWords@currChar^0,w,c
  1912   006D36  A4D8               	btfss	status,2,c
  1913   006D38  EFA0  F036         	goto	u1641
  1914   006D3C  EFA2  F036         	goto	u1640
  1915   006D40                     u1641:
  1916   006D40  EFA3  F036         	goto	l297
  1917   006D44                     u1640:
  1918   006D44  2A01               	incf	countWords@numWords^0,f,c
  1919   006D46                     l297:
  1920                           
  1921                           ;src/librerias/commandLine.c: 134:    }
  1922   006D46  2A02               	incf	countWords@i^0,f,c
  1923   006D48                     l2582:
  1924   006D48  0E64               	movlw	100
  1925   006D4A  6002               	cpfslt	countWords@i^0,c
  1926   006D4C  EFAA  F036         	goto	u1651
  1927   006D50  EFAC  F036         	goto	u1650
  1928   006D54                     u1651:
  1929   006D54  EFB4  F036         	goto	l2586
  1930   006D58                     u1650:
  1931   006D58  5003               	movf	countWords@currChar^0,w,c
  1932   006D5A  A4D8               	btfss	status,2,c
  1933   006D5C  EFB2  F036         	goto	u1661
  1934   006D60  EFB4  F036         	goto	u1660
  1935   006D64                     u1661:
  1936   006D64  EF93  F036         	goto	l2576
  1937   006D68                     u1660:
  1938   006D68                     l2586:
  1939                           
  1940                           ;src/librerias/commandLine.c: 135:    return numWords;
  1941   006D68  5001               	movf	countWords@numWords^0,w,c
  1942   006D6A  0012               	return		;funcret
  1943   006D6C                     __end_of_countWords:
  1944                           	callstack 0
  1945                           
  1946 ;; *************** function _CL_CommandHandler *****************
  1947 ;; Defined at:
  1948 ;;		line 11 in file "src/CLHandler.c"
  1949 ;; Parameters:    Size  Location     Type
  1950 ;;  numParams       1    wreg     unsigned char 
  1951 ;; Auto vars:     Size  Location     Type
  1952 ;;  numParams       1   44[COMRAM] unsigned char 
  1953 ;;  i               2   45[COMRAM] int 
  1954 ;; Return value:  Size  Location     Type
  1955 ;;                  1    wreg      enum E5215
  1956 ;; Registers used:
  1957 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1958 ;; Tracked objects:
  1959 ;;		On entry : 0/0
  1960 ;;		On exit  : 0/0
  1961 ;;		Unchanged: 0/0
  1962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1963 ;;      Params:         0       0       0       0       0       0       0       0       0
  1964 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1965 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1966 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1967 ;;Total ram usage:        5 bytes
  1968 ;; Hardware stack levels used: 1
  1969 ;; Hardware stack levels required when called: 7
  1970 ;; This function calls:
  1971 ;;		_cliHelp
  1972 ;;		_commandLineDeinit
  1973 ;;		_printf
  1974 ;;		_strcmp
  1975 ;; This function is called by:
  1976 ;;		_commandProcess
  1977 ;; This function uses a non-reentrant model
  1978 ;;
  1979                           
  1980                           	psect	text4
  1981   0071CE                     __ptext4:
  1982                           	callstack 0
  1983   0071CE                     _CL_CommandHandler:
  1984                           	callstack 22
  1985                           
  1986                           ;incstack = 0
  1987                           ;CL_CommandHandler@numParams stored from wreg
  1988   0071CE  6E2D               	movwf	CL_CommandHandler@numParams^0,c
  1989   0071D0                     
  1990                           ;src/CLHandler.c: 12:     for (int i = 0; i < 3; i++) {
  1991   0071D0  0E00               	movlw	0
  1992   0071D2  6E2F               	movwf	(CL_CommandHandler@i+1)^0,c
  1993   0071D4  0E00               	movlw	0
  1994   0071D6  6E2E               	movwf	CL_CommandHandler@i^0,c
  1995   0071D8                     l2654:
  1996                           
  1997                           ;src/CLHandler.c: 13:         if(strcmp(command, comandos[i]) == 0){
  1998   0071D8  0E40               	movlw	low _command
  1999   0071DA  6E01               	movwf	strcmp@l^0,c
  2000   0071DC  502E               	movf	CL_CommandHandler@i^0,w,c
  2001   0071DE  0D02               	mullw	2
  2002   0071E0  50F3               	movf	243,w,c
  2003   0071E2  0F50               	addlw	low _comandos
  2004   0071E4  6ED9               	movwf	fsr2l,c
  2005   0071E6  6ADA               	clrf	fsr2h,c
  2006   0071E8  CFDE F002          	movff	postinc2,strcmp@r
  2007   0071EC  CFDD F003          	movff	postdec2,strcmp@r+1
  2008   0071F0  EC4E  F036         	call	_strcmp	;wreg free
  2009   0071F4  5001               	movf	?_strcmp^0,w,c
  2010   0071F6  1002               	iorwf	(?_strcmp+1)^0,w,c
  2011   0071F8  A4D8               	btfss	status,2,c
  2012   0071FA  EF01  F039         	goto	u1771
  2013   0071FE  EF03  F039         	goto	u1770
  2014   007202                     u1771:
  2015   007202  EF43  F039         	goto	l2676
  2016   007206                     u1770:
  2017   007206                     
  2018                           ;src/CLHandler.c: 15:             if(cantParams[i] != numParams) return EC_CL_WRONGNUMPA
      +                          RAMS;
  2019   007206  0E2D               	movlw	low _cantParams
  2020   007208  242E               	addwf	CL_CommandHandler@i^0,w,c
  2021   00720A  6EF6               	movwf	tblptrl,c
  2022   00720C  0E7D               	movlw	high _cantParams
  2023   00720E  202F               	addwfc	(CL_CommandHandler@i+1)^0,w,c
  2024   007210  6EF7               	movwf	tblptrh,c
  2025   007212                     	if	0	;There are less than 3 active tblptr bytes
  2026   007212                     	endif
  2027   007212  0008               	tblrd		*
  2028   007214  50F5               	movf	tablat,w,c
  2029   007216  182D               	xorwf	CL_CommandHandler@numParams^0,w,c
  2030   007218  B4D8               	btfsc	status,2,c
  2031   00721A  EF11  F039         	goto	u1781
  2032   00721E  EF13  F039         	goto	u1780
  2033   007222                     u1781:
  2034   007222  EF26  F039         	goto	l2670
  2035   007226                     u1780:
  2036   007226  0E05               	movlw	5
  2037   007228  EF54  F039         	goto	l361
  2038   00722C                     l2662:
  2039                           
  2040                           ;src/CLHandler.c: 18:                     commandLineDeinit();
  2041   00722C  ECB6  F034         	call	_commandLineDeinit	;wreg free
  2042                           
  2043                           ;src/CLHandler.c: 19:                     break;
  2044   007230  EF40  F039         	goto	l2672
  2045   007234                     l2664:
  2046                           
  2047                           ;src/CLHandler.c: 21:                     cliHelp();
  2048   007234  EC8B  F035         	call	_cliHelp	;wreg free
  2049                           
  2050                           ;src/CLHandler.c: 22:                     break;
  2051   007238  EF40  F039         	goto	l2672
  2052   00723C                     l2666:
  2053                           
  2054                           ;src/CLHandler.c: 24:                     printf("comand 3\r\n");
  2055   00723C  0E75               	movlw	low STR_49
  2056   00723E  6E23               	movwf	printf@fmt^0,c
  2057   007240  0E7F               	movlw	high STR_49
  2058   007242  6E24               	movwf	(printf@fmt+1)^0,c
  2059   007244  ECE9  F034         	call	_printf	;wreg free
  2060                           
  2061                           ;src/CLHandler.c: 25:                     break;
  2062   007248  EF40  F039         	goto	l2672
  2063   00724C                     l2670:
  2064   00724C  C02E  F02B         	movff	CL_CommandHandler@i,??_CL_CommandHandler
  2065   007250  C02F  F02C         	movff	CL_CommandHandler@i+1,??_CL_CommandHandler+1
  2066                           
  2067                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2068                           ; Switch size 1, requested type "simple"
  2069                           ; Number of cases is 1, Range of values is 0 to 0
  2070                           ; switch strategies available:
  2071                           ; Name         Instructions Cycles
  2072                           ; simple_byte            4     3 (average)
  2073                           ;	Chosen strategy is simple_byte
  2074   007254  502C               	movf	(??_CL_CommandHandler+1)^0,w,c
  2075   007256  0A00               	xorlw	0	; case 0
  2076   007258  B4D8               	btfsc	status,2,c
  2077   00725A  EF31  F039         	goto	l3616
  2078   00725E  EF40  F039         	goto	l2672
  2079   007262                     l3616:
  2080                           
  2081                           ; Switch size 1, requested type "simple"
  2082                           ; Number of cases is 3, Range of values is 0 to 2
  2083                           ; switch strategies available:
  2084                           ; Name         Instructions Cycles
  2085                           ; simple_byte           10     6 (average)
  2086                           ;	Chosen strategy is simple_byte
  2087   007262  502B               	movf	??_CL_CommandHandler^0,w,c
  2088   007264  0A00               	xorlw	0	; case 0
  2089   007266  B4D8               	btfsc	status,2,c
  2090   007268  EF16  F039         	goto	l2662
  2091   00726C  0A01               	xorlw	1	; case 1
  2092   00726E  B4D8               	btfsc	status,2,c
  2093   007270  EF1A  F039         	goto	l2664
  2094   007274  0A03               	xorlw	3	; case 2
  2095   007276  B4D8               	btfsc	status,2,c
  2096   007278  EF1E  F039         	goto	l2666
  2097   00727C  EF40  F039         	goto	l2672
  2098   007280                     l2672:
  2099                           
  2100                           ;src/CLHandler.c: 27:             return EC_CL_OK;
  2101   007280  0E00               	movlw	0
  2102   007282  EF54  F039         	goto	l361
  2103   007286                     l2676:
  2104                           
  2105                           ;src/CLHandler.c: 29:     }
  2106   007286  4A2E               	infsnz	CL_CommandHandler@i^0,f,c
  2107   007288  2A2F               	incf	(CL_CommandHandler@i+1)^0,f,c
  2108   00728A  BE2F               	btfsc	(CL_CommandHandler@i+1)^0,7,c
  2109   00728C  EF51  F039         	goto	u1791
  2110   007290  502F               	movf	(CL_CommandHandler@i+1)^0,w,c
  2111   007292  E109               	bnz	u1790
  2112   007294  0E03               	movlw	3
  2113   007296  5C2E               	subwf	CL_CommandHandler@i^0,w,c
  2114   007298  A0D8               	btfss	status,0,c
  2115   00729A  EF51  F039         	goto	u1791
  2116   00729E  EF53  F039         	goto	u1790
  2117   0072A2                     u1791:
  2118   0072A2  EFEC  F038         	goto	l2654
  2119   0072A6                     u1790:
  2120   0072A6                     
  2121                           ;src/CLHandler.c: 30:     return EC_CL_WRONGCOMMAND;
  2122   0072A6  0E06               	movlw	6
  2123   0072A8                     l361:
  2124   0072A8  0012               	return		;funcret
  2125   0072AA                     __end_of_CL_CommandHandler:
  2126                           	callstack 0
  2127                           
  2128 ;; *************** function _strcmp *****************
  2129 ;; Defined at:
  2130 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\strcmp.c"
  2131 ;; Parameters:    Size  Location     Type
  2132 ;;  l               1    0[COMRAM] PTR const unsigned char 
  2133 ;;		 -> command(16), 
  2134 ;;  r               2    1[COMRAM] PTR const unsigned char 
  2135 ;;		 -> STR_48(9), STR_47(5), STR_46(10), STR_26(9), 
  2136 ;;		 -> STR_25(5), STR_24(10), 
  2137 ;; Auto vars:     Size  Location     Type
  2138 ;;		None
  2139 ;; Return value:  Size  Location     Type
  2140 ;;                  2    0[COMRAM] int 
  2141 ;; Registers used:
  2142 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2143 ;; Tracked objects:
  2144 ;;		On entry : 0/0
  2145 ;;		On exit  : 0/0
  2146 ;;		Unchanged: 0/0
  2147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2148 ;;      Params:         3       0       0       0       0       0       0       0       0
  2149 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2150 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2151 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2152 ;;Total ram usage:        4 bytes
  2153 ;; Hardware stack levels used: 1
  2154 ;; This function calls:
  2155 ;;		Nothing
  2156 ;; This function is called by:
  2157 ;;		_CL_CommandHandler
  2158 ;; This function uses a non-reentrant model
  2159 ;;
  2160                           
  2161                           	psect	text5
  2162   006C9C                     __ptext5:
  2163                           	callstack 0
  2164   006C9C                     _strcmp:
  2165                           	callstack 28
  2166   006C9C  EF53  F036         	goto	l2400
  2167   006CA0                     l2398:
  2168   006CA0  2A01               	incf	strcmp@l^0,f,c
  2169   006CA2  4A02               	infsnz	strcmp@r^0,f,c
  2170   006CA4  2A03               	incf	(strcmp@r+1)^0,f,c
  2171   006CA6                     l2400:
  2172   006CA6  5001               	movf	strcmp@l^0,w,c
  2173   006CA8  6ED9               	movwf	fsr2l,c
  2174   006CAA  6ADA               	clrf	fsr2h,c
  2175   006CAC  50DF               	movf	indf2,w,c
  2176   006CAE  6E04               	movwf	??_strcmp^0,c
  2177   006CB0  C002  FFF6         	movff	strcmp@r,tblptrl
  2178   006CB4  C003  FFF7         	movff	strcmp@r+1,tblptrh
  2179   006CB8                     	if	0	;tblptru may be non-zero
  2180   006CB8                     	endif
  2181   006CB8                     	if	0	;tblptru may be non-zero
  2182   006CB8                     	endif
  2183   006CB8  0008               	tblrd		*
  2184   006CBA  50F5               	movf	tablat,w,c
  2185   006CBC  1804               	xorwf	??_strcmp^0,w,c
  2186   006CBE  A4D8               	btfss	status,2,c
  2187   006CC0  EF64  F036         	goto	u1531
  2188   006CC4  EF66  F036         	goto	u1530
  2189   006CC8                     u1531:
  2190   006CC8  EF71  F036         	goto	l2404
  2191   006CCC                     u1530:
  2192   006CCC  5001               	movf	strcmp@l^0,w,c
  2193   006CCE  6ED9               	movwf	fsr2l,c
  2194   006CD0  6ADA               	clrf	fsr2h,c
  2195   006CD2  50DF               	movf	indf2,w,c
  2196   006CD4  A4D8               	btfss	status,2,c
  2197   006CD6  EF6F  F036         	goto	u1541
  2198   006CDA  EF71  F036         	goto	u1540
  2199   006CDE                     u1541:
  2200   006CDE  EF50  F036         	goto	l2398
  2201   006CE2                     u1540:
  2202   006CE2                     l2404:
  2203   006CE2  5001               	movf	strcmp@l^0,w,c
  2204   006CE4  6ED9               	movwf	fsr2l,c
  2205   006CE6  6ADA               	clrf	fsr2h,c
  2206   006CE8  50DF               	movf	indf2,w,c
  2207   006CEA  6E04               	movwf	??_strcmp^0,c
  2208   006CEC  C002  FFF6         	movff	strcmp@r,tblptrl
  2209   006CF0  C003  FFF7         	movff	strcmp@r+1,tblptrh
  2210   006CF4                     	if	0	;tblptru may be non-zero
  2211   006CF4                     	endif
  2212   006CF4                     	if	0	;tblptru may be non-zero
  2213   006CF4                     	endif
  2214   006CF4  0008               	tblrd		*
  2215   006CF6  50F5               	movf	tablat,w,c
  2216   006CF8  5C04               	subwf	??_strcmp^0,w,c
  2217   006CFA  6E01               	movwf	?_strcmp^0,c
  2218   006CFC  6A02               	clrf	(?_strcmp+1)^0,c
  2219   006CFE  A0D8               	btfss	status,0,c
  2220   006D00  0602               	decf	(?_strcmp+1)^0,f,c
  2221   006D02  0012               	return		;funcret
  2222   006D04                     __end_of_strcmp:
  2223                           	callstack 0
  2224                           
  2225 ;; *************** function _commandLineDeinit *****************
  2226 ;; Defined at:
  2227 ;;		line 26 in file "src/librerias/commandLine.c"
  2228 ;; Parameters:    Size  Location     Type
  2229 ;;		None
  2230 ;; Auto vars:     Size  Location     Type
  2231 ;;		None
  2232 ;; Return value:  Size  Location     Type
  2233 ;;                  1    wreg      void 
  2234 ;; Registers used:
  2235 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2236 ;; Tracked objects:
  2237 ;;		On entry : 0/0
  2238 ;;		On exit  : 0/0
  2239 ;;		Unchanged: 0/0
  2240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2241 ;;      Params:         0       0       0       0       0       0       0       0       0
  2242 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2243 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2244 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2245 ;;Total ram usage:        0 bytes
  2246 ;; Hardware stack levels used: 1
  2247 ;; Hardware stack levels required when called: 6
  2248 ;; This function calls:
  2249 ;;		_clearBuff
  2250 ;;		_printf
  2251 ;; This function is called by:
  2252 ;;		_CL_CommandHandler
  2253 ;; This function uses a non-reentrant model
  2254 ;;
  2255                           
  2256                           	psect	text6
  2257   00696C                     __ptext6:
  2258                           	callstack 0
  2259   00696C                     _commandLineDeinit:
  2260                           	callstack 22
  2261   00696C                     
  2262                           ;src/librerias/commandLine.c: 27:     printf("\r\nLinea de comandos desactivada\r\n\r\n"
      +                          );
  2263   00696C  0ED4               	movlw	low STR_34
  2264   00696E  6E23               	movwf	printf@fmt^0,c
  2265   006970  0E7D               	movlw	high STR_34
  2266   006972  6E24               	movwf	(printf@fmt+1)^0,c
  2267   006974  ECE9  F034         	call	_printf	;wreg free
  2268   006978                     
  2269                           ;src/librerias/commandLine.c: 28:     clearBuff();
  2270   006978  ECF8  F034         	call	_clearBuff	;wreg free
  2271   00697C                     
  2272                           ;src/librerias/commandLine.c: 29:     commandLineEnable = 0;
  2273   00697C  0E00               	movlw	0
  2274   00697E  6E3E               	movwf	_commandLineEnable^0,c
  2275   006980  0012               	return		;funcret
  2276   006982                     __end_of_commandLineDeinit:
  2277                           	callstack 0
  2278                           
  2279 ;; *************** function _cliHelp *****************
  2280 ;; Defined at:
  2281 ;;		line 33 in file "src/CLHandler.c"
  2282 ;; Parameters:    Size  Location     Type
  2283 ;;		None
  2284 ;; Auto vars:     Size  Location     Type
  2285 ;;  i               1   41[COMRAM] unsigned char 
  2286 ;; Return value:  Size  Location     Type
  2287 ;;                  1    wreg      void 
  2288 ;; Registers used:
  2289 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2290 ;; Tracked objects:
  2291 ;;		On entry : 0/0
  2292 ;;		On exit  : 0/0
  2293 ;;		Unchanged: 0/0
  2294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2295 ;;      Params:         0       0       0       0       0       0       0       0       0
  2296 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2297 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2298 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2299 ;;Total ram usage:        1 bytes
  2300 ;; Hardware stack levels used: 1
  2301 ;; Hardware stack levels required when called: 6
  2302 ;; This function calls:
  2303 ;;		_printf
  2304 ;; This function is called by:
  2305 ;;		_CL_CommandHandler
  2306 ;; This function uses a non-reentrant model
  2307 ;;
  2308                           
  2309                           	psect	text7
  2310   006B16                     __ptext7:
  2311                           	callstack 0
  2312   006B16                     _cliHelp:
  2313                           	callstack 22
  2314   006B16                     
  2315                           ;src/CLHandler.c: 34:     printf("Lista de comandos:\r\n");
  2316   006B16  0EAB               	movlw	low STR_50
  2317   006B18  6E23               	movwf	printf@fmt^0,c
  2318   006B1A  0E7E               	movlw	high STR_50
  2319   006B1C  6E24               	movwf	(printf@fmt+1)^0,c
  2320   006B1E  ECE9  F034         	call	_printf	;wreg free
  2321   006B22                     
  2322                           ;src/CLHandler.c: 35:     for(uint8_t i = 0; i < 3; i++){
  2323   006B22  0E00               	movlw	0
  2324   006B24  6E2A               	movwf	cliHelp@i^0,c
  2325   006B26                     l2416:
  2326                           
  2327                           ;src/CLHandler.c: 36:         printf("%s\r\n",comandos[i]);
  2328   006B26  0EF4               	movlw	low (STR_39+14)
  2329   006B28  6E23               	movwf	printf@fmt^0,c
  2330   006B2A  0E7E               	movlw	high (STR_39+14)
  2331   006B2C  6E24               	movwf	(printf@fmt+1)^0,c
  2332   006B2E  502A               	movf	cliHelp@i^0,w,c
  2333   006B30  0D02               	mullw	2
  2334   006B32  50F3               	movf	243,w,c
  2335   006B34  0F50               	addlw	low _comandos
  2336   006B36  6ED9               	movwf	fsr2l,c
  2337   006B38  6ADA               	clrf	fsr2h,c
  2338   006B3A  CFDE F025          	movff	postinc2,?_printf+2
  2339   006B3E  CFDD F026          	movff	postdec2,?_printf+3
  2340   006B42  ECE9  F034         	call	_printf	;wreg free
  2341   006B46                     
  2342                           ;src/CLHandler.c: 37:     }
  2343   006B46  2A2A               	incf	cliHelp@i^0,f,c
  2344   006B48  0E02               	movlw	2
  2345   006B4A  642A               	cpfsgt	cliHelp@i^0,c
  2346   006B4C  EFAA  F035         	goto	u1551
  2347   006B50  EFAC  F035         	goto	u1550
  2348   006B54                     u1551:
  2349   006B54  EF93  F035         	goto	l2416
  2350   006B58                     u1550:
  2351   006B58  0012               	return		;funcret
  2352   006B5A                     __end_of_cliHelp:
  2353                           	callstack 0
  2354                           
  2355 ;; *************** function _commandLineInit *****************
  2356 ;; Defined at:
  2357 ;;		line 14 in file "src/librerias/commandLine.c"
  2358 ;; Parameters:    Size  Location     Type
  2359 ;;		None
  2360 ;; Auto vars:     Size  Location     Type
  2361 ;;		None
  2362 ;; Return value:  Size  Location     Type
  2363 ;;                  1    wreg      void 
  2364 ;; Registers used:
  2365 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2366 ;; Tracked objects:
  2367 ;;		On entry : 0/0
  2368 ;;		On exit  : 0/0
  2369 ;;		Unchanged: 0/0
  2370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2371 ;;      Params:         0       0       0       0       0       0       0       0       0
  2372 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2373 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2374 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2375 ;;Total ram usage:        0 bytes
  2376 ;; Hardware stack levels used: 1
  2377 ;; Hardware stack levels required when called: 6
  2378 ;; This function calls:
  2379 ;;		_clearBuff
  2380 ;;		_printf
  2381 ;; This function is called by:
  2382 ;;		_main
  2383 ;; This function uses a non-reentrant model
  2384 ;;
  2385                           
  2386                           	psect	text8
  2387   006C3E                     __ptext8:
  2388                           	callstack 0
  2389   006C3E                     _commandLineInit:
  2390                           	callstack 24
  2391   006C3E                     
  2392                           ;src/librerias/commandLine.c: 15:     printf("Linea de comandos iniciada\r\n");
  2393   006C3E  0EF8               	movlw	low STR_27
  2394   006C40  6E23               	movwf	printf@fmt^0,c
  2395   006C42  0E7D               	movlw	high STR_27
  2396   006C44  6E24               	movwf	(printf@fmt+1)^0,c
  2397   006C46  ECE9  F034         	call	_printf	;wreg free
  2398                           
  2399                           ;src/librerias/commandLine.c: 16:     printf("Sintaxis:\r\n");
  2400   006C4A  0E69               	movlw	low STR_28
  2401   006C4C  6E23               	movwf	printf@fmt^0,c
  2402   006C4E  0E7F               	movlw	high STR_28
  2403   006C50  6E24               	movwf	(printf@fmt+1)^0,c
  2404   006C52  ECE9  F034         	call	_printf	;wreg free
  2405                           
  2406                           ;src/librerias/commandLine.c: 17:     printf("<comando> <parametro1> <parametroN>\r\n");
  2407   006C56  0E63               	movlw	low STR_29
  2408   006C58  6E23               	movwf	printf@fmt^0,c
  2409   006C5A  0E7D               	movlw	high STR_29
  2410   006C5C  6E24               	movwf	(printf@fmt+1)^0,c
  2411   006C5E  ECE9  F034         	call	_printf	;wreg free
  2412                           
  2413                           ;src/librerias/commandLine.c: 18:     printf("[Enter]     Para enviar el comando\r\n");
  2414   006C62  0EAF               	movlw	low STR_30
  2415   006C64  6E23               	movwf	printf@fmt^0,c
  2416   006C66  0E7D               	movlw	high STR_30
  2417   006C68  6E24               	movwf	(printf@fmt+1)^0,c
  2418   006C6A  ECE9  F034         	call	_printf	;wreg free
  2419                           
  2420                           ;src/librerias/commandLine.c: 19:     printf("[Backspace] Para borrar un caracter\r\n");
  2421   006C6E  0E89               	movlw	low STR_31
  2422   006C70  6E23               	movwf	printf@fmt^0,c
  2423   006C72  0E7D               	movlw	high STR_31
  2424   006C74  6E24               	movwf	(printf@fmt+1)^0,c
  2425   006C76  ECE9  F034         	call	_printf	;wreg free
  2426                           
  2427                           ;src/librerias/commandLine.c: 20:     printf("[Escape]    Cancelar la escritura de un co
      +                          mando\r\n");
  2428   006C7A  0E31               	movlw	low STR_32
  2429   006C7C  6E23               	movwf	printf@fmt^0,c
  2430   006C7E  0E7D               	movlw	high STR_32
  2431   006C80  6E24               	movwf	(printf@fmt+1)^0,c
  2432   006C82  ECE9  F034         	call	_printf	;wreg free
  2433   006C86                     
  2434                           ;src/librerias/commandLine.c: 21:     clearBuff();
  2435   006C86  ECF8  F034         	call	_clearBuff	;wreg free
  2436   006C8A                     
  2437                           ;src/librerias/commandLine.c: 22:     commandLineEnable = 1;
  2438   006C8A  0E01               	movlw	1
  2439   006C8C  6E3E               	movwf	_commandLineEnable^0,c
  2440   006C8E                     
  2441                           ;src/librerias/commandLine.c: 23:     printf("\r\n> ");
  2442   006C8E  0EF1               	movlw	low STR_33
  2443   006C90  6E23               	movwf	printf@fmt^0,c
  2444   006C92  0E7F               	movlw	high STR_33
  2445   006C94  6E24               	movwf	(printf@fmt+1)^0,c
  2446   006C96  ECE9  F034         	call	_printf	;wreg free
  2447   006C9A  0012               	return		;funcret
  2448   006C9C                     __end_of_commandLineInit:
  2449                           	callstack 0
  2450                           
  2451 ;; *************** function _addToBuffer *****************
  2452 ;; Defined at:
  2453 ;;		line 39 in file "src/librerias/commandLine.c"
  2454 ;; Parameters:    Size  Location     Type
  2455 ;;  newchar         1    wreg     unsigned char 
  2456 ;; Auto vars:     Size  Location     Type
  2457 ;;  newchar         1   44[COMRAM] unsigned char 
  2458 ;; Return value:  Size  Location     Type
  2459 ;;                  1    wreg      void 
  2460 ;; Registers used:
  2461 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2462 ;; Tracked objects:
  2463 ;;		On entry : 0/0
  2464 ;;		On exit  : 0/0
  2465 ;;		Unchanged: 0/0
  2466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2467 ;;      Params:         0       0       0       0       0       0       0       0       0
  2468 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2469 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2470 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2471 ;;Total ram usage:        1 bytes
  2472 ;; Hardware stack levels used: 1
  2473 ;; Hardware stack levels required when called: 8
  2474 ;; This function calls:
  2475 ;;		_CL_ErrorHandler
  2476 ;;		_UART_Tx
  2477 ;;		_clearCharInLine
  2478 ;;		_printf
  2479 ;; This function is called by:
  2480 ;;		_main
  2481 ;; This function uses a non-reentrant model
  2482 ;;
  2483                           
  2484                           	psect	text9
  2485   006F6A                     __ptext9:
  2486                           	callstack 0
  2487   006F6A                     _addToBuffer:
  2488                           	callstack 22
  2489                           
  2490                           ;incstack = 0
  2491                           ;addToBuffer@newchar stored from wreg
  2492   006F6A  6E2D               	movwf	addToBuffer@newchar^0,c
  2493   006F6C                     
  2494                           ;src/librerias/commandLine.c: 40:     if(commandLineEnable){
  2495   006F6C  503E               	movf	_commandLineEnable^0,w,c
  2496   006F6E  B4D8               	btfsc	status,2,c
  2497   006F70  EFBC  F037         	goto	u2361
  2498   006F74  EFBE  F037         	goto	u2360
  2499   006F78                     u2361:
  2500   006F78  EF18  F038         	goto	l260
  2501   006F7C                     u2360:
  2502   006F7C  EF05  F038         	goto	l3290
  2503   006F80                     l3264:
  2504                           
  2505                           ;src/librerias/commandLine.c: 44:                 flagCommandReady = 1;
  2506   006F80  0E01               	movlw	1
  2507   006F82  6E3D               	movwf	_flagCommandReady^0,c
  2508   006F84                     
  2509                           ;src/librerias/commandLine.c: 45:                 printf("\r\n");
  2510   006F84  0EF5               	movlw	low (STR_34+33)
  2511   006F86  6E23               	movwf	printf@fmt^0,c
  2512   006F88  0E7D               	movlw	high (STR_34+33)
  2513   006F8A  6E24               	movwf	(printf@fmt+1)^0,c
  2514   006F8C  ECE9  F034         	call	_printf	;wreg free
  2515                           
  2516                           ;src/librerias/commandLine.c: 46:                 break;
  2517   006F90  EF18  F038         	goto	l260
  2518   006F94                     l3268:
  2519                           
  2520                           ;src/librerias/commandLine.c: 48:                 if(buffCount>0)clearCharInLine();
  2521   006F94  503F               	movf	_buffCount^0,w,c
  2522   006F96  B4D8               	btfsc	status,2,c
  2523   006F98  EFD0  F037         	goto	u2371
  2524   006F9C  EFD2  F037         	goto	u2370
  2525   006FA0                     u2371:
  2526   006FA0  EF18  F038         	goto	l260
  2527   006FA4                     u2370:
  2528   006FA4  ECCE  F034         	call	_clearCharInLine	;wreg free
  2529   006FA8  EF18  F038         	goto	l260
  2530   006FAC                     l3272:
  2531                           
  2532                           ;src/librerias/commandLine.c: 52:                     clearCharInLine();
  2533   006FAC  ECCE  F034         	call	_clearCharInLine	;wreg free
  2534   006FB0                     l3274:
  2535                           
  2536                           ;src/librerias/commandLine.c: 51:                 while(buffCount>0){
  2537   006FB0  503F               	movf	_buffCount^0,w,c
  2538   006FB2  A4D8               	btfss	status,2,c
  2539   006FB4  EFDE  F037         	goto	u2381
  2540   006FB8  EFE0  F037         	goto	u2380
  2541   006FBC                     u2381:
  2542   006FBC  EFD6  F037         	goto	l3272
  2543   006FC0                     u2380:
  2544   006FC0  EF18  F038         	goto	l260
  2545   006FC4                     l3276:
  2546                           
  2547                           ;src/librerias/commandLine.c: 56:                 if(buffCount >= 100){
  2548   006FC4  0E63               	movlw	99
  2549   006FC6  643F               	cpfsgt	_buffCount^0,c
  2550   006FC8  EFE8  F037         	goto	u2391
  2551   006FCC  EFEA  F037         	goto	u2390
  2552   006FD0                     u2391:
  2553   006FD0  EFEF  F037         	goto	l3280
  2554   006FD4                     u2390:
  2555   006FD4                     
  2556                           ;src/librerias/commandLine.c: 57:                     CL_ErrorHandler(EC_CL_BUFFOVER);
  2557   006FD4  0E01               	movlw	1
  2558   006FD6  EC7E  F038         	call	_CL_ErrorHandler
  2559                           
  2560                           ;src/librerias/commandLine.c: 58:                     break;
  2561   006FDA  EF18  F038         	goto	l260
  2562   006FDE                     l3280:
  2563                           
  2564                           ;src/librerias/commandLine.c: 60:                 if(newchar > 0x7F) break;
  2565   006FDE  0E7F               	movlw	127
  2566   006FE0  642D               	cpfsgt	addToBuffer@newchar^0,c
  2567   006FE2  EFF5  F037         	goto	u2401
  2568   006FE6  EFF7  F037         	goto	u2400
  2569   006FEA                     u2401:
  2570   006FEA  EFF9  F037         	goto	l3284
  2571   006FEE                     u2400:
  2572   006FEE  EF18  F038         	goto	l260
  2573   006FF2                     l3284:
  2574                           
  2575                           ;src/librerias/commandLine.c: 61:                 charBuff[buffCount] = newchar;
  2576   006FF2  503F               	movf	_buffCount^0,w,c
  2577   006FF4  0F60               	addlw	low _charBuff
  2578   006FF6  6ED9               	movwf	fsr2l,c
  2579   006FF8  6ADA               	clrf	fsr2h,c
  2580   006FFA  C02D  FFDF         	movff	addToBuffer@newchar,indf2
  2581   006FFE                     
  2582                           ;src/librerias/commandLine.c: 62:                 buffCount++;
  2583   006FFE  2A3F               	incf	_buffCount^0,f,c
  2584   007000                     
  2585                           ;src/librerias/commandLine.c: 63:                 UART_Tx(newchar);
  2586   007000  502D               	movf	addToBuffer@newchar^0,w,c
  2587   007002  ECAB  F034         	call	_UART_Tx
  2588                           
  2589                           ;src/librerias/commandLine.c: 64:         }
  2590   007006  EF18  F038         	goto	l260
  2591   00700A                     l3290:
  2592   00700A  502D               	movf	addToBuffer@newchar^0,w,c
  2593                           
  2594                           ; Switch size 1, requested type "simple"
  2595                           ; Number of cases is 4, Range of values is 0 to 127
  2596                           ; switch strategies available:
  2597                           ; Name         Instructions Cycles
  2598                           ; simple_byte           13     7 (average)
  2599                           ;	Chosen strategy is simple_byte
  2600   00700C  0A00               	xorlw	0	; case 0
  2601   00700E  B4D8               	btfsc	status,2,c
  2602   007010  EF18  F038         	goto	l260
  2603   007014  0A0A               	xorlw	10	; case 10
  2604   007016  B4D8               	btfsc	status,2,c
  2605   007018  EFC0  F037         	goto	l3264
  2606   00701C  0A11               	xorlw	17	; case 27
  2607   00701E  B4D8               	btfsc	status,2,c
  2608   007020  EFD8  F037         	goto	l3274
  2609   007024  0A64               	xorlw	100	; case 127
  2610   007026  B4D8               	btfsc	status,2,c
  2611   007028  EFCA  F037         	goto	l3268
  2612   00702C  EFE2  F037         	goto	l3276
  2613   007030                     l260:
  2614   007030  0012               	return		;funcret
  2615   007032                     __end_of_addToBuffer:
  2616                           	callstack 0
  2617                           
  2618 ;; *************** function _clearCharInLine *****************
  2619 ;; Defined at:
  2620 ;;		line 75 in file "src/librerias/commandLine.c"
  2621 ;; Parameters:    Size  Location     Type
  2622 ;;		None
  2623 ;; Auto vars:     Size  Location     Type
  2624 ;;		None
  2625 ;; Return value:  Size  Location     Type
  2626 ;;                  1    wreg      void 
  2627 ;; Registers used:
  2628 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2629 ;; Tracked objects:
  2630 ;;		On entry : 0/0
  2631 ;;		On exit  : 0/0
  2632 ;;		Unchanged: 0/0
  2633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2634 ;;      Params:         0       0       0       0       0       0       0       0       0
  2635 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2636 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2637 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2638 ;;Total ram usage:        0 bytes
  2639 ;; Hardware stack levels used: 1
  2640 ;; Hardware stack levels required when called: 6
  2641 ;; This function calls:
  2642 ;;		_printf
  2643 ;; This function is called by:
  2644 ;;		_addToBuffer
  2645 ;; This function uses a non-reentrant model
  2646 ;;
  2647                           
  2648                           	psect	text10
  2649   00699C                     __ptext10:
  2650                           	callstack 0
  2651   00699C                     _clearCharInLine:
  2652                           	callstack 23
  2653   00699C                     
  2654                           ;src/librerias/commandLine.c: 76:     charBuff[--buffCount] = 0x00;
  2655   00699C  063F               	decf	_buffCount^0,f,c
  2656   00699E  503F               	movf	_buffCount^0,w,c
  2657   0069A0  0F60               	addlw	low _charBuff
  2658   0069A2  6ED9               	movwf	fsr2l,c
  2659   0069A4  6ADA               	clrf	fsr2h,c
  2660   0069A6  6ADF               	clrf	indf2,c
  2661   0069A8                     
  2662                           ;src/librerias/commandLine.c: 77:     printf("\b \b");
  2663   0069A8  0EFB               	movlw	low STR_37
  2664   0069AA  6E23               	movwf	printf@fmt^0,c
  2665   0069AC  0E7F               	movlw	high STR_37
  2666   0069AE  6E24               	movwf	(printf@fmt+1)^0,c
  2667   0069B0  ECE9  F034         	call	_printf	;wreg free
  2668   0069B4  0012               	return		;funcret
  2669   0069B6                     __end_of_clearCharInLine:
  2670                           	callstack 0
  2671                           
  2672 ;; *************** function _CL_ErrorHandler *****************
  2673 ;; Defined at:
  2674 ;;		line 170 in file "src/librerias/commandLine.c"
  2675 ;; Parameters:    Size  Location     Type
  2676 ;;  errorCode       1    wreg     enum E5215
  2677 ;; Auto vars:     Size  Location     Type
  2678 ;;  errorCode       1   43[COMRAM] enum E5215
  2679 ;; Return value:  Size  Location     Type
  2680 ;;                  1    wreg      void 
  2681 ;; Registers used:
  2682 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2683 ;; Tracked objects:
  2684 ;;		On entry : 0/0
  2685 ;;		On exit  : 0/0
  2686 ;;		Unchanged: 0/0
  2687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2688 ;;      Params:         0       0       0       0       0       0       0       0       0
  2689 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2690 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2691 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2692 ;;Total ram usage:        3 bytes
  2693 ;; Hardware stack levels used: 1
  2694 ;; Hardware stack levels required when called: 7
  2695 ;; This function calls:
  2696 ;;		_commandLineReset
  2697 ;;		_printf
  2698 ;; This function is called by:
  2699 ;;		_main
  2700 ;;		_addToBuffer
  2701 ;; This function uses a non-reentrant model
  2702 ;;
  2703                           
  2704                           	psect	text11
  2705   0070FC                     __ptext11:
  2706                           	callstack 0
  2707   0070FC                     _CL_ErrorHandler:
  2708                           	callstack 22
  2709                           
  2710                           ;incstack = 0
  2711                           ;CL_ErrorHandler@errorCode stored from wreg
  2712   0070FC  6E2C               	movwf	CL_ErrorHandler@errorCode^0,c
  2713   0070FE                     
  2714                           ;src/librerias/commandLine.c: 171:     switch(errorCode){
  2715   0070FE  EFBD  F038         	goto	l3196
  2716   007102                     l3182:
  2717                           
  2718                           ;src/librerias/commandLine.c: 174:             printf("\r\nEC_CL_BUFFOVER\r\n");
  2719   007102  0ED3               	movlw	low STR_40
  2720   007104  6E23               	movwf	printf@fmt^0,c
  2721   007106  0E7E               	movlw	high STR_40
  2722   007108  6E24               	movwf	(printf@fmt+1)^0,c
  2723   00710A  ECE9  F034         	call	_printf	;wreg free
  2724                           
  2725                           ;src/librerias/commandLine.c: 175:             commandLineReset();
  2726   00710E  EC21  F035         	call	_commandLineReset	;wreg free
  2727                           
  2728                           ;src/librerias/commandLine.c: 176:         break;
  2729   007112  EFE6  F038         	goto	l328
  2730   007116                     l3184:
  2731                           
  2732                           ;src/librerias/commandLine.c: 178:             printf("\r\nEC_CL_NOWORDS\r\n");
  2733   007116  0EF9               	movlw	low STR_41
  2734   007118  6E23               	movwf	printf@fmt^0,c
  2735   00711A  0E7E               	movlw	high STR_41
  2736   00711C  6E24               	movwf	(printf@fmt+1)^0,c
  2737   00711E  ECE9  F034         	call	_printf	;wreg free
  2738                           
  2739                           ;src/librerias/commandLine.c: 179:             commandLineReset();
  2740   007122  EC21  F035         	call	_commandLineReset	;wreg free
  2741                           
  2742                           ;src/librerias/commandLine.c: 180:         break;
  2743   007126  EFE6  F038         	goto	l328
  2744   00712A                     l3186:
  2745                           
  2746                           ;src/librerias/commandLine.c: 182:             printf("\r\nEC_CL_WORDOVER\r\n");
  2747   00712A  0EC0               	movlw	low STR_42
  2748   00712C  6E23               	movwf	printf@fmt^0,c
  2749   00712E  0E7E               	movlw	high STR_42
  2750   007130  6E24               	movwf	(printf@fmt+1)^0,c
  2751   007132  ECE9  F034         	call	_printf	;wreg free
  2752                           
  2753                           ;src/librerias/commandLine.c: 183:             commandLineReset();
  2754   007136  EC21  F035         	call	_commandLineReset	;wreg free
  2755                           
  2756                           ;src/librerias/commandLine.c: 184:         break;
  2757   00713A  EFE6  F038         	goto	l328
  2758   00713E                     l3188:
  2759                           
  2760                           ;src/librerias/commandLine.c: 186:             printf("\r\nEC_CL_MAXNUMPARAMS\r\n");
  2761   00713E  0E94               	movlw	low STR_43
  2762   007140  6E23               	movwf	printf@fmt^0,c
  2763   007142  0E7E               	movlw	high STR_43
  2764   007144  6E24               	movwf	(printf@fmt+1)^0,c
  2765   007146  ECE9  F034         	call	_printf	;wreg free
  2766                           
  2767                           ;src/librerias/commandLine.c: 187:             commandLineReset();
  2768   00714A  EC21  F035         	call	_commandLineReset	;wreg free
  2769                           
  2770                           ;src/librerias/commandLine.c: 188:         break;
  2771   00714E  EFE6  F038         	goto	l328
  2772   007152                     l3190:
  2773                           
  2774                           ;src/librerias/commandLine.c: 190:             printf("\r\nEC_CL_WRONGNUMPARAMS\r\n");
  2775   007152  0E64               	movlw	low STR_44
  2776   007154  6E23               	movwf	printf@fmt^0,c
  2777   007156  0E7E               	movlw	high STR_44
  2778   007158  6E24               	movwf	(printf@fmt+1)^0,c
  2779   00715A  ECE9  F034         	call	_printf	;wreg free
  2780                           
  2781                           ;src/librerias/commandLine.c: 191:             commandLineReset();
  2782   00715E  EC21  F035         	call	_commandLineReset	;wreg free
  2783                           
  2784                           ;src/librerias/commandLine.c: 192:         break;
  2785   007162  EFE6  F038         	goto	l328
  2786   007166                     l3192:
  2787                           
  2788                           ;src/librerias/commandLine.c: 194:             printf("\r\nEC_CL_WRONGCOMMAND\r\n");
  2789   007166  0E7D               	movlw	low STR_45
  2790   007168  6E23               	movwf	printf@fmt^0,c
  2791   00716A  0E7E               	movlw	high STR_45
  2792   00716C  6E24               	movwf	(printf@fmt+1)^0,c
  2793   00716E  ECE9  F034         	call	_printf	;wreg free
  2794                           
  2795                           ;src/librerias/commandLine.c: 195:             commandLineReset();
  2796   007172  EC21  F035         	call	_commandLineReset	;wreg free
  2797                           
  2798                           ;src/librerias/commandLine.c: 196:         break;
  2799   007176  EFE6  F038         	goto	l328
  2800   00717A                     l3196:
  2801   00717A  502C               	movf	CL_ErrorHandler@errorCode^0,w,c
  2802   00717C  6E2A               	movwf	??_CL_ErrorHandler^0,c
  2803   00717E  6A2B               	clrf	(??_CL_ErrorHandler+1)^0,c
  2804                           
  2805                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2806                           ; Switch size 1, requested type "simple"
  2807                           ; Number of cases is 1, Range of values is 0 to 0
  2808                           ; switch strategies available:
  2809                           ; Name         Instructions Cycles
  2810                           ; simple_byte            4     3 (average)
  2811                           ;	Chosen strategy is simple_byte
  2812   007180  502B               	movf	(??_CL_ErrorHandler+1)^0,w,c
  2813   007182  0A00               	xorlw	0	; case 0
  2814   007184  B4D8               	btfsc	status,2,c
  2815   007186  EFC7  F038         	goto	l3618
  2816   00718A  EFE6  F038         	goto	l328
  2817   00718E                     l3618:
  2818                           
  2819                           ; Switch size 1, requested type "simple"
  2820                           ; Number of cases is 7, Range of values is 0 to 6
  2821                           ; switch strategies available:
  2822                           ; Name         Instructions Cycles
  2823                           ; simple_byte           22    12 (average)
  2824                           ;	Chosen strategy is simple_byte
  2825   00718E  502A               	movf	??_CL_ErrorHandler^0,w,c
  2826   007190  0A00               	xorlw	0	; case 0
  2827   007192  B4D8               	btfsc	status,2,c
  2828   007194  EFE6  F038         	goto	l328
  2829   007198  0A01               	xorlw	1	; case 1
  2830   00719A  B4D8               	btfsc	status,2,c
  2831   00719C  EF81  F038         	goto	l3182
  2832   0071A0  0A03               	xorlw	3	; case 2
  2833   0071A2  B4D8               	btfsc	status,2,c
  2834   0071A4  EF8B  F038         	goto	l3184
  2835   0071A8  0A01               	xorlw	1	; case 3
  2836   0071AA  B4D8               	btfsc	status,2,c
  2837   0071AC  EF95  F038         	goto	l3186
  2838   0071B0  0A07               	xorlw	7	; case 4
  2839   0071B2  B4D8               	btfsc	status,2,c
  2840   0071B4  EF9F  F038         	goto	l3188
  2841   0071B8  0A01               	xorlw	1	; case 5
  2842   0071BA  B4D8               	btfsc	status,2,c
  2843   0071BC  EFA9  F038         	goto	l3190
  2844   0071C0  0A03               	xorlw	3	; case 6
  2845   0071C2  B4D8               	btfsc	status,2,c
  2846   0071C4  EFB3  F038         	goto	l3192
  2847   0071C8  EFE6  F038         	goto	l328
  2848   0071CC                     l328:
  2849   0071CC  0012               	return		;funcret
  2850   0071CE                     __end_of_CL_ErrorHandler:
  2851                           	callstack 0
  2852                           
  2853 ;; *************** function _commandLineReset *****************
  2854 ;; Defined at:
  2855 ;;		line 32 in file "src/librerias/commandLine.c"
  2856 ;; Parameters:    Size  Location     Type
  2857 ;;		None
  2858 ;; Auto vars:     Size  Location     Type
  2859 ;;		None
  2860 ;; Return value:  Size  Location     Type
  2861 ;;                  1    wreg      void 
  2862 ;; Registers used:
  2863 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2864 ;; Tracked objects:
  2865 ;;		On entry : 0/0
  2866 ;;		On exit  : 0/0
  2867 ;;		Unchanged: 0/0
  2868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2869 ;;      Params:         0       0       0       0       0       0       0       0       0
  2870 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2871 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2872 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2873 ;;Total ram usage:        0 bytes
  2874 ;; Hardware stack levels used: 1
  2875 ;; Hardware stack levels required when called: 6
  2876 ;; This function calls:
  2877 ;;		_clearArray
  2878 ;;		_clearBuff
  2879 ;;		_printf
  2880 ;; This function is called by:
  2881 ;;		_commandProcess
  2882 ;;		_CL_ErrorHandler
  2883 ;; This function uses a non-reentrant model
  2884 ;;
  2885                           
  2886                           	psect	text12
  2887   006A42                     __ptext12:
  2888                           	callstack 0
  2889   006A42                     _commandLineReset:
  2890                           	callstack 23
  2891   006A42                     
  2892                           ;src/librerias/commandLine.c: 33:     clearBuff();
  2893   006A42  ECF8  F034         	call	_clearBuff	;wreg free
  2894                           
  2895                           ;src/librerias/commandLine.c: 34:     clearArray(&command[0],16);
  2896   006A46  0E40               	movlw	low _command
  2897   006A48  6E01               	movwf	clearArray@array^0,c
  2898   006A4A  6A02               	clrf	(clearArray@array+1)^0,c
  2899   006A4C  0E10               	movlw	16
  2900   006A4E  6E03               	movwf	clearArray@len^0,c
  2901   006A50  EC0B  F035         	call	_clearArray	;wreg free
  2902                           
  2903                           ;src/librerias/commandLine.c: 35:     clearArray(&param[0][0],16 * 5);
  2904   006A54  0E00               	movlw	low _param
  2905   006A56  6E01               	movwf	clearArray@array^0,c
  2906   006A58  0E01               	movlw	high _param
  2907   006A5A  6E02               	movwf	(clearArray@array+1)^0,c
  2908   006A5C  0E50               	movlw	80
  2909   006A5E  6E03               	movwf	clearArray@len^0,c
  2910   006A60  EC0B  F035         	call	_clearArray	;wreg free
  2911   006A64                     
  2912                           ;src/librerias/commandLine.c: 36:     printf("\r\n> ");
  2913   006A64  0EF1               	movlw	low STR_33
  2914   006A66  6E23               	movwf	printf@fmt^0,c
  2915   006A68  0E7F               	movlw	high STR_33
  2916   006A6A  6E24               	movwf	(printf@fmt+1)^0,c
  2917   006A6C  ECE9  F034         	call	_printf	;wreg free
  2918   006A70  0012               	return		;funcret
  2919   006A72                     __end_of_commandLineReset:
  2920                           	callstack 0
  2921                           
  2922 ;; *************** function _clearBuff *****************
  2923 ;; Defined at:
  2924 ;;		line 68 in file "src/librerias/commandLine.c"
  2925 ;; Parameters:    Size  Location     Type
  2926 ;;		None
  2927 ;; Auto vars:     Size  Location     Type
  2928 ;;  i               1    0[COMRAM] unsigned char 
  2929 ;; Return value:  Size  Location     Type
  2930 ;;                  1    wreg      void 
  2931 ;; Registers used:
  2932 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2933 ;; Tracked objects:
  2934 ;;		On entry : 0/0
  2935 ;;		On exit  : 0/0
  2936 ;;		Unchanged: 0/0
  2937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2938 ;;      Params:         0       0       0       0       0       0       0       0       0
  2939 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2940 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2941 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2942 ;;Total ram usage:        1 bytes
  2943 ;; Hardware stack levels used: 1
  2944 ;; This function calls:
  2945 ;;		Nothing
  2946 ;; This function is called by:
  2947 ;;		_commandLineInit
  2948 ;;		_commandLineDeinit
  2949 ;;		_commandLineReset
  2950 ;; This function uses a non-reentrant model
  2951 ;;
  2952                           
  2953                           	psect	text13
  2954   0069F0                     __ptext13:
  2955                           	callstack 0
  2956   0069F0                     _clearBuff:
  2957                           	callstack 28
  2958   0069F0                     
  2959                           ;src/librerias/commandLine.c: 69:     for(uint8_t i = 0;i < 100;i++){
  2960   0069F0  0E00               	movlw	0
  2961   0069F2  6E01               	movwf	clearBuff@i^0,c
  2962   0069F4                     l2370:
  2963                           
  2964                           ;src/librerias/commandLine.c: 70:         charBuff[i] = 0x0;
  2965   0069F4  5001               	movf	clearBuff@i^0,w,c
  2966   0069F6  0F60               	addlw	low _charBuff
  2967   0069F8  6ED9               	movwf	fsr2l,c
  2968   0069FA  6ADA               	clrf	fsr2h,c
  2969   0069FC  6ADF               	clrf	indf2,c
  2970   0069FE                     
  2971                           ;src/librerias/commandLine.c: 71:     }
  2972   0069FE  2A01               	incf	clearBuff@i^0,f,c
  2973   006A00  0E63               	movlw	99
  2974   006A02  6401               	cpfsgt	clearBuff@i^0,c
  2975   006A04  EF06  F035         	goto	u1511
  2976   006A08  EF08  F035         	goto	u1510
  2977   006A0C                     u1511:
  2978   006A0C  EFFA  F034         	goto	l2370
  2979   006A10                     u1510:
  2980   006A10                     
  2981                           ;src/librerias/commandLine.c: 72:     buffCount = 0x0;
  2982   006A10  0E00               	movlw	0
  2983   006A12  6E3F               	movwf	_buffCount^0,c
  2984   006A14  0012               	return		;funcret
  2985   006A16                     __end_of_clearBuff:
  2986                           	callstack 0
  2987                           
  2988 ;; *************** function _clearArray *****************
  2989 ;; Defined at:
  2990 ;;		line 80 in file "src/librerias/commandLine.c"
  2991 ;; Parameters:    Size  Location     Type
  2992 ;;  array           2    0[COMRAM] PTR unsigned char 
  2993 ;;		 -> param(80), command(16), 
  2994 ;;  len             1    2[COMRAM] unsigned char 
  2995 ;; Auto vars:     Size  Location     Type
  2996 ;;  i               1    3[COMRAM] unsigned char 
  2997 ;; Return value:  Size  Location     Type
  2998 ;;                  1    wreg      void 
  2999 ;; Registers used:
  3000 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3001 ;; Tracked objects:
  3002 ;;		On entry : 0/0
  3003 ;;		On exit  : 0/0
  3004 ;;		Unchanged: 0/0
  3005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3006 ;;      Params:         3       0       0       0       0       0       0       0       0
  3007 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3008 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3009 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3010 ;;Total ram usage:        4 bytes
  3011 ;; Hardware stack levels used: 1
  3012 ;; This function calls:
  3013 ;;		Nothing
  3014 ;; This function is called by:
  3015 ;;		_commandLineReset
  3016 ;; This function uses a non-reentrant model
  3017 ;;
  3018                           
  3019                           	psect	text14
  3020   006A16                     __ptext14:
  3021                           	callstack 0
  3022   006A16                     _clearArray:
  3023                           	callstack 28
  3024   006A16                     
  3025                           ;src/librerias/commandLine.c: 81:     for(uint8_t i = 0; i < len; i++){
  3026   006A16  0E00               	movlw	0
  3027   006A18  6E04               	movwf	clearArray@i^0,c
  3028   006A1A  EF17  F035         	goto	l3174
  3029   006A1E                     l3170:
  3030                           
  3031                           ;src/librerias/commandLine.c: 82:         *(array + i) = 0;
  3032   006A1E  5004               	movf	clearArray@i^0,w,c
  3033   006A20  2401               	addwf	clearArray@array^0,w,c
  3034   006A22  6ED9               	movwf	fsr2l,c
  3035   006A24  0E00               	movlw	0
  3036   006A26  2002               	addwfc	(clearArray@array+1)^0,w,c
  3037   006A28  6EDA               	movwf	fsr2h,c
  3038   006A2A  6ADF               	clrf	indf2,c
  3039   006A2C                     
  3040                           ;src/librerias/commandLine.c: 83:     }
  3041   006A2C  2A04               	incf	clearArray@i^0,f,c
  3042   006A2E                     l3174:
  3043   006A2E  5003               	movf	clearArray@len^0,w,c
  3044   006A30  5C04               	subwf	clearArray@i^0,w,c
  3045   006A32  A0D8               	btfss	status,0,c
  3046   006A34  EF1E  F035         	goto	u2251
  3047   006A38  EF20  F035         	goto	u2250
  3048   006A3C                     u2251:
  3049   006A3C  EF0F  F035         	goto	l3170
  3050   006A40                     u2250:
  3051   006A40  0012               	return		;funcret
  3052   006A42                     __end_of_clearArray:
  3053                           	callstack 0
  3054                           
  3055 ;; *************** function _UART_RxAvailable *****************
  3056 ;; Defined at:
  3057 ;;		line 112 in file "src/librerias/UART.c"
  3058 ;; Parameters:    Size  Location     Type
  3059 ;;		None
  3060 ;; Auto vars:     Size  Location     Type
  3061 ;;		None
  3062 ;; Return value:  Size  Location     Type
  3063 ;;                  1    wreg      _Bool 
  3064 ;; Registers used:
  3065 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3066 ;; Tracked objects:
  3067 ;;		On entry : 0/0
  3068 ;;		On exit  : 0/0
  3069 ;;		Unchanged: 0/0
  3070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3071 ;;      Params:         0       0       0       0       0       0       0       0       0
  3072 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3073 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3074 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3075 ;;Total ram usage:        0 bytes
  3076 ;; Hardware stack levels used: 1
  3077 ;; Hardware stack levels required when called: 7
  3078 ;; This function calls:
  3079 ;;		_UART_ErrorHandler
  3080 ;; This function is called by:
  3081 ;;		_main
  3082 ;; This function uses a non-reentrant model
  3083 ;;
  3084                           
  3085                           	psect	text15
  3086   006AD8                     __ptext15:
  3087                           	callstack 0
  3088   006AD8                     _UART_RxAvailable:
  3089                           	callstack 23
  3090   006AD8                     
  3091                           ;src/librerias/UART.c: 113:     if (!RCSTAbits.SPEN || !RCSTAbits.CREN){
  3092   006AD8  AEAB               	btfss	171,7,c	;volatile
  3093   006ADA  EF71  F035         	goto	u2061
  3094   006ADE  EF73  F035         	goto	u2060
  3095   006AE2                     u2061:
  3096   006AE2  EF7A  F035         	goto	l2792
  3097   006AE6                     u2060:
  3098   006AE6  B8AB               	btfsc	171,4,c	;volatile
  3099   006AE8  EF78  F035         	goto	u2071
  3100   006AEC  EF7A  F035         	goto	u2070
  3101   006AF0                     u2071:
  3102   006AF0  EF80  F035         	goto	l151
  3103   006AF4                     u2070:
  3104   006AF4                     l2792:
  3105                           
  3106                           ;src/librerias/UART.c: 114:         UART_ErrorHandler(ERROR_CODE_UART_CONFIG);
  3107   006AF4  0E03               	movlw	3
  3108   006AF6  ECB6  F036         	call	_UART_ErrorHandler
  3109   006AFA                     l2794:
  3110                           
  3111                           ;src/librerias/UART.c: 115:         return 0;
  3112   006AFA  0E00               	movlw	0
  3113   006AFC  EF8A  F035         	goto	l154
  3114   006B00                     l151:
  3115                           
  3116                           ;src/librerias/UART.c: 117:     if (!RC1IF){
  3117   006B00  BA9E               	btfsc	3998,5,c	;volatile
  3118   006B02  EF85  F035         	goto	u2081
  3119   006B06  EF87  F035         	goto	u2080
  3120   006B0A                     u2081:
  3121   006B0A  EF89  F035         	goto	l2802
  3122   006B0E                     u2080:
  3123   006B0E  EF7D  F035         	goto	l2794
  3124   006B12                     l2802:
  3125                           
  3126                           ;src/librerias/UART.c: 120:     return 1;
  3127   006B12  0E01               	movlw	1
  3128   006B14                     l154:
  3129   006B14  0012               	return		;funcret
  3130   006B16                     __end_of_UART_RxAvailable:
  3131                           	callstack 0
  3132                           
  3133 ;; *************** function _UART_Rx *****************
  3134 ;; Defined at:
  3135 ;;		line 106 in file "src/librerias/UART.c"
  3136 ;; Parameters:    Size  Location     Type
  3137 ;;		None
  3138 ;; Auto vars:     Size  Location     Type
  3139 ;;		None
  3140 ;; Return value:  Size  Location     Type
  3141 ;;                  1    wreg      unsigned char 
  3142 ;; Registers used:
  3143 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3144 ;; Tracked objects:
  3145 ;;		On entry : 0/0
  3146 ;;		On exit  : 0/0
  3147 ;;		Unchanged: 0/0
  3148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3149 ;;      Params:         0       0       0       0       0       0       0       0       0
  3150 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3151 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3152 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3153 ;;Total ram usage:        0 bytes
  3154 ;; Hardware stack levels used: 1
  3155 ;; Hardware stack levels required when called: 7
  3156 ;; This function calls:
  3157 ;;		_UART_ErrorHandler
  3158 ;;		_UART_Rx_FRAMING
  3159 ;;		_UART_Rx_OVERFLOW
  3160 ;; This function is called by:
  3161 ;;		_main
  3162 ;; This function uses a non-reentrant model
  3163 ;;
  3164                           
  3165                           	psect	text16
  3166   006942                     __ptext16:
  3167                           	callstack 0
  3168   006942                     _UART_Rx:
  3169                           	callstack 23
  3170   006942                     
  3171                           ;src/librerias/UART.c: 107:     UART_ErrorHandler(UART_Rx_OVERFLOW());
  3172   006942  ECDB  F034         	call	_UART_Rx_OVERFLOW	;wreg free
  3173   006946  ECB6  F036         	call	_UART_ErrorHandler
  3174                           
  3175                           ;src/librerias/UART.c: 108:     UART_ErrorHandler(UART_Rx_FRAMING());
  3176   00694A  ECC1  F034         	call	_UART_Rx_FRAMING	;wreg free
  3177   00694E  ECB6  F036         	call	_UART_ErrorHandler
  3178   006952                     
  3179                           ;src/librerias/UART.c: 109:     return RCREG1;
  3180   006952  50AE               	movf	174,w,c	;volatile
  3181   006954  0012               	return		;funcret
  3182   006956                     __end_of_UART_Rx:
  3183                           	callstack 0
  3184                           
  3185 ;; *************** function _UART_Rx_OVERFLOW *****************
  3186 ;; Defined at:
  3187 ;;		line 89 in file "src/librerias/UART.c"
  3188 ;; Parameters:    Size  Location     Type
  3189 ;;		None
  3190 ;; Auto vars:     Size  Location     Type
  3191 ;;		None
  3192 ;; Return value:  Size  Location     Type
  3193 ;;                  1    wreg      enum E5188
  3194 ;; Registers used:
  3195 ;;		wreg
  3196 ;; Tracked objects:
  3197 ;;		On entry : 0/0
  3198 ;;		On exit  : 0/0
  3199 ;;		Unchanged: 0/0
  3200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3201 ;;      Params:         0       0       0       0       0       0       0       0       0
  3202 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3203 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3204 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3205 ;;Total ram usage:        0 bytes
  3206 ;; Hardware stack levels used: 1
  3207 ;; This function calls:
  3208 ;;		Nothing
  3209 ;; This function is called by:
  3210 ;;		_UART_Rx
  3211 ;; This function uses a non-reentrant model
  3212 ;;
  3213                           
  3214                           	psect	text17
  3215   0069B6                     __ptext17:
  3216                           	callstack 0
  3217   0069B6                     _UART_Rx_OVERFLOW:
  3218                           	callstack 29
  3219   0069B6                     
  3220                           ;src/librerias/UART.c: 90:     if (RCSTAbits.OERR) {
  3221   0069B6  A2AB               	btfss	171,1,c	;volatile
  3222   0069B8  EFE0  F034         	goto	u491
  3223   0069BC  EFE2  F034         	goto	u490
  3224   0069C0                     u491:
  3225   0069C0  EFE7  F034         	goto	l1526
  3226   0069C4                     u490:
  3227   0069C4                     
  3228                           ;src/librerias/UART.c: 91:         RCSTAbits.CREN = 0;
  3229   0069C4  98AB               	bcf	171,4,c	;volatile
  3230                           
  3231                           ;src/librerias/UART.c: 92:         RCSTAbits.CREN = 1;
  3232   0069C6  88AB               	bsf	171,4,c	;volatile
  3233   0069C8                     
  3234                           ;src/librerias/UART.c: 93:         return ERROR_CODE_UART_OVERFLOW;
  3235   0069C8  0E01               	movlw	1
  3236   0069CA  EFE8  F034         	goto	l141
  3237   0069CE                     l1526:
  3238                           
  3239                           ;src/librerias/UART.c: 95:     return ERROR_CODE_UART_OK;
  3240   0069CE  0E00               	movlw	0
  3241   0069D0                     l141:
  3242   0069D0  0012               	return		;funcret
  3243   0069D2                     __end_of_UART_Rx_OVERFLOW:
  3244                           	callstack 0
  3245                           
  3246 ;; *************** function _UART_Rx_FRAMING *****************
  3247 ;; Defined at:
  3248 ;;		line 98 in file "src/librerias/UART.c"
  3249 ;; Parameters:    Size  Location     Type
  3250 ;;		None
  3251 ;; Auto vars:     Size  Location     Type
  3252 ;;  dummy           1    0        unsigned char 
  3253 ;; Return value:  Size  Location     Type
  3254 ;;                  1    wreg      enum E5188
  3255 ;; Registers used:
  3256 ;;		wreg
  3257 ;; Tracked objects:
  3258 ;;		On entry : 0/0
  3259 ;;		On exit  : 0/0
  3260 ;;		Unchanged: 0/0
  3261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3262 ;;      Params:         0       0       0       0       0       0       0       0       0
  3263 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3264 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3265 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3266 ;;Total ram usage:        0 bytes
  3267 ;; Hardware stack levels used: 1
  3268 ;; This function calls:
  3269 ;;		Nothing
  3270 ;; This function is called by:
  3271 ;;		_UART_Rx
  3272 ;; This function uses a non-reentrant model
  3273 ;;
  3274                           
  3275                           	psect	text18
  3276   006982                     __ptext18:
  3277                           	callstack 0
  3278   006982                     _UART_Rx_FRAMING:
  3279                           	callstack 29
  3280   006982                     
  3281                           ;src/librerias/UART.c: 99:     if (RCSTAbits.FERR) {
  3282   006982  A4AB               	btfss	171,2,c	;volatile
  3283   006984  EFC6  F034         	goto	u501
  3284   006988  EFC8  F034         	goto	u500
  3285   00698C                     u501:
  3286   00698C  EFCC  F034         	goto	l1538
  3287   006990                     u500:
  3288   006990  50AE               	movf	174,w,c	;volatile
  3289   006992                     
  3290                           ;src/librerias/UART.c: 101:         return ERROR_CODE_UART_FRAMING;
  3291   006992  0E02               	movlw	2
  3292   006994  EFCD  F034         	goto	l145
  3293   006998                     l1538:
  3294                           
  3295                           ;src/librerias/UART.c: 103:     return ERROR_CODE_UART_OK;
  3296   006998  0E00               	movlw	0
  3297   00699A                     l145:
  3298   00699A  0012               	return		;funcret
  3299   00699C                     __end_of_UART_Rx_FRAMING:
  3300                           	callstack 0
  3301                           
  3302 ;; *************** function _UART_ErrorHandler *****************
  3303 ;; Defined at:
  3304 ;;		line 123 in file "src/librerias/UART.c"
  3305 ;; Parameters:    Size  Location     Type
  3306 ;;  errorCode       1    wreg     enum E5188
  3307 ;; Auto vars:     Size  Location     Type
  3308 ;;  errorCode       1   43[COMRAM] enum E5188
  3309 ;; Return value:  Size  Location     Type
  3310 ;;                  1    wreg      void 
  3311 ;; Registers used:
  3312 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3313 ;; Tracked objects:
  3314 ;;		On entry : 0/0
  3315 ;;		On exit  : 0/0
  3316 ;;		Unchanged: 0/0
  3317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3318 ;;      Params:         0       0       0       0       0       0       0       0       0
  3319 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3320 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3321 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3322 ;;Total ram usage:        3 bytes
  3323 ;; Hardware stack levels used: 1
  3324 ;; Hardware stack levels required when called: 6
  3325 ;; This function calls:
  3326 ;;		_printf
  3327 ;; This function is called by:
  3328 ;;		_UART_Rx
  3329 ;;		_UART_RxAvailable
  3330 ;; This function uses a non-reentrant model
  3331 ;;
  3332                           
  3333                           	psect	text19
  3334   006D6C                     __ptext19:
  3335                           	callstack 0
  3336   006D6C                     _UART_ErrorHandler:
  3337                           	callstack 23
  3338                           
  3339                           ;incstack = 0
  3340                           ;UART_ErrorHandler@errorCode stored from wreg
  3341   006D6C  6E2C               	movwf	UART_ErrorHandler@errorCode^0,c
  3342   006D6E                     
  3343                           ;src/librerias/UART.c: 124:     if(errorCode == ERROR_CODE_UART_OK) return;
  3344   006D6E  502C               	movf	UART_ErrorHandler@errorCode^0,w,c
  3345   006D70  A4D8               	btfss	status,2,c
  3346   006D72  EFBD  F036         	goto	u1621
  3347   006D76  EFBF  F036         	goto	u1620
  3348   006D7A                     u1621:
  3349   006D7A  EFC1  F036         	goto	l2548
  3350   006D7E                     u1620:
  3351   006D7E  EFFA  F036         	goto	l159
  3352   006D82                     l2548:
  3353                           
  3354                           ;src/librerias/UART.c: 125:     printf("Error: ");
  3355   006D82  0EDA               	movlw	low STR_20
  3356   006D84  6E23               	movwf	printf@fmt^0,c
  3357   006D86  0E7F               	movlw	high STR_20
  3358   006D88  6E24               	movwf	(printf@fmt+1)^0,c
  3359   006D8A  ECE9  F034         	call	_printf	;wreg free
  3360                           
  3361                           ;src/librerias/UART.c: 126:     switch(errorCode){
  3362   006D8E  EFE1  F036         	goto	l2558
  3363   006D92                     l2550:
  3364                           
  3365                           ;src/librerias/UART.c: 128:             printf("ERROR_CODE_UART_OVERFLOW\r\n");
  3366   006D92  0E15               	movlw	low STR_21
  3367   006D94  6E23               	movwf	printf@fmt^0,c
  3368   006D96  0E7E               	movlw	high STR_21
  3369   006D98  6E24               	movwf	(printf@fmt+1)^0,c
  3370   006D9A  ECE9  F034         	call	_printf	;wreg free
  3371                           
  3372                           ;src/librerias/UART.c: 129:         break;
  3373   006D9E  EFFA  F036         	goto	l159
  3374   006DA2                     l2552:
  3375                           
  3376                           ;src/librerias/UART.c: 131:             printf("ERROR_CODE_UART_FRAMING\r\n");
  3377   006DA2  0E4A               	movlw	low STR_22
  3378   006DA4  6E23               	movwf	printf@fmt^0,c
  3379   006DA6  0E7E               	movlw	high STR_22
  3380   006DA8  6E24               	movwf	(printf@fmt+1)^0,c
  3381   006DAA  ECE9  F034         	call	_printf	;wreg free
  3382                           
  3383                           ;src/librerias/UART.c: 132:         break;
  3384   006DAE  EFFA  F036         	goto	l159
  3385   006DB2                     l2554:
  3386                           
  3387                           ;src/librerias/UART.c: 134:             printf("ERROR_CODE_UART_CONFIG \r\n");
  3388   006DB2  0E30               	movlw	low STR_23
  3389   006DB4  6E23               	movwf	printf@fmt^0,c
  3390   006DB6  0E7E               	movlw	high STR_23
  3391   006DB8  6E24               	movwf	(printf@fmt+1)^0,c
  3392   006DBA  ECE9  F034         	call	_printf	;wreg free
  3393                           
  3394                           ;src/librerias/UART.c: 135:         break;
  3395   006DBE  EFFA  F036         	goto	l159
  3396   006DC2                     l2558:
  3397   006DC2  502C               	movf	UART_ErrorHandler@errorCode^0,w,c
  3398   006DC4  6E2A               	movwf	??_UART_ErrorHandler^0,c
  3399   006DC6  6A2B               	clrf	(??_UART_ErrorHandler+1)^0,c
  3400                           
  3401                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3402                           ; Switch size 1, requested type "simple"
  3403                           ; Number of cases is 1, Range of values is 0 to 0
  3404                           ; switch strategies available:
  3405                           ; Name         Instructions Cycles
  3406                           ; simple_byte            4     3 (average)
  3407                           ;	Chosen strategy is simple_byte
  3408   006DC8  502B               	movf	(??_UART_ErrorHandler+1)^0,w,c
  3409   006DCA  0A00               	xorlw	0	; case 0
  3410   006DCC  B4D8               	btfsc	status,2,c
  3411   006DCE  EFEB  F036         	goto	l3620
  3412   006DD2  EFFA  F036         	goto	l159
  3413   006DD6                     l3620:
  3414                           
  3415                           ; Switch size 1, requested type "simple"
  3416                           ; Number of cases is 3, Range of values is 1 to 3
  3417                           ; switch strategies available:
  3418                           ; Name         Instructions Cycles
  3419                           ; simple_byte           10     6 (average)
  3420                           ;	Chosen strategy is simple_byte
  3421   006DD6  502A               	movf	??_UART_ErrorHandler^0,w,c
  3422   006DD8  0A01               	xorlw	1	; case 1
  3423   006DDA  B4D8               	btfsc	status,2,c
  3424   006DDC  EFC9  F036         	goto	l2550
  3425   006DE0  0A03               	xorlw	3	; case 2
  3426   006DE2  B4D8               	btfsc	status,2,c
  3427   006DE4  EFD1  F036         	goto	l2552
  3428   006DE8  0A01               	xorlw	1	; case 3
  3429   006DEA  B4D8               	btfsc	status,2,c
  3430   006DEC  EFD9  F036         	goto	l2554
  3431   006DF0  EFFA  F036         	goto	l159
  3432   006DF4                     l159:
  3433   006DF4  0012               	return		;funcret
  3434   006DF6                     __end_of_UART_ErrorHandler:
  3435                           	callstack 0
  3436                           
  3437 ;; *************** function _UART_Init *****************
  3438 ;; Defined at:
  3439 ;;		line 29 in file "src/librerias/UART.c"
  3440 ;; Parameters:    Size  Location     Type
  3441 ;;  baudrate        4   41[COMRAM] unsigned long 
  3442 ;; Auto vars:     Size  Location     Type
  3443 ;;		None
  3444 ;; Return value:  Size  Location     Type
  3445 ;;                  1    wreg      void 
  3446 ;; Registers used:
  3447 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3448 ;; Tracked objects:
  3449 ;;		On entry : 0/0
  3450 ;;		On exit  : 0/0
  3451 ;;		Unchanged: 0/0
  3452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3453 ;;      Params:         4       0       0       0       0       0       0       0       0
  3454 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3455 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3456 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3457 ;;Total ram usage:        4 bytes
  3458 ;; Hardware stack levels used: 1
  3459 ;; Hardware stack levels required when called: 7
  3460 ;; This function calls:
  3461 ;;		_UART_config_show
  3462 ;;		_UART_select_baud
  3463 ;; This function is called by:
  3464 ;;		_main
  3465 ;; This function uses a non-reentrant model
  3466 ;;
  3467                           
  3468                           	psect	text20
  3469   006A72                     __ptext20:
  3470                           	callstack 0
  3471   006A72                     _UART_Init:
  3472                           	callstack 23
  3473   006A72                     
  3474                           ;src/librerias/UART.c: 30:     TXSTA1bits.SYNC1 = 0;
  3475   006A72  98AC               	bcf	172,4,c	;volatile
  3476                           
  3477                           ;src/librerias/UART.c: 31:     TXSTA1bits.BRGH1 = 1;
  3478   006A74  84AC               	bsf	172,2,c	;volatile
  3479   006A76                     
  3480                           ;src/librerias/UART.c: 32:     BAUDCON1 = 0x4A;
  3481   006A76  0E4A               	movlw	74
  3482   006A78  6EB8               	movwf	184,c	;volatile
  3483   006A7A                     
  3484                           ;src/librerias/UART.c: 33:     UART_select_baud(baudrate);
  3485   006A7A  C02A  F001         	movff	UART_Init@baudrate,UART_select_baud@baudrate
  3486   006A7E  C02B  F002         	movff	UART_Init@baudrate+1,UART_select_baud@baudrate+1
  3487   006A82  C02C  F003         	movff	UART_Init@baudrate+2,UART_select_baud@baudrate+2
  3488   006A86  C02D  F004         	movff	UART_Init@baudrate+3,UART_select_baud@baudrate+3
  3489   006A8A  ECEE  F039         	call	_UART_select_baud	;wreg free
  3490   006A8E                     
  3491                           ;src/librerias/UART.c: 34:     TRISC6 = 1;
  3492   006A8E  8C94               	bsf	3988,6,c	;volatile
  3493   006A90                     
  3494                           ;src/librerias/UART.c: 35:     TRISC7 = 1;
  3495   006A90  8E94               	bsf	3988,7,c	;volatile
  3496   006A92                     
  3497                           ;src/librerias/UART.c: 36:     RCSTAbits.SPEN = 1;
  3498   006A92  8EAB               	bsf	171,7,c	;volatile
  3499   006A94                     
  3500                           ;src/librerias/UART.c: 37:     TXSTAbits.TXEN1 = 1;
  3501   006A94  8AAC               	bsf	172,5,c	;volatile
  3502   006A96                     
  3503                           ;src/librerias/UART.c: 38:     RCSTAbits.CREN = 1;
  3504   006A96  88AB               	bsf	171,4,c	;volatile
  3505   006A98                     
  3506                           ;src/librerias/UART.c: 39:     UART_config_show();
  3507   006A98  EC8E  F03A         	call	_UART_config_show	;wreg free
  3508   006A9C                     
  3509                           ;src/librerias/UART.c: 40:     ANSELC = 0x0;
  3510   006A9C  0E00               	movlw	0
  3511   006A9E  010F               	movlb	15	; () banked
  3512   006AA0  6F5D               	movwf	93,b	;volatile
  3513   006AA2                     
  3514                           ; BSR set to: 15
  3515   006AA2  0012               	return		;funcret
  3516   006AA4                     __end_of_UART_Init:
  3517                           	callstack 0
  3518                           
  3519 ;; *************** function _UART_select_baud *****************
  3520 ;; Defined at:
  3521 ;;		line 43 in file "src/librerias/UART.c"
  3522 ;; Parameters:    Size  Location     Type
  3523 ;;  baudrate        4    0[COMRAM] unsigned long 
  3524 ;; Auto vars:     Size  Location     Type
  3525 ;;		None
  3526 ;; Return value:  Size  Location     Type
  3527 ;;                  1    wreg      void 
  3528 ;; Registers used:
  3529 ;;		wreg, status,2, status,0
  3530 ;; Tracked objects:
  3531 ;;		On entry : 0/0
  3532 ;;		On exit  : 0/0
  3533 ;;		Unchanged: 0/0
  3534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3535 ;;      Params:         4       0       0       0       0       0       0       0       0
  3536 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3537 ;;      Temps:          4       0       0       0       0       0       0       0       0
  3538 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3539 ;;Total ram usage:        8 bytes
  3540 ;; Hardware stack levels used: 1
  3541 ;; This function calls:
  3542 ;;		Nothing
  3543 ;; This function is called by:
  3544 ;;		_UART_Init
  3545 ;; This function uses a non-reentrant model
  3546 ;;
  3547                           
  3548                           	psect	text21
  3549   0073DC                     __ptext21:
  3550                           	callstack 0
  3551   0073DC                     _UART_select_baud:
  3552                           	callstack 29
  3553   0073DC                     
  3554                           ;src/librerias/UART.c: 44:     switch (baudrate){
  3555   0073DC  EF20  F03A         	goto	l2502
  3556   0073E0                     l2484:
  3557                           
  3558                           ;src/librerias/UART.c: 46:             SPBRGH = 0x9C;
  3559   0073E0  0E9C               	movlw	156
  3560   0073E2  6EB0               	movwf	176,c	;volatile
  3561                           
  3562                           ;src/librerias/UART.c: 47:             SPBRG = 0x3F;
  3563   0073E4  0E3F               	movlw	63
  3564   0073E6  6EAF               	movwf	175,c	;volatile
  3565                           
  3566                           ;src/librerias/UART.c: 48:             break;
  3567   0073E8  EF8D  F03A         	goto	l128
  3568   0073EC                     l2486:
  3569                           
  3570                           ;src/librerias/UART.c: 50:             SPBRGH = 0x27;
  3571   0073EC  0E27               	movlw	39
  3572   0073EE  6EB0               	movwf	176,c	;volatile
  3573                           
  3574                           ;src/librerias/UART.c: 51:             SPBRG = 0x0F;
  3575   0073F0  0E0F               	movlw	15
  3576   0073F2  6EAF               	movwf	175,c	;volatile
  3577                           
  3578                           ;src/librerias/UART.c: 52:             break;
  3579   0073F4  EF8D  F03A         	goto	l128
  3580   0073F8                     l2488:
  3581                           
  3582                           ;src/librerias/UART.c: 54:             SPBRGH = 0x13;
  3583   0073F8  0E13               	movlw	19
  3584   0073FA  6EB0               	movwf	176,c	;volatile
  3585                           
  3586                           ;src/librerias/UART.c: 55:             SPBRG = 0x87;
  3587   0073FC  0E87               	movlw	135
  3588   0073FE  6EAF               	movwf	175,c	;volatile
  3589                           
  3590                           ;src/librerias/UART.c: 56:             break;
  3591   007400  EF8D  F03A         	goto	l128
  3592   007404                     l2490:
  3593                           
  3594                           ;src/librerias/UART.c: 58:             SPBRGH = 0x04;
  3595   007404  0E04               	movlw	4
  3596   007406  6EB0               	movwf	176,c	;volatile
  3597                           
  3598                           ;src/librerias/UART.c: 59:             SPBRG = 0x7F;
  3599   007408  0E7F               	movlw	127
  3600   00740A  6EAF               	movwf	175,c	;volatile
  3601                           
  3602                           ;src/librerias/UART.c: 60:             break;
  3603   00740C  EF8D  F03A         	goto	l128
  3604   007410                     l2492:
  3605                           
  3606                           ;src/librerias/UART.c: 62:             SPBRGH = 0x02;
  3607   007410  0E02               	movlw	2
  3608   007412  6EB0               	movwf	176,c	;volatile
  3609                           
  3610                           ;src/librerias/UART.c: 63:             SPBRG = 0x70;
  3611   007414  0E70               	movlw	112
  3612   007416  6EAF               	movwf	175,c	;volatile
  3613                           
  3614                           ;src/librerias/UART.c: 64:             break;
  3615   007418  EF8D  F03A         	goto	l128
  3616   00741C                     l2494:
  3617                           
  3618                           ;src/librerias/UART.c: 66:             SPBRGH = 0x00;
  3619   00741C  0E00               	movlw	0
  3620   00741E  6EB0               	movwf	176,c	;volatile
  3621                           
  3622                           ;src/librerias/UART.c: 67:             SPBRG = 0xCF;
  3623   007420  0ECF               	movlw	207
  3624   007422  6EAF               	movwf	175,c	;volatile
  3625                           
  3626                           ;src/librerias/UART.c: 68:             break;
  3627   007424  EF8D  F03A         	goto	l128
  3628   007428                     l2496:
  3629                           
  3630                           ;src/librerias/UART.c: 70:             SPBRGH = 0x00;
  3631   007428  0E00               	movlw	0
  3632   00742A  6EB0               	movwf	176,c	;volatile
  3633                           
  3634                           ;src/librerias/UART.c: 71:             SPBRG = 0x67;
  3635   00742C  0E67               	movlw	103
  3636   00742E  6EAF               	movwf	175,c	;volatile
  3637                           
  3638                           ;src/librerias/UART.c: 72:             break;
  3639   007430  EF8D  F03A         	goto	l128
  3640   007434                     l2498:
  3641                           
  3642                           ;src/librerias/UART.c: 74:             SPBRGH = 0x04;
  3643   007434  0E04               	movlw	4
  3644   007436  6EB0               	movwf	176,c	;volatile
  3645                           
  3646                           ;src/librerias/UART.c: 75:             SPBRG = 0xE1;
  3647   007438  0EE1               	movlw	225
  3648   00743A  6EAF               	movwf	175,c	;volatile
  3649                           
  3650                           ;src/librerias/UART.c: 76:             break;
  3651   00743C  EF8D  F03A         	goto	l128
  3652   007440                     l2502:
  3653   007440  C001  F005         	movff	UART_select_baud@baudrate,??_UART_select_baud
  3654   007444  C002  F006         	movff	UART_select_baud@baudrate+1,??_UART_select_baud+1
  3655   007448  C003  F007         	movff	UART_select_baud@baudrate+2,??_UART_select_baud+2
  3656   00744C  C004  F008         	movff	UART_select_baud@baudrate+3,??_UART_select_baud+3
  3657                           
  3658                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 3 sub-sw
      +                          itches
  3659                           ; Switch size 1, requested type "simple"
  3660                           ; Number of cases is 1, Range of values is 0 to 0
  3661                           ; switch strategies available:
  3662                           ; Name         Instructions Cycles
  3663                           ; simple_byte            4     3 (average)
  3664                           ;	Chosen strategy is simple_byte
  3665   007450  5008               	movf	(??_UART_select_baud+3)^0,w,c
  3666   007452  0A00               	xorlw	0	; case 0
  3667   007454  B4D8               	btfsc	status,2,c
  3668   007456  EF82  F03A         	goto	l3626
  3669   00745A  EF1A  F03A         	goto	l2498
  3670   00745E                     l3622:
  3671                           
  3672                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 6 sub-sw
      +                          itches
  3673                           ; Switch size 1, requested type "simple"
  3674                           ; Number of cases is 6, Range of values is 1 to 225
  3675                           ; switch strategies available:
  3676                           ; Name         Instructions Cycles
  3677                           ; simple_byte           19    10 (average)
  3678                           ;	Chosen strategy is simple_byte
  3679   00745E  5006               	movf	(??_UART_select_baud+1)^0,w,c
  3680   007460  0A01               	xorlw	1	; case 1
  3681   007462  B4D8               	btfsc	status,2,c
  3682   007464  EF4A  F03A         	goto	l3628
  3683   007468  0A05               	xorlw	5	; case 4
  3684   00746A  B4D8               	btfsc	status,2,c
  3685   00746C  EF51  F03A         	goto	l3630
  3686   007470  0A0D               	xorlw	13	; case 9
  3687   007472  B4D8               	btfsc	status,2,c
  3688   007474  EF58  F03A         	goto	l3632
  3689   007478  0A21               	xorlw	33	; case 40
  3690   00747A  B4D8               	btfsc	status,2,c
  3691   00747C  EF5F  F03A         	goto	l3634
  3692   007480  0A63               	xorlw	99	; case 75
  3693   007482  B4D8               	btfsc	status,2,c
  3694   007484  EF66  F03A         	goto	l3636
  3695   007488  0AAA               	xorlw	170	; case 225
  3696   00748A  B4D8               	btfsc	status,2,c
  3697   00748C  EF6D  F03A         	goto	l3638
  3698   007490  EF1A  F03A         	goto	l2498
  3699   007494                     l3628:
  3700                           
  3701                           ; Switch size 1, requested type "simple"
  3702                           ; Number of cases is 1, Range of values is 44 to 44
  3703                           ; switch strategies available:
  3704                           ; Name         Instructions Cycles
  3705                           ; simple_byte            4     3 (average)
  3706                           ;	Chosen strategy is simple_byte
  3707   007494  5005               	movf	??_UART_select_baud^0,w,c
  3708   007496  0A2C               	xorlw	44	; case 44
  3709   007498  B4D8               	btfsc	status,2,c
  3710   00749A  EFF0  F039         	goto	l2484
  3711   00749E  EF1A  F03A         	goto	l2498
  3712   0074A2                     l3630:
  3713                           
  3714                           ; Switch size 1, requested type "simple"
  3715                           ; Number of cases is 1, Range of values is 176 to 176
  3716                           ; switch strategies available:
  3717                           ; Name         Instructions Cycles
  3718                           ; simple_byte            4     3 (average)
  3719                           ;	Chosen strategy is simple_byte
  3720   0074A2  5005               	movf	??_UART_select_baud^0,w,c
  3721   0074A4  0AB0               	xorlw	176	; case 176
  3722   0074A6  B4D8               	btfsc	status,2,c
  3723   0074A8  EFF6  F039         	goto	l2486
  3724   0074AC  EF1A  F03A         	goto	l2498
  3725   0074B0                     l3632:
  3726                           
  3727                           ; Switch size 1, requested type "simple"
  3728                           ; Number of cases is 1, Range of values is 96 to 96
  3729                           ; switch strategies available:
  3730                           ; Name         Instructions Cycles
  3731                           ; simple_byte            4     3 (average)
  3732                           ;	Chosen strategy is simple_byte
  3733   0074B0  5005               	movf	??_UART_select_baud^0,w,c
  3734   0074B2  0A60               	xorlw	96	; case 96
  3735   0074B4  B4D8               	btfsc	status,2,c
  3736   0074B6  EFFC  F039         	goto	l2488
  3737   0074BA  EF1A  F03A         	goto	l2498
  3738   0074BE                     l3634:
  3739                           
  3740                           ; Switch size 1, requested type "simple"
  3741                           ; Number of cases is 1, Range of values is 177 to 177
  3742                           ; switch strategies available:
  3743                           ; Name         Instructions Cycles
  3744                           ; simple_byte            4     3 (average)
  3745                           ;	Chosen strategy is simple_byte
  3746   0074BE  5005               	movf	??_UART_select_baud^0,w,c
  3747   0074C0  0AB1               	xorlw	177	; case 177
  3748   0074C2  B4D8               	btfsc	status,2,c
  3749   0074C4  EF02  F03A         	goto	l2490
  3750   0074C8  EF1A  F03A         	goto	l2498
  3751   0074CC                     l3636:
  3752                           
  3753                           ; Switch size 1, requested type "simple"
  3754                           ; Number of cases is 1, Range of values is 0 to 0
  3755                           ; switch strategies available:
  3756                           ; Name         Instructions Cycles
  3757                           ; simple_byte            4     3 (average)
  3758                           ;	Chosen strategy is simple_byte
  3759   0074CC  5005               	movf	??_UART_select_baud^0,w,c
  3760   0074CE  0A00               	xorlw	0	; case 0
  3761   0074D0  B4D8               	btfsc	status,2,c
  3762   0074D2  EF08  F03A         	goto	l2492
  3763   0074D6  EF1A  F03A         	goto	l2498
  3764   0074DA                     l3638:
  3765                           
  3766                           ; Switch size 1, requested type "simple"
  3767                           ; Number of cases is 1, Range of values is 0 to 0
  3768                           ; switch strategies available:
  3769                           ; Name         Instructions Cycles
  3770                           ; simple_byte            4     3 (average)
  3771                           ;	Chosen strategy is simple_byte
  3772   0074DA  5005               	movf	??_UART_select_baud^0,w,c
  3773   0074DC  0A00               	xorlw	0	; case 0
  3774   0074DE  B4D8               	btfsc	status,2,c
  3775   0074E0  EF0E  F03A         	goto	l2494
  3776   0074E4  EF1A  F03A         	goto	l2498
  3777   0074E8                     l3624:
  3778                           
  3779                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3780                           ; Switch size 1, requested type "simple"
  3781                           ; Number of cases is 1, Range of values is 194 to 194
  3782                           ; switch strategies available:
  3783                           ; Name         Instructions Cycles
  3784                           ; simple_byte            4     3 (average)
  3785                           ;	Chosen strategy is simple_byte
  3786   0074E8  5006               	movf	(??_UART_select_baud+1)^0,w,c
  3787   0074EA  0AC2               	xorlw	194	; case 194
  3788   0074EC  B4D8               	btfsc	status,2,c
  3789   0074EE  EF7B  F03A         	goto	l3640
  3790   0074F2  EF1A  F03A         	goto	l2498
  3791   0074F6                     l3640:
  3792                           
  3793                           ; Switch size 1, requested type "simple"
  3794                           ; Number of cases is 1, Range of values is 0 to 0
  3795                           ; switch strategies available:
  3796                           ; Name         Instructions Cycles
  3797                           ; simple_byte            4     3 (average)
  3798                           ;	Chosen strategy is simple_byte
  3799   0074F6  5005               	movf	??_UART_select_baud^0,w,c
  3800   0074F8  0A00               	xorlw	0	; case 0
  3801   0074FA  B4D8               	btfsc	status,2,c
  3802   0074FC  EF14  F03A         	goto	l2496
  3803   007500  EF1A  F03A         	goto	l2498
  3804   007504                     l3626:
  3805                           
  3806                           ; Switch size 1, requested type "simple"
  3807                           ; Number of cases is 2, Range of values is 0 to 1
  3808                           ; switch strategies available:
  3809                           ; Name         Instructions Cycles
  3810                           ; simple_byte            7     4 (average)
  3811                           ;	Chosen strategy is simple_byte
  3812   007504  5007               	movf	(??_UART_select_baud+2)^0,w,c
  3813   007506  0A00               	xorlw	0	; case 0
  3814   007508  B4D8               	btfsc	status,2,c
  3815   00750A  EF2F  F03A         	goto	l3622
  3816   00750E  0A01               	xorlw	1	; case 1
  3817   007510  B4D8               	btfsc	status,2,c
  3818   007512  EF74  F03A         	goto	l3624
  3819   007516  EF1A  F03A         	goto	l2498
  3820   00751A                     l128:
  3821   00751A  0012               	return		;funcret
  3822   00751C                     __end_of_UART_select_baud:
  3823                           	callstack 0
  3824                           
  3825 ;; *************** function _UART_config_show *****************
  3826 ;; Defined at:
  3827 ;;		line 13 in file "src/librerias/UART.c"
  3828 ;; Parameters:    Size  Location     Type
  3829 ;;		None
  3830 ;; Auto vars:     Size  Location     Type
  3831 ;;		None
  3832 ;; Return value:  Size  Location     Type
  3833 ;;                  1    wreg      void 
  3834 ;; Registers used:
  3835 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3836 ;; Tracked objects:
  3837 ;;		On entry : 0/0
  3838 ;;		On exit  : 0/0
  3839 ;;		Unchanged: 0/0
  3840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3841 ;;      Params:         0       0       0       0       0       0       0       0       0
  3842 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3843 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3844 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3845 ;;Total ram usage:        0 bytes
  3846 ;; Hardware stack levels used: 1
  3847 ;; Hardware stack levels required when called: 6
  3848 ;; This function calls:
  3849 ;;		_printf
  3850 ;; This function is called by:
  3851 ;;		_UART_Init
  3852 ;; This function uses a non-reentrant model
  3853 ;;
  3854                           
  3855                           	psect	text22
  3856   00751C                     __ptext22:
  3857                           	callstack 0
  3858   00751C                     _UART_config_show:
  3859                           	callstack 23
  3860   00751C                     
  3861                           ;src/librerias/UART.c: 14:     printf("Modo: ");
  3862   00751C  0EEA               	movlw	low STR_1
  3863   00751E  6E23               	movwf	printf@fmt^0,c
  3864   007520  0E7F               	movlw	high STR_1
  3865   007522  6E24               	movwf	(printf@fmt+1)^0,c
  3866   007524  ECE9  F034         	call	_printf	;wreg free
  3867   007528                     
  3868                           ;src/librerias/UART.c: 15:     (SYNC1) ? printf("Sincrono "):printf("Asincrono ");
  3869   007528  A8AC               	btfss	4012,4,c	;volatile
  3870   00752A  EF99  F03A         	goto	u1561
  3871   00752E  EF9B  F03A         	goto	u1560
  3872   007532                     u1561:
  3873   007532  EFA3  F03A         	goto	l2450
  3874   007536                     u1560:
  3875   007536  0EB5               	movlw	low STR_2
  3876   007538  6E23               	movwf	printf@fmt^0,c
  3877   00753A  0E7F               	movlw	high STR_2
  3878   00753C  6E24               	movwf	(printf@fmt+1)^0,c
  3879   00753E  ECE9  F034         	call	_printf	;wreg free
  3880   007542  EFA9  F03A         	goto	l2452
  3881   007546                     l2450:
  3882   007546  0E96               	movlw	low STR_3
  3883   007548  6E23               	movwf	printf@fmt^0,c
  3884   00754A  0E7F               	movlw	high STR_3
  3885   00754C  6E24               	movwf	(printf@fmt+1)^0,c
  3886   00754E  ECE9  F034         	call	_printf	;wreg free
  3887   007552                     l2452:
  3888                           
  3889                           ;src/librerias/UART.c: 16:     (BRGH1) ? printf("alta velocidad \r\n"):printf("baja velo
      +                          cidad \r\n");
  3890   007552  A4AC               	btfss	4012,2,c	;volatile
  3891   007554  EFAE  F03A         	goto	u1571
  3892   007558  EFB0  F03A         	goto	u1570
  3893   00755C                     u1571:
  3894   00755C  EFB8  F03A         	goto	l2456
  3895   007560                     u1570:
  3896   007560  0E1D               	movlw	low STR_4
  3897   007562  6E23               	movwf	printf@fmt^0,c
  3898   007564  0E7F               	movlw	high STR_4
  3899   007566  6E24               	movwf	(printf@fmt+1)^0,c
  3900   007568  ECE9  F034         	call	_printf	;wreg free
  3901   00756C  EFBE  F03A         	goto	l95
  3902   007570                     l2456:
  3903   007570  0E0B               	movlw	low STR_5
  3904   007572  6E23               	movwf	printf@fmt^0,c
  3905   007574  0E7F               	movlw	high STR_5
  3906   007576  6E24               	movwf	(printf@fmt+1)^0,c
  3907   007578  ECE9  F034         	call	_printf	;wreg free
  3908   00757C                     l95:
  3909                           
  3910                           ;src/librerias/UART.c: 17:     printf("Baudrate: ");
  3911   00757C  0E80               	movlw	low STR_6
  3912   00757E  6E23               	movwf	printf@fmt^0,c
  3913   007580  0E7F               	movlw	high STR_6
  3914   007582  6E24               	movwf	(printf@fmt+1)^0,c
  3915   007584  ECE9  F034         	call	_printf	;wreg free
  3916   007588                     
  3917                           ;src/librerias/UART.c: 18:     (BRG161) ? printf("16 bits "):printf("8 bits ");
  3918   007588  A6B8               	btfss	4024,3,c	;volatile
  3919   00758A  EFC9  F03A         	goto	u1581
  3920   00758E  EFCB  F03A         	goto	u1580
  3921   007592                     u1581:
  3922   007592  EFD3  F03A         	goto	l2462
  3923   007596                     u1580:
  3924   007596  0ED1               	movlw	low STR_7
  3925   007598  6E23               	movwf	printf@fmt^0,c
  3926   00759A  0E7F               	movlw	high STR_7
  3927   00759C  6E24               	movwf	(printf@fmt+1)^0,c
  3928   00759E  ECE9  F034         	call	_printf	;wreg free
  3929   0075A2  EFD9  F03A         	goto	l99
  3930   0075A6                     l2462:
  3931   0075A6  0EE2               	movlw	low STR_8
  3932   0075A8  6E23               	movwf	printf@fmt^0,c
  3933   0075AA  0E7F               	movlw	high STR_8
  3934   0075AC  6E24               	movwf	(printf@fmt+1)^0,c
  3935   0075AE  ECE9  F034         	call	_printf	;wreg free
  3936   0075B2                     l99:
  3937                           
  3938                           ;src/librerias/UART.c: 19:     printf("x baudios \r\n");
  3939   0075B2  0E5C               	movlw	low STR_9
  3940   0075B4  6E23               	movwf	printf@fmt^0,c
  3941   0075B6  0E7F               	movlw	high STR_9
  3942   0075B8  6E24               	movwf	(printf@fmt+1)^0,c
  3943   0075BA  ECE9  F034         	call	_printf	;wreg free
  3944                           
  3945                           ;src/librerias/UART.c: 20:     printf("Puerto: ");
  3946   0075BE  0EC8               	movlw	low STR_10
  3947   0075C0  6E23               	movwf	printf@fmt^0,c
  3948   0075C2  0E7F               	movlw	high STR_10
  3949   0075C4  6E24               	movwf	(printf@fmt+1)^0,c
  3950   0075C6  ECE9  F034         	call	_printf	;wreg free
  3951   0075CA                     
  3952                           ;src/librerias/UART.c: 21:     (SPEN) ? printf("Habilitado \r\n"):printf("Deshabilitado 
      +                          \r\n");
  3953   0075CA  AEAB               	btfss	4011,7,c	;volatile
  3954   0075CC  EFEA  F03A         	goto	u1591
  3955   0075D0  EFEC  F03A         	goto	u1590
  3956   0075D4                     u1591:
  3957   0075D4  EFF4  F03A         	goto	l2468
  3958   0075D8                     u1590:
  3959   0075D8  0E4E               	movlw	low STR_11
  3960   0075DA  6E23               	movwf	printf@fmt^0,c
  3961   0075DC  0E7F               	movlw	high STR_11
  3962   0075DE  6E24               	movwf	(printf@fmt+1)^0,c
  3963   0075E0  ECE9  F034         	call	_printf	;wreg free
  3964   0075E4  EFFA  F03A         	goto	l103
  3965   0075E8                     l2468:
  3966   0075E8  0E2F               	movlw	low STR_12
  3967   0075EA  6E23               	movwf	printf@fmt^0,c
  3968   0075EC  0E7F               	movlw	high STR_12
  3969   0075EE  6E24               	movwf	(printf@fmt+1)^0,c
  3970   0075F0  ECE9  F034         	call	_printf	;wreg free
  3971   0075F4                     l103:
  3972                           
  3973                           ;src/librerias/UART.c: 22:     printf("Transor: ");
  3974   0075F4  0EAB               	movlw	low STR_13
  3975   0075F6  6E23               	movwf	printf@fmt^0,c
  3976   0075F8  0E7F               	movlw	high STR_13
  3977   0075FA  6E24               	movwf	(printf@fmt+1)^0,c
  3978   0075FC  ECE9  F034         	call	_printf	;wreg free
  3979   007600                     
  3980                           ;src/librerias/UART.c: 23:     (TXEN1) ? printf("Habilitado \r\n"):printf("Deshabilitado
      +                           \r\n");
  3981   007600  AAAC               	btfss	4012,5,c	;volatile
  3982   007602  EF05  F03B         	goto	u1601
  3983   007606  EF07  F03B         	goto	u1600
  3984   00760A                     u1601:
  3985   00760A  EF0F  F03B         	goto	l2474
  3986   00760E                     u1600:
  3987   00760E  0E4E               	movlw	low STR_11
  3988   007610  6E23               	movwf	printf@fmt^0,c
  3989   007612  0E7F               	movlw	high STR_11
  3990   007614  6E24               	movwf	(printf@fmt+1)^0,c
  3991   007616  ECE9  F034         	call	_printf	;wreg free
  3992   00761A  EF15  F03B         	goto	l107
  3993   00761E                     l2474:
  3994   00761E  0E2F               	movlw	low STR_12
  3995   007620  6E23               	movwf	printf@fmt^0,c
  3996   007622  0E7F               	movlw	high STR_12
  3997   007624  6E24               	movwf	(printf@fmt+1)^0,c
  3998   007626  ECE9  F034         	call	_printf	;wreg free
  3999   00762A                     l107:
  4000                           
  4001                           ;src/librerias/UART.c: 24:     printf("Receptor: ");
  4002   00762A  0E8B               	movlw	low STR_16
  4003   00762C  6E23               	movwf	printf@fmt^0,c
  4004   00762E  0E7F               	movlw	high STR_16
  4005   007630  6E24               	movwf	(printf@fmt+1)^0,c
  4006   007632  ECE9  F034         	call	_printf	;wreg free
  4007   007636                     
  4008                           ;src/librerias/UART.c: 25:     (CREN) ? printf("Habilitado \r\n"):printf("Deshabilitado 
      +                          \r\n");
  4009   007636  A8AB               	btfss	4011,4,c	;volatile
  4010   007638  EF20  F03B         	goto	u1611
  4011   00763C  EF22  F03B         	goto	u1610
  4012   007640                     u1611:
  4013   007640  EF2A  F03B         	goto	l2480
  4014   007644                     u1610:
  4015   007644  0E4E               	movlw	low STR_11
  4016   007646  6E23               	movwf	printf@fmt^0,c
  4017   007648  0E7F               	movlw	high STR_11
  4018   00764A  6E24               	movwf	(printf@fmt+1)^0,c
  4019   00764C  ECE9  F034         	call	_printf	;wreg free
  4020   007650  EF30  F03B         	goto	l111
  4021   007654                     l2480:
  4022   007654  0E2F               	movlw	low STR_12
  4023   007656  6E23               	movwf	printf@fmt^0,c
  4024   007658  0E7F               	movlw	high STR_12
  4025   00765A  6E24               	movwf	(printf@fmt+1)^0,c
  4026   00765C  ECE9  F034         	call	_printf	;wreg free
  4027   007660                     l111:
  4028                           
  4029                           ;src/librerias/UART.c: 26:     printf("\r\n\r\n");
  4030   007660  0EF3               	movlw	low (STR_34+31)
  4031   007662  6E23               	movwf	printf@fmt^0,c
  4032   007664  0E7D               	movlw	high (STR_34+31)
  4033   007666  6E24               	movwf	(printf@fmt+1)^0,c
  4034   007668  ECE9  F034         	call	_printf	;wreg free
  4035   00766C  0012               	return		;funcret
  4036   00766E                     __end_of_UART_config_show:
  4037                           	callstack 0
  4038                           
  4039 ;; *************** function _printf *****************
  4040 ;; Defined at:
  4041 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\printf.c"
  4042 ;; Parameters:    Size  Location     Type
  4043 ;;  fmt             2   34[COMRAM] PTR const unsigned char 
  4044 ;;		 -> STR_51(5), STR_50(21), STR_49(11), STR_45(23), 
  4045 ;;		 -> STR_44(25), STR_43(23), STR_42(19), STR_41(18), 
  4046 ;;		 -> STR_40(19), STR_39(19), STR_38(14), STR_37(4), 
  4047 ;;		 -> STR_36(3), STR_35(5), STR_34(36), STR_33(5), 
  4048 ;;		 -> STR_32(50), STR_31(38), STR_30(37), STR_29(38), 
  4049 ;;		 -> STR_28(12), STR_27(29), STR_23(26), STR_22(26), 
  4050 ;;		 -> STR_21(27), STR_20(8), STR_19(5), STR_18(17), 
  4051 ;;		 -> STR_17(14), STR_16(11), STR_15(17), STR_14(14), 
  4052 ;;		 -> STR_13(10), STR_12(17), STR_11(14), STR_10(9), 
  4053 ;;		 -> STR_9(13), STR_8(8), STR_7(9), STR_6(11), 
  4054 ;;		 -> STR_5(18), STR_4(18), STR_3(11), STR_2(10), 
  4055 ;;		 -> STR_1(7), 
  4056 ;; Auto vars:     Size  Location     Type
  4057 ;;  ret             2    0        int 
  4058 ;;  ap              1   40[COMRAM] PTR void [1]
  4059 ;;		 -> ?_printf(2), 
  4060 ;; Return value:  Size  Location     Type
  4061 ;;                  2   34[COMRAM] int 
  4062 ;; Registers used:
  4063 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4064 ;; Tracked objects:
  4065 ;;		On entry : 0/0
  4066 ;;		On exit  : 0/0
  4067 ;;		Unchanged: 0/0
  4068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4069 ;;      Params:         6       0       0       0       0       0       0       0       0
  4070 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4071 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4072 ;;      Totals:         7       0       0       0       0       0       0       0       0
  4073 ;;Total ram usage:        7 bytes
  4074 ;; Hardware stack levels used: 1
  4075 ;; Hardware stack levels required when called: 5
  4076 ;; This function calls:
  4077 ;;		_vfprintf
  4078 ;; This function is called by:
  4079 ;;		_UART_config_show
  4080 ;;		_UART_ErrorHandler
  4081 ;;		_commandLineInit
  4082 ;;		_commandLineDeinit
  4083 ;;		_commandLineReset
  4084 ;;		_addToBuffer
  4085 ;;		_clearCharInLine
  4086 ;;		_commandProcess
  4087 ;;		_CL_ErrorHandler
  4088 ;;		_CL_CommandHandler
  4089 ;;		_cliHelp
  4090 ;; This function uses a non-reentrant model
  4091 ;;
  4092                           
  4093                           	psect	text23
  4094   0069D2                     __ptext23:
  4095                           	callstack 0
  4096   0069D2                     _printf:
  4097                           	callstack 24
  4098   0069D2  0E25               	movlw	low (?_printf+2)
  4099   0069D4  6E29               	movwf	printf@ap^0,c
  4100   0069D6  0E00               	movlw	0
  4101   0069D8  6E1C               	movwf	vfprintf@fp^0,c
  4102   0069DA  0E00               	movlw	0
  4103   0069DC  6E1D               	movwf	(vfprintf@fp+1)^0,c
  4104   0069DE  C023  F01E         	movff	printf@fmt,vfprintf@fmt
  4105   0069E2  C024  F01F         	movff	printf@fmt+1,vfprintf@fmt+1
  4106   0069E6  0E29               	movlw	low printf@ap
  4107   0069E8  6E20               	movwf	vfprintf@ap^0,c
  4108   0069EA  ECAD  F035         	call	_vfprintf	;wreg free
  4109   0069EE  0012               	return		;funcret
  4110   0069F0                     __end_of_printf:
  4111                           	callstack 0
  4112                           
  4113 ;; *************** function _vfprintf *****************
  4114 ;; Defined at:
  4115 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  4116 ;; Parameters:    Size  Location     Type
  4117 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  4118 ;;		 -> NULL(0), 
  4119 ;;  fmt             2   29[COMRAM] PTR const unsigned char 
  4120 ;;		 -> STR_51(5), STR_50(21), STR_49(11), STR_45(23), 
  4121 ;;		 -> STR_44(25), STR_43(23), STR_42(19), STR_41(18), 
  4122 ;;		 -> STR_40(19), STR_39(19), STR_38(14), STR_37(4), 
  4123 ;;		 -> STR_36(3), STR_35(5), STR_34(36), STR_33(5), 
  4124 ;;		 -> STR_32(50), STR_31(38), STR_30(37), STR_29(38), 
  4125 ;;		 -> STR_28(12), STR_27(29), STR_23(26), STR_22(26), 
  4126 ;;		 -> STR_21(27), STR_20(8), STR_19(5), STR_18(17), 
  4127 ;;		 -> STR_17(14), STR_16(11), STR_15(17), STR_14(14), 
  4128 ;;		 -> STR_13(10), STR_12(17), STR_11(14), STR_10(9), 
  4129 ;;		 -> STR_9(13), STR_8(8), STR_7(9), STR_6(11), 
  4130 ;;		 -> STR_5(18), STR_4(18), STR_3(11), STR_2(10), 
  4131 ;;		 -> STR_1(7), 
  4132 ;;  ap              1   31[COMRAM] PTR PTR void 
  4133 ;;		 -> printf@ap(1), 
  4134 ;; Auto vars:     Size  Location     Type
  4135 ;;  cfmt            2   32[COMRAM] PTR unsigned char 
  4136 ;;		 -> STR_51(5), STR_50(21), STR_49(11), STR_45(23), 
  4137 ;;		 -> STR_44(25), STR_43(23), STR_42(19), STR_41(18), 
  4138 ;;		 -> STR_40(19), STR_39(19), STR_38(14), STR_37(4), 
  4139 ;;		 -> STR_36(3), STR_35(5), STR_34(36), STR_33(5), 
  4140 ;;		 -> STR_32(50), STR_31(38), STR_30(37), STR_29(38), 
  4141 ;;		 -> STR_28(12), STR_27(29), STR_23(26), STR_22(26), 
  4142 ;;		 -> STR_21(27), STR_20(8), STR_19(5), STR_18(17), 
  4143 ;;		 -> STR_17(14), STR_16(11), STR_15(17), STR_14(14), 
  4144 ;;		 -> STR_13(10), STR_12(17), STR_11(14), STR_10(9), 
  4145 ;;		 -> STR_9(13), STR_8(8), STR_7(9), STR_6(11), 
  4146 ;;		 -> STR_5(18), STR_4(18), STR_3(11), STR_2(10), 
  4147 ;;		 -> STR_1(7), 
  4148 ;; Return value:  Size  Location     Type
  4149 ;;                  2   27[COMRAM] int 
  4150 ;; Registers used:
  4151 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4152 ;; Tracked objects:
  4153 ;;		On entry : 0/0
  4154 ;;		On exit  : 0/0
  4155 ;;		Unchanged: 0/0
  4156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4157 ;;      Params:         5       0       0       0       0       0       0       0       0
  4158 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4159 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4160 ;;      Totals:         7       0       0       0       0       0       0       0       0
  4161 ;;Total ram usage:        7 bytes
  4162 ;; Hardware stack levels used: 1
  4163 ;; Hardware stack levels required when called: 4
  4164 ;; This function calls:
  4165 ;;		_vfpfcnvrt
  4166 ;; This function is called by:
  4167 ;;		_printf
  4168 ;; This function uses a non-reentrant model
  4169 ;;
  4170                           
  4171                           	psect	text24
  4172   006B5A                     __ptext24:
  4173                           	callstack 0
  4174   006B5A                     _vfprintf:
  4175                           	callstack 24
  4176   006B5A                     
  4177                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  4178   006B5A  C01E  F021         	movff	vfprintf@fmt,vfprintf@cfmt
  4179   006B5E  C01F  F022         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  4180                           
  4181                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  4182   006B62  EFBD  F035         	goto	l2352
  4183   006B66                     l2350:
  4184                           
  4185                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  4186   006B66  C01C  F00C         	movff	vfprintf@fp,vfpfcnvrt@fp
  4187   006B6A  C01D  F00D         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  4188   006B6E  0E21               	movlw	low vfprintf@cfmt
  4189   006B70  6E0E               	movwf	vfpfcnvrt@fmt^0,c
  4190   006B72  C020  F00F         	movff	vfprintf@ap,vfpfcnvrt@ap
  4191   006B76  ECF3  F03C         	call	_vfpfcnvrt	;wreg free
  4192   006B7A                     l2352:
  4193                           
  4194                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  4195   006B7A  C021  FFF6         	movff	vfprintf@cfmt,tblptrl
  4196   006B7E  C022  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  4197   006B82                     	if	0	;tblptru may be non-zero
  4198   006B82                     	endif
  4199   006B82                     	if	0	;tblptru may be non-zero
  4200   006B82                     	endif
  4201   006B82  0008               	tblrd		*
  4202   006B84  50F5               	movf	tablat,w,c
  4203   006B86  0900               	iorlw	0
  4204   006B88  A4D8               	btfss	status,2,c
  4205   006B8A  EFC9  F035         	goto	u1501
  4206   006B8E  EFCB  F035         	goto	u1500
  4207   006B92                     u1501:
  4208   006B92  EFB3  F035         	goto	l2350
  4209   006B96                     u1500:
  4210   006B96                     
  4211                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  4212   006B96  0E00               	movlw	0
  4213   006B98  6E1D               	movwf	(?_vfprintf+1)^0,c
  4214   006B9A  0E00               	movlw	0
  4215   006B9C  6E1C               	movwf	?_vfprintf^0,c
  4216   006B9E  0012               	return		;funcret
  4217   006BA0                     __end_of_vfprintf:
  4218                           	callstack 0
  4219                           
  4220 ;; *************** function _vfpfcnvrt *****************
  4221 ;; Defined at:
  4222 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  4223 ;; Parameters:    Size  Location     Type
  4224 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  4225 ;;		 -> NULL(0), 
  4226 ;;  fmt             1   13[COMRAM] PTR PTR unsigned char 
  4227 ;;		 -> vfprintf@cfmt(2), 
  4228 ;;  ap              1   14[COMRAM] PTR PTR void 
  4229 ;;		 -> printf@ap(1), 
  4230 ;; Auto vars:     Size  Location     Type
  4231 ;;  cp              2   17[COMRAM] PTR unsigned char 
  4232 ;;		 -> ?_printf(2), STR_48(9), STR_47(5), STR_46(10), 
  4233 ;;		 -> param(80), command(16), STR_26(9), STR_25(5), 
  4234 ;;		 -> STR_24(10), 
  4235 ;;  convarg         4   22[COMRAM] struct .
  4236 ;;  cp              2   19[COMRAM] PTR unsigned char 
  4237 ;;		 -> STR_51(5), STR_50(21), STR_49(11), STR_45(23), 
  4238 ;;		 -> STR_44(25), STR_43(23), STR_42(19), STR_41(18), 
  4239 ;;		 -> STR_40(19), STR_39(19), STR_38(14), STR_37(4), 
  4240 ;;		 -> STR_36(3), STR_35(5), STR_34(36), STR_33(5), 
  4241 ;;		 -> STR_32(50), STR_31(38), STR_30(37), STR_29(38), 
  4242 ;;		 -> STR_28(12), STR_27(29), STR_23(26), STR_22(26), 
  4243 ;;		 -> STR_21(27), STR_20(8), STR_19(5), STR_18(17), 
  4244 ;;		 -> STR_17(14), STR_16(11), STR_15(17), STR_14(14), 
  4245 ;;		 -> STR_13(10), STR_12(17), STR_11(14), STR_10(9), 
  4246 ;;		 -> STR_9(13), STR_8(8), STR_7(9), STR_6(11), 
  4247 ;;		 -> STR_5(18), STR_4(18), STR_3(11), STR_2(10), 
  4248 ;;		 -> STR_1(7), 
  4249 ;;  c               1   26[COMRAM] unsigned char 
  4250 ;;  done            1   21[COMRAM] _Bool 
  4251 ;; Return value:  Size  Location     Type
  4252 ;;                  1    wreg      void 
  4253 ;; Registers used:
  4254 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4255 ;; Tracked objects:
  4256 ;;		On entry : 0/0
  4257 ;;		On exit  : 0/0
  4258 ;;		Unchanged: 0/0
  4259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4260 ;;      Params:         4       0       0       0       0       0       0       0       0
  4261 ;;      Locals:        10       0       0       0       0       0       0       0       0
  4262 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4263 ;;      Totals:        16       0       0       0       0       0       0       0       0
  4264 ;;Total ram usage:       16 bytes
  4265 ;; Hardware stack levels used: 1
  4266 ;; Hardware stack levels required when called: 3
  4267 ;; This function calls:
  4268 ;;		___awdiv
  4269 ;;		___awmod
  4270 ;;		_abs
  4271 ;;		_fputc
  4272 ;; This function is called by:
  4273 ;;		_vfprintf
  4274 ;; This function uses a non-reentrant model
  4275 ;;
  4276                           
  4277                           	psect	text25
  4278   0079E6                     __ptext25:
  4279                           	callstack 0
  4280   0079E6                     _vfpfcnvrt:
  4281                           	callstack 24
  4282   0079E6                     
  4283                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  4284   0079E6  500E               	movf	vfpfcnvrt@fmt^0,w,c
  4285   0079E8  6ED9               	movwf	fsr2l,c
  4286   0079EA  6ADA               	clrf	fsr2h,c
  4287   0079EC  CFDE FFF6          	movff	postinc2,tblptrl
  4288   0079F0  CFDD FFF7          	movff	postdec2,tblptrh
  4289   0079F4                     	if	0	;tblptru may be non-zero
  4290   0079F4                     	endif
  4291   0079F4                     	if	0	;tblptru may be non-zero
  4292   0079F4                     	endif
  4293   0079F4  0008               	tblrd		*
  4294   0079F6  50F5               	movf	tablat,w,c
  4295   0079F8  0A25               	xorlw	37
  4296   0079FA  A4D8               	btfss	status,2,c
  4297   0079FC  EF02  F03D         	goto	u1321
  4298   007A00  EF04  F03D         	goto	u1320
  4299   007A04                     u1321:
  4300   007A04  EF82  F03E         	goto	l2342
  4301   007A08                     u1320:
  4302   007A08                     
  4303                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  4304   007A08  500E               	movf	vfpfcnvrt@fmt^0,w,c
  4305   007A0A  6ED9               	movwf	fsr2l,c
  4306   007A0C  6ADA               	clrf	fsr2h,c
  4307   007A0E  2ADE               	incf	postinc2,f,c
  4308   007A10  0E00               	movlw	0
  4309   007A12  22DD               	addwfc	postdec2,f,c
  4310   007A14                     
  4311                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  4312   007A14  0E00               	movlw	0
  4313   007A16  6E39               	movwf	(_width+1)^0,c
  4314   007A18  0E00               	movlw	0
  4315   007A1A  6E38               	movwf	_width^0,c
  4316   007A1C  C038  F03C         	movff	_width,_flags
  4317   007A20                     
  4318                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  4319   007A20  683A               	setf	_prec^0,c
  4320   007A22  683B               	setf	(_prec+1)^0,c
  4321   007A24                     
  4322                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  4323   007A24  500E               	movf	vfpfcnvrt@fmt^0,w,c
  4324   007A26  6ED9               	movwf	fsr2l,c
  4325   007A28  6ADA               	clrf	fsr2h,c
  4326   007A2A  CFDE F014          	movff	postinc2,vfpfcnvrt@cp
  4327   007A2E  CFDD F015          	movff	postdec2,vfpfcnvrt@cp+1
  4328   007A32                     
  4329                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  4330   007A32  C014  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  4331   007A36  C015  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  4332   007A3A                     	if	0	;tblptru may be non-zero
  4333   007A3A                     	endif
  4334   007A3A                     	if	0	;tblptru may be non-zero
  4335   007A3A                     	endif
  4336   007A3A  0008               	tblrd		*
  4337   007A3C  50F5               	movf	tablat,w,c
  4338   007A3E  0A64               	xorlw	100
  4339   007A40  B4D8               	btfsc	status,2,c
  4340   007A42  EF25  F03D         	goto	u1331
  4341   007A46  EF27  F03D         	goto	u1330
  4342   007A4A                     u1331:
  4343   007A4A  EF35  F03D         	goto	l2284
  4344   007A4E                     u1330:
  4345   007A4E  C014  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  4346   007A52  C015  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
  4347   007A56                     	if	0	;tblptru may be non-zero
  4348   007A56                     	endif
  4349   007A56                     	if	0	;tblptru may be non-zero
  4350   007A56                     	endif
  4351   007A56  0008               	tblrd		*
  4352   007A58  50F5               	movf	tablat,w,c
  4353   007A5A  0A69               	xorlw	105
  4354   007A5C  A4D8               	btfss	status,2,c
  4355   007A5E  EF33  F03D         	goto	u1341
  4356   007A62  EF35  F03D         	goto	u1340
  4357   007A66                     u1341:
  4358   007A66  EFC5  F03D         	goto	l2310
  4359   007A6A                     u1340:
  4360   007A6A                     l2284:
  4361                           
  4362                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  4363   007A6A  500F               	movf	vfpfcnvrt@ap^0,w,c
  4364   007A6C  6ED9               	movwf	fsr2l,c
  4365   007A6E  6ADA               	clrf	fsr2h,c
  4366   007A70  0E02               	movlw	2
  4367   007A72  26DF               	addwf	indf2,f,c
  4368   007A74  5CDF               	subwf	indf2,w,c
  4369   007A76  6ED9               	movwf	fsr2l,c
  4370   007A78  6ADA               	clrf	fsr2h,c
  4371   007A7A  CFDE F017          	movff	postinc2,vfpfcnvrt@convarg
  4372   007A7E  CFDE F018          	movff	postinc2,vfpfcnvrt@convarg+1
  4373   007A82                     
  4374                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  4375   007A82  0E01               	movlw	1
  4376   007A84  2414               	addwf	vfpfcnvrt@cp^0,w,c
  4377   007A86  6E10               	movwf	??_vfpfcnvrt^0,c
  4378   007A88  0E00               	movlw	0
  4379   007A8A  2015               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
  4380   007A8C  6E11               	movwf	(??_vfpfcnvrt+1)^0,c
  4381   007A8E  500E               	movf	vfpfcnvrt@fmt^0,w,c
  4382   007A90  6ED9               	movwf	fsr2l,c
  4383   007A92  6ADA               	clrf	fsr2h,c
  4384   007A94  C010  FFDE         	movff	??_vfpfcnvrt,postinc2
  4385   007A98  C011  FFDD         	movff	??_vfpfcnvrt+1,postdec2
  4386   007A9C                     
  4387                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1408:    c = size
      +                          of(dbuf);
  4388   007A9C  0E20               	movlw	32
  4389   007A9E  6E1B               	movwf	vfpfcnvrt@c^0,c
  4390                           
  4391                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1409:    done = c
      +                          onvarg.sint < 0;
  4392   007AA0  BE18               	btfsc	(vfpfcnvrt@convarg+1)^0,7,c
  4393   007AA2  EF55  F03D         	goto	u1351
  4394   007AA6  EF58  F03D         	goto	u1350
  4395   007AAA                     u1351:
  4396   007AAA  0E01               	movlw	1
  4397   007AAC  EF59  F03D         	goto	u1360
  4398   007AB0                     u1350:
  4399   007AB0  0E00               	movlw	0
  4400   007AB2                     u1360:
  4401   007AB2  6E16               	movwf	vfpfcnvrt@done^0,c
  4402   007AB4                     l2290:
  4403                           
  4404                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1411:     dbuf[--
      +                          c] = abs(convarg.sint % 10) + '0';
  4405   007AB4  061B               	decf	vfpfcnvrt@c^0,f,c
  4406   007AB6  501B               	movf	vfpfcnvrt@c^0,w,c
  4407   007AB8  0FC4               	addlw	low _dbuf
  4408   007ABA  6ED9               	movwf	fsr2l,c
  4409   007ABC  6ADA               	clrf	fsr2h,c
  4410   007ABE  C017  F001         	movff	vfpfcnvrt@convarg,___awmod@dividend
  4411   007AC2  C018  F002         	movff	vfpfcnvrt@convarg+1,___awmod@dividend+1
  4412   007AC6  0E00               	movlw	0
  4413   007AC8  6E04               	movwf	(___awmod@divisor+1)^0,c
  4414   007ACA  0E0A               	movlw	10
  4415   007ACC  6E03               	movwf	___awmod@divisor^0,c
  4416   007ACE  ECFB  F036         	call	___awmod	;wreg free
  4417   007AD2  C001  F007         	movff	?___awmod,abs@a
  4418   007AD6  C002  F008         	movff	?___awmod+1,abs@a+1
  4419   007ADA  EC52  F035         	call	_abs	;wreg free
  4420   007ADE  5007               	movf	?_abs^0,w,c
  4421   007AE0  0F30               	addlw	48
  4422   007AE2  6EDF               	movwf	indf2,c
  4423   007AE4                     
  4424                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1412:     convarg
      +                          .sint /= 10;
  4425   007AE4  C017  F001         	movff	vfpfcnvrt@convarg,___awdiv@dividend
  4426   007AE8  C018  F002         	movff	vfpfcnvrt@convarg+1,___awdiv@dividend+1
  4427   007AEC  0E00               	movlw	0
  4428   007AEE  6E04               	movwf	(___awdiv@divisor+1)^0,c
  4429   007AF0  0E0A               	movlw	10
  4430   007AF2  6E03               	movwf	___awdiv@divisor^0,c
  4431   007AF4  EC53  F037         	call	___awdiv	;wreg free
  4432   007AF8  C001  F017         	movff	?___awdiv,vfpfcnvrt@convarg
  4433   007AFC  C002  F018         	movff	?___awdiv+1,vfpfcnvrt@convarg+1
  4434   007B00                     
  4435                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1416:    } while 
      +                          (convarg.sint != 0 && c != 0);
  4436   007B00  5017               	movf	vfpfcnvrt@convarg^0,w,c
  4437   007B02  1018               	iorwf	(vfpfcnvrt@convarg+1)^0,w,c
  4438   007B04  B4D8               	btfsc	status,2,c
  4439   007B06  EF87  F03D         	goto	u1371
  4440   007B0A  EF89  F03D         	goto	u1370
  4441   007B0E                     u1371:
  4442   007B0E  EF91  F03D         	goto	l2298
  4443   007B12                     u1370:
  4444   007B12  501B               	movf	vfpfcnvrt@c^0,w,c
  4445   007B14  A4D8               	btfss	status,2,c
  4446   007B16  EF8F  F03D         	goto	u1381
  4447   007B1A  EF91  F03D         	goto	u1380
  4448   007B1E                     u1381:
  4449   007B1E  EF5A  F03D         	goto	l2290
  4450   007B22                     u1380:
  4451   007B22                     l2298:
  4452                           
  4453                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1417:    if (c !=
      +                           0 && done) {
  4454   007B22  501B               	movf	vfpfcnvrt@c^0,w,c
  4455   007B24  B4D8               	btfsc	status,2,c
  4456   007B26  EF97  F03D         	goto	u1391
  4457   007B2A  EF99  F03D         	goto	u1390
  4458   007B2E                     u1391:
  4459   007B2E  EFBA  F03D         	goto	l2308
  4460   007B32                     u1390:
  4461   007B32  5016               	movf	vfpfcnvrt@done^0,w,c
  4462   007B34  B4D8               	btfsc	status,2,c
  4463   007B36  EF9F  F03D         	goto	u1401
  4464   007B3A  EFA1  F03D         	goto	u1400
  4465   007B3E                     u1401:
  4466   007B3E  EFBA  F03D         	goto	l2308
  4467   007B42                     u1400:
  4468   007B42                     
  4469                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1418:     dbuf[--
      +                          c] = '-';
  4470   007B42  061B               	decf	vfpfcnvrt@c^0,f,c
  4471   007B44  501B               	movf	vfpfcnvrt@c^0,w,c
  4472   007B46  0FC4               	addlw	low _dbuf
  4473   007B48  6ED9               	movwf	fsr2l,c
  4474   007B4A  6ADA               	clrf	fsr2h,c
  4475   007B4C  0E2D               	movlw	45
  4476   007B4E  6EDF               	movwf	indf2,c
  4477   007B50  EFBA  F03D         	goto	l2308
  4478   007B54                     l2304:
  4479                           
  4480                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1424:     fputc(d
      +                          buf[c++], fp);
  4481   007B54  501B               	movf	vfpfcnvrt@c^0,w,c
  4482   007B56  0FC4               	addlw	low _dbuf
  4483   007B58  6ED9               	movwf	fsr2l,c
  4484   007B5A  6ADA               	clrf	fsr2h,c
  4485   007B5C  50DF               	movf	indf2,w,c
  4486   007B5E  6E10               	movwf	??_vfpfcnvrt^0,c
  4487   007B60  5010               	movf	??_vfpfcnvrt^0,w,c
  4488   007B62  6E03               	movwf	fputc@c^0,c
  4489   007B64  6A04               	clrf	(fputc@c+1)^0,c
  4490   007B66  C00C  F005         	movff	vfpfcnvrt@fp,fputc@fp
  4491   007B6A  C00D  F006         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4492   007B6E  EC19  F038         	call	_fputc	;wreg free
  4493   007B72  2A1B               	incf	vfpfcnvrt@c^0,f,c
  4494   007B74                     l2308:
  4495                           
  4496                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1423:    while (c
      +                           != sizeof(dbuf)) {
  4497   007B74  0E20               	movlw	32
  4498   007B76  181B               	xorwf	vfpfcnvrt@c^0,w,c
  4499   007B78  A4D8               	btfss	status,2,c
  4500   007B7A  EFC1  F03D         	goto	u1411
  4501   007B7E  EFC3  F03D         	goto	u1410
  4502   007B82                     u1411:
  4503   007B82  EFAA  F03D         	goto	l2304
  4504   007B86                     u1410:
  4505   007B86  EF95  F03E         	goto	l1090
  4506   007B8A                     l2310:
  4507                           
  4508                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1656:   done = 0;
  4509   007B8A  0E00               	movlw	0
  4510   007B8C  6E16               	movwf	vfpfcnvrt@done^0,c
  4511   007B8E                     
  4512                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1657:   if ((*fmt
      +                          )[0] == 's') {
  4513   007B8E  500E               	movf	vfpfcnvrt@fmt^0,w,c
  4514   007B90  6ED9               	movwf	fsr2l,c
  4515   007B92  6ADA               	clrf	fsr2h,c
  4516   007B94  CFDE FFF6          	movff	postinc2,tblptrl
  4517   007B98  CFDD FFF7          	movff	postdec2,tblptrh
  4518   007B9C                     	if	0	;tblptru may be non-zero
  4519   007B9C                     	endif
  4520   007B9C                     	if	0	;tblptru may be non-zero
  4521   007B9C                     	endif
  4522   007B9C  0008               	tblrd		*
  4523   007B9E  50F5               	movf	tablat,w,c
  4524   007BA0  0A73               	xorlw	115
  4525   007BA2  A4D8               	btfss	status,2,c
  4526   007BA4  EFD6  F03D         	goto	u1421
  4527   007BA8  EFD8  F03D         	goto	u1420
  4528   007BAC                     u1421:
  4529   007BAC  EFE2  F03D         	goto	l2318
  4530   007BB0                     u1420:
  4531   007BB0                     
  4532                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1658:    ++*fmt;
  4533   007BB0  500E               	movf	vfpfcnvrt@fmt^0,w,c
  4534   007BB2  6ED9               	movwf	fsr2l,c
  4535   007BB4  6ADA               	clrf	fsr2h,c
  4536   007BB6  2ADE               	incf	postinc2,f,c
  4537   007BB8  0E00               	movlw	0
  4538   007BBA  22DD               	addwfc	postdec2,f,c
  4539   007BBC                     l2316:
  4540                           
  4541                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1659:    done = 1
      +                          ;
  4542   007BBC  0E01               	movlw	1
  4543   007BBE  6E16               	movwf	vfpfcnvrt@done^0,c
  4544                           
  4545                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1660:   }
  4546   007BC0  EF2E  F03E         	goto	l2328
  4547   007BC4                     l2318:
  4548   007BC4  500E               	movf	vfpfcnvrt@fmt^0,w,c
  4549   007BC6  6ED9               	movwf	fsr2l,c
  4550   007BC8  6ADA               	clrf	fsr2h,c
  4551   007BCA  CFDE FFF6          	movff	postinc2,tblptrl
  4552   007BCE  CFDD FFF7          	movff	postdec2,tblptrh
  4553   007BD2                     	if	0	;tblptru may be non-zero
  4554   007BD2                     	endif
  4555   007BD2                     	if	0	;tblptru may be non-zero
  4556   007BD2                     	endif
  4557   007BD2  0008               	tblrd		*
  4558   007BD4  50F5               	movf	tablat,w,c
  4559   007BD6  0A6C               	xorlw	108
  4560   007BD8  A4D8               	btfss	status,2,c
  4561   007BDA  EFF1  F03D         	goto	u1431
  4562   007BDE  EFF3  F03D         	goto	u1430
  4563   007BE2                     u1431:
  4564   007BE2  EF2E  F03E         	goto	l2328
  4565   007BE6                     u1430:
  4566   007BE6  500E               	movf	vfpfcnvrt@fmt^0,w,c
  4567   007BE8  6ED9               	movwf	fsr2l,c
  4568   007BEA  6ADA               	clrf	fsr2h,c
  4569   007BEC  CFDE F010          	movff	postinc2,??_vfpfcnvrt
  4570   007BF0  CFDD F011          	movff	postdec2,??_vfpfcnvrt+1
  4571   007BF4  0E01               	movlw	1
  4572   007BF6  2610               	addwf	??_vfpfcnvrt^0,f,c
  4573   007BF8  0E00               	movlw	0
  4574   007BFA  2211               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  4575   007BFC  C010  FFF6         	movff	??_vfpfcnvrt,tblptrl
  4576   007C00  C011  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  4577   007C04                     	if	0	;tblptru may be non-zero
  4578   007C04                     	endif
  4579   007C04                     	if	0	;tblptru may be non-zero
  4580   007C04                     	endif
  4581   007C04  0008               	tblrd		*
  4582   007C06  50F5               	movf	tablat,w,c
  4583   007C08  0A6C               	xorlw	108
  4584   007C0A  A4D8               	btfss	status,2,c
  4585   007C0C  EF0A  F03E         	goto	u1441
  4586   007C10  EF0C  F03E         	goto	u1440
  4587   007C14                     u1441:
  4588   007C14  EF2E  F03E         	goto	l2328
  4589   007C18                     u1440:
  4590   007C18  500E               	movf	vfpfcnvrt@fmt^0,w,c
  4591   007C1A  6ED9               	movwf	fsr2l,c
  4592   007C1C  6ADA               	clrf	fsr2h,c
  4593   007C1E  CFDE F010          	movff	postinc2,??_vfpfcnvrt
  4594   007C22  CFDD F011          	movff	postdec2,??_vfpfcnvrt+1
  4595   007C26  0E02               	movlw	2
  4596   007C28  2610               	addwf	??_vfpfcnvrt^0,f,c
  4597   007C2A  0E00               	movlw	0
  4598   007C2C  2211               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  4599   007C2E  C010  FFF6         	movff	??_vfpfcnvrt,tblptrl
  4600   007C32  C011  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  4601   007C36                     	if	0	;tblptru may be non-zero
  4602   007C36                     	endif
  4603   007C36                     	if	0	;tblptru may be non-zero
  4604   007C36                     	endif
  4605   007C36  0008               	tblrd		*
  4606   007C38  50F5               	movf	tablat,w,c
  4607   007C3A  0A73               	xorlw	115
  4608   007C3C  A4D8               	btfss	status,2,c
  4609   007C3E  EF23  F03E         	goto	u1451
  4610   007C42  EF25  F03E         	goto	u1450
  4611   007C46                     u1451:
  4612   007C46  EF2E  F03E         	goto	l2328
  4613   007C4A                     u1450:
  4614   007C4A                     
  4615                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1662:    *fmt += 
      +                          3;
  4616   007C4A  500E               	movf	vfpfcnvrt@fmt^0,w,c
  4617   007C4C  6ED9               	movwf	fsr2l,c
  4618   007C4E  6ADA               	clrf	fsr2h,c
  4619   007C50  0E03               	movlw	3
  4620   007C52  26DE               	addwf	postinc2,f,c
  4621   007C54  0E00               	movlw	0
  4622   007C56  22DD               	addwfc	postdec2,f,c
  4623   007C58  EFDE  F03D         	goto	l2316
  4624   007C5C                     l2328:
  4625                           
  4626                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1665:   if (done)
      +                           {
  4627   007C5C  5016               	movf	vfpfcnvrt@done^0,w,c
  4628   007C5E  B4D8               	btfsc	status,2,c
  4629   007C60  EF34  F03E         	goto	u1461
  4630   007C64  EF36  F03E         	goto	u1460
  4631   007C68                     u1461:
  4632   007C68  EF7A  F03E         	goto	l2338
  4633   007C6C                     u1460:
  4634   007C6C                     
  4635                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1669:    for (cha
      +                          r * cp = (*(char * *)__va_arg(*(char * **)ap, (char *)0)); *cp != '\0'; cp++) {
  4636   007C6C  500F               	movf	vfpfcnvrt@ap^0,w,c
  4637   007C6E  6ED9               	movwf	fsr2l,c
  4638   007C70  6ADA               	clrf	fsr2h,c
  4639   007C72  0E02               	movlw	2
  4640   007C74  26DF               	addwf	indf2,f,c
  4641   007C76  5CDF               	subwf	indf2,w,c
  4642   007C78  6ED9               	movwf	fsr2l,c
  4643   007C7A  6ADA               	clrf	fsr2h,c
  4644   007C7C  CFDE F012          	movff	postinc2,vfpfcnvrt@cp_1156
  4645   007C80  CFDE F013          	movff	postinc2,vfpfcnvrt@cp_1156+1
  4646   007C84  EF60  F03E         	goto	l2336
  4647   007C88                     l2332:
  4648                           
  4649                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1670:     fputc(*
      +                          cp, fp);
  4650   007C88  C012  FFF6         	movff	vfpfcnvrt@cp_1156,tblptrl
  4651   007C8C  C013  FFF7         	movff	vfpfcnvrt@cp_1156+1,tblptrh
  4652   007C90  6AF8               	clrf	tblptru,c
  4653   007C92  0E07               	movlw	(high __ramtop+-1)
  4654   007C94  64F7               	cpfsgt	tblptrh,c
  4655   007C96  D003               	bra	u1477
  4656   007C98  0008               	tblrd		*
  4657   007C9A  50F5               	movf	tablat,w,c
  4658   007C9C  D005               	bra	u1470
  4659   007C9E                     u1477:
  4660   007C9E  CFF6 FFE1          	movff	tblptrl,fsr1l
  4661   007CA2  CFF7 FFE2          	movff	tblptrh,fsr1h
  4662   007CA6  50E7               	movf	indf1,w,c
  4663   007CA8                     u1470:
  4664   007CA8  6E10               	movwf	??_vfpfcnvrt^0,c
  4665   007CAA  5010               	movf	??_vfpfcnvrt^0,w,c
  4666   007CAC  6E03               	movwf	fputc@c^0,c
  4667   007CAE  6A04               	clrf	(fputc@c+1)^0,c
  4668   007CB0  C00C  F005         	movff	vfpfcnvrt@fp,fputc@fp
  4669   007CB4  C00D  F006         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4670   007CB8  EC19  F038         	call	_fputc	;wreg free
  4671   007CBC                     
  4672                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1674:    }
  4673   007CBC  4A12               	infsnz	vfpfcnvrt@cp_1156^0,f,c
  4674   007CBE  2A13               	incf	(vfpfcnvrt@cp_1156+1)^0,f,c
  4675   007CC0                     l2336:
  4676   007CC0  C012  FFF6         	movff	vfpfcnvrt@cp_1156,tblptrl
  4677   007CC4  C013  FFF7         	movff	vfpfcnvrt@cp_1156+1,tblptrh
  4678   007CC8  6AF8               	clrf	tblptru,c
  4679   007CCA  0E07               	movlw	(high __ramtop+-1)
  4680   007CCC  64F7               	cpfsgt	tblptrh,c
  4681   007CCE  D003               	bra	u1487
  4682   007CD0  0008               	tblrd		*
  4683   007CD2  50F5               	movf	tablat,w,c
  4684   007CD4  D005               	bra	u1480
  4685   007CD6                     u1487:
  4686   007CD6  CFF6 FFE1          	movff	tblptrl,fsr1l
  4687   007CDA  CFF7 FFE2          	movff	tblptrh,fsr1h
  4688   007CDE  50E7               	movf	indf1,w,c
  4689   007CE0                     u1480:
  4690   007CE0  0900               	iorlw	0
  4691   007CE2  A4D8               	btfss	status,2,c
  4692   007CE4  EF76  F03E         	goto	u1491
  4693   007CE8  EF78  F03E         	goto	u1490
  4694   007CEC                     u1491:
  4695   007CEC  EF44  F03E         	goto	l2332
  4696   007CF0                     u1490:
  4697   007CF0  EF95  F03E         	goto	l1090
  4698   007CF4                     l2338:
  4699                           
  4700                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  4701   007CF4  500E               	movf	vfpfcnvrt@fmt^0,w,c
  4702   007CF6  6ED9               	movwf	fsr2l,c
  4703   007CF8  6ADA               	clrf	fsr2h,c
  4704   007CFA  2ADE               	incf	postinc2,f,c
  4705   007CFC  0E00               	movlw	0
  4706   007CFE  22DD               	addwfc	postdec2,f,c
  4707   007D00  EF95  F03E         	goto	l1090
  4708   007D04                     l2342:
  4709                           
  4710                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  4711   007D04  500E               	movf	vfpfcnvrt@fmt^0,w,c
  4712   007D06  6ED9               	movwf	fsr2l,c
  4713   007D08  6ADA               	clrf	fsr2h,c
  4714   007D0A  CFDE FFF6          	movff	postinc2,tblptrl
  4715   007D0E  CFDD FFF7          	movff	postdec2,tblptrh
  4716   007D12                     	if	0	;tblptru may be non-zero
  4717   007D12                     	endif
  4718   007D12                     	if	0	;tblptru may be non-zero
  4719   007D12                     	endif
  4720   007D12  0008               	tblrd		*
  4721   007D14  50F5               	movf	tablat,w,c
  4722   007D16  6E03               	movwf	fputc@c^0,c
  4723   007D18  6A04               	clrf	(fputc@c+1)^0,c
  4724   007D1A  C00C  F005         	movff	vfpfcnvrt@fp,fputc@fp
  4725   007D1E  C00D  F006         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4726   007D22  EC19  F038         	call	_fputc	;wreg free
  4727   007D26  EF7A  F03E         	goto	l2338
  4728   007D2A                     l1090:
  4729   007D2A  0012               	return		;funcret
  4730   007D2C                     __end_of_vfpfcnvrt:
  4731                           	callstack 0
  4732                           
  4733 ;; *************** function _fputc *****************
  4734 ;; Defined at:
  4735 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_fputc.c"
  4736 ;; Parameters:    Size  Location     Type
  4737 ;;  c               2    2[COMRAM] int 
  4738 ;;  fp              2    4[COMRAM] PTR struct _IO_FILE
  4739 ;;		 -> NULL(0), 
  4740 ;; Auto vars:     Size  Location     Type
  4741 ;;		None
  4742 ;; Return value:  Size  Location     Type
  4743 ;;                  2    2[COMRAM] int 
  4744 ;; Registers used:
  4745 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4746 ;; Tracked objects:
  4747 ;;		On entry : 0/0
  4748 ;;		On exit  : 0/0
  4749 ;;		Unchanged: 0/0
  4750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4751 ;;      Params:         4       0       0       0       0       0       0       0       0
  4752 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4753 ;;      Temps:          5       0       0       0       0       0       0       0       0
  4754 ;;      Totals:         9       0       0       0       0       0       0       0       0
  4755 ;;Total ram usage:        9 bytes
  4756 ;; Hardware stack levels used: 1
  4757 ;; Hardware stack levels required when called: 2
  4758 ;; This function calls:
  4759 ;;		_putch
  4760 ;; This function is called by:
  4761 ;;		_vfpfcnvrt
  4762 ;; This function uses a non-reentrant model
  4763 ;;
  4764                           
  4765                           	psect	text26
  4766   007032                     __ptext26:
  4767                           	callstack 0
  4768   007032                     _fputc:
  4769                           	callstack 24
  4770   007032  5005               	movf	fputc@fp^0,w,c
  4771   007034  1006               	iorwf	(fputc@fp+1)^0,w,c
  4772   007036  B4D8               	btfsc	status,2,c
  4773   007038  EF20  F038         	goto	u1271
  4774   00703C  EF22  F038         	goto	u1270
  4775   007040                     u1271:
  4776   007040  EF2B  F038         	goto	l2256
  4777   007044                     u1270:
  4778   007044  5005               	movf	fputc@fp^0,w,c
  4779   007046  1006               	iorwf	(fputc@fp+1)^0,w,c
  4780   007048  A4D8               	btfss	status,2,c
  4781   00704A  EF29  F038         	goto	u1281
  4782   00704E  EF2B  F038         	goto	u1280
  4783   007052                     u1281:
  4784   007052  EF30  F038         	goto	l2258
  4785   007056                     u1280:
  4786   007056                     l2256:
  4787   007056  5003               	movf	fputc@c^0,w,c
  4788   007058  EC9C  F034         	call	_putch
  4789   00705C  EF7D  F038         	goto	l1122
  4790   007060                     l2258:
  4791   007060  EE20 F00A          	lfsr	2,10
  4792   007064  5005               	movf	fputc@fp^0,w,c
  4793   007066  26D9               	addwf	fsr2l,f,c
  4794   007068  5006               	movf	(fputc@fp+1)^0,w,c
  4795   00706A  22DA               	addwfc	fsr2h,f,c
  4796   00706C  50DE               	movf	postinc2,w,c
  4797   00706E  10DE               	iorwf	postinc2,w,c
  4798   007070  B4D8               	btfsc	status,2,c
  4799   007072  EF3D  F038         	goto	u1291
  4800   007076  EF3F  F038         	goto	u1290
  4801   00707A                     u1291:
  4802   00707A  EF5A  F038         	goto	l2262
  4803   00707E                     u1290:
  4804   00707E  EE20 F00A          	lfsr	2,10
  4805   007082  5005               	movf	fputc@fp^0,w,c
  4806   007084  26D9               	addwf	fsr2l,f,c
  4807   007086  5006               	movf	(fputc@fp+1)^0,w,c
  4808   007088  22DA               	addwfc	fsr2h,f,c
  4809   00708A  EE10 F003          	lfsr	1,3
  4810   00708E  5005               	movf	fputc@fp^0,w,c
  4811   007090  26E1               	addwf	fsr1l,f,c
  4812   007092  5006               	movf	(fputc@fp+1)^0,w,c
  4813   007094  22E2               	addwfc	fsr1h,f,c
  4814   007096  50DE               	movf	postinc2,w,c
  4815   007098  5CE6               	subwf	postinc1,w,c
  4816   00709A  50E6               	movf	postinc1,w,c
  4817   00709C  0A80               	xorlw	128
  4818   00709E  6E0B               	movwf	(??_fputc+4)^0,c
  4819   0070A0  50DE               	movf	postinc2,w,c
  4820   0070A2  0A80               	xorlw	128
  4821   0070A4  580B               	subwfb	(??_fputc+4)^0,w,c
  4822   0070A6  B0D8               	btfsc	status,0,c
  4823   0070A8  EF58  F038         	goto	u1301
  4824   0070AC  EF5A  F038         	goto	u1300
  4825   0070B0                     u1301:
  4826   0070B0  EF7D  F038         	goto	l1122
  4827   0070B4                     u1300:
  4828   0070B4                     l2262:
  4829   0070B4  EE20 F003          	lfsr	2,3
  4830   0070B8  5005               	movf	fputc@fp^0,w,c
  4831   0070BA  26D9               	addwf	fsr2l,f,c
  4832   0070BC  5006               	movf	(fputc@fp+1)^0,w,c
  4833   0070BE  22DA               	addwfc	fsr2h,f,c
  4834   0070C0  CFDE F007          	movff	postinc2,??_fputc
  4835   0070C4  CFDD F008          	movff	postdec2,??_fputc+1
  4836   0070C8  C005  FFD9         	movff	fputc@fp,fsr2l
  4837   0070CC  C006  FFDA         	movff	fputc@fp+1,fsr2h
  4838   0070D0  CFDE F009          	movff	postinc2,??_fputc+2
  4839   0070D4  CFDD F00A          	movff	postdec2,??_fputc+3
  4840   0070D8  5007               	movf	??_fputc^0,w,c
  4841   0070DA  2409               	addwf	(??_fputc+2)^0,w,c
  4842   0070DC  6ED9               	movwf	fsr2l,c
  4843   0070DE  5008               	movf	(??_fputc+1)^0,w,c
  4844   0070E0  200A               	addwfc	(??_fputc+3)^0,w,c
  4845   0070E2  6EDA               	movwf	fsr2h,c
  4846   0070E4  C003  FFDF         	movff	fputc@c,indf2
  4847   0070E8  EE20 F003          	lfsr	2,3
  4848   0070EC  5005               	movf	fputc@fp^0,w,c
  4849   0070EE  26D9               	addwf	fsr2l,f,c
  4850   0070F0  5006               	movf	(fputc@fp+1)^0,w,c
  4851   0070F2  22DA               	addwfc	fsr2h,f,c
  4852   0070F4  2ADE               	incf	postinc2,f,c
  4853   0070F6  0E00               	movlw	0
  4854   0070F8  22DD               	addwfc	postdec2,f,c
  4855   0070FA                     l1122:
  4856   0070FA  0012               	return		;funcret
  4857   0070FC                     __end_of_fputc:
  4858                           	callstack 0
  4859                           
  4860 ;; *************** function _putch *****************
  4861 ;; Defined at:
  4862 ;;		line 85 in file "src/librerias/UART.c"
  4863 ;; Parameters:    Size  Location     Type
  4864 ;;  data            1    wreg     unsigned char 
  4865 ;; Auto vars:     Size  Location     Type
  4866 ;;  data            1    1[COMRAM] unsigned char 
  4867 ;; Return value:  Size  Location     Type
  4868 ;;                  1    wreg      void 
  4869 ;; Registers used:
  4870 ;;		wreg, status,2, cstack
  4871 ;; Tracked objects:
  4872 ;;		On entry : 0/0
  4873 ;;		On exit  : 0/0
  4874 ;;		Unchanged: 0/0
  4875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4876 ;;      Params:         0       0       0       0       0       0       0       0       0
  4877 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4878 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4879 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4880 ;;Total ram usage:        1 bytes
  4881 ;; Hardware stack levels used: 1
  4882 ;; Hardware stack levels required when called: 1
  4883 ;; This function calls:
  4884 ;;		_UART_Tx
  4885 ;; This function is called by:
  4886 ;;		_fputc
  4887 ;; This function uses a non-reentrant model
  4888 ;;
  4889                           
  4890                           	psect	text27
  4891   006938                     __ptext27:
  4892                           	callstack 0
  4893   006938                     _putch:
  4894                           	callstack 24
  4895                           
  4896                           ;incstack = 0
  4897                           ;putch@data stored from wreg
  4898   006938  6E02               	movwf	putch@data^0,c
  4899   00693A                     
  4900                           ;src/librerias/UART.c: 86:     UART_Tx(data);
  4901   00693A  5002               	movf	putch@data^0,w,c
  4902   00693C  ECAB  F034         	call	_UART_Tx
  4903   006940  0012               	return		;funcret
  4904   006942                     __end_of_putch:
  4905                           	callstack 0
  4906                           
  4907 ;; *************** function _UART_Tx *****************
  4908 ;; Defined at:
  4909 ;;		line 80 in file "src/librerias/UART.c"
  4910 ;; Parameters:    Size  Location     Type
  4911 ;;  dato            1    wreg     unsigned char 
  4912 ;; Auto vars:     Size  Location     Type
  4913 ;;  dato            1    0[COMRAM] unsigned char 
  4914 ;; Return value:  Size  Location     Type
  4915 ;;                  1    wreg      void 
  4916 ;; Registers used:
  4917 ;;		wreg
  4918 ;; Tracked objects:
  4919 ;;		On entry : 0/0
  4920 ;;		On exit  : 0/0
  4921 ;;		Unchanged: 0/0
  4922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4923 ;;      Params:         0       0       0       0       0       0       0       0       0
  4924 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4925 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4926 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4927 ;;Total ram usage:        1 bytes
  4928 ;; Hardware stack levels used: 1
  4929 ;; This function calls:
  4930 ;;		Nothing
  4931 ;; This function is called by:
  4932 ;;		_putch
  4933 ;;		_addToBuffer
  4934 ;; This function uses a non-reentrant model
  4935 ;;
  4936                           
  4937                           	psect	text28
  4938   006956                     __ptext28:
  4939                           	callstack 0
  4940   006956                     _UART_Tx:
  4941                           	callstack 24
  4942                           
  4943                           ;incstack = 0
  4944                           ;UART_Tx@dato stored from wreg
  4945   006956  6E01               	movwf	UART_Tx@dato^0,c
  4946   006958                     l131:
  4947   006958  A2AC               	btfss	4012,1,c	;volatile
  4948   00695A  EFB1  F034         	goto	u1141
  4949   00695E  EFB3  F034         	goto	u1140
  4950   006962                     u1141:
  4951   006962  EFAC  F034         	goto	l131
  4952   006966                     u1140:
  4953   006966                     
  4954                           ;src/librerias/UART.c: 82:     TXREG1 = dato;
  4955   006966  C001  FFAD         	movff	UART_Tx@dato,4013	;volatile
  4956   00696A  0012               	return		;funcret
  4957   00696C                     __end_of_UART_Tx:
  4958                           	callstack 0
  4959                           
  4960 ;; *************** function _abs *****************
  4961 ;; Defined at:
  4962 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\abs.c"
  4963 ;; Parameters:    Size  Location     Type
  4964 ;;  a               2    6[COMRAM] int 
  4965 ;; Auto vars:     Size  Location     Type
  4966 ;;		None
  4967 ;; Return value:  Size  Location     Type
  4968 ;;                  2    6[COMRAM] int 
  4969 ;; Registers used:
  4970 ;;		wreg, status,2, status,0
  4971 ;; Tracked objects:
  4972 ;;		On entry : 0/0
  4973 ;;		On exit  : 0/0
  4974 ;;		Unchanged: 0/0
  4975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4976 ;;      Params:         2       0       0       0       0       0       0       0       0
  4977 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4978 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4979 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4980 ;;Total ram usage:        4 bytes
  4981 ;; Hardware stack levels used: 1
  4982 ;; This function calls:
  4983 ;;		Nothing
  4984 ;; This function is called by:
  4985 ;;		_vfpfcnvrt
  4986 ;; This function uses a non-reentrant model
  4987 ;;
  4988                           
  4989                           	psect	text29
  4990   006AA4                     __ptext29:
  4991                           	callstack 0
  4992   006AA4                     _abs:
  4993                           	callstack 26
  4994   006AA4  BE08               	btfsc	(abs@a+1)^0,7,c
  4995   006AA6  EF57  F035         	goto	u1311
  4996   006AAA  EF59  F035         	goto	u1310
  4997   006AAE                     u1311:
  4998   006AAE  EF5F  F035         	goto	l1107
  4999   006AB2                     u1310:
  5000   006AB2  C007  F007         	movff	abs@a,?_abs
  5001   006AB6  C008  F008         	movff	abs@a+1,?_abs+1
  5002   006ABA  EF6B  F035         	goto	l1110
  5003   006ABE                     l1107:
  5004   006ABE  C007  F009         	movff	abs@a,??_abs
  5005   006AC2  C008  F00A         	movff	abs@a+1,??_abs+1
  5006   006AC6  1E09               	comf	??_abs^0,f,c
  5007   006AC8  1E0A               	comf	(??_abs+1)^0,f,c
  5008   006ACA  4A09               	infsnz	??_abs^0,f,c
  5009   006ACC  2A0A               	incf	(??_abs+1)^0,f,c
  5010   006ACE  C009  F007         	movff	??_abs,?_abs
  5011   006AD2  C00A  F008         	movff	??_abs+1,?_abs+1
  5012   006AD6                     l1110:
  5013   006AD6  0012               	return		;funcret
  5014   006AD8                     __end_of_abs:
  5015                           	callstack 0
  5016                           
  5017 ;; *************** function ___awmod *****************
  5018 ;; Defined at:
  5019 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awmod.c"
  5020 ;; Parameters:    Size  Location     Type
  5021 ;;  dividend        2    0[COMRAM] int 
  5022 ;;  divisor         2    2[COMRAM] int 
  5023 ;; Auto vars:     Size  Location     Type
  5024 ;;  sign            1    5[COMRAM] unsigned char 
  5025 ;;  counter         1    4[COMRAM] unsigned char 
  5026 ;; Return value:  Size  Location     Type
  5027 ;;                  2    0[COMRAM] int 
  5028 ;; Registers used:
  5029 ;;		wreg, status,2, status,0
  5030 ;; Tracked objects:
  5031 ;;		On entry : 0/0
  5032 ;;		On exit  : 0/0
  5033 ;;		Unchanged: 0/0
  5034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5035 ;;      Params:         4       0       0       0       0       0       0       0       0
  5036 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5037 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5038 ;;      Totals:         6       0       0       0       0       0       0       0       0
  5039 ;;Total ram usage:        6 bytes
  5040 ;; Hardware stack levels used: 1
  5041 ;; This function calls:
  5042 ;;		Nothing
  5043 ;; This function is called by:
  5044 ;;		_vfpfcnvrt
  5045 ;; This function uses a non-reentrant model
  5046 ;;
  5047                           
  5048                           	psect	text30
  5049   006DF6                     __ptext30:
  5050                           	callstack 0
  5051   006DF6                     ___awmod:
  5052                           	callstack 26
  5053   006DF6  0E00               	movlw	0
  5054   006DF8  6E06               	movwf	___awmod@sign^0,c
  5055   006DFA  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  5056   006DFC  EF04  F037         	goto	u1210
  5057   006E00  EF02  F037         	goto	u1211
  5058   006E04                     u1211:
  5059   006E04  EF0A  F037         	goto	l2224
  5060   006E08                     u1210:
  5061   006E08  6C01               	negf	___awmod@dividend^0,c
  5062   006E0A  1E02               	comf	(___awmod@dividend+1)^0,f,c
  5063   006E0C  B0D8               	btfsc	status,0,c
  5064   006E0E  2A02               	incf	(___awmod@dividend+1)^0,f,c
  5065   006E10  0E01               	movlw	1
  5066   006E12  6E06               	movwf	___awmod@sign^0,c
  5067   006E14                     l2224:
  5068   006E14  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  5069   006E16  EF11  F037         	goto	u1220
  5070   006E1A  EF0F  F037         	goto	u1221
  5071   006E1E                     u1221:
  5072   006E1E  EF15  F037         	goto	l2228
  5073   006E22                     u1220:
  5074   006E22  6C03               	negf	___awmod@divisor^0,c
  5075   006E24  1E04               	comf	(___awmod@divisor+1)^0,f,c
  5076   006E26  B0D8               	btfsc	status,0,c
  5077   006E28  2A04               	incf	(___awmod@divisor+1)^0,f,c
  5078   006E2A                     l2228:
  5079   006E2A  5003               	movf	___awmod@divisor^0,w,c
  5080   006E2C  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  5081   006E2E  B4D8               	btfsc	status,2,c
  5082   006E30  EF1C  F037         	goto	u1231
  5083   006E34  EF1E  F037         	goto	u1230
  5084   006E38                     u1231:
  5085   006E38  EF42  F037         	goto	l2244
  5086   006E3C                     u1230:
  5087   006E3C  0E01               	movlw	1
  5088   006E3E  6E05               	movwf	___awmod@counter^0,c
  5089   006E40  EF26  F037         	goto	l2234
  5090   006E44                     l2232:
  5091   006E44  90D8               	bcf	status,0,c
  5092   006E46  3603               	rlcf	___awmod@divisor^0,f,c
  5093   006E48  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  5094   006E4A  2A05               	incf	___awmod@counter^0,f,c
  5095   006E4C                     l2234:
  5096   006E4C  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  5097   006E4E  EF2B  F037         	goto	u1241
  5098   006E52  EF2D  F037         	goto	u1240
  5099   006E56                     u1241:
  5100   006E56  EF22  F037         	goto	l2232
  5101   006E5A                     u1240:
  5102   006E5A                     l2236:
  5103   006E5A  5003               	movf	___awmod@divisor^0,w,c
  5104   006E5C  5C01               	subwf	___awmod@dividend^0,w,c
  5105   006E5E  5004               	movf	(___awmod@divisor+1)^0,w,c
  5106   006E60  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  5107   006E62  A0D8               	btfss	status,0,c
  5108   006E64  EF36  F037         	goto	u1251
  5109   006E68  EF38  F037         	goto	u1250
  5110   006E6C                     u1251:
  5111   006E6C  EF3C  F037         	goto	l2240
  5112   006E70                     u1250:
  5113   006E70  5003               	movf	___awmod@divisor^0,w,c
  5114   006E72  5E01               	subwf	___awmod@dividend^0,f,c
  5115   006E74  5004               	movf	(___awmod@divisor+1)^0,w,c
  5116   006E76  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  5117   006E78                     l2240:
  5118   006E78  90D8               	bcf	status,0,c
  5119   006E7A  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  5120   006E7C  3203               	rrcf	___awmod@divisor^0,f,c
  5121   006E7E  2E05               	decfsz	___awmod@counter^0,f,c
  5122   006E80  EF2D  F037         	goto	l2236
  5123   006E84                     l2244:
  5124   006E84  5006               	movf	___awmod@sign^0,w,c
  5125   006E86  B4D8               	btfsc	status,2,c
  5126   006E88  EF48  F037         	goto	u1261
  5127   006E8C  EF4A  F037         	goto	u1260
  5128   006E90                     u1261:
  5129   006E90  EF4E  F037         	goto	l2248
  5130   006E94                     u1260:
  5131   006E94  6C01               	negf	___awmod@dividend^0,c
  5132   006E96  1E02               	comf	(___awmod@dividend+1)^0,f,c
  5133   006E98  B0D8               	btfsc	status,0,c
  5134   006E9A  2A02               	incf	(___awmod@dividend+1)^0,f,c
  5135   006E9C                     l2248:
  5136   006E9C  C001  F001         	movff	___awmod@dividend,?___awmod
  5137   006EA0  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  5138   006EA4  0012               	return		;funcret
  5139   006EA6                     __end_of___awmod:
  5140                           	callstack 0
  5141                           
  5142 ;; *************** function ___awdiv *****************
  5143 ;; Defined at:
  5144 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awdiv.c"
  5145 ;; Parameters:    Size  Location     Type
  5146 ;;  dividend        2    0[COMRAM] int 
  5147 ;;  divisor         2    2[COMRAM] int 
  5148 ;; Auto vars:     Size  Location     Type
  5149 ;;  quotient        2    6[COMRAM] int 
  5150 ;;  sign            1    5[COMRAM] unsigned char 
  5151 ;;  counter         1    4[COMRAM] unsigned char 
  5152 ;; Return value:  Size  Location     Type
  5153 ;;                  2    0[COMRAM] int 
  5154 ;; Registers used:
  5155 ;;		wreg, status,2, status,0
  5156 ;; Tracked objects:
  5157 ;;		On entry : 0/0
  5158 ;;		On exit  : 0/0
  5159 ;;		Unchanged: 0/0
  5160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5161 ;;      Params:         4       0       0       0       0       0       0       0       0
  5162 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5163 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5164 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5165 ;;Total ram usage:        8 bytes
  5166 ;; Hardware stack levels used: 1
  5167 ;; This function calls:
  5168 ;;		Nothing
  5169 ;; This function is called by:
  5170 ;;		_vfpfcnvrt
  5171 ;; This function uses a non-reentrant model
  5172 ;;
  5173                           
  5174                           	psect	text31
  5175   006EA6                     __ptext31:
  5176                           	callstack 0
  5177   006EA6                     ___awdiv:
  5178                           	callstack 26
  5179   006EA6  0E00               	movlw	0
  5180   006EA8  6E06               	movwf	___awdiv@sign^0,c
  5181   006EAA  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  5182   006EAC  EF5C  F037         	goto	u1150
  5183   006EB0  EF5A  F037         	goto	u1151
  5184   006EB4                     u1151:
  5185   006EB4  EF62  F037         	goto	l2180
  5186   006EB8                     u1150:
  5187   006EB8  6C03               	negf	___awdiv@divisor^0,c
  5188   006EBA  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  5189   006EBC  B0D8               	btfsc	status,0,c
  5190   006EBE  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  5191   006EC0  0E01               	movlw	1
  5192   006EC2  6E06               	movwf	___awdiv@sign^0,c
  5193   006EC4                     l2180:
  5194   006EC4  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  5195   006EC6  EF69  F037         	goto	u1160
  5196   006ECA  EF67  F037         	goto	u1161
  5197   006ECE                     u1161:
  5198   006ECE  EF6F  F037         	goto	l2186
  5199   006ED2                     u1160:
  5200   006ED2  6C01               	negf	___awdiv@dividend^0,c
  5201   006ED4  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  5202   006ED6  B0D8               	btfsc	status,0,c
  5203   006ED8  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  5204   006EDA  0E01               	movlw	1
  5205   006EDC  1A06               	xorwf	___awdiv@sign^0,f,c
  5206   006EDE                     l2186:
  5207   006EDE  0E00               	movlw	0
  5208   006EE0  6E08               	movwf	(___awdiv@quotient+1)^0,c
  5209   006EE2  0E00               	movlw	0
  5210   006EE4  6E07               	movwf	___awdiv@quotient^0,c
  5211   006EE6  5003               	movf	___awdiv@divisor^0,w,c
  5212   006EE8  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  5213   006EEA  B4D8               	btfsc	status,2,c
  5214   006EEC  EF7A  F037         	goto	u1171
  5215   006EF0  EF7C  F037         	goto	u1170
  5216   006EF4                     u1171:
  5217   006EF4  EFA4  F037         	goto	l2208
  5218   006EF8                     u1170:
  5219   006EF8  0E01               	movlw	1
  5220   006EFA  6E05               	movwf	___awdiv@counter^0,c
  5221   006EFC  EF84  F037         	goto	l2194
  5222   006F00                     l2192:
  5223   006F00  90D8               	bcf	status,0,c
  5224   006F02  3603               	rlcf	___awdiv@divisor^0,f,c
  5225   006F04  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  5226   006F06  2A05               	incf	___awdiv@counter^0,f,c
  5227   006F08                     l2194:
  5228   006F08  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  5229   006F0A  EF89  F037         	goto	u1181
  5230   006F0E  EF8B  F037         	goto	u1180
  5231   006F12                     u1181:
  5232   006F12  EF80  F037         	goto	l2192
  5233   006F16                     u1180:
  5234   006F16                     l2196:
  5235   006F16  90D8               	bcf	status,0,c
  5236   006F18  3607               	rlcf	___awdiv@quotient^0,f,c
  5237   006F1A  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  5238   006F1C  5003               	movf	___awdiv@divisor^0,w,c
  5239   006F1E  5C01               	subwf	___awdiv@dividend^0,w,c
  5240   006F20  5004               	movf	(___awdiv@divisor+1)^0,w,c
  5241   006F22  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  5242   006F24  A0D8               	btfss	status,0,c
  5243   006F26  EF97  F037         	goto	u1191
  5244   006F2A  EF99  F037         	goto	u1190
  5245   006F2E                     u1191:
  5246   006F2E  EF9E  F037         	goto	l2204
  5247   006F32                     u1190:
  5248   006F32  5003               	movf	___awdiv@divisor^0,w,c
  5249   006F34  5E01               	subwf	___awdiv@dividend^0,f,c
  5250   006F36  5004               	movf	(___awdiv@divisor+1)^0,w,c
  5251   006F38  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  5252   006F3A  8007               	bsf	___awdiv@quotient^0,0,c
  5253   006F3C                     l2204:
  5254   006F3C  90D8               	bcf	status,0,c
  5255   006F3E  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  5256   006F40  3203               	rrcf	___awdiv@divisor^0,f,c
  5257   006F42  2E05               	decfsz	___awdiv@counter^0,f,c
  5258   006F44  EF8B  F037         	goto	l2196
  5259   006F48                     l2208:
  5260   006F48  5006               	movf	___awdiv@sign^0,w,c
  5261   006F4A  B4D8               	btfsc	status,2,c
  5262   006F4C  EFAA  F037         	goto	u1201
  5263   006F50  EFAC  F037         	goto	u1200
  5264   006F54                     u1201:
  5265   006F54  EFB0  F037         	goto	l2212
  5266   006F58                     u1200:
  5267   006F58  6C07               	negf	___awdiv@quotient^0,c
  5268   006F5A  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  5269   006F5C  B0D8               	btfsc	status,0,c
  5270   006F5E  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  5271   006F60                     l2212:
  5272   006F60  C007  F001         	movff	___awdiv@quotient,?___awdiv
  5273   006F64  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  5274   006F68  0012               	return		;funcret
  5275   006F6A                     __end_of___awdiv:
  5276                           	callstack 0
  5277                           
  5278 ;; *************** function _Clock_Init *****************
  5279 ;; Defined at:
  5280 ;;		line 3 in file "src/librerias/clock.c"
  5281 ;; Parameters:    Size  Location     Type
  5282 ;;  s16Timeout      2    0[COMRAM] short 
  5283 ;; Auto vars:     Size  Location     Type
  5284 ;;  bStatus         1    5[COMRAM] _Bool 
  5285 ;;  bStatus         1    4[COMRAM] _Bool 
  5286 ;;  bStatus         1    3[COMRAM] _Bool 
  5287 ;;  bStatus         1    2[COMRAM] _Bool 
  5288 ;;  returnCode      1    7[COMRAM] enum E5188
  5289 ;;  bItTimeEn       1    6[COMRAM] _Bool 
  5290 ;; Return value:  Size  Location     Type
  5291 ;;                  1    wreg      enum E5188
  5292 ;; Registers used:
  5293 ;;		wreg, status,2, status,0
  5294 ;; Tracked objects:
  5295 ;;		On entry : 0/0
  5296 ;;		On exit  : 0/0
  5297 ;;		Unchanged: 0/0
  5298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5299 ;;      Params:         2       0       0       0       0       0       0       0       0
  5300 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5301 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5302 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5303 ;;Total ram usage:        8 bytes
  5304 ;; Hardware stack levels used: 1
  5305 ;; This function calls:
  5306 ;;		Nothing
  5307 ;; This function is called by:
  5308 ;;		_main
  5309 ;; This function uses a non-reentrant model
  5310 ;;
  5311                           
  5312                           	psect	text32
  5313   0077D0                     __ptext32:
  5314                           	callstack 0
  5315   0077D0                     _Clock_Init:
  5316                           	callstack 30
  5317   0077D0                     
  5318                           ;src/librerias/clock.c: 4:     CLK_ERROR_CODE returnCode = ERROR_CODE_OK;
  5319   0077D0  0E00               	movlw	0
  5320   0077D2  6E08               	movwf	Clock_Init@returnCode^0,c
  5321   0077D4                     
  5322                           ;src/librerias/clock.c: 5:     _Bool bItTimeEn = (0 >= s16Timeout) ? 0 : 1;
  5323   0077D4  BE02               	btfsc	(Clock_Init@s16Timeout+1)^0,7,c
  5324   0077D6  EFF8  F03B         	goto	u1800
  5325   0077DA  5002               	movf	(Clock_Init@s16Timeout+1)^0,w,c
  5326   0077DC  E106               	bnz	u1801
  5327   0077DE  0401               	decf	Clock_Init@s16Timeout^0,w,c
  5328   0077E0  B0D8               	btfsc	status,0,c
  5329   0077E2  EFF5  F03B         	goto	u1801
  5330   0077E6  EFF8  F03B         	goto	u1800
  5331   0077EA                     u1801:
  5332   0077EA  0E01               	movlw	1
  5333   0077EC  EFF9  F03B         	goto	u1810
  5334   0077F0                     u1800:
  5335   0077F0  0E00               	movlw	0
  5336   0077F2                     u1810:
  5337   0077F2  6E07               	movwf	Clock_Init@bItTimeEn^0,c
  5338   0077F4                     l174:
  5339                           
  5340                           ;src/librerias/clock.c: 10:             bStatus = OSCCON2bits.HFIOFR;
  5341   0077F4  B2D2               	btfsc	210,1,c	;volatile
  5342   0077F6  EFFF  F03B         	goto	u1821
  5343   0077FA  EF02  F03C         	goto	u1820
  5344   0077FE                     u1821:
  5345   0077FE  0E01               	movlw	1
  5346   007800  EF03  F03C         	goto	u1826
  5347   007804                     u1820:
  5348   007804  0E00               	movlw	0
  5349   007806                     u1826:
  5350   007806  6E03               	movwf	Clock_Init@bStatus^0,c
  5351   007808                     
  5352                           ;src/librerias/clock.c: 11:             s16Timeout--;
  5353   007808  0601               	decf	Clock_Init@s16Timeout^0,f,c
  5354   00780A  A0D8               	btfss	status,0,c
  5355   00780C  0602               	decf	(Clock_Init@s16Timeout+1)^0,f,c
  5356   00780E                     
  5357                           ;src/librerias/clock.c: 12:         }while((0 == bStatus) && ((0 < s16Timeout) || (0 == 
      +                          bItTimeEn)));
  5358   00780E  5003               	movf	Clock_Init@bStatus^0,w,c
  5359   007810  A4D8               	btfss	status,2,c
  5360   007812  EF0D  F03C         	goto	u1831
  5361   007816  EF0F  F03C         	goto	u1830
  5362   00781A                     u1831:
  5363   00781A  EF24  F03C         	goto	l2704
  5364   00781E                     u1830:
  5365   00781E  BE02               	btfsc	(Clock_Init@s16Timeout+1)^0,7,c
  5366   007820  EF1C  F03C         	goto	u1840
  5367   007824  5002               	movf	(Clock_Init@s16Timeout+1)^0,w,c
  5368   007826  E106               	bnz	u1841
  5369   007828  0401               	decf	Clock_Init@s16Timeout^0,w,c
  5370   00782A  B0D8               	btfsc	status,0,c
  5371   00782C  EF1A  F03C         	goto	u1841
  5372   007830  EF1C  F03C         	goto	u1840
  5373   007834                     u1841:
  5374   007834  EFFA  F03B         	goto	l174
  5375   007838                     u1840:
  5376   007838  5007               	movf	Clock_Init@bItTimeEn^0,w,c
  5377   00783A  B4D8               	btfsc	status,2,c
  5378   00783C  EF22  F03C         	goto	u1851
  5379   007840  EF24  F03C         	goto	u1850
  5380   007844                     u1851:
  5381   007844  EFFA  F03B         	goto	l174
  5382   007848                     u1850:
  5383   007848                     l2704:
  5384                           
  5385                           ;src/librerias/clock.c: 13:         if (0 == bStatus){
  5386   007848  5003               	movf	Clock_Init@bStatus^0,w,c
  5387   00784A  A4D8               	btfss	status,2,c
  5388   00784C  EF2A  F03C         	goto	u1861
  5389   007850  EF2C  F03C         	goto	u1860
  5390   007854                     u1861:
  5391   007854  EF2E  F03C         	goto	l173
  5392   007858                     u1860:
  5393   007858                     
  5394                           ;src/librerias/clock.c: 14:             returnCode = ERROR_CODE_TIMEOUT;
  5395   007858  0E01               	movlw	1
  5396   00785A  6E08               	movwf	Clock_Init@returnCode^0,c
  5397   00785C                     l173:
  5398                           
  5399                           ;src/librerias/clock.c: 18:     if(ERROR_CODE_OK == returnCode){
  5400   00785C  5008               	movf	Clock_Init@returnCode^0,w,c
  5401   00785E  A4D8               	btfss	status,2,c
  5402   007860  EF34  F03C         	goto	u1871
  5403   007864  EF36  F03C         	goto	u1870
  5404   007868                     u1871:
  5405   007868  EF6D  F03C         	goto	l179
  5406   00786C                     u1870:
  5407   00786C                     
  5408                           ;src/librerias/clock.c: 19:         OSCCON2bits.INTSRC = 1;
  5409   00786C  8AD2               	bsf	210,5,c	;volatile
  5410   00786E                     
  5411                           ;src/librerias/clock.c: 20:         OSCCONbits.IRCF = 7;
  5412   00786E  0E70               	movlw	112
  5413   007870  12D3               	iorwf	211,f,c	;volatile
  5414   007872                     l180:
  5415                           
  5416                           ;src/librerias/clock.c: 24:             bStatus = OSCCONbits.HFIOFS;
  5417   007872  B4D3               	btfsc	211,2,c	;volatile
  5418   007874  EF3E  F03C         	goto	u1881
  5419   007878  EF41  F03C         	goto	u1880
  5420   00787C                     u1881:
  5421   00787C  0E01               	movlw	1
  5422   00787E  EF42  F03C         	goto	u1886
  5423   007882                     u1880:
  5424   007882  0E00               	movlw	0
  5425   007884                     u1886:
  5426   007884  6E04               	movwf	Clock_Init@bStatus_497^0,c
  5427   007886                     
  5428                           ;src/librerias/clock.c: 25:             s16Timeout--;
  5429   007886  0601               	decf	Clock_Init@s16Timeout^0,f,c
  5430   007888  A0D8               	btfss	status,0,c
  5431   00788A  0602               	decf	(Clock_Init@s16Timeout+1)^0,f,c
  5432   00788C                     
  5433                           ;src/librerias/clock.c: 26:         }while((0 == bStatus) && ((0 < s16Timeout) || (0 == 
      +                          bItTimeEn)));
  5434   00788C  5004               	movf	Clock_Init@bStatus_497^0,w,c
  5435   00788E  A4D8               	btfss	status,2,c
  5436   007890  EF4C  F03C         	goto	u1891
  5437   007894  EF4E  F03C         	goto	u1890
  5438   007898                     u1891:
  5439   007898  EF63  F03C         	goto	l2720
  5440   00789C                     u1890:
  5441   00789C  BE02               	btfsc	(Clock_Init@s16Timeout+1)^0,7,c
  5442   00789E  EF5B  F03C         	goto	u1900
  5443   0078A2  5002               	movf	(Clock_Init@s16Timeout+1)^0,w,c
  5444   0078A4  E106               	bnz	u1901
  5445   0078A6  0401               	decf	Clock_Init@s16Timeout^0,w,c
  5446   0078A8  B0D8               	btfsc	status,0,c
  5447   0078AA  EF59  F03C         	goto	u1901
  5448   0078AE  EF5B  F03C         	goto	u1900
  5449   0078B2                     u1901:
  5450   0078B2  EF39  F03C         	goto	l180
  5451   0078B6                     u1900:
  5452   0078B6  5007               	movf	Clock_Init@bItTimeEn^0,w,c
  5453   0078B8  B4D8               	btfsc	status,2,c
  5454   0078BA  EF61  F03C         	goto	u1911
  5455   0078BE  EF63  F03C         	goto	u1910
  5456   0078C2                     u1911:
  5457   0078C2  EF39  F03C         	goto	l180
  5458   0078C6                     u1910:
  5459   0078C6                     l2720:
  5460                           
  5461                           ;src/librerias/clock.c: 27:         if (0 == bStatus){
  5462   0078C6  5004               	movf	Clock_Init@bStatus_497^0,w,c
  5463   0078C8  A4D8               	btfss	status,2,c
  5464   0078CA  EF69  F03C         	goto	u1921
  5465   0078CE  EF6B  F03C         	goto	u1920
  5466   0078D2                     u1921:
  5467   0078D2  EF6D  F03C         	goto	l179
  5468   0078D6                     u1920:
  5469   0078D6                     
  5470                           ;src/librerias/clock.c: 28:             returnCode = ERROR_CODE_TIMEOUT;
  5471   0078D6  0E01               	movlw	1
  5472   0078D8  6E08               	movwf	Clock_Init@returnCode^0,c
  5473   0078DA                     l179:
  5474                           
  5475                           ;src/librerias/clock.c: 32:     if(ERROR_CODE_OK == returnCode){
  5476   0078DA  5008               	movf	Clock_Init@returnCode^0,w,c
  5477   0078DC  A4D8               	btfss	status,2,c
  5478   0078DE  EF73  F03C         	goto	u1931
  5479   0078E2  EF75  F03C         	goto	u1930
  5480   0078E6                     u1931:
  5481   0078E6  EFA9  F03C         	goto	l185
  5482   0078EA                     u1930:
  5483   0078EA                     l186:
  5484                           
  5485                           ;src/librerias/clock.c: 35:             bStatus = OSCCONbits.OSTS;
  5486   0078EA  B6D3               	btfsc	211,3,c	;volatile
  5487   0078EC  EF7A  F03C         	goto	u1941
  5488   0078F0  EF7D  F03C         	goto	u1940
  5489   0078F4                     u1941:
  5490   0078F4  0E01               	movlw	1
  5491   0078F6  EF7E  F03C         	goto	u1946
  5492   0078FA                     u1940:
  5493   0078FA  0E00               	movlw	0
  5494   0078FC                     u1946:
  5495   0078FC  6E05               	movwf	Clock_Init@bStatus_498^0,c
  5496   0078FE                     
  5497                           ;src/librerias/clock.c: 36:             s16Timeout--;
  5498   0078FE  0601               	decf	Clock_Init@s16Timeout^0,f,c
  5499   007900  A0D8               	btfss	status,0,c
  5500   007902  0602               	decf	(Clock_Init@s16Timeout+1)^0,f,c
  5501   007904                     
  5502                           ;src/librerias/clock.c: 37:         }while((0 == bStatus) && ((0 < s16Timeout) || (0 == 
      +                          bItTimeEn)));
  5503   007904  5005               	movf	Clock_Init@bStatus_498^0,w,c
  5504   007906  A4D8               	btfss	status,2,c
  5505   007908  EF88  F03C         	goto	u1951
  5506   00790C  EF8A  F03C         	goto	u1950
  5507   007910                     u1951:
  5508   007910  EF9F  F03C         	goto	l2734
  5509   007914                     u1950:
  5510   007914  BE02               	btfsc	(Clock_Init@s16Timeout+1)^0,7,c
  5511   007916  EF97  F03C         	goto	u1960
  5512   00791A  5002               	movf	(Clock_Init@s16Timeout+1)^0,w,c
  5513   00791C  E106               	bnz	u1961
  5514   00791E  0401               	decf	Clock_Init@s16Timeout^0,w,c
  5515   007920  B0D8               	btfsc	status,0,c
  5516   007922  EF95  F03C         	goto	u1961
  5517   007926  EF97  F03C         	goto	u1960
  5518   00792A                     u1961:
  5519   00792A  EF75  F03C         	goto	l186
  5520   00792E                     u1960:
  5521   00792E  5007               	movf	Clock_Init@bItTimeEn^0,w,c
  5522   007930  B4D8               	btfsc	status,2,c
  5523   007932  EF9D  F03C         	goto	u1971
  5524   007936  EF9F  F03C         	goto	u1970
  5525   00793A                     u1971:
  5526   00793A  EF75  F03C         	goto	l186
  5527   00793E                     u1970:
  5528   00793E                     l2734:
  5529                           
  5530                           ;src/librerias/clock.c: 38:         if (0 == bStatus){
  5531   00793E  5005               	movf	Clock_Init@bStatus_498^0,w,c
  5532   007940  A4D8               	btfss	status,2,c
  5533   007942  EFA5  F03C         	goto	u1981
  5534   007946  EFA7  F03C         	goto	u1980
  5535   00794A                     u1981:
  5536   00794A  EFA9  F03C         	goto	l185
  5537   00794E                     u1980:
  5538   00794E                     
  5539                           ;src/librerias/clock.c: 39:             returnCode = ERROR_CODE_TIMEOUT;
  5540   00794E  0E01               	movlw	1
  5541   007950  6E08               	movwf	Clock_Init@returnCode^0,c
  5542   007952                     l185:
  5543                           
  5544                           ;src/librerias/clock.c: 42:         if(ERROR_CODE_OK == returnCode){
  5545   007952  5008               	movf	Clock_Init@returnCode^0,w,c
  5546   007954  A4D8               	btfss	status,2,c
  5547   007956  EFAF  F03C         	goto	u1991
  5548   00795A  EFB1  F03C         	goto	u1990
  5549   00795E                     u1991:
  5550   00795E  EFE7  F03C         	goto	l191
  5551   007962                     u1990:
  5552   007962                     
  5553                           ;src/librerias/clock.c: 43:         OSCTUNEbits.SPLLMULT = 1;
  5554   007962  8E9B               	bsf	155,7,c	;volatile
  5555                           
  5556                           ;src/librerias/clock.c: 44:         OSCCON2bits.PLLEN = 1;
  5557   007964  88D2               	bsf	210,4,c	;volatile
  5558   007966                     l192:
  5559                           
  5560                           ;src/librerias/clock.c: 47:             bStatus = OSCCON2bits.PLLRDY;
  5561   007966  BED2               	btfsc	210,7,c	;volatile
  5562   007968  EFB8  F03C         	goto	u2001
  5563   00796C  EFBB  F03C         	goto	u2000
  5564   007970                     u2001:
  5565   007970  0E01               	movlw	1
  5566   007972  EFBC  F03C         	goto	u2006
  5567   007976                     u2000:
  5568   007976  0E00               	movlw	0
  5569   007978                     u2006:
  5570   007978  6E06               	movwf	Clock_Init@bStatus_501^0,c
  5571   00797A                     
  5572                           ;src/librerias/clock.c: 48:             s16Timeout--;
  5573   00797A  0601               	decf	Clock_Init@s16Timeout^0,f,c
  5574   00797C  A0D8               	btfss	status,0,c
  5575   00797E  0602               	decf	(Clock_Init@s16Timeout+1)^0,f,c
  5576   007980                     
  5577                           ;src/librerias/clock.c: 49:         }while((0 == bStatus) && ((0 < s16Timeout) || (0 == 
      +                          bItTimeEn)));
  5578   007980  5006               	movf	Clock_Init@bStatus_501^0,w,c
  5579   007982  A4D8               	btfss	status,2,c
  5580   007984  EFC6  F03C         	goto	u2011
  5581   007988  EFC8  F03C         	goto	u2010
  5582   00798C                     u2011:
  5583   00798C  EFDD  F03C         	goto	l2750
  5584   007990                     u2010:
  5585   007990  BE02               	btfsc	(Clock_Init@s16Timeout+1)^0,7,c
  5586   007992  EFD5  F03C         	goto	u2020
  5587   007996  5002               	movf	(Clock_Init@s16Timeout+1)^0,w,c
  5588   007998  E106               	bnz	u2021
  5589   00799A  0401               	decf	Clock_Init@s16Timeout^0,w,c
  5590   00799C  B0D8               	btfsc	status,0,c
  5591   00799E  EFD3  F03C         	goto	u2021
  5592   0079A2  EFD5  F03C         	goto	u2020
  5593   0079A6                     u2021:
  5594   0079A6  EFB3  F03C         	goto	l192
  5595   0079AA                     u2020:
  5596   0079AA  5007               	movf	Clock_Init@bItTimeEn^0,w,c
  5597   0079AC  B4D8               	btfsc	status,2,c
  5598   0079AE  EFDB  F03C         	goto	u2031
  5599   0079B2  EFDD  F03C         	goto	u2030
  5600   0079B6                     u2031:
  5601   0079B6  EFB3  F03C         	goto	l192
  5602   0079BA                     u2030:
  5603   0079BA                     l2750:
  5604                           
  5605                           ;src/librerias/clock.c: 50:         if (0 == bStatus){
  5606   0079BA  5006               	movf	Clock_Init@bStatus_501^0,w,c
  5607   0079BC  A4D8               	btfss	status,2,c
  5608   0079BE  EFE3  F03C         	goto	u2041
  5609   0079C2  EFE5  F03C         	goto	u2040
  5610   0079C6                     u2041:
  5611   0079C6  EFE7  F03C         	goto	l191
  5612   0079CA                     u2040:
  5613   0079CA                     
  5614                           ;src/librerias/clock.c: 51:             returnCode = ERROR_CODE_TIMEOUT;
  5615   0079CA  0E01               	movlw	1
  5616   0079CC  6E08               	movwf	Clock_Init@returnCode^0,c
  5617   0079CE                     l191:
  5618                           
  5619                           ;src/librerias/clock.c: 56:     if(ERROR_CODE_OK == returnCode){
  5620   0079CE  5008               	movf	Clock_Init@returnCode^0,w,c
  5621   0079D0  A4D8               	btfss	status,2,c
  5622   0079D2  EFED  F03C         	goto	u2051
  5623   0079D6  EFEF  F03C         	goto	u2050
  5624   0079DA                     u2051:
  5625   0079DA  EFF2  F03C         	goto	l198
  5626   0079DE                     u2050:
  5627   0079DE                     
  5628                           ;src/librerias/clock.c: 57:         OSCCON2bits.PRISD = 0;
  5629   0079DE  94D2               	bcf	210,2,c	;volatile
  5630   0079E0                     
  5631                           ;src/librerias/clock.c: 58:         OSCCONbits.SCS = 0;
  5632   0079E0  0EFC               	movlw	-4
  5633   0079E2  16D3               	andwf	211,f,c	;volatile
  5634   0079E4                     l198:
  5635   0079E4  0012               	return		;funcret
  5636   0079E6                     __end_of_Clock_Init:
  5637                           	callstack 0
  5638                           
  5639                           	psect	rparam
  5640   000000                     
  5641                           	psect	config
  5642                           
  5643                           ;Config register CONFIG1L @ 0x300000
  5644                           ;	PLL Selection
  5645                           ;	PLLSEL = PLL3X, 3x clock multiplier
  5646                           ;	PLL Enable Configuration bit
  5647                           ;	CFGPLLEN = ON, PLL Enabled
  5648                           ;	CPU System Clock Postscaler
  5649                           ;	CPUDIV = NOCLKDIV, CPU uses system clock (no divide)
  5650                           ;	Low Speed USB mode with 48 MHz system clock
  5651                           ;	LS48MHZ = SYS48X8, System clock at 48 MHz, USB clock divider is set to 8
  5652   300000                     	org	3145728
  5653   300000  23                 	db	35
  5654                           
  5655                           ;Config register CONFIG1H @ 0x300001
  5656                           ;	Oscillator Selection
  5657                           ;	FOSC = INTOSCCLKO, Internal oscillator, clock output on OSC2
  5658                           ;	Primary Oscillator Shutdown
  5659                           ;	PCLKEN = OFF, Primary oscillator shutdown firmware controlled
  5660                           ;	Fail-Safe Clock Monitor
  5661                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  5662                           ;	Internal/External Oscillator Switchover
  5663                           ;	IESO = OFF, Oscillator Switchover mode disabled
  5664   300001                     	org	3145729
  5665   300001  09                 	db	9
  5666                           
  5667                           ;Config register CONFIG2L @ 0x300002
  5668                           ;	Power-up Timer Enable
  5669                           ;	nPWRTEN = OFF, Power up timer disabled
  5670                           ;	Brown-out Reset Enable
  5671                           ;	BOREN = SBORDIS, BOR enabled in hardware (SBOREN is ignored)
  5672                           ;	Brown-out Reset Voltage
  5673                           ;	BORV = 190, BOR set to 1.9V nominal
  5674                           ;	Low-Power Brown-out Reset
  5675                           ;	nLPBOR = OFF, Low-Power Brown-out Reset disabled
  5676   300002                     	org	3145730
  5677   300002  5F                 	db	95
  5678                           
  5679                           ;Config register CONFIG2H @ 0x300003
  5680                           ;	Watchdog Timer Enable bits
  5681                           ;	WDTEN = OFF, WDT disabled in hardware (SWDTEN ignored)
  5682                           ;	Watchdog Timer Postscaler
  5683                           ;	WDTPS = 32768, 1:32768
  5684   300003                     	org	3145731
  5685   300003  3C                 	db	60
  5686                           
  5687                           ; Padding undefined space
  5688   300004                     	org	3145732
  5689   300004  FF                 	db	255
  5690                           
  5691                           ;Config register CONFIG3H @ 0x300005
  5692                           ;	CCP2 MUX bit
  5693                           ;	CCP2MX = RC1, CCP2 input/output is multiplexed with RC1
  5694                           ;	PORTB A/D Enable bit
  5695                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  5696                           ;	Timer3 Clock Input MUX bit
  5697                           ;	T3CMX = RC0, T3CKI function is on RC0
  5698                           ;	SDO Output MUX bit
  5699                           ;	SDOMX = RB3, SDO function is on RB3
  5700                           ;	Master Clear Reset Pin Enable
  5701                           ;	MCLRE = ON, MCLR pin enabled; RE3 input disabled
  5702   300005                     	org	3145733
  5703   300005  D3                 	db	211
  5704                           
  5705                           ;Config register CONFIG4L @ 0x300006
  5706                           ;	Stack Full/Underflow Reset
  5707                           ;	STVREN = ON, Stack full/underflow will cause Reset
  5708                           ;	Single-Supply ICSP Enable bit
  5709                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
  5710                           ;	Dedicated In-Circuit Debug/Programming Port Enable
  5711                           ;	ICPRT = OFF, ICPORT disabled
  5712                           ;	Extended Instruction Set Enable bit
  5713                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled
  5714                           ;	Background Debugger Enable bit
  5715                           ;	DEBUG = 0x1, unprogrammed default
  5716   300006                     	org	3145734
  5717   300006  85                 	db	133
  5718                           
  5719                           ; Padding undefined space
  5720   300007                     	org	3145735
  5721   300007  FF                 	db	255
  5722                           
  5723                           ;Config register CONFIG5L @ 0x300008
  5724                           ;	Block 0 Code Protect
  5725                           ;	CP0 = OFF, Block 0 is not code-protected
  5726                           ;	Block 1 Code Protect
  5727                           ;	CP1 = OFF, Block 1 is not code-protected
  5728                           ;	Block 2 Code Protect
  5729                           ;	CP2 = OFF, Block 2 is not code-protected
  5730                           ;	Block 3 Code Protect
  5731                           ;	CP3 = OFF, Block 3 is not code-protected
  5732   300008                     	org	3145736
  5733   300008  0F                 	db	15
  5734                           
  5735                           ;Config register CONFIG5H @ 0x300009
  5736                           ;	Boot Block Code Protect
  5737                           ;	CPB = OFF, Boot block is not code-protected
  5738                           ;	Data EEPROM Code Protect
  5739                           ;	CPD = OFF, Data EEPROM is not code-protected
  5740   300009                     	org	3145737
  5741   300009  C0                 	db	192
  5742                           
  5743                           ;Config register CONFIG6L @ 0x30000A
  5744                           ;	Block 0 Write Protect
  5745                           ;	WRT0 = OFF, Block 0 (0800-1FFFh) is not write-protected
  5746                           ;	Block 1 Write Protect
  5747                           ;	WRT1 = OFF, Block 1 (2000-3FFFh) is not write-protected
  5748                           ;	Block 2 Write Protect
  5749                           ;	WRT2 = OFF, Block 2 (04000-5FFFh) is not write-protected
  5750                           ;	Block 3 Write Protect
  5751                           ;	WRT3 = OFF, Block 3 (06000-7FFFh) is not write-protected
  5752   30000A                     	org	3145738
  5753   30000A  0F                 	db	15
  5754                           
  5755                           ;Config register CONFIG6H @ 0x30000B
  5756                           ;	Configuration Registers Write Protect
  5757                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  5758                           ;	Boot Block Write Protect
  5759                           ;	WRTB = OFF, Boot block (0000-7FFh) is not write-protected
  5760                           ;	Data EEPROM Write Protect
  5761                           ;	WRTD = OFF, Data EEPROM is not write-protected
  5762   30000B                     	org	3145739
  5763   30000B  E0                 	db	224
  5764                           
  5765                           ;Config register CONFIG7L @ 0x30000C
  5766                           ;	Block 0 Table Read Protect
  5767                           ;	EBTR0 = OFF, Block 0 is not protected from table reads executed in other blocks
  5768                           ;	Block 1 Table Read Protect
  5769                           ;	EBTR1 = OFF, Block 1 is not protected from table reads executed in other blocks
  5770                           ;	Block 2 Table Read Protect
  5771                           ;	EBTR2 = OFF, Block 2 is not protected from table reads executed in other blocks
  5772                           ;	Block 3 Table Read Protect
  5773                           ;	EBTR3 = OFF, Block 3 is not protected from table reads executed in other blocks
  5774   30000C                     	org	3145740
  5775   30000C  0F                 	db	15
  5776                           
  5777                           ;Config register CONFIG7H @ 0x30000D
  5778                           ;	Boot Block Table Read Protect
  5779                           ;	EBTRB = OFF, Boot block is not protected from table reads executed in other blocks
  5780   30000D                     	org	3145741
  5781   30000D  40                 	db	64
  5782                           tosu	equ	0xFFF
  5783                           tosh	equ	0xFFE
  5784                           tosl	equ	0xFFD
  5785                           stkptr	equ	0xFFC
  5786                           pclatu	equ	0xFFB
  5787                           pclath	equ	0xFFA
  5788                           pcl	equ	0xFF9
  5789                           tblptru	equ	0xFF8
  5790                           tblptrh	equ	0xFF7
  5791                           tblptrl	equ	0xFF6
  5792                           tablat	equ	0xFF5
  5793                           prodh	equ	0xFF4
  5794                           prodl	equ	0xFF3
  5795                           indf0	equ	0xFEF
  5796                           postinc0	equ	0xFEE
  5797                           postdec0	equ	0xFED
  5798                           preinc0	equ	0xFEC
  5799                           plusw0	equ	0xFEB
  5800                           fsr0h	equ	0xFEA
  5801                           fsr0l	equ	0xFE9
  5802                           wreg	equ	0xFE8
  5803                           indf1	equ	0xFE7
  5804                           postinc1	equ	0xFE6
  5805                           postdec1	equ	0xFE5
  5806                           preinc1	equ	0xFE4
  5807                           plusw1	equ	0xFE3
  5808                           fsr1h	equ	0xFE2
  5809                           fsr1l	equ	0xFE1
  5810                           bsr	equ	0xFE0
  5811                           indf2	equ	0xFDF
  5812                           postinc2	equ	0xFDE
  5813                           postdec2	equ	0xFDD
  5814                           preinc2	equ	0xFDC
  5815                           plusw2	equ	0xFDB
  5816                           fsr2h	equ	0xFDA
  5817                           fsr2l	equ	0xFD9
  5818                           status	equ	0xFD8

Data Sizes:
    Strings     718
    Constant    4
    Data        6
    BSS         236
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     55      85
    BANK0           160      0     132
    BANK1           256      0      80
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    clearArray@array	PTR unsigned char  size(2) Largest target is 80
		 -> command(COMRAM[16]), param(BANK1[80]), 

    comandos	PTR const unsigned char [3] size(2) Largest target is 10
		 -> STR_24(CODE[10]), STR_25(CODE[5]), STR_26(CODE[9]), STR_46(CODE[10]), 
		 -> STR_47(CODE[5]), STR_48(CODE[9]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    getWord@pWord	PTR unsigned char  size(2) Largest target is 80
		 -> command(COMRAM[16]), param(BANK1[80]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 50
		 -> STR_1(CODE[7]), STR_10(CODE[9]), STR_11(CODE[14]), STR_12(CODE[17]), 
		 -> STR_13(CODE[10]), STR_14(CODE[14]), STR_15(CODE[17]), STR_16(CODE[11]), 
		 -> STR_17(CODE[14]), STR_18(CODE[17]), STR_19(CODE[5]), STR_2(CODE[10]), 
		 -> STR_20(CODE[8]), STR_21(CODE[27]), STR_22(CODE[26]), STR_23(CODE[26]), 
		 -> STR_27(CODE[29]), STR_28(CODE[12]), STR_29(CODE[38]), STR_3(CODE[11]), 
		 -> STR_30(CODE[37]), STR_31(CODE[38]), STR_32(CODE[50]), STR_33(CODE[5]), 
		 -> STR_34(CODE[36]), STR_35(CODE[5]), STR_36(CODE[3]), STR_37(CODE[4]), 
		 -> STR_38(CODE[14]), STR_39(CODE[19]), STR_4(CODE[18]), STR_40(CODE[19]), 
		 -> STR_41(CODE[18]), STR_42(CODE[19]), STR_43(CODE[23]), STR_44(CODE[25]), 
		 -> STR_45(CODE[23]), STR_49(CODE[11]), STR_5(CODE[18]), STR_50(CODE[21]), 
		 -> STR_51(CODE[5]), STR_6(CODE[11]), STR_7(CODE[9]), STR_8(CODE[8]), 
		 -> STR_9(CODE[13]), 

    S1087$buffer	PTR unsigned char  size(2) Largest target is 0

    S1087$source	PTR const unsigned char  size(2) Largest target is 0

    strcmp@l	PTR const unsigned char  size(1) Largest target is 16
		 -> command(COMRAM[16]), 

    strcmp@r	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_24(CODE[10]), STR_25(CODE[5]), STR_26(CODE[9]), STR_46(CODE[10]), 
		 -> STR_47(CODE[5]), STR_48(CODE[9]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 50
		 -> STR_1(CODE[7]), STR_10(CODE[9]), STR_11(CODE[14]), STR_12(CODE[17]), 
		 -> STR_13(CODE[10]), STR_14(CODE[14]), STR_15(CODE[17]), STR_16(CODE[11]), 
		 -> STR_17(CODE[14]), STR_18(CODE[17]), STR_19(CODE[5]), STR_2(CODE[10]), 
		 -> STR_20(CODE[8]), STR_21(CODE[27]), STR_22(CODE[26]), STR_23(CODE[26]), 
		 -> STR_27(CODE[29]), STR_28(CODE[12]), STR_29(CODE[38]), STR_3(CODE[11]), 
		 -> STR_30(CODE[37]), STR_31(CODE[38]), STR_32(CODE[50]), STR_33(CODE[5]), 
		 -> STR_34(CODE[36]), STR_35(CODE[5]), STR_36(CODE[3]), STR_37(CODE[4]), 
		 -> STR_38(CODE[14]), STR_39(CODE[19]), STR_4(CODE[18]), STR_40(CODE[19]), 
		 -> STR_41(CODE[18]), STR_42(CODE[19]), STR_43(CODE[23]), STR_44(CODE[25]), 
		 -> STR_45(CODE[23]), STR_49(CODE[11]), STR_5(CODE[18]), STR_50(CODE[21]), 
		 -> STR_51(CODE[5]), STR_6(CODE[11]), STR_7(CODE[9]), STR_8(CODE[8]), 
		 -> STR_9(CODE[13]), 

    vfpfcnvrt@cp_1156	PTR unsigned char  size(2) Largest target is 80
		 -> command(COMRAM[16]), param(BANK1[80]), ?_printf(COMRAM[2]), STR_24(CODE[10]), 
		 -> STR_25(CODE[5]), STR_26(CODE[9]), STR_46(CODE[10]), STR_47(CODE[5]), 
		 -> STR_48(CODE[9]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 50
		 -> STR_1(CODE[7]), STR_10(CODE[9]), STR_11(CODE[14]), STR_12(CODE[17]), 
		 -> STR_13(CODE[10]), STR_14(CODE[14]), STR_15(CODE[17]), STR_16(CODE[11]), 
		 -> STR_17(CODE[14]), STR_18(CODE[17]), STR_19(CODE[5]), STR_2(CODE[10]), 
		 -> STR_20(CODE[8]), STR_21(CODE[27]), STR_22(CODE[26]), STR_23(CODE[26]), 
		 -> STR_27(CODE[29]), STR_28(CODE[12]), STR_29(CODE[38]), STR_3(CODE[11]), 
		 -> STR_30(CODE[37]), STR_31(CODE[38]), STR_32(CODE[50]), STR_33(CODE[5]), 
		 -> STR_34(CODE[36]), STR_35(CODE[5]), STR_36(CODE[3]), STR_37(CODE[4]), 
		 -> STR_38(CODE[14]), STR_39(CODE[19]), STR_4(CODE[18]), STR_40(CODE[19]), 
		 -> STR_41(CODE[18]), STR_42(CODE[19]), STR_43(CODE[23]), STR_44(CODE[25]), 
		 -> STR_45(CODE[23]), STR_49(CODE[11]), STR_5(CODE[18]), STR_50(CODE[21]), 
		 -> STR_51(CODE[5]), STR_6(CODE[11]), STR_7(CODE[9]), STR_8(CODE[8]), 
		 -> STR_9(CODE[13]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 50
		 -> STR_1(CODE[7]), STR_10(CODE[9]), STR_11(CODE[14]), STR_12(CODE[17]), 
		 -> STR_13(CODE[10]), STR_14(CODE[14]), STR_15(CODE[17]), STR_16(CODE[11]), 
		 -> STR_17(CODE[14]), STR_18(CODE[17]), STR_19(CODE[5]), STR_2(CODE[10]), 
		 -> STR_20(CODE[8]), STR_21(CODE[27]), STR_22(CODE[26]), STR_23(CODE[26]), 
		 -> STR_27(CODE[29]), STR_28(CODE[12]), STR_29(CODE[38]), STR_3(CODE[11]), 
		 -> STR_30(CODE[37]), STR_31(CODE[38]), STR_32(CODE[50]), STR_33(CODE[5]), 
		 -> STR_34(CODE[36]), STR_35(CODE[5]), STR_36(CODE[3]), STR_37(CODE[4]), 
		 -> STR_38(CODE[14]), STR_39(CODE[19]), STR_4(CODE[18]), STR_40(CODE[19]), 
		 -> STR_41(CODE[18]), STR_42(CODE[19]), STR_43(CODE[23]), STR_44(CODE[25]), 
		 -> STR_45(CODE[23]), STR_49(CODE[11]), STR_5(CODE[18]), STR_50(CODE[21]), 
		 -> STR_51(CODE[5]), STR_6(CODE[11]), STR_7(CODE[9]), STR_8(CODE[8]), 
		 -> STR_9(CODE[13]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _main->_commandProcess
    _commandProcess->_CL_CommandHandler
    _CL_CommandHandler->_cliHelp
    _commandLineDeinit->_printf
    _cliHelp->_printf
    _commandLineInit->_printf
    _addToBuffer->_CL_ErrorHandler
    _clearCharInLine->_printf
    _CL_ErrorHandler->_printf
    _commandLineReset->_printf
    _UART_RxAvailable->_UART_ErrorHandler
    _UART_Rx->_UART_ErrorHandler
    _UART_ErrorHandler->_printf
    _UART_config_show->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_fputc
    _fputc->_putch
    _putch->_UART_Tx
    _abs->___awmod

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  107742
                    _CL_ErrorHandler
                         _Clock_Init
                          _UART_Init
                            _UART_Rx
                   _UART_RxAvailable
                        _addToBuffer
                    _commandLineInit
                     _commandProcess
 ---------------------------------------------------------------------------------
 (1) _commandProcess                                       8     8      0   36852
                                             47 COMRAM     8     8      0
                  _CL_CommandHandler
                   _commandLineReset
                         _countWords
                            _getWord
                             _printf
 ---------------------------------------------------------------------------------
 (2) _getWord                                             26    24      2     845
                                              0 COMRAM    26    24      2
 ---------------------------------------------------------------------------------
 (2) _countWords                                           3     3      0     139
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _CL_CommandHandler                                    5     5      0   21123
                                             42 COMRAM     5     5      0
                            _cliHelp
                  _commandLineDeinit
                             _printf
                             _strcmp
 ---------------------------------------------------------------------------------
 (3) _strcmp                                               4     1      3     264
                                              0 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (3) _commandLineDeinit                                    0     0      0    6931
                          _clearBuff
                             _printf
 ---------------------------------------------------------------------------------
 (3) _cliHelp                                              1     1      0    6931
                                             41 COMRAM     1     1      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _commandLineInit                                      0     0      0    6931
                          _clearBuff
                             _printf
 ---------------------------------------------------------------------------------
 (1) _addToBuffer                                          1     1      0   28187
                                             44 COMRAM     1     1      0
                    _CL_ErrorHandler
                            _UART_Tx
                    _clearCharInLine
                             _printf
 ---------------------------------------------------------------------------------
 (2) _clearCharInLine                                      0     0      0    6863
                             _printf
 ---------------------------------------------------------------------------------
 (2) _CL_ErrorHandler                                      3     3      0   14315
                                             41 COMRAM     3     3      0
                   _commandLineReset
                             _printf
 ---------------------------------------------------------------------------------
 (2) _commandLineReset                                     0     0      0    7421
                         _clearArray
                          _clearBuff
                             _printf
 ---------------------------------------------------------------------------------
 (3) _clearBuff                                            1     1      0      68
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _clearArray                                           4     1      3     490
                                              0 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (1) _UART_RxAvailable                                     0     0      0    6907
                  _UART_ErrorHandler
 ---------------------------------------------------------------------------------
 (1) _UART_Rx                                              0     0      0    6907
                  _UART_ErrorHandler
                    _UART_Rx_FRAMING
                   _UART_Rx_OVERFLOW
 ---------------------------------------------------------------------------------
 (2) _UART_Rx_OVERFLOW                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UART_Rx_FRAMING                                      1     1      0       0
 ---------------------------------------------------------------------------------
 (2) _UART_ErrorHandler                                    3     3      0    6907
                                             41 COMRAM     3     3      0
                             _printf
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            4     0      4    7059
                                             41 COMRAM     4     0      4
                   _UART_config_show
                   _UART_select_baud
 ---------------------------------------------------------------------------------
 (2) _UART_select_baud                                     8     4      4      98
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _UART_config_show                                     0     0      0    6863
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                               9     3      6    6863
                                             34 COMRAM     7     1      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             7     2      5    3387
                                             27 COMRAM     7     2      5
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           16    12      4    3029
                                             11 COMRAM    16    12      4
                            ___awdiv
                            ___awmod
                                _abs
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     978
                                              2 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0      44
                                              1 COMRAM     1     1      0
                            _UART_Tx
 ---------------------------------------------------------------------------------
 (7) _UART_Tx                                              1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                              6 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _Clock_Init                                           8     6      2     584
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CL_ErrorHandler
     _commandLineReset
       _clearArray
       _clearBuff
       _printf
         _vfprintf
           _vfpfcnvrt
             ___awdiv
             ___awmod
             _abs
               ___awmod (ARG)
             _fputc
               _putch
                 _UART_Tx
     _printf
   _Clock_Init
   _UART_Init
     _UART_config_show
       _printf
     _UART_select_baud
   _UART_Rx
     _UART_ErrorHandler
       _printf
     _UART_Rx_FRAMING
     _UART_Rx_OVERFLOW
   _UART_RxAvailable
     _UART_ErrorHandler
   _addToBuffer
     _CL_ErrorHandler
     _UART_Tx
     _clearCharInLine
       _printf
     _printf
   _commandLineInit
     _clearBuff
     _printf
   _commandProcess
     _CL_CommandHandler
       _cliHelp
         _printf
       _commandLineDeinit
         _clearBuff
         _printf
       _printf
       _strcmp
     _commandLineReset
     _countWords
     _getWord
     _printf

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      29        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      50       7       31.2%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      84       5       82.5%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     37      55       1       89.5%
BITBIGSFRllh        36      0       0      26        0.0%
BITBIGSFRhhh        2C      0       0      20        0.0%
BITBIGSFRhhl        19      0       0      21        0.0%
BITBIGSFRlhh         C      0       0      23        0.0%
BITBIGSFRlll         A      0       0      27        0.0%
BITBIGSFRhlh         7      0       0      22        0.0%
BITBIGSFRlhll        6      0       0      25        0.0%
BITBIGSFRlhlh        2      0       0      24        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     129      28        0.0%
DATA                 0      0     129       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Fri Oct 11 20:20:15 2024

          ?_commandLineInit 0001           _commandLineDeinit 696C           _commandLineEnable 003E  
             getWord@wordId 0016           ?_commandLineReset 0001                          l95 757C  
                        l99 75B2              getWord@tmpWord 0004                ___awdiv@sign 0006  
        ?_commandLineDeinit 0001             ?_commandProcess 0001              getWord@wordNum 0015  
        ??_commandLineReset 002A  UART_ErrorHandler@errorCode 002C                         l111 7660  
                       l103 75F4                         l112 766C                         l131 6958  
                       l107 762A                         l115 6AA2                         l141 69D0  
                       l301 6D6A                         l134 696A                         l151 6B00  
                       l128 751A                         l240 6980                         l137 6940  
                       l145 699A                         l154 6B14                         l314 73DA  
                       l243 6A70                         l180 7872                         l148 6954  
                       l260 7030                         l173 785C                         l237 6C9A  
                       l174 77F4                         l191 79CE                         l159 6DF4  
                       l192 7966                         l328 71CC                         l280 76BA  
                       l185 7952                         l265 6A14                         l361 72A8  
                       l186 78EA                         l274 6A40                         l179 78DA  
                       l371 6B58                         l268 69B4                         l605 6F68  
                       l198 79E4                         l278 77CE                         l297 6D46  
                       l618 6EA4                         u500 6990                         u501 698C  
                       u490 69C4                         u491 69C0                         _abs 6AA4  
              ___awmod@sign 0006         ??_commandLineDeinit 002A                         prod 0FF3  
                       wreg 0FE8                  _TXSTA1bits 0FAC                        l1110 6AD6  
                      l1103 6B9E                        l1122 70FA                        l1107 6ABE  
                      ?_abs 0007                        l1052 69EE                        l2200 6F32  
                      l2210 6F58                        l2202 6F3A                        l1090 7D2A  
                      l1138 6D02                        l2212 6F60                        l2204 6F3C  
                      l2220 6E08                        l2300 7B32                        l2206 6F42  
                      l2230 6E3C                        l2222 6E10                        l2302 7B42  
                      l2310 7B8A                        l2208 6F48                        l2240 6E78  
                      l2232 6E44                        l2224 6E14                        l2216 6DF6  
                      l2320 7BE6                        l2312 7B8E                        l2304 7B54  
                      l1520 69C4                        l2400 6CA6                        l2242 6E7E  
                      l2234 6E4C                        l2226 6E22                        l2218 6DFA  
                      l2170 693A                        l2330 7C6C                        l2322 7C18  
                      l2314 7BB0                        l2306 7B72                        l1530 6982  
                      l1522 69C8                        l2410 6B22                        l2402 6CCC  
                      l3210 72CC                        l3202 72AC                        l2180 6EC4  
                      l2172 6EA6                        l2236 6E5A                        l2244 6E84  
                      l2228 6E2A                        l2260 707E                        l2252 7032  
                      l2332 7C88                        l2324 7C4A                        l2316 7BBC  
                      l2308 7B74                        l1532 6990                        l2420 6B48  
                      l2404 6CE2                        l3220 730E                        l3212 72D0  
                      l3300 768C                        l2190 6EF8                        l2182 6ED2  
                      l2174 6EAA                        l2246 6E94                        l2238 6E70  
                      l2166 6958                        l2262 70B4                        l2254 7044  
                      l2334 7CBC                        l2318 7BC4                        l2342 7D04  
                      l2270 79E6                        l2350 6B66                        l2502 7440  
                      l1534 6992                        l1526 69CE                        l1518 69B6  
                      l3230 735A                        l3222 7312                        l3214 72EA  
                      l3310 76CA                        l3302 7692                        l2192 6F00  
                      l2184 6EDA                        l2176 6EB8                        l2248 6E9C  
                      l2168 6966                        l2256 7056                        l2336 7CC0  
                      l2328 7C5C                        l2280 7A32                        l2272 7A08  
                      l2352 6B7A                        l2360 69D6                        l2416 6B26  
                      l2408 6B16                        l3240 7392                        l3232 736E  
                      l3216 72FA                        l3224 7314                        l3208 72BC  
                      l3320 7720                        l3312 76DA                        l3304 76A2  
                      l2194 6F08                        l2186 6EDE                        l2178 6EC0  
                      l2266 6AA4                        l2258 7060                        l2338 7CF4  
                      l2290 7AB4                        l2282 7A4E                        l2274 7A14  
                      l2354 6B96                        l2450 7546                        l1538 6998  
                      l3170 6A1E                        l2370 69F4                        l2418 6B46  
                      l3250 73A0                        l3226 7324                        l3234 7370  
                      l3218 72FC                        l3330 777E                        l3322 7728  
                      l3314 76F6                        l3306 76A6                        l2700 781E  
                      l2196 6F16                        l2188 6EE6                        l2268 6AB2  
                      l2292 7AE4                        l2284 7A6A                        l2276 7A20  
                      l2348 6B5A                        l2460 7596                        l2452 7552  
                      l2444 751C                        l3172 6A2C                        l2372 69FE  
                      l2364 69F0                        l3180 70FE                        l3260 6F6C  
                      l3252 73B8                        l3244 7398                        l3236 7372  
                      l3228 733E                        l3340 77CC                        l3324 774E  
                      l3332 7780                        l3316 76FE                        l3308 76B6  
                      l2710 786E                        l2702 7838                        l2198 6F1C  
                      l2294 7B00                        l2286 7A82                        l2278 7A24  
                      l2358 69D2                        l2470 7600                        l2462 75A6  
                      l2454 7560                        l2446 7528                        l2550 6D92  
                      l3174 6A2E                        l2374 6A00                        l3190 7152  
                      l3182 7102                        l3270 6FA4                        l2390 697C  
                      l3254 73BC                        l3238 7382                        l3334 77B0  
                      l3318 7710                        l3350 6C12                        l2720 78C6  
                      l2712 7886                        l2704 7848                        l2296 7B12  
                      l2288 7A9C                        l2480 7654                        l2472 760E  
                      l2464 75CA                        l2456 7570                        l2448 7536  
                      l2552 6DA2                        l2544 6D6E                        l3168 6A16  
                      l2376 6A10                        l3176 6A42                        l3192 7166  
                      l3184 7116                        l3280 6FDE                        l3272 6FAC  
                      l3264 6F80                        l3256 73D8                        l3336 77C0  
                      l3328 7756                        l3352 6C26                        l3344 6BEE  
                      l2730 7914                        l2722 78D6                        l2714 788C  
                      l2706 7858                        l2298 7B22                        l2474 761E  
                      l2466 75D8                        l2458 7588                        l2490 7404  
                      l2482 73DC                        l2554 6DB2                        l2802 6B12  
                      l3178 6A64                        l3186 712A                        l3274 6FB0  
                      l3266 6F84                        l3290 700A                        l2386 696C  
                      l2570 6D08                        l3338 77C8                        l3354 6C2E  
                      l3346 6BFA                        l2740 7966                        l2732 792E  
                      l2724 78EA                        l2716 789C                        l2708 786C  
                      l2476 7636                        l2468 75E8                        l2492 7410  
                      l2484 73E0                        l3620 6DD6                        l2548 6D82  
                      l3188 713E                        l3196 717A                        l2564 699C  
                      l3284 6FF2                        l3276 6FC4                        l3268 6F94  
                      l2388 6978                        l2396 6C9C                        l2580 6D44  
                      l2572 6D1C                        l3292 766E                        l3348 6C0E  
                      l2750 79BA                        l2742 797A                        l2734 793E  
                      l2726 78FE                        l2718 78B6                        l2478 7644  
                      l3630 74A2                        l3622 745E                        l2494 741C  
                      l2486 73EC                        l2558 6DC2                        l2806 6942  
                      l2566 69A8                        l3286 6FFE                        l3278 6FD4  
                      l2398 6CA0                        l2662 722C                        l2670 724C  
                      l2654 71D8                        l2582 6D48                        l2574 6D1E  
                      l3294 767E                        l2752 79CA                        l2744 7980  
                      l2736 794E                        l2728 7904                        l3640 74F6  
                      l3624 74E8                        l3632 74B0                        l2496 7428  
                      l2488 73F8                        l2760 6A72                        l2808 6952  
                      l3288 7000                        l2680 72A6                        l3616 7262  
                      l2664 7234                        l2672 7280                        l2656 7206  
                      l2648 71D0                        l2584 6D58                        l2576 6D26  
                      l2568 6D04                        l2754 79DE                        l2746 7990  
                      l2738 7962                        l2690 77D4                        l3634 74BE  
                      l3626 7504                        l2498 7434                        l2770 6A92  
                      l2762 6A76                        l3618 718E                        l2666 723C  
                      l2658 7226                        l2586 6D68                        l2578 6D32  
                      l3298 7684                        l2756 79E0                        l2748 79AA  
                      l2692 77F4                        l3636 74CC                        l3628 7494  
                      l2772 6A94                        l2764 6A7A                        l2780 6C3E  
                      l2676 7286                        l2694 77F4                        l3638 74DA  
                      l2774 6A96                        l2766 6A8E                        l2790 6AE6  
                      l2782 6C86                        l2678 728A                        l2696 7808  
                      l2688 77D0                        l2776 6A98                        l2768 6A90  
                      l2792 6AF4                        l2784 6C8A                        l2698 780E  
                      l2778 6A9C                        l2794 6AFA                        l2786 6C8E  
                      l2788 6AD8                        STR_1 7FEA                        STR_2 7FB5  
                      STR_3 7F96                        STR_4 7F1D                        STR_5 7F0B  
                      STR_6 7F80                        STR_7 7FD1                        STR_8 7FE2  
                      STR_9 7F5C                        _CREN 7D5C                        u2000 7976  
                      u1200 6F58                        u2001 7970                        u1201 6F54  
                      u2010 7990                        u1210 6E08                        u2011 798C  
                      u1211 6E04                        u2020 79AA                        u1220 6E22  
                      u1140 6966                        u1300 70B4                        u2021 79A6  
                      u1221 6E1E                        u1141 6962                        u1301 70B0  
                      u2030 79BA                        u2006 7978                        u1150 6EB8  
                      u1230 6E3C                        u1310 6AB2                        u2031 79B6  
                      u1151 6EB4                        u1231 6E38                        u1311 6AAE  
                      u2040 79CA                        u1160 6ED2                        u1240 6E5A  
                      u1400 7B42                        u1320 7A08                        u2041 79C6  
                      u1161 6ECE                        u1241 6E56                        u1401 7B3E  
                      u1321 7A04                        u2050 79DE                        u1170 6EF8  
                      u1250 6E70                        u1410 7B86                        u1330 7A4E  
                      u2051 79DA                        u1171 6EF4                        u1251 6E6C  
                      u1411 7B82                        u1331 7A4A                        u1180 6F16  
                      u1260 6E94                        u1420 7BB0                        u1340 7A6A  
                      u1500 6B96                        u2060 6AE6                        u2300 7324  
                      u1181 6F12                        u1261 6E90                        u1421 7BAC  
                      u1341 7A66                        u1501 6B92                        u2061 6AE2  
                      u2301 7320                        u1190 6F32                        u1270 7044  
                      u1430 7BE6                        u1350 7AB0                        u2070 6AF4  
                      u1510 6A10                        u2310 733E                        u1191 6F2E  
                      u1271 7040                        u1431 7BE2                        u1351 7AAA  
                      u2071 6AF0                        u1511 6A0C                        u2311 733A  
                      u1280 7056                        u1440 7C18                        u1360 7AB2  
                      u1600 760E                        u2080 6B0E                        u2400 6FEE  
                      u2320 7356                        u1281 7052                        u1441 7C14  
                      u1601 760A                        u2081 6B0A                        u2401 6FEA  
                      u2321 7352                        u1290 707E                        u1450 7C4A  
                      u1370 7B12                        u1610 7644                        u2250 6A40  
                      u1530 6CCC                        u2330 7382                        u2410 767E  
                      u1291 707A                        u1451 7C46                        u1371 7B0E  
                      u1611 7640                        u2251 6A3C                        u1531 6CC8  
                      u2331 737E                        u2411 767A                        u1460 7C6C  
                      u1380 7B22                        u1620 6D7E                        u1540 6CE2  
                      u2340 7392                        u2260 72CC                        u2500 77C0  
                      u2420 76A2                        u1461 7C68                        u1381 7B1E  
                      u1621 6D7A                        u1541 6CDE                        u2341 738E  
                      u2261 72C8                        u2501 77BC                        u2421 769E  
                      u1470 7CA8                        u1390 7B32                        u1550 6B58  
                      u1630 6D1C                        u2350 73D8                        u2270 72EA  
                      u2430 76B6                        u2510 6C26                        u1391 7B2E  
                      u1551 6B54                        u1631 6D18                        u2351 73D4  
                      u2271 72E6                        u2431 76B2                        u2511 6C22  
                      u1800 77F0                        u1480 7CE0                        u1560 7536  
                      u2360 6F7C                        u1640 6D44                        u2280 72FA  
                      u2440 76CA                        u1801 77EA                        u1561 7532  
                      u2361 6F78                        u1641 6D40                        u2281 72F6  
                      u2441 76C6                        u1810 77F2                        u1490 7CF0  
                      u1570 7560                        u2370 6FA4                        u1650 6D58  
                      u2290 730E                        u2450 76DA                        u1491 7CEC  
                      u1571 755C                        u2371 6FA0                        u1651 6D54  
                      u2291 730A                        u2451 76D6                        u1900 78B6  
                      u1820 7804                        u1580 7596                        u2380 6FC0  
                      u1660 6D68                        u2460 76F6                        u1901 78B2  
                      u1821 77FE                        u1477 7C9E                        u1581 7592  
                      u2381 6FBC                        u1661 6D64                        u2461 76F2  
                      u1910 78C6                        u1830 781E                        u1590 75D8  
                      u2390 6FD4                        u2470 7720                        u1911 78C2  
                      u1831 781A                        u1487 7CD6                        u1591 75D4  
                      u2391 6FD0                        u2471 771C                        u1920 78D6  
                      u1840 7838                        u2480 774E                        u1921 78D2  
                      u1841 7834                        u2481 774A                        u1930 78EA  
                      u1850 7848                        u1826 7806                        u1770 7206  
                      u2490 77B0                        u1931 78E6                        u1851 7844  
                      u1771 7202                        u2491 77AC                        u1940 78FA  
                      u1860 7858                        u1780 7226                        u1941 78F4  
                      u1861 7854                        u1781 7222                        u1950 7914  
                      u1870 786C                        u1790 72A6                        u1951 7910  
                      u1871 7868                        u1791 72A2                        u1960 792E  
                      u1880 7882                        u1961 792A                        u1881 787C  
                      u1970 793E                        u1946 78FC                        u1890 789C  
                      u1971 793A                        u1891 7898                        u1980 794E  
                      u1981 794A                        u1990 7962                        u1886 7884  
                      u1991 795E                        _SPEN 7D5F                        _TRMT 7D61  
           __end_of_UART_Rx 6956             __end_of_UART_Tx 696C                        abs@a 0007  
                      _dbuf 00C4                        _main 6BEE                        _prec 003A  
                      fsr1h 0FE2                        fsr2h 0FDA                        indf1 0FE7  
                      indf2 0FDF                        fsr1l 0FE1                        fsr2l 0FD9  
                      prodl 0FF3                        start 0000   __end_of_commandLineDeinit 6982  
              ___param_bank 0000    UART_select_baud@baudrate 0001                       ??_abs 0009  
                _Clock_Init 77D0                       ?_main 0001             __end_of___awdiv 6F6A  
                     STR_10 7FC8                       STR_11 7F4E                       STR_20 7FDA  
                     STR_12 7F2F                       STR_13 7FAB                       STR_21 7E15  
                     STR_14 7F4E                       STR_22 7E4A                       STR_30 7DAF  
                     STR_15 7F2F                       STR_23 7E30                       STR_31 7D89  
                     STR_24 7FA1                       STR_16 7F8B                       STR_40 7ED3  
                     STR_32 7D31                       STR_17 7F4E                       STR_25 7FF6  
                     STR_33 7FF1                       STR_41 7EF9                       STR_18 7F2F  
                     STR_26 7FBF                       STR_42 7EC0                       STR_50 7EAB  
                     STR_34 7DD4                       STR_19 7DF3                       STR_51 7EF4  
                     STR_35 7FF1                       STR_43 7E94                       STR_27 7DF8  
                     STR_36 7DF5                       STR_28 7F69                       STR_44 7E64  
           __end_of___awmod 6EA6                       STR_37 7FFB                       STR_45 7E7D  
                     STR_29 7D63                       STR_38 7F40                       STR_46 7FA1  
                     STR_39 7EE6                       STR_47 7FF6                       STR_48 7FBF  
                     STR_49 7F75                       _BRGH1 7D62             ___awdiv@divisor 0003  
                     _RC1IF 7CF5             ___awdiv@counter 0005                       _RCREG 0FAE  
         Clock_Init@bStatus 0003                vfpfcnvrt@fmt 000E            _UART_config_show 751C  
                     _SPBRG 0FAF                       _TXEN1 7D65                       _SYNC1 7D64  
           __end_of_cliHelp 6B5A            ?_UART_Rx_FRAMING 0001             __end_of_getWord 73DC  
      commandProcess@nWords 0035                       _flags 003C                       _param 0100  
                     _fputc 7032                       _width 0038                       _putch 6938  
      commandProcess@status 0037                       tablat 0FF5                       status 0FD8  
         _CL_CommandHandler 71CE           ??_clearCharInLine 002A             __initialization 6BA0  
        ?_CL_CommandHandler 0001                __end_of_main 6C3E                 countWords@i 0002  
       ??_CL_CommandHandler 002B                      ??_main 0038               __activetblptr 0002  
        CL_CommandHandler@i 002E                   ??_UART_Rx 002D                   ??_UART_Tx 0001  
                    ?_fputc 0003                      _BRG161 7DC3            ___awdiv@dividend 0001  
                    ?_putch 0001                      _ANSELC 0F5D                      _RCREG1 0FAE  
             vfpfcnvrt@done 0016                      _SPBRGH 0FB0                      _TRISC6 7CA6  
                    _TRISC7 7CA7   __end_of_CL_CommandHandler 72AA                      _TXREG1 0FAD  
          __end_of_charStop 7D31                vfprintf@cfmt 0021           __end_of_UART_Init 6AA4  
                 ??___awdiv 0005                   ??___awmod 0005                 ?_Clock_Init 0001  
         ??_CL_ErrorHandler 002A                   ??_cliHelp 002A                      clear_0 6BC6  
                    clear_1 6BD2                      clear_2 6BDE            ___awdiv@quotient 0007  
           ___awmod@divisor 0003                      isa$std 0001             ___awmod@counter 0005  
                    _printf 69D2                   ??_getWord 0003                      _strcmp 6C9C  
         ?_UART_RxAvailable 0001           ?_UART_Rx_OVERFLOW 0001                      fputc@c 0003  
              __pdataCOMRAM 0050          ??_UART_RxAvailable 002D          ??_UART_Rx_OVERFLOW 0001  
              __mediumconst 7D2C                      tblptrh 0FF7                      tblptrl 0FF6  
                    tblptru 0FF8            __end_of_vfprintf 6BA0                  __accesstop 0060  
   __end_of__initialization 6BE4               ___rparam_used 0001            ??_commandProcess 0030  
          _UART_select_baud 73DC              __pcstackCOMRAM 0001               __end_of_fputc 70FC  
         _UART_ErrorHandler 6D6C               __end_of_putch 6942          ?_UART_ErrorHandler 0001  
       ??_UART_ErrorHandler 002A                     ??_fputc 0007                  _cantParams 7D2D  
                   ??_putch 0002                  __pbssBANK0 0060                  __pbssBANK1 0100  
             ??_addToBuffer 002D                  _clearArray 6A16    __end_of_UART_config_show 766E  
       Clock_Init@bItTimeEn 0007   __end_of_UART_ErrorHandler 6DF6                     ?_printf 0023  
                   ?_strcmp 0001                     _UART_Rx 6942                     _UART_Tx 6956  
           _clearCharInLine 699C           __end_of_clearBuff 6A16                  _countWords 6D04  
                   __Hparam 0000         __end_of_addToBuffer 7032                     __Lparam 0000  
                   ___awdiv 6EA6  CL_CommandHandler@numParams 002D                     ___awmod 6DF6  
                 ?_vfprintf 001C                     _cliHelp 6B16                     __pcinit 6BA0  
                   __ramtop 0800                     __ptext0 6BEE                     __ptext1 766E  
                   __ptext2 72AA                     __ptext3 6D04                     __ptext4 71CE  
                   __ptext5 6C9C                     __ptext6 696C                     __ptext7 6B16  
                   __ptext8 6C3E                     __ptext9 6F6A                     _getWord 72AA  
                   _command 0040                 UART_Tx@dato 0001            ___awmod@dividend 0001  
                clearBuff@i 0001        end_of_initialization 6BE4                     fputc@fp 0005  
             __Lmediumconst 7D2C            vfpfcnvrt@cp_1156 0012             _CL_ErrorHandler 70FC  
     Clock_Init@bStatus_501 0006       Clock_Init@bStatus_497 0004       Clock_Init@bStatus_498 0005  
               ?_clearArray 0001           __end_of_vfpfcnvrt 7D2C                   _RCSTAbits 0FAB  
                   postdec1 0FE5                     postdec2 0FDD                     postinc0 0FEE  
                   postinc1 0FE6                     postinc2 0FDE            vfpfcnvrt@convarg 0017  
              ??_Clock_Init 0003                  ??_vfprintf 0021                     strcmp@l 0001  
                   strcmp@r 0002                   _UART_Init 6A72            _flagCommandReady 003D  
             clearArray@len 0003     __end_of_clearCharInLine 69B6    __end_of_UART_select_baud 751C  
          _commandLineReset 6A42           ??_commandLineInit 002A                 _addToBuffer 6F6A  
        __end_of_Clock_Init 79E6                   _TXSTAbits 0FAC                 ?_countWords 0001  
               vfpfcnvrt@ap 000F                 vfpfcnvrt@cp 0014                 vfpfcnvrt@fp 000C  
                ?_UART_Init 002A               __pidataCOMRAM 6932              __end_of_printf 69F0  
            __end_of_strcmp 6D04         start_initialization 6BA0                 __end_of_abs 6AD8  
   __end_of_CL_ErrorHandler 71CE        Clock_Init@s16Timeout 0001           ?_UART_config_show 0001  
               vfprintf@fmt 001E           ??_UART_Rx_FRAMING 0001          ??_UART_config_show 002A  
                  ??_printf 0029                    ??_strcmp 0004            ?_clearCharInLine 0001  
           commandProcess@i 0036                 __pbssCOMRAM 0038                    ?_UART_Rx 0001  
                  ?_UART_Tx 0001          addToBuffer@newchar 002D                   _clearBuff 69F0  
             __pmediumconst 7D2C                    ?___awdiv 0001                    ?___awmod 0001  
                 _buffCount 003F                    ?_cliHelp 0001                 ??_UART_Init 002E  
                  ?_getWord 0001                    _BAUDCON1 0FB8            ?_CL_ErrorHandler 0001  
          _UART_RxAvailable 6AD8            _UART_Rx_OVERFLOW 69B6                ??_clearArray 0004  
                ?_clearBuff 0001    __end_of_commandLineReset 6A72                   _vfpfcnvrt 79E6  
       getWord@delimitCount 0014           UART_Init@baudrate 002A          __end_of_cantParams 7D30  
           _commandLineInit 6C3E          __end_of_clearArray 6A42           ?_UART_select_baud 0001  
                vfpfcnvrt@c 001B                   copy_data0 6BB4          ??_UART_select_baud 0005  
              ?_addToBuffer 0001                ??_countWords 0001                    __Hrparam 0000  
                vfprintf@ap 0020                    __Lrparam 0000                  vfprintf@fp 001C  
                ?_vfpfcnvrt 000C          countWords@currChar 0003                    _charBuff 0060  
                  _charStop 7D30          __end_of_countWords 6D6C          countWords@numWords 0001  
                  __ptext10 699C                    __ptext11 70FC                    __ptext20 6A72  
                  __ptext12 6A42                    __ptext21 73DC                    __ptext13 69F0  
                  __ptext30 6DF6                    __ptext22 751C                    __ptext14 6A16  
                  __ptext31 6EA6                    __ptext23 69D2                    __ptext15 6AD8  
                  __ptext32 77D0                    __ptext24 6B5A                    __ptext16 6942  
                  __ptext25 79E6                    __ptext17 69B6                    __ptext26 7032  
                  __ptext18 6982                    __ptext27 6938                    __ptext19 6D6C  
                  __ptext28 6956                    __ptext29 6AA4                    _comandos 0050  
           _UART_Rx_FRAMING 6982                 _OSCCON2bits 0FD2                    cliHelp@i 002A  
               ??_clearBuff 0001     __end_of_commandLineInit 6C9C                    isa$xinst 0000  
               clearArray@i 0004    CL_ErrorHandler@errorCode 002C                    getWord@i 0018  
                  _vfprintf 6B5A                   printf@fmt 0023              _commandProcess 766E  
                 putch@data 0002                 _OSCTUNEbits 0F9B                  _OSCCONbits 0FD3  
                  printf@ap 0029      __end_of_commandProcess 77D0                 ??_vfpfcnvrt 0010  
  __end_of_UART_RxAvailable 6B16    __end_of_UART_Rx_OVERFLOW 69D2             clearArray@array 0001  
      Clock_Init@returnCode 0008     __end_of_UART_Rx_FRAMING 699C               getWord@active 0017  
             getWord@buffId 001A                getWord@pWord 0001  
