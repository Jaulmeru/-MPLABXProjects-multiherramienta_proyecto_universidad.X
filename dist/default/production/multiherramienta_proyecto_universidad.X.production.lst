

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Wed Oct 02 15:19:40 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F45K50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    21                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    23   000000                     
    24                           ; Generated 12/10/2023 GMT
    25                           ; 
    26                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution. Publication is not required when
    40                           ;        this file is used in an embedded application.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC18F45K50 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58   000000                     _RCREG	set	4014
    59   000000                     _TXREG1	set	4013
    60   000000                     _SPBRG	set	4015
    61   000000                     _SPBRGH	set	4016
    62   000000                     _BRG161	set	32195
    63   000000                     _RCREG1	set	4014
    64   000000                     _RCSTAbits	set	4011
    65   000000                     _TXSTA1	set	4012
    66   000000                     _RCSTA1	set	4011
    67   000000                     _BAUDCON1	set	4024
    68   000000                     _TRMT	set	32097
    69   000000                     _CREN	set	32092
    70   000000                     _TXEN1	set	32101
    71   000000                     _BRGH1	set	32098
    72   000000                     _OSCTUNEbits	set	3995
    73   000000                     _RC1IF	set	31989
    74   000000                     _SPEN	set	32095
    75   000000                     _SYNC1	set	32100
    76   000000                     _OSCCON2bits	set	4050
    77   000000                     _OSCCONbits	set	4051
    78                           
    79                           	psect	smallconst
    80   000800                     __psmallconst:
    81                           	callstack 0
    82   000800  00                 	db	0
    83   000801                     STR_5:
    84   000801  62                 	db	98	;'b'
    85   000802  61                 	db	97	;'a'
    86   000803  6A                 	db	106	;'j'
    87   000804  61                 	db	97	;'a'
    88   000805  20                 	db	32
    89   000806  76                 	db	118	;'v'
    90   000807  65                 	db	101	;'e'
    91   000808  6C                 	db	108	;'l'
    92   000809  6F                 	db	111	;'o'
    93   00080A  63                 	db	99	;'c'
    94   00080B  69                 	db	105	;'i'
    95   00080C  64                 	db	100	;'d'
    96   00080D  61                 	db	97	;'a'
    97   00080E  64                 	db	100	;'d'
    98   00080F  20                 	db	32
    99   000810  0D                 	db	13
   100   000811  0A                 	db	10
   101   000812  00                 	db	0
   102   000813                     STR_4:
   103   000813  61                 	db	97	;'a'
   104   000814  6C                 	db	108	;'l'
   105   000815  74                 	db	116	;'t'
   106   000816  61                 	db	97	;'a'
   107   000817  20                 	db	32
   108   000818  76                 	db	118	;'v'
   109   000819  65                 	db	101	;'e'
   110   00081A  6C                 	db	108	;'l'
   111   00081B  6F                 	db	111	;'o'
   112   00081C  63                 	db	99	;'c'
   113   00081D  69                 	db	105	;'i'
   114   00081E  64                 	db	100	;'d'
   115   00081F  61                 	db	97	;'a'
   116   000820  64                 	db	100	;'d'
   117   000821  20                 	db	32
   118   000822  0D                 	db	13
   119   000823  0A                 	db	10
   120   000824  00                 	db	0
   121   000825                     STR_12:
   122   000825  44                 	db	68	;'D'
   123   000826  65                 	db	101	;'e'
   124   000827  73                 	db	115	;'s'
   125   000828  68                 	db	104	;'h'
   126   000829  61                 	db	97	;'a'
   127   00082A  62                 	db	98	;'b'
   128   00082B  69                 	db	105	;'i'
   129   00082C  6C                 	db	108	;'l'
   130   00082D  69                 	db	105	;'i'
   131   00082E  74                 	db	116	;'t'
   132   00082F  61                 	db	97	;'a'
   133   000830  64                 	db	100	;'d'
   134   000831  6F                 	db	111	;'o'
   135   000832  20                 	db	32
   136   000833  0D                 	db	13
   137   000834  0A                 	db	10
   138   000835  00                 	db	0
   139   000836                     STR_11:
   140   000836  48                 	db	72	;'H'
   141   000837  61                 	db	97	;'a'
   142   000838  62                 	db	98	;'b'
   143   000839  69                 	db	105	;'i'
   144   00083A  6C                 	db	108	;'l'
   145   00083B  69                 	db	105	;'i'
   146   00083C  74                 	db	116	;'t'
   147   00083D  61                 	db	97	;'a'
   148   00083E  64                 	db	100	;'d'
   149   00083F  6F                 	db	111	;'o'
   150   000840  20                 	db	32
   151   000841  0D                 	db	13
   152   000842  0A                 	db	10
   153   000843  00                 	db	0
   154   000844                     STR_9:
   155   000844  78                 	db	120	;'x'
   156   000845  20                 	db	32
   157   000846  62                 	db	98	;'b'
   158   000847  61                 	db	97	;'a'
   159   000848  75                 	db	117	;'u'
   160   000849  64                 	db	100	;'d'
   161   00084A  69                 	db	105	;'i'
   162   00084B  6F                 	db	111	;'o'
   163   00084C  73                 	db	115	;'s'
   164   00084D  20                 	db	32
   165   00084E  0D                 	db	13
   166   00084F  0A                 	db	10
   167   000850  00                 	db	0
   168   000851                     STR_6:
   169   000851  42                 	db	66	;'B'
   170   000852  61                 	db	97	;'a'
   171   000853  75                 	db	117	;'u'
   172   000854  64                 	db	100	;'d'
   173   000855  72                 	db	114	;'r'
   174   000856  61                 	db	97	;'a'
   175   000857  74                 	db	116	;'t'
   176   000858  65                 	db	101	;'e'
   177   000859  3A                 	db	58	;':'
   178   00085A  20                 	db	32
   179   00085B  00                 	db	0
   180   00085C                     STR_16:
   181   00085C  52                 	db	82	;'R'
   182   00085D  65                 	db	101	;'e'
   183   00085E  63                 	db	99	;'c'
   184   00085F  65                 	db	101	;'e'
   185   000860  70                 	db	112	;'p'
   186   000861  74                 	db	116	;'t'
   187   000862  6F                 	db	111	;'o'
   188   000863  72                 	db	114	;'r'
   189   000864  3A                 	db	58	;':'
   190   000865  20                 	db	32
   191   000866  00                 	db	0
   192   000867                     STR_3:
   193   000867  41                 	db	65	;'A'
   194   000868  73                 	db	115	;'s'
   195   000869  69                 	db	105	;'i'
   196   00086A  6E                 	db	110	;'n'
   197   00086B  63                 	db	99	;'c'
   198   00086C  72                 	db	114	;'r'
   199   00086D  6F                 	db	111	;'o'
   200   00086E  6E                 	db	110	;'n'
   201   00086F  6F                 	db	111	;'o'
   202   000870  20                 	db	32
   203   000871  00                 	db	0
   204   000872                     STR_13:
   205   000872  54                 	db	84	;'T'
   206   000873  72                 	db	114	;'r'
   207   000874  61                 	db	97	;'a'
   208   000875  6E                 	db	110	;'n'
   209   000876  73                 	db	115	;'s'
   210   000877  6F                 	db	111	;'o'
   211   000878  72                 	db	114	;'r'
   212   000879  3A                 	db	58	;':'
   213   00087A  20                 	db	32
   214   00087B  00                 	db	0
   215   00087C                     STR_2:
   216   00087C  53                 	db	83	;'S'
   217   00087D  69                 	db	105	;'i'
   218   00087E  6E                 	db	110	;'n'
   219   00087F  63                 	db	99	;'c'
   220   000880  72                 	db	114	;'r'
   221   000881  6F                 	db	111	;'o'
   222   000882  6E                 	db	110	;'n'
   223   000883  6F                 	db	111	;'o'
   224   000884  20                 	db	32
   225   000885  00                 	db	0
   226   000886                     STR_10:
   227   000886  50                 	db	80	;'P'
   228   000887  75                 	db	117	;'u'
   229   000888  65                 	db	101	;'e'
   230   000889  72                 	db	114	;'r'
   231   00088A  74                 	db	116	;'t'
   232   00088B  6F                 	db	111	;'o'
   233   00088C  3A                 	db	58	;':'
   234   00088D  20                 	db	32
   235   00088E  00                 	db	0
   236   00088F                     STR_7:
   237   00088F  31                 	db	49	;'1'
   238   000890  36                 	db	54	;'6'
   239   000891  20                 	db	32
   240   000892  62                 	db	98	;'b'
   241   000893  69                 	db	105	;'i'
   242   000894  74                 	db	116	;'t'
   243   000895  73                 	db	115	;'s'
   244   000896  20                 	db	32
   245   000897  00                 	db	0
   246   000898                     STR_8:
   247   000898  38                 	db	56	;'8'
   248   000899  20                 	db	32
   249   00089A  62                 	db	98	;'b'
   250   00089B  69                 	db	105	;'i'
   251   00089C  74                 	db	116	;'t'
   252   00089D  73                 	db	115	;'s'
   253   00089E  20                 	db	32
   254   00089F  00                 	db	0
   255   0008A0                     STR_1:
   256   0008A0  4D                 	db	77	;'M'
   257   0008A1  6F                 	db	111	;'o'
   258   0008A2  64                 	db	100	;'d'
   259   0008A3  6F                 	db	111	;'o'
   260   0008A4  3A                 	db	58	;':'
   261   0008A5  20                 	db	32
   262   0008A6  00                 	db	0
   263   0008A7  00                 	db	0	; dummy byte at the end
   264   000000                     
   265                           ; #config settings
   266                           
   267                           	psect	cinit
   268   000F1A                     __pcinit:
   269                           	callstack 0
   270   000F1A                     start_initialization:
   271                           	callstack 0
   272   000F1A                     __initialization:
   273                           	callstack 0
   274                           
   275                           ; Clear objects allocated to COMRAM (37 bytes)
   276   000F1A  EE00  F001         	lfsr	0,__pbssCOMRAM
   277   000F1E  0E25               	movlw	37
   278   000F20                     clear_0:
   279   000F20  6AEE               	clrf	postinc0,c
   280   000F22  06E8               	decf	wreg,f,c
   281   000F24  E1FD               	bnz	clear_0
   282   000F26                     end_of_initialization:
   283                           	callstack 0
   284   000F26                     __end_of__initialization:
   285                           	callstack 0
   286   000F26  0E00               	movlw	low (__Lmediumconst shr (0+16))
   287   000F28  6EF8               	movwf	tblptru,c
   288   000F2A  0100               	movlb	0
   289   000F2C  EF1A  F007         	goto	_main	;jump to C main() function
   290                           
   291                           	psect	bssCOMRAM
   292   000001                     __pbssCOMRAM:
   293                           	callstack 0
   294   000001                     	ds	32
   295   000021                     _width:
   296                           	callstack 0
   297   000021                     	ds	2
   298   000023                     _prec:
   299                           	callstack 0
   300   000023                     	ds	2
   301   000025                     _flags:
   302                           	callstack 0
   303   000025                     	ds	1
   304                           
   305                           	psect	cstackCOMRAM
   306   000026                     __pcstackCOMRAM:
   307                           	callstack 0
   308   000026                     UART_Tx@dato:
   309                           	callstack 0
   310   000026                     Clock_Init@s16Timeout:
   311                           	callstack 0
   312   000026                     UART_select_baud@baudrate:
   313                           	callstack 0
   314                           
   315                           ; 4 bytes @ 0x0
   316   000026                     	ds	1
   317   000027                     putch@data:
   318                           	callstack 0
   319                           
   320                           ; 1 bytes @ 0x1
   321   000027                     	ds	1
   322   000028                     Clock_Init@bStatus:
   323                           	callstack 0
   324   000028                     fputc@c:
   325                           	callstack 0
   326                           
   327                           ; 2 bytes @ 0x2
   328   000028                     	ds	1
   329   000029                     Clock_Init@bStatus_284:
   330                           	callstack 0
   331                           
   332                           ; 1 bytes @ 0x3
   333   000029                     	ds	1
   334   00002A                     ??_UART_select_baud:
   335   00002A                     Clock_Init@bStatus_285:
   336                           	callstack 0
   337   00002A                     fputc@fp:
   338                           	callstack 0
   339                           
   340                           ; 2 bytes @ 0x4
   341   00002A                     	ds	1
   342   00002B                     Clock_Init@bStatus_288:
   343                           	callstack 0
   344                           
   345                           ; 1 bytes @ 0x5
   346   00002B                     	ds	1
   347   00002C                     ??_fputc:
   348   00002C                     Clock_Init@bItTimeEn:
   349                           	callstack 0
   350                           
   351                           ; 1 bytes @ 0x6
   352   00002C                     	ds	1
   353   00002D                     Clock_Init@returnCode:
   354                           	callstack 0
   355                           
   356                           ; 1 bytes @ 0x7
   357   00002D                     	ds	4
   358   000031                     vfpfcnvrt@fp:
   359                           	callstack 0
   360                           
   361                           ; 2 bytes @ 0xB
   362   000031                     	ds	2
   363   000033                     vfpfcnvrt@fmt:
   364                           	callstack 0
   365                           
   366                           ; 1 bytes @ 0xD
   367   000033                     	ds	1
   368   000034                     vfpfcnvrt@ap:
   369                           	callstack 0
   370                           
   371                           ; 1 bytes @ 0xE
   372   000034                     	ds	1
   373   000035                     ?_vfprintf:
   374                           	callstack 0
   375   000035                     vfprintf@fp:
   376                           	callstack 0
   377                           
   378                           ; 2 bytes @ 0xF
   379   000035                     	ds	2
   380   000037                     vfprintf@fmt:
   381                           	callstack 0
   382                           
   383                           ; 1 bytes @ 0x11
   384   000037                     	ds	1
   385   000038                     vfprintf@ap:
   386                           	callstack 0
   387                           
   388                           ; 1 bytes @ 0x12
   389   000038                     	ds	1
   390   000039                     vfprintf@cfmt:
   391                           	callstack 0
   392                           
   393                           ; 1 bytes @ 0x13
   394   000039                     	ds	1
   395   00003A                     ?_printf:
   396                           	callstack 0
   397   00003A                     printf@fmt:
   398                           	callstack 0
   399                           
   400                           ; 1 bytes @ 0x14
   401   00003A                     	ds	1
   402   00003B                     printf@ap:
   403                           	callstack 0
   404                           
   405                           ; 1 bytes @ 0x15
   406   00003B                     	ds	1
   407   00003C                     UART_Init@baudrate:
   408                           	callstack 0
   409                           
   410                           ; 4 bytes @ 0x16
   411   00003C                     	ds	4
   412   000040                     ??_main:
   413                           
   414                           ; 1 bytes @ 0x1A
   415   000040                     	ds	2
   416   000042                     main@data:
   417                           	callstack 0
   418                           
   419                           ; 1 bytes @ 0x1C
   420   000042                     	ds	1
   421                           
   422 ;;
   423 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   424 ;;
   425 ;; *************** function _main *****************
   426 ;; Defined at:
   427 ;;		line 14 in file "src/main.c"
   428 ;; Parameters:    Size  Location     Type
   429 ;;		None
   430 ;; Auto vars:     Size  Location     Type
   431 ;;  data            1   28[COMRAM] unsigned char 
   432 ;; Return value:  Size  Location     Type
   433 ;;                  1    wreg      void 
   434 ;; Registers used:
   435 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   436 ;; Tracked objects:
   437 ;;		On entry : 0/0
   438 ;;		On exit  : 0/0
   439 ;;		Unchanged: 0/0
   440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   441 ;;      Params:         0       0       0       0       0       0       0       0       0
   442 ;;      Locals:         1       0       0       0       0       0       0       0       0
   443 ;;      Temps:          2       0       0       0       0       0       0       0       0
   444 ;;      Totals:         3       0       0       0       0       0       0       0       0
   445 ;;Total ram usage:        3 bytes
   446 ;; Hardware stack levels required when called: 8
   447 ;; This function calls:
   448 ;;		_Clock_Init
   449 ;;		_UART_Init
   450 ;;		_UART_Tx
   451 ;; This function is called by:
   452 ;;		Startup code after reset
   453 ;; This function uses a non-reentrant model
   454 ;;
   455                           
   456                           	psect	text0
   457   000E34                     __ptext0:
   458                           	callstack 0
   459   000E34                     _main:
   460                           	callstack 23
   461   000E34                     
   462                           ;src/main.c: 16:     Clock_Init(16000);
   463   000E34  0E3E               	movlw	62
   464   000E36  6E27               	movwf	(Clock_Init@s16Timeout+1)^0,c
   465   000E38  0E80               	movlw	128
   466   000E3A  6E26               	movwf	Clock_Init@s16Timeout^0,c
   467   000E3C  EC54  F004         	call	_Clock_Init	;wreg free
   468   000E40                     
   469                           ;src/main.c: 17:     UART_Init(9600);
   470   000E40  0E80               	movlw	128
   471   000E42  6E3C               	movwf	UART_Init@baudrate^0,c
   472   000E44  0E25               	movlw	37
   473   000E46  6E3D               	movwf	(UART_Init@baudrate+1)^0,c
   474   000E48  0E00               	movlw	0
   475   000E4A  6E3E               	movwf	(UART_Init@baudrate+2)^0,c
   476   000E4C  0E00               	movlw	0
   477   000E4E  6E3F               	movwf	(UART_Init@baudrate+3)^0,c
   478   000E50  EC6D  F007         	call	_UART_Init	;wreg free
   479   000E54                     
   480                           ;src/main.c: 18:     uint8_t data = 33;
   481   000E54  0E21               	movlw	33
   482   000E56  6E42               	movwf	main@data^0,c
   483   000E58                     l1462:
   484                           
   485                           ;src/main.c: 20:     {;src/main.c: 21:         if(data > 126){
   486   000E58  0E7E               	movlw	126
   487   000E5A  6442               	cpfsgt	main@data^0,c
   488   000E5C  EF32  F007         	goto	u831
   489   000E60  EF34  F007         	goto	u830
   490   000E64                     u831:
   491   000E64  EF38  F007         	goto	l1466
   492   000E68                     u830:
   493   000E68                     
   494                           ;src/main.c: 22:             data = 33;
   495   000E68  0E21               	movlw	33
   496   000E6A  6E42               	movwf	main@data^0,c
   497                           
   498                           ;src/main.c: 23:         }else UART_Tx(data++);
   499   000E6C  EF3C  F007         	goto	l1470
   500   000E70                     l1466:
   501   000E70  5042               	movf	main@data^0,w,c
   502   000E72  EC98  F007         	call	_UART_Tx
   503   000E76  2A42               	incf	main@data^0,f,c
   504   000E78                     l1470:
   505                           
   506                           ;src/main.c: 24:         _delay((unsigned long)((500)*(48000000/4000.0)));
   507   000E78  0E1F               	movlw	31
   508   000E7A  6E41               	movwf	(??_main+1)^0,c
   509   000E7C  0E71               	movlw	113
   510   000E7E  6E40               	movwf	??_main^0,c
   511   000E80  0E1E               	movlw	30
   512   000E82                     u847:
   513   000E82  2EE8               	decfsz	wreg,f,c
   514   000E84  D7FE               	bra	u847
   515   000E86  2E40               	decfsz	??_main^0,f,c
   516   000E88  D7FC               	bra	u847
   517   000E8A  2E41               	decfsz	(??_main+1)^0,f,c
   518   000E8C  D7FA               	bra	u847
   519   000E8E  D000               	nop2	
   520   000E90  EF2C  F007         	goto	l1462
   521   000E94  EF00  F000         	goto	start
   522   000E98                     __end_of_main:
   523                           	callstack 0
   524                           
   525 ;; *************** function _UART_Init *****************
   526 ;; Defined at:
   527 ;;		line 20 in file "src/librerias/UART.c"
   528 ;; Parameters:    Size  Location     Type
   529 ;;  baudrate        4   22[COMRAM] unsigned long 
   530 ;; Auto vars:     Size  Location     Type
   531 ;;		None
   532 ;; Return value:  Size  Location     Type
   533 ;;                  1    wreg      void 
   534 ;; Registers used:
   535 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   536 ;; Tracked objects:
   537 ;;		On entry : 0/0
   538 ;;		On exit  : 0/0
   539 ;;		Unchanged: 0/0
   540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   541 ;;      Params:         4       0       0       0       0       0       0       0       0
   542 ;;      Locals:         0       0       0       0       0       0       0       0       0
   543 ;;      Temps:          0       0       0       0       0       0       0       0       0
   544 ;;      Totals:         4       0       0       0       0       0       0       0       0
   545 ;;Total ram usage:        4 bytes
   546 ;; Hardware stack levels used: 1
   547 ;; Hardware stack levels required when called: 7
   548 ;; This function calls:
   549 ;;		_UART_config_show
   550 ;;		_UART_select_baud
   551 ;; This function is called by:
   552 ;;		_main
   553 ;; This function uses a non-reentrant model
   554 ;;
   555                           
   556                           	psect	text1
   557   000EDA                     __ptext1:
   558                           	callstack 0
   559   000EDA                     _UART_Init:
   560                           	callstack 23
   561   000EDA                     
   562                           ;src/librerias/UART.c: 24:     UART_select_baud(baudrate);
   563   000EDA  C03C  F026         	movff	UART_Init@baudrate,UART_select_baud@baudrate
   564   000EDE  C03D  F027         	movff	UART_Init@baudrate+1,UART_select_baud@baudrate+1
   565   000EE2  C03E  F028         	movff	UART_Init@baudrate+2,UART_select_baud@baudrate+2
   566   000EE6  C03F  F029         	movff	UART_Init@baudrate+3,UART_select_baud@baudrate+3
   567   000EEA  EC5F  F005         	call	_UART_select_baud	;wreg free
   568   000EEE                     
   569                           ;src/librerias/UART.c: 32:     BAUDCON1 = 0x4A;
   570   000EEE  0E4A               	movlw	74
   571   000EF0  6EB8               	movwf	184,c	;volatile
   572   000EF2                     
   573                           ;src/librerias/UART.c: 34:     RCSTA1 = 0x90;
   574   000EF2  0E90               	movlw	144
   575   000EF4  6EAB               	movwf	171,c	;volatile
   576   000EF6                     
   577                           ;src/librerias/UART.c: 36:     TXSTA1 = 0x26;
   578   000EF6  0E26               	movlw	38
   579   000EF8  6EAC               	movwf	172,c	;volatile
   580   000EFA                     
   581                           ;src/librerias/UART.c: 38:     UART_config_show();
   582   000EFA  ECFF  F005         	call	_UART_config_show	;wreg free
   583   000EFE  0012               	return		;funcret
   584   000F00                     __end_of_UART_Init:
   585                           	callstack 0
   586                           
   587 ;; *************** function _UART_select_baud *****************
   588 ;; Defined at:
   589 ;;		line 41 in file "src/librerias/UART.c"
   590 ;; Parameters:    Size  Location     Type
   591 ;;  baudrate        4    0[COMRAM] unsigned long 
   592 ;; Auto vars:     Size  Location     Type
   593 ;;		None
   594 ;; Return value:  Size  Location     Type
   595 ;;                  1    wreg      void 
   596 ;; Registers used:
   597 ;;		wreg, status,2, status,0
   598 ;; Tracked objects:
   599 ;;		On entry : 0/0
   600 ;;		On exit  : 0/0
   601 ;;		Unchanged: 0/0
   602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   603 ;;      Params:         4       0       0       0       0       0       0       0       0
   604 ;;      Locals:         0       0       0       0       0       0       0       0       0
   605 ;;      Temps:          4       0       0       0       0       0       0       0       0
   606 ;;      Totals:         8       0       0       0       0       0       0       0       0
   607 ;;Total ram usage:        8 bytes
   608 ;; Hardware stack levels used: 1
   609 ;; This function calls:
   610 ;;		Nothing
   611 ;; This function is called by:
   612 ;;		_UART_Init
   613 ;; This function uses a non-reentrant model
   614 ;;
   615                           
   616                           	psect	text2
   617   000ABE                     __ptext2:
   618                           	callstack 0
   619   000ABE                     _UART_select_baud:
   620                           	callstack 29
   621   000ABE                     
   622                           ;src/librerias/UART.c: 42:     switch (baudrate){
   623   000ABE  EF91  F005         	goto	l1332
   624   000AC2                     l1314:
   625                           
   626                           ;src/librerias/UART.c: 44:             SPBRGH = 0x9C;
   627   000AC2  0E9C               	movlw	156
   628   000AC4  6EB0               	movwf	176,c	;volatile
   629                           
   630                           ;src/librerias/UART.c: 45:             SPBRG = 0x3F;
   631   000AC6  0E3F               	movlw	63
   632   000AC8  6EAF               	movwf	175,c	;volatile
   633                           
   634                           ;src/librerias/UART.c: 46:             break;
   635   000ACA  EFFE  F005         	goto	l101
   636   000ACE                     l1316:
   637                           
   638                           ;src/librerias/UART.c: 48:             SPBRGH = 0x27;
   639   000ACE  0E27               	movlw	39
   640   000AD0  6EB0               	movwf	176,c	;volatile
   641                           
   642                           ;src/librerias/UART.c: 49:             SPBRG = 0x0F;
   643   000AD2  0E0F               	movlw	15
   644   000AD4  6EAF               	movwf	175,c	;volatile
   645                           
   646                           ;src/librerias/UART.c: 50:             break;
   647   000AD6  EFFE  F005         	goto	l101
   648   000ADA                     l1318:
   649                           
   650                           ;src/librerias/UART.c: 52:             SPBRGH = 0x13;
   651   000ADA  0E13               	movlw	19
   652   000ADC  6EB0               	movwf	176,c	;volatile
   653                           
   654                           ;src/librerias/UART.c: 53:             SPBRG = 0x87;
   655   000ADE  0E87               	movlw	135
   656   000AE0  6EAF               	movwf	175,c	;volatile
   657                           
   658                           ;src/librerias/UART.c: 54:             break;
   659   000AE2  EFFE  F005         	goto	l101
   660   000AE6                     l1320:
   661                           
   662                           ;src/librerias/UART.c: 56:             SPBRGH = 0x04;
   663   000AE6  0E04               	movlw	4
   664   000AE8  6EB0               	movwf	176,c	;volatile
   665                           
   666                           ;src/librerias/UART.c: 57:             SPBRG = 0x7F;
   667   000AEA  0E7F               	movlw	127
   668   000AEC  6EAF               	movwf	175,c	;volatile
   669                           
   670                           ;src/librerias/UART.c: 58:             break;
   671   000AEE  EFFE  F005         	goto	l101
   672   000AF2                     l1322:
   673                           
   674                           ;src/librerias/UART.c: 60:             SPBRGH = 0x02;
   675   000AF2  0E02               	movlw	2
   676   000AF4  6EB0               	movwf	176,c	;volatile
   677                           
   678                           ;src/librerias/UART.c: 61:             SPBRG = 0x70;
   679   000AF6  0E70               	movlw	112
   680   000AF8  6EAF               	movwf	175,c	;volatile
   681                           
   682                           ;src/librerias/UART.c: 62:             break;
   683   000AFA  EFFE  F005         	goto	l101
   684   000AFE                     l1324:
   685                           
   686                           ;src/librerias/UART.c: 64:             SPBRGH = 0x00;
   687   000AFE  0E00               	movlw	0
   688   000B00  6EB0               	movwf	176,c	;volatile
   689                           
   690                           ;src/librerias/UART.c: 65:             SPBRG = 0xCF;
   691   000B02  0ECF               	movlw	207
   692   000B04  6EAF               	movwf	175,c	;volatile
   693                           
   694                           ;src/librerias/UART.c: 66:             break;
   695   000B06  EFFE  F005         	goto	l101
   696   000B0A                     l1326:
   697                           
   698                           ;src/librerias/UART.c: 68:             SPBRGH = 0x00;
   699   000B0A  0E00               	movlw	0
   700   000B0C  6EB0               	movwf	176,c	;volatile
   701                           
   702                           ;src/librerias/UART.c: 69:             SPBRG = 0x67;
   703   000B0E  0E67               	movlw	103
   704   000B10  6EAF               	movwf	175,c	;volatile
   705                           
   706                           ;src/librerias/UART.c: 70:             break;
   707   000B12  EFFE  F005         	goto	l101
   708   000B16                     l1328:
   709                           
   710                           ;src/librerias/UART.c: 72:             SPBRGH = 0x04;
   711   000B16  0E04               	movlw	4
   712   000B18  6EB0               	movwf	176,c	;volatile
   713                           
   714                           ;src/librerias/UART.c: 73:             SPBRG = 0xE1;
   715   000B1A  0EE1               	movlw	225
   716   000B1C  6EAF               	movwf	175,c	;volatile
   717                           
   718                           ;src/librerias/UART.c: 74:             break;
   719   000B1E  EFFE  F005         	goto	l101
   720   000B22                     l1332:
   721   000B22  C026  F02A         	movff	UART_select_baud@baudrate,??_UART_select_baud
   722   000B26  C027  F02B         	movff	UART_select_baud@baudrate+1,??_UART_select_baud+1
   723   000B2A  C028  F02C         	movff	UART_select_baud@baudrate+2,??_UART_select_baud+2
   724   000B2E  C029  F02D         	movff	UART_select_baud@baudrate+3,??_UART_select_baud+3
   725                           
   726                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 3 sub-sw
      +                          itches
   727                           ; Switch size 1, requested type "simple"
   728                           ; Number of cases is 1, Range of values is 0 to 0
   729                           ; switch strategies available:
   730                           ; Name         Instructions Cycles
   731                           ; simple_byte            4     3 (average)
   732                           ;	Chosen strategy is simple_byte
   733   000B32  502D               	movf	(??_UART_select_baud+3)^0,w,c
   734   000B34  0A00               	xorlw	0	; case 0
   735   000B36  B4D8               	btfsc	status,2,c
   736   000B38  EFF3  F005         	goto	l1516
   737   000B3C  EF8B  F005         	goto	l1328
   738   000B40                     l1512:
   739                           
   740                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 6 sub-sw
      +                          itches
   741                           ; Switch size 1, requested type "simple"
   742                           ; Number of cases is 6, Range of values is 1 to 225
   743                           ; switch strategies available:
   744                           ; Name         Instructions Cycles
   745                           ; simple_byte           19    10 (average)
   746                           ;	Chosen strategy is simple_byte
   747   000B40  502B               	movf	(??_UART_select_baud+1)^0,w,c
   748   000B42  0A01               	xorlw	1	; case 1
   749   000B44  B4D8               	btfsc	status,2,c
   750   000B46  EFBB  F005         	goto	l1518
   751   000B4A  0A05               	xorlw	5	; case 4
   752   000B4C  B4D8               	btfsc	status,2,c
   753   000B4E  EFC2  F005         	goto	l1520
   754   000B52  0A0D               	xorlw	13	; case 9
   755   000B54  B4D8               	btfsc	status,2,c
   756   000B56  EFC9  F005         	goto	l1522
   757   000B5A  0A21               	xorlw	33	; case 40
   758   000B5C  B4D8               	btfsc	status,2,c
   759   000B5E  EFD0  F005         	goto	l1524
   760   000B62  0A63               	xorlw	99	; case 75
   761   000B64  B4D8               	btfsc	status,2,c
   762   000B66  EFD7  F005         	goto	l1526
   763   000B6A  0AAA               	xorlw	170	; case 225
   764   000B6C  B4D8               	btfsc	status,2,c
   765   000B6E  EFDE  F005         	goto	l1528
   766   000B72  EF8B  F005         	goto	l1328
   767   000B76                     l1518:
   768                           
   769                           ; Switch size 1, requested type "simple"
   770                           ; Number of cases is 1, Range of values is 44 to 44
   771                           ; switch strategies available:
   772                           ; Name         Instructions Cycles
   773                           ; simple_byte            4     3 (average)
   774                           ;	Chosen strategy is simple_byte
   775   000B76  502A               	movf	??_UART_select_baud^0,w,c
   776   000B78  0A2C               	xorlw	44	; case 44
   777   000B7A  B4D8               	btfsc	status,2,c
   778   000B7C  EF61  F005         	goto	l1314
   779   000B80  EF8B  F005         	goto	l1328
   780   000B84                     l1520:
   781                           
   782                           ; Switch size 1, requested type "simple"
   783                           ; Number of cases is 1, Range of values is 176 to 176
   784                           ; switch strategies available:
   785                           ; Name         Instructions Cycles
   786                           ; simple_byte            4     3 (average)
   787                           ;	Chosen strategy is simple_byte
   788   000B84  502A               	movf	??_UART_select_baud^0,w,c
   789   000B86  0AB0               	xorlw	176	; case 176
   790   000B88  B4D8               	btfsc	status,2,c
   791   000B8A  EF67  F005         	goto	l1316
   792   000B8E  EF8B  F005         	goto	l1328
   793   000B92                     l1522:
   794                           
   795                           ; Switch size 1, requested type "simple"
   796                           ; Number of cases is 1, Range of values is 96 to 96
   797                           ; switch strategies available:
   798                           ; Name         Instructions Cycles
   799                           ; simple_byte            4     3 (average)
   800                           ;	Chosen strategy is simple_byte
   801   000B92  502A               	movf	??_UART_select_baud^0,w,c
   802   000B94  0A60               	xorlw	96	; case 96
   803   000B96  B4D8               	btfsc	status,2,c
   804   000B98  EF6D  F005         	goto	l1318
   805   000B9C  EF8B  F005         	goto	l1328
   806   000BA0                     l1524:
   807                           
   808                           ; Switch size 1, requested type "simple"
   809                           ; Number of cases is 1, Range of values is 177 to 177
   810                           ; switch strategies available:
   811                           ; Name         Instructions Cycles
   812                           ; simple_byte            4     3 (average)
   813                           ;	Chosen strategy is simple_byte
   814   000BA0  502A               	movf	??_UART_select_baud^0,w,c
   815   000BA2  0AB1               	xorlw	177	; case 177
   816   000BA4  B4D8               	btfsc	status,2,c
   817   000BA6  EF73  F005         	goto	l1320
   818   000BAA  EF8B  F005         	goto	l1328
   819   000BAE                     l1526:
   820                           
   821                           ; Switch size 1, requested type "simple"
   822                           ; Number of cases is 1, Range of values is 0 to 0
   823                           ; switch strategies available:
   824                           ; Name         Instructions Cycles
   825                           ; simple_byte            4     3 (average)
   826                           ;	Chosen strategy is simple_byte
   827   000BAE  502A               	movf	??_UART_select_baud^0,w,c
   828   000BB0  0A00               	xorlw	0	; case 0
   829   000BB2  B4D8               	btfsc	status,2,c
   830   000BB4  EF79  F005         	goto	l1322
   831   000BB8  EF8B  F005         	goto	l1328
   832   000BBC                     l1528:
   833                           
   834                           ; Switch size 1, requested type "simple"
   835                           ; Number of cases is 1, Range of values is 0 to 0
   836                           ; switch strategies available:
   837                           ; Name         Instructions Cycles
   838                           ; simple_byte            4     3 (average)
   839                           ;	Chosen strategy is simple_byte
   840   000BBC  502A               	movf	??_UART_select_baud^0,w,c
   841   000BBE  0A00               	xorlw	0	; case 0
   842   000BC0  B4D8               	btfsc	status,2,c
   843   000BC2  EF7F  F005         	goto	l1324
   844   000BC6  EF8B  F005         	goto	l1328
   845   000BCA                     l1514:
   846                           
   847                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   848                           ; Switch size 1, requested type "simple"
   849                           ; Number of cases is 1, Range of values is 194 to 194
   850                           ; switch strategies available:
   851                           ; Name         Instructions Cycles
   852                           ; simple_byte            4     3 (average)
   853                           ;	Chosen strategy is simple_byte
   854   000BCA  502B               	movf	(??_UART_select_baud+1)^0,w,c
   855   000BCC  0AC2               	xorlw	194	; case 194
   856   000BCE  B4D8               	btfsc	status,2,c
   857   000BD0  EFEC  F005         	goto	l1530
   858   000BD4  EF8B  F005         	goto	l1328
   859   000BD8                     l1530:
   860                           
   861                           ; Switch size 1, requested type "simple"
   862                           ; Number of cases is 1, Range of values is 0 to 0
   863                           ; switch strategies available:
   864                           ; Name         Instructions Cycles
   865                           ; simple_byte            4     3 (average)
   866                           ;	Chosen strategy is simple_byte
   867   000BD8  502A               	movf	??_UART_select_baud^0,w,c
   868   000BDA  0A00               	xorlw	0	; case 0
   869   000BDC  B4D8               	btfsc	status,2,c
   870   000BDE  EF85  F005         	goto	l1326
   871   000BE2  EF8B  F005         	goto	l1328
   872   000BE6                     l1516:
   873                           
   874                           ; Switch size 1, requested type "simple"
   875                           ; Number of cases is 2, Range of values is 0 to 1
   876                           ; switch strategies available:
   877                           ; Name         Instructions Cycles
   878                           ; simple_byte            7     4 (average)
   879                           ;	Chosen strategy is simple_byte
   880   000BE6  502C               	movf	(??_UART_select_baud+2)^0,w,c
   881   000BE8  0A00               	xorlw	0	; case 0
   882   000BEA  B4D8               	btfsc	status,2,c
   883   000BEC  EFA0  F005         	goto	l1512
   884   000BF0  0A01               	xorlw	1	; case 1
   885   000BF2  B4D8               	btfsc	status,2,c
   886   000BF4  EFE5  F005         	goto	l1514
   887   000BF8  EF8B  F005         	goto	l1328
   888   000BFC                     l101:
   889   000BFC  0012               	return		;funcret
   890   000BFE                     __end_of_UART_select_baud:
   891                           	callstack 0
   892                           
   893 ;; *************** function _UART_config_show *****************
   894 ;; Defined at:
   895 ;;		line 5 in file "src/librerias/UART.c"
   896 ;; Parameters:    Size  Location     Type
   897 ;;		None
   898 ;; Auto vars:     Size  Location     Type
   899 ;;		None
   900 ;; Return value:  Size  Location     Type
   901 ;;                  1    wreg      void 
   902 ;; Registers used:
   903 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   904 ;; Tracked objects:
   905 ;;		On entry : 0/0
   906 ;;		On exit  : 0/0
   907 ;;		Unchanged: 0/0
   908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   909 ;;      Params:         0       0       0       0       0       0       0       0       0
   910 ;;      Locals:         0       0       0       0       0       0       0       0       0
   911 ;;      Temps:          0       0       0       0       0       0       0       0       0
   912 ;;      Totals:         0       0       0       0       0       0       0       0       0
   913 ;;Total ram usage:        0 bytes
   914 ;; Hardware stack levels used: 1
   915 ;; Hardware stack levels required when called: 6
   916 ;; This function calls:
   917 ;;		_printf
   918 ;; This function is called by:
   919 ;;		_UART_Init
   920 ;; This function uses a non-reentrant model
   921 ;;
   922                           
   923                           	psect	text3
   924   000BFE                     __ptext3:
   925                           	callstack 0
   926   000BFE                     _UART_config_show:
   927                           	callstack 23
   928   000BFE                     
   929                           ;src/librerias/UART.c: 6:     printf("Modo: ");
   930   000BFE  0EA0               	movlw	low STR_1
   931   000C00  6E3A               	movwf	printf@fmt^0,c
   932   000C02  EC80  F007         	call	_printf	;wreg free
   933   000C06                     
   934                           ;src/librerias/UART.c: 7:     (SYNC1) ? printf("Sincrono "):printf("Asincrono ");
   935   000C06  A8AC               	btfss	4012,4,c	;volatile
   936   000C08  EF08  F006         	goto	u511
   937   000C0C  EF0A  F006         	goto	u510
   938   000C10                     u511:
   939   000C10  EF10  F006         	goto	l1280
   940   000C14                     u510:
   941   000C14  0E7C               	movlw	low STR_2
   942   000C16  6E3A               	movwf	printf@fmt^0,c
   943   000C18  EC80  F007         	call	_printf	;wreg free
   944   000C1C  EF14  F006         	goto	l1282
   945   000C20                     l1280:
   946   000C20  0E67               	movlw	low STR_3
   947   000C22  6E3A               	movwf	printf@fmt^0,c
   948   000C24  EC80  F007         	call	_printf	;wreg free
   949   000C28                     l1282:
   950                           
   951                           ;src/librerias/UART.c: 8:     (BRGH1) ? printf("alta velocidad \r\n"):printf("baja veloc
      +                          idad \r\n");
   952   000C28  A4AC               	btfss	4012,2,c	;volatile
   953   000C2A  EF19  F006         	goto	u521
   954   000C2E  EF1B  F006         	goto	u520
   955   000C32                     u521:
   956   000C32  EF21  F006         	goto	l1286
   957   000C36                     u520:
   958   000C36  0E13               	movlw	low STR_4
   959   000C38  6E3A               	movwf	printf@fmt^0,c
   960   000C3A  EC80  F007         	call	_printf	;wreg free
   961   000C3E  EF25  F006         	goto	l68
   962   000C42                     l1286:
   963   000C42  0E01               	movlw	low STR_5
   964   000C44  6E3A               	movwf	printf@fmt^0,c
   965   000C46  EC80  F007         	call	_printf	;wreg free
   966   000C4A                     l68:
   967                           
   968                           ;src/librerias/UART.c: 9:     printf("Baudrate: ");
   969   000C4A  0E51               	movlw	low STR_6
   970   000C4C  6E3A               	movwf	printf@fmt^0,c
   971   000C4E  EC80  F007         	call	_printf	;wreg free
   972   000C52                     
   973                           ;src/librerias/UART.c: 10:     (BRG161) ? printf("16 bits "):printf("8 bits ");
   974   000C52  A6B8               	btfss	4024,3,c	;volatile
   975   000C54  EF2E  F006         	goto	u531
   976   000C58  EF30  F006         	goto	u530
   977   000C5C                     u531:
   978   000C5C  EF36  F006         	goto	l1292
   979   000C60                     u530:
   980   000C60  0E8F               	movlw	low STR_7
   981   000C62  6E3A               	movwf	printf@fmt^0,c
   982   000C64  EC80  F007         	call	_printf	;wreg free
   983   000C68  EF3A  F006         	goto	l72
   984   000C6C                     l1292:
   985   000C6C  0E98               	movlw	low STR_8
   986   000C6E  6E3A               	movwf	printf@fmt^0,c
   987   000C70  EC80  F007         	call	_printf	;wreg free
   988   000C74                     l72:
   989                           
   990                           ;src/librerias/UART.c: 11:     printf("x baudios \r\n");
   991   000C74  0E44               	movlw	low STR_9
   992   000C76  6E3A               	movwf	printf@fmt^0,c
   993   000C78  EC80  F007         	call	_printf	;wreg free
   994                           
   995                           ;src/librerias/UART.c: 12:     printf("Puerto: ");
   996   000C7C  0E86               	movlw	low STR_10
   997   000C7E  6E3A               	movwf	printf@fmt^0,c
   998   000C80  EC80  F007         	call	_printf	;wreg free
   999   000C84                     
  1000                           ;src/librerias/UART.c: 13:     (SPEN) ? printf("Habilitado \r\n"):printf("Deshabilitado 
      +                          \r\n");
  1001   000C84  AEAB               	btfss	4011,7,c	;volatile
  1002   000C86  EF47  F006         	goto	u541
  1003   000C8A  EF49  F006         	goto	u540
  1004   000C8E                     u541:
  1005   000C8E  EF4F  F006         	goto	l1298
  1006   000C92                     u540:
  1007   000C92  0E36               	movlw	low STR_11
  1008   000C94  6E3A               	movwf	printf@fmt^0,c
  1009   000C96  EC80  F007         	call	_printf	;wreg free
  1010   000C9A  EF53  F006         	goto	l76
  1011   000C9E                     l1298:
  1012   000C9E  0E25               	movlw	low STR_12
  1013   000CA0  6E3A               	movwf	printf@fmt^0,c
  1014   000CA2  EC80  F007         	call	_printf	;wreg free
  1015   000CA6                     l76:
  1016                           
  1017                           ;src/librerias/UART.c: 14:     printf("Transor: ");
  1018   000CA6  0E72               	movlw	low STR_13
  1019   000CA8  6E3A               	movwf	printf@fmt^0,c
  1020   000CAA  EC80  F007         	call	_printf	;wreg free
  1021   000CAE                     
  1022                           ;src/librerias/UART.c: 15:     (TXEN1) ? printf("Habilitado \r\n"):printf("Deshabilitado
      +                           \r\n");
  1023   000CAE  AAAC               	btfss	4012,5,c	;volatile
  1024   000CB0  EF5C  F006         	goto	u551
  1025   000CB4  EF5E  F006         	goto	u550
  1026   000CB8                     u551:
  1027   000CB8  EF64  F006         	goto	l1304
  1028   000CBC                     u550:
  1029   000CBC  0E36               	movlw	low STR_11
  1030   000CBE  6E3A               	movwf	printf@fmt^0,c
  1031   000CC0  EC80  F007         	call	_printf	;wreg free
  1032   000CC4  EF68  F006         	goto	l80
  1033   000CC8                     l1304:
  1034   000CC8  0E25               	movlw	low STR_12
  1035   000CCA  6E3A               	movwf	printf@fmt^0,c
  1036   000CCC  EC80  F007         	call	_printf	;wreg free
  1037   000CD0                     l80:
  1038                           
  1039                           ;src/librerias/UART.c: 16:     printf("Receptor: ");
  1040   000CD0  0E5C               	movlw	low STR_16
  1041   000CD2  6E3A               	movwf	printf@fmt^0,c
  1042   000CD4  EC80  F007         	call	_printf	;wreg free
  1043   000CD8                     
  1044                           ;src/librerias/UART.c: 17:     (CREN) ? printf("Habilitado \r\n"):printf("Deshabilitado 
      +                          \r\n");
  1045   000CD8  A8AB               	btfss	4011,4,c	;volatile
  1046   000CDA  EF71  F006         	goto	u561
  1047   000CDE  EF73  F006         	goto	u560
  1048   000CE2                     u561:
  1049   000CE2  EF79  F006         	goto	l1310
  1050   000CE6                     u560:
  1051   000CE6  0E36               	movlw	low STR_11
  1052   000CE8  6E3A               	movwf	printf@fmt^0,c
  1053   000CEA  EC80  F007         	call	_printf	;wreg free
  1054   000CEE  EF7D  F006         	goto	l85
  1055   000CF2                     l1310:
  1056   000CF2  0E25               	movlw	low STR_12
  1057   000CF4  6E3A               	movwf	printf@fmt^0,c
  1058   000CF6  EC80  F007         	call	_printf	;wreg free
  1059   000CFA                     l85:
  1060   000CFA  0012               	return		;funcret
  1061   000CFC                     __end_of_UART_config_show:
  1062                           	callstack 0
  1063                           
  1064 ;; *************** function _printf *****************
  1065 ;; Defined at:
  1066 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\printf.c"
  1067 ;; Parameters:    Size  Location     Type
  1068 ;;  fmt             1   20[COMRAM] PTR const unsigned char 
  1069 ;;		 -> STR_18(17), STR_17(14), STR_16(11), STR_15(17), 
  1070 ;;		 -> STR_14(14), STR_13(10), STR_12(17), STR_11(14), 
  1071 ;;		 -> STR_10(9), STR_9(13), STR_8(8), STR_7(9), 
  1072 ;;		 -> STR_6(11), STR_5(18), STR_4(18), STR_3(11), 
  1073 ;;		 -> STR_2(10), STR_1(7), 
  1074 ;; Auto vars:     Size  Location     Type
  1075 ;;  ret             2    0        int 
  1076 ;;  ap              1   21[COMRAM] PTR void [1]
  1077 ;;		 -> ?_printf(2), 
  1078 ;; Return value:  Size  Location     Type
  1079 ;;                  2   20[COMRAM] int 
  1080 ;; Registers used:
  1081 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1082 ;; Tracked objects:
  1083 ;;		On entry : 0/0
  1084 ;;		On exit  : 0/0
  1085 ;;		Unchanged: 0/0
  1086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1087 ;;      Params:         1       0       0       0       0       0       0       0       0
  1088 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1089 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1090 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1091 ;;Total ram usage:        2 bytes
  1092 ;; Hardware stack levels used: 1
  1093 ;; Hardware stack levels required when called: 5
  1094 ;; This function calls:
  1095 ;;		_vfprintf
  1096 ;; This function is called by:
  1097 ;;		_UART_config_show
  1098 ;; This function uses a non-reentrant model
  1099 ;;
  1100                           
  1101                           	psect	text4
  1102   000F00                     __ptext4:
  1103                           	callstack 0
  1104   000F00                     _printf:
  1105                           	callstack 23
  1106   000F00  0E3B               	movlw	low (?_printf+1)
  1107   000F02  6E3B               	movwf	printf@ap^0,c
  1108   000F04  0E00               	movlw	0
  1109   000F06  6E35               	movwf	vfprintf@fp^0,c
  1110   000F08  0E00               	movlw	0
  1111   000F0A  6E36               	movwf	(vfprintf@fp+1)^0,c
  1112   000F0C  C03A  F037         	movff	printf@fmt,vfprintf@fmt
  1113   000F10  0E3B               	movlw	low printf@ap
  1114   000F12  6E38               	movwf	vfprintf@ap^0,c
  1115   000F14  EC4C  F007         	call	_vfprintf	;wreg free
  1116   000F18  0012               	return		;funcret
  1117   000F1A                     __end_of_printf:
  1118                           	callstack 0
  1119                           
  1120 ;; *************** function _vfprintf *****************
  1121 ;; Defined at:
  1122 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  1123 ;; Parameters:    Size  Location     Type
  1124 ;;  fp              2   15[COMRAM] PTR struct _IO_FILE
  1125 ;;		 -> NULL(0), 
  1126 ;;  fmt             1   17[COMRAM] PTR const unsigned char 
  1127 ;;		 -> STR_18(17), STR_17(14), STR_16(11), STR_15(17), 
  1128 ;;		 -> STR_14(14), STR_13(10), STR_12(17), STR_11(14), 
  1129 ;;		 -> STR_10(9), STR_9(13), STR_8(8), STR_7(9), 
  1130 ;;		 -> STR_6(11), STR_5(18), STR_4(18), STR_3(11), 
  1131 ;;		 -> STR_2(10), STR_1(7), 
  1132 ;;  ap              1   18[COMRAM] PTR PTR void 
  1133 ;;		 -> printf@ap(1), 
  1134 ;; Auto vars:     Size  Location     Type
  1135 ;;  cfmt            1   19[COMRAM] PTR unsigned char 
  1136 ;;		 -> STR_18(17), STR_17(14), STR_16(11), STR_15(17), 
  1137 ;;		 -> STR_14(14), STR_13(10), STR_12(17), STR_11(14), 
  1138 ;;		 -> STR_10(9), STR_9(13), STR_8(8), STR_7(9), 
  1139 ;;		 -> STR_6(11), STR_5(18), STR_4(18), STR_3(11), 
  1140 ;;		 -> STR_2(10), STR_1(7), 
  1141 ;; Return value:  Size  Location     Type
  1142 ;;                  2   15[COMRAM] int 
  1143 ;; Registers used:
  1144 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1145 ;; Tracked objects:
  1146 ;;		On entry : 0/0
  1147 ;;		On exit  : 0/0
  1148 ;;		Unchanged: 0/0
  1149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1150 ;;      Params:         4       0       0       0       0       0       0       0       0
  1151 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1152 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1153 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1154 ;;Total ram usage:        5 bytes
  1155 ;; Hardware stack levels used: 1
  1156 ;; Hardware stack levels required when called: 4
  1157 ;; This function calls:
  1158 ;;		_vfpfcnvrt
  1159 ;; This function is called by:
  1160 ;;		_printf
  1161 ;; This function uses a non-reentrant model
  1162 ;;
  1163                           
  1164                           	psect	text5
  1165   000E98                     __ptext5:
  1166                           	callstack 0
  1167   000E98                     _vfprintf:
  1168                           	callstack 23
  1169   000E98                     
  1170                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  1171   000E98  C037  F039         	movff	vfprintf@fmt,vfprintf@cfmt
  1172                           
  1173                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1174   000E9C  EF5A  F007         	goto	l1262
  1175   000EA0                     l1260:
  1176                           
  1177                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1178   000EA0  C035  F031         	movff	vfprintf@fp,vfpfcnvrt@fp
  1179   000EA4  C036  F032         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1180   000EA8  0E39               	movlw	low vfprintf@cfmt
  1181   000EAA  6E33               	movwf	vfpfcnvrt@fmt^0,c
  1182   000EAC  C038  F034         	movff	vfprintf@ap,vfpfcnvrt@ap
  1183   000EB0  ECE3  F006         	call	_vfpfcnvrt	;wreg free
  1184   000EB4                     l1262:
  1185                           
  1186                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1187   000EB4  C039  FFF6         	movff	vfprintf@cfmt,tblptrl
  1188   000EB8                     	if	1	;There is more than 1 active tblptr byte
  1189   000EB8  0E08               	movlw	high __smallconst
  1190   000EBA  6EF7               	movwf	tblptrh,c
  1191   000EBC                     	endif
  1192   000EBC                     	if	0	;tblptru may be non-zero
  1193   000EBC                     	endif
  1194   000EBC                     	if	0	;tblptru may be non-zero
  1195   000EBC                     	endif
  1196   000EBC  0008               	tblrd		*
  1197   000EBE  50F5               	movf	tablat,w,c
  1198   000EC0  0900               	iorlw	0
  1199   000EC2  A4D8               	btfss	status,2,c
  1200   000EC4  EF66  F007         	goto	u501
  1201   000EC8  EF68  F007         	goto	u500
  1202   000ECC                     u501:
  1203   000ECC  EF50  F007         	goto	l1260
  1204   000ED0                     u500:
  1205   000ED0                     
  1206                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  1207   000ED0  0E00               	movlw	0
  1208   000ED2  6E36               	movwf	(?_vfprintf+1)^0,c
  1209   000ED4  0E00               	movlw	0
  1210   000ED6  6E35               	movwf	?_vfprintf^0,c
  1211   000ED8  0012               	return		;funcret
  1212   000EDA                     __end_of_vfprintf:
  1213                           	callstack 0
  1214                           
  1215 ;; *************** function _vfpfcnvrt *****************
  1216 ;; Defined at:
  1217 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  1218 ;; Parameters:    Size  Location     Type
  1219 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  1220 ;;		 -> NULL(0), 
  1221 ;;  fmt             1   13[COMRAM] PTR PTR unsigned char 
  1222 ;;		 -> vfprintf@cfmt(1), 
  1223 ;;  ap              1   14[COMRAM] PTR PTR void 
  1224 ;;		 -> printf@ap(1), 
  1225 ;; Auto vars:     Size  Location     Type
  1226 ;;  cp              3    0        PTR unsigned char 
  1227 ;;  done            1    0        _Bool 
  1228 ;;  c               1    0        unsigned char 
  1229 ;; Return value:  Size  Location     Type
  1230 ;;                  1    wreg      void 
  1231 ;; Registers used:
  1232 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1233 ;; Tracked objects:
  1234 ;;		On entry : 0/0
  1235 ;;		On exit  : 0/0
  1236 ;;		Unchanged: 0/0
  1237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1238 ;;      Params:         4       0       0       0       0       0       0       0       0
  1239 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1240 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1241 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1242 ;;Total ram usage:        4 bytes
  1243 ;; Hardware stack levels used: 1
  1244 ;; Hardware stack levels required when called: 3
  1245 ;; This function calls:
  1246 ;;		_fputc
  1247 ;; This function is called by:
  1248 ;;		_vfprintf
  1249 ;; This function uses a non-reentrant model
  1250 ;;
  1251                           
  1252                           	psect	text6
  1253   000DC6                     __ptext6:
  1254                           	callstack 0
  1255   000DC6                     _vfpfcnvrt:
  1256                           	callstack 23
  1257   000DC6                     
  1258                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  1259   000DC6  5033               	movf	vfpfcnvrt@fmt^0,w,c
  1260   000DC8  6ED9               	movwf	fsr2l,c
  1261   000DCA  6ADA               	clrf	fsr2h,c
  1262   000DCC  CFDF FFF6          	movff	indf2,tblptrl
  1263   000DD0                     	if	1	;There is more than 1 active tblptr byte
  1264   000DD0  0E08               	movlw	high __smallconst
  1265   000DD2  6EF7               	movwf	tblptrh,c
  1266   000DD4                     	endif
  1267   000DD4                     	if	0	;tblptru may be non-zero
  1268   000DD4                     	endif
  1269   000DD4                     	if	0	;tblptru may be non-zero
  1270   000DD4                     	endif
  1271   000DD4  0008               	tblrd		*
  1272   000DD6  50F5               	movf	tablat,w,c
  1273   000DD8  0A25               	xorlw	37
  1274   000DDA  A4D8               	btfss	status,2,c
  1275   000DDC  EFF2  F006         	goto	u491
  1276   000DE0  EFF4  F006         	goto	u490
  1277   000DE4                     u491:
  1278   000DE4  EF06  F007         	goto	l1252
  1279   000DE8                     u490:
  1280   000DE8                     
  1281                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  1282   000DE8  5033               	movf	vfpfcnvrt@fmt^0,w,c
  1283   000DEA  6ED9               	movwf	fsr2l,c
  1284   000DEC  6ADA               	clrf	fsr2h,c
  1285   000DEE  2ADF               	incf	indf2,f,c
  1286   000DF0                     
  1287                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  1288   000DF0  0E00               	movlw	0
  1289   000DF2  6E22               	movwf	(_width+1)^0,c
  1290   000DF4  0E00               	movlw	0
  1291   000DF6  6E21               	movwf	_width^0,c
  1292   000DF8  C021  F025         	movff	_width,_flags
  1293   000DFC                     
  1294                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  1295   000DFC  6823               	setf	_prec^0,c
  1296   000DFE  6824               	setf	(_prec+1)^0,c
  1297   000E00                     l1248:
  1298                           
  1299                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  1300   000E00  5033               	movf	vfpfcnvrt@fmt^0,w,c
  1301   000E02  6ED9               	movwf	fsr2l,c
  1302   000E04  6ADA               	clrf	fsr2h,c
  1303   000E06  2ADF               	incf	indf2,f,c
  1304   000E08  EF19  F007         	goto	l866
  1305   000E0C                     l1252:
  1306                           
  1307                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  1308   000E0C  5033               	movf	vfpfcnvrt@fmt^0,w,c
  1309   000E0E  6ED9               	movwf	fsr2l,c
  1310   000E10  6ADA               	clrf	fsr2h,c
  1311   000E12  CFDF FFF6          	movff	indf2,tblptrl
  1312   000E16                     	if	1	;There is more than 1 active tblptr byte
  1313   000E16  0E08               	movlw	high __smallconst
  1314   000E18  6EF7               	movwf	tblptrh,c
  1315   000E1A                     	endif
  1316   000E1A                     	if	0	;tblptru may be non-zero
  1317   000E1A                     	endif
  1318   000E1A                     	if	0	;tblptru may be non-zero
  1319   000E1A                     	endif
  1320   000E1A  0008               	tblrd		*
  1321   000E1C  50F5               	movf	tablat,w,c
  1322   000E1E  6E28               	movwf	fputc@c^0,c
  1323   000E20  6A29               	clrf	(fputc@c+1)^0,c
  1324   000E22  C031  F02A         	movff	vfpfcnvrt@fp,fputc@fp
  1325   000E26  C032  F02B         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1326   000E2A  EC7E  F006         	call	_fputc	;wreg free
  1327   000E2E  EF00  F007         	goto	l1248
  1328   000E32                     l866:
  1329   000E32  0012               	return		;funcret
  1330   000E34                     __end_of_vfpfcnvrt:
  1331                           	callstack 0
  1332                           
  1333 ;; *************** function _fputc *****************
  1334 ;; Defined at:
  1335 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_fputc.c"
  1336 ;; Parameters:    Size  Location     Type
  1337 ;;  c               2    2[COMRAM] int 
  1338 ;;  fp              2    4[COMRAM] PTR struct _IO_FILE
  1339 ;;		 -> NULL(0), 
  1340 ;; Auto vars:     Size  Location     Type
  1341 ;;		None
  1342 ;; Return value:  Size  Location     Type
  1343 ;;                  2    2[COMRAM] int 
  1344 ;; Registers used:
  1345 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1346 ;; Tracked objects:
  1347 ;;		On entry : 0/0
  1348 ;;		On exit  : 0/0
  1349 ;;		Unchanged: 0/0
  1350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1351 ;;      Params:         4       0       0       0       0       0       0       0       0
  1352 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1353 ;;      Temps:          5       0       0       0       0       0       0       0       0
  1354 ;;      Totals:         9       0       0       0       0       0       0       0       0
  1355 ;;Total ram usage:        9 bytes
  1356 ;; Hardware stack levels used: 1
  1357 ;; Hardware stack levels required when called: 2
  1358 ;; This function calls:
  1359 ;;		_putch
  1360 ;; This function is called by:
  1361 ;;		_vfpfcnvrt
  1362 ;; This function uses a non-reentrant model
  1363 ;;
  1364                           
  1365                           	psect	text7
  1366   000CFC                     __ptext7:
  1367                           	callstack 0
  1368   000CFC                     _fputc:
  1369                           	callstack 23
  1370   000CFC  502A               	movf	fputc@fp^0,w,c
  1371   000CFE  102B               	iorwf	(fputc@fp+1)^0,w,c
  1372   000D00  B4D8               	btfsc	status,2,c
  1373   000D02  EF85  F006         	goto	u451
  1374   000D06  EF87  F006         	goto	u450
  1375   000D0A                     u451:
  1376   000D0A  EF90  F006         	goto	l1230
  1377   000D0E                     u450:
  1378   000D0E  502A               	movf	fputc@fp^0,w,c
  1379   000D10  102B               	iorwf	(fputc@fp+1)^0,w,c
  1380   000D12  A4D8               	btfss	status,2,c
  1381   000D14  EF8E  F006         	goto	u461
  1382   000D18  EF90  F006         	goto	u460
  1383   000D1C                     u461:
  1384   000D1C  EF95  F006         	goto	l1232
  1385   000D20                     u460:
  1386   000D20                     l1230:
  1387   000D20  5028               	movf	fputc@c^0,w,c
  1388   000D22  ECA3  F007         	call	_putch
  1389   000D26  EFE2  F006         	goto	l884
  1390   000D2A                     l1232:
  1391   000D2A  EE20 F00A          	lfsr	2,10
  1392   000D2E  502A               	movf	fputc@fp^0,w,c
  1393   000D30  26D9               	addwf	fsr2l,f,c
  1394   000D32  502B               	movf	(fputc@fp+1)^0,w,c
  1395   000D34  22DA               	addwfc	fsr2h,f,c
  1396   000D36  50DE               	movf	postinc2,w,c
  1397   000D38  10DE               	iorwf	postinc2,w,c
  1398   000D3A  B4D8               	btfsc	status,2,c
  1399   000D3C  EFA2  F006         	goto	u471
  1400   000D40  EFA4  F006         	goto	u470
  1401   000D44                     u471:
  1402   000D44  EFBF  F006         	goto	l1236
  1403   000D48                     u470:
  1404   000D48  EE20 F00A          	lfsr	2,10
  1405   000D4C  502A               	movf	fputc@fp^0,w,c
  1406   000D4E  26D9               	addwf	fsr2l,f,c
  1407   000D50  502B               	movf	(fputc@fp+1)^0,w,c
  1408   000D52  22DA               	addwfc	fsr2h,f,c
  1409   000D54  EE10 F003          	lfsr	1,3
  1410   000D58  502A               	movf	fputc@fp^0,w,c
  1411   000D5A  26E1               	addwf	fsr1l,f,c
  1412   000D5C  502B               	movf	(fputc@fp+1)^0,w,c
  1413   000D5E  22E2               	addwfc	fsr1h,f,c
  1414   000D60  50DE               	movf	postinc2,w,c
  1415   000D62  5CE6               	subwf	postinc1,w,c
  1416   000D64  50E6               	movf	postinc1,w,c
  1417   000D66  0A80               	xorlw	128
  1418   000D68  6E30               	movwf	(??_fputc+4)^0,c
  1419   000D6A  50DE               	movf	postinc2,w,c
  1420   000D6C  0A80               	xorlw	128
  1421   000D6E  5830               	subwfb	(??_fputc+4)^0,w,c
  1422   000D70  B0D8               	btfsc	status,0,c
  1423   000D72  EFBD  F006         	goto	u481
  1424   000D76  EFBF  F006         	goto	u480
  1425   000D7A                     u481:
  1426   000D7A  EFE2  F006         	goto	l884
  1427   000D7E                     u480:
  1428   000D7E                     l1236:
  1429   000D7E  EE20 F003          	lfsr	2,3
  1430   000D82  502A               	movf	fputc@fp^0,w,c
  1431   000D84  26D9               	addwf	fsr2l,f,c
  1432   000D86  502B               	movf	(fputc@fp+1)^0,w,c
  1433   000D88  22DA               	addwfc	fsr2h,f,c
  1434   000D8A  CFDE F02C          	movff	postinc2,??_fputc
  1435   000D8E  CFDD F02D          	movff	postdec2,??_fputc+1
  1436   000D92  C02A  FFD9         	movff	fputc@fp,fsr2l
  1437   000D96  C02B  FFDA         	movff	fputc@fp+1,fsr2h
  1438   000D9A  CFDE F02E          	movff	postinc2,??_fputc+2
  1439   000D9E  CFDD F02F          	movff	postdec2,??_fputc+3
  1440   000DA2  502C               	movf	??_fputc^0,w,c
  1441   000DA4  242E               	addwf	(??_fputc+2)^0,w,c
  1442   000DA6  6ED9               	movwf	fsr2l,c
  1443   000DA8  502D               	movf	(??_fputc+1)^0,w,c
  1444   000DAA  202F               	addwfc	(??_fputc+3)^0,w,c
  1445   000DAC  6EDA               	movwf	fsr2h,c
  1446   000DAE  C028  FFDF         	movff	fputc@c,indf2
  1447   000DB2  EE20 F003          	lfsr	2,3
  1448   000DB6  502A               	movf	fputc@fp^0,w,c
  1449   000DB8  26D9               	addwf	fsr2l,f,c
  1450   000DBA  502B               	movf	(fputc@fp+1)^0,w,c
  1451   000DBC  22DA               	addwfc	fsr2h,f,c
  1452   000DBE  2ADE               	incf	postinc2,f,c
  1453   000DC0  0E00               	movlw	0
  1454   000DC2  22DD               	addwfc	postdec2,f,c
  1455   000DC4                     l884:
  1456   000DC4  0012               	return		;funcret
  1457   000DC6                     __end_of_fputc:
  1458                           	callstack 0
  1459                           
  1460 ;; *************** function _putch *****************
  1461 ;; Defined at:
  1462 ;;		line 83 in file "src/librerias/UART.c"
  1463 ;; Parameters:    Size  Location     Type
  1464 ;;  data            1    wreg     unsigned char 
  1465 ;; Auto vars:     Size  Location     Type
  1466 ;;  data            1    1[COMRAM] unsigned char 
  1467 ;; Return value:  Size  Location     Type
  1468 ;;                  1    wreg      void 
  1469 ;; Registers used:
  1470 ;;		wreg, status,2, cstack
  1471 ;; Tracked objects:
  1472 ;;		On entry : 0/0
  1473 ;;		On exit  : 0/0
  1474 ;;		Unchanged: 0/0
  1475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1476 ;;      Params:         0       0       0       0       0       0       0       0       0
  1477 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1478 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1479 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1480 ;;Total ram usage:        1 bytes
  1481 ;; Hardware stack levels used: 1
  1482 ;; Hardware stack levels required when called: 1
  1483 ;; This function calls:
  1484 ;;		_UART_Tx
  1485 ;; This function is called by:
  1486 ;;		_fputc
  1487 ;; This function uses a non-reentrant model
  1488 ;;
  1489                           
  1490                           	psect	text8
  1491   000F46                     __ptext8:
  1492                           	callstack 0
  1493   000F46                     _putch:
  1494                           	callstack 23
  1495                           
  1496                           ;incstack = 0
  1497                           ;putch@data stored from wreg
  1498   000F46  6E27               	movwf	putch@data^0,c
  1499   000F48                     
  1500                           ;src/librerias/UART.c: 84:     UART_Tx(data);
  1501   000F48  5027               	movf	putch@data^0,w,c
  1502   000F4A  EC98  F007         	call	_UART_Tx
  1503   000F4E  0012               	return		;funcret
  1504   000F50                     __end_of_putch:
  1505                           	callstack 0
  1506                           
  1507 ;; *************** function _UART_Tx *****************
  1508 ;; Defined at:
  1509 ;;		line 78 in file "src/librerias/UART.c"
  1510 ;; Parameters:    Size  Location     Type
  1511 ;;  dato            1    wreg     unsigned char 
  1512 ;; Auto vars:     Size  Location     Type
  1513 ;;  dato            1    0[COMRAM] unsigned char 
  1514 ;; Return value:  Size  Location     Type
  1515 ;;                  1    wreg      void 
  1516 ;; Registers used:
  1517 ;;		wreg
  1518 ;; Tracked objects:
  1519 ;;		On entry : 0/0
  1520 ;;		On exit  : 0/0
  1521 ;;		Unchanged: 0/0
  1522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1523 ;;      Params:         0       0       0       0       0       0       0       0       0
  1524 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1525 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1526 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1527 ;;Total ram usage:        1 bytes
  1528 ;; Hardware stack levels used: 1
  1529 ;; This function calls:
  1530 ;;		Nothing
  1531 ;; This function is called by:
  1532 ;;		_main
  1533 ;;		_putch
  1534 ;; This function uses a non-reentrant model
  1535 ;;
  1536                           
  1537                           	psect	text9
  1538   000F30                     __ptext9:
  1539                           	callstack 0
  1540   000F30                     _UART_Tx:
  1541                           	callstack 30
  1542                           
  1543                           ;incstack = 0
  1544                           ;UART_Tx@dato stored from wreg
  1545   000F30  6E26               	movwf	UART_Tx@dato^0,c
  1546   000F32                     l104:
  1547   000F32  A2AC               	btfss	4012,1,c	;volatile
  1548   000F34  EF9E  F007         	goto	u11
  1549   000F38  EFA0  F007         	goto	u10
  1550   000F3C                     u11:
  1551   000F3C  EF99  F007         	goto	l104
  1552   000F40                     u10:
  1553   000F40                     
  1554                           ;src/librerias/UART.c: 80:     TXREG1 = dato;
  1555   000F40  C026  FFAD         	movff	UART_Tx@dato,4013	;volatile
  1556   000F44  0012               	return		;funcret
  1557   000F46                     __end_of_UART_Tx:
  1558                           	callstack 0
  1559                           
  1560 ;; *************** function _Clock_Init *****************
  1561 ;; Defined at:
  1562 ;;		line 3 in file "src/librerias/clock.c"
  1563 ;; Parameters:    Size  Location     Type
  1564 ;;  s16Timeout      2    0[COMRAM] short 
  1565 ;; Auto vars:     Size  Location     Type
  1566 ;;  bStatus         1    5[COMRAM] _Bool 
  1567 ;;  bStatus         1    4[COMRAM] _Bool 
  1568 ;;  bStatus         1    3[COMRAM] _Bool 
  1569 ;;  bStatus         1    2[COMRAM] _Bool 
  1570 ;;  returnCode      1    7[COMRAM] enum E5188
  1571 ;;  bItTimeEn       1    6[COMRAM] _Bool 
  1572 ;; Return value:  Size  Location     Type
  1573 ;;                  1    wreg      enum E5188
  1574 ;; Registers used:
  1575 ;;		wreg, status,2, status,0
  1576 ;; Tracked objects:
  1577 ;;		On entry : 0/0
  1578 ;;		On exit  : 0/0
  1579 ;;		Unchanged: 0/0
  1580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1581 ;;      Params:         2       0       0       0       0       0       0       0       0
  1582 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1583 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1584 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1585 ;;Total ram usage:        8 bytes
  1586 ;; Hardware stack levels used: 1
  1587 ;; This function calls:
  1588 ;;		Nothing
  1589 ;; This function is called by:
  1590 ;;		_main
  1591 ;; This function uses a non-reentrant model
  1592 ;;
  1593                           
  1594                           	psect	text10
  1595   0008A8                     __ptext10:
  1596                           	callstack 0
  1597   0008A8                     _Clock_Init:
  1598                           	callstack 30
  1599   0008A8                     
  1600                           ;src/librerias/clock.c: 4:     CLK_ERROR_CODE returnCode = ERROR_CODE_OK;
  1601   0008A8  0E00               	movlw	0
  1602   0008AA  6E2D               	movwf	Clock_Init@returnCode^0,c
  1603   0008AC                     
  1604                           ;src/librerias/clock.c: 5:     _Bool bItTimeEn = (0 >= s16Timeout) ? 0 : 1;
  1605   0008AC  BE27               	btfsc	(Clock_Init@s16Timeout+1)^0,7,c
  1606   0008AE  EF64  F004         	goto	u570
  1607   0008B2  5027               	movf	(Clock_Init@s16Timeout+1)^0,w,c
  1608   0008B4  E106               	bnz	u571
  1609   0008B6  0426               	decf	Clock_Init@s16Timeout^0,w,c
  1610   0008B8  B0D8               	btfsc	status,0,c
  1611   0008BA  EF61  F004         	goto	u571
  1612   0008BE  EF64  F004         	goto	u570
  1613   0008C2                     u571:
  1614   0008C2  0E01               	movlw	1
  1615   0008C4  EF65  F004         	goto	u580
  1616   0008C8                     u570:
  1617   0008C8  0E00               	movlw	0
  1618   0008CA                     u580:
  1619   0008CA  6E2C               	movwf	Clock_Init@bItTimeEn^0,c
  1620   0008CC                     l138:
  1621                           
  1622                           ;src/librerias/clock.c: 10:             bStatus = OSCCON2bits.HFIOFR;
  1623   0008CC  B2D2               	btfsc	210,1,c	;volatile
  1624   0008CE  EF6B  F004         	goto	u591
  1625   0008D2  EF6E  F004         	goto	u590
  1626   0008D6                     u591:
  1627   0008D6  0E01               	movlw	1
  1628   0008D8  EF6F  F004         	goto	u596
  1629   0008DC                     u590:
  1630   0008DC  0E00               	movlw	0
  1631   0008DE                     u596:
  1632   0008DE  6E28               	movwf	Clock_Init@bStatus^0,c
  1633   0008E0                     
  1634                           ;src/librerias/clock.c: 11:             s16Timeout--;
  1635   0008E0  0626               	decf	Clock_Init@s16Timeout^0,f,c
  1636   0008E2  A0D8               	btfss	status,0,c
  1637   0008E4  0627               	decf	(Clock_Init@s16Timeout+1)^0,f,c
  1638   0008E6                     
  1639                           ;src/librerias/clock.c: 12:         }while((0 == bStatus) && ((0 < s16Timeout) || (0 == 
      +                          bItTimeEn)));
  1640   0008E6  5028               	movf	Clock_Init@bStatus^0,w,c
  1641   0008E8  A4D8               	btfss	status,2,c
  1642   0008EA  EF79  F004         	goto	u601
  1643   0008EE  EF7B  F004         	goto	u600
  1644   0008F2                     u601:
  1645   0008F2  EF90  F004         	goto	l1390
  1646   0008F6                     u600:
  1647   0008F6  BE27               	btfsc	(Clock_Init@s16Timeout+1)^0,7,c
  1648   0008F8  EF88  F004         	goto	u610
  1649   0008FC  5027               	movf	(Clock_Init@s16Timeout+1)^0,w,c
  1650   0008FE  E106               	bnz	u611
  1651   000900  0426               	decf	Clock_Init@s16Timeout^0,w,c
  1652   000902  B0D8               	btfsc	status,0,c
  1653   000904  EF86  F004         	goto	u611
  1654   000908  EF88  F004         	goto	u610
  1655   00090C                     u611:
  1656   00090C  EF66  F004         	goto	l138
  1657   000910                     u610:
  1658   000910  502C               	movf	Clock_Init@bItTimeEn^0,w,c
  1659   000912  B4D8               	btfsc	status,2,c
  1660   000914  EF8E  F004         	goto	u621
  1661   000918  EF90  F004         	goto	u620
  1662   00091C                     u621:
  1663   00091C  EF66  F004         	goto	l138
  1664   000920                     u620:
  1665   000920                     l1390:
  1666                           
  1667                           ;src/librerias/clock.c: 13:         if (0 == bStatus){
  1668   000920  5028               	movf	Clock_Init@bStatus^0,w,c
  1669   000922  A4D8               	btfss	status,2,c
  1670   000924  EF96  F004         	goto	u631
  1671   000928  EF98  F004         	goto	u630
  1672   00092C                     u631:
  1673   00092C  EF9A  F004         	goto	l137
  1674   000930                     u630:
  1675   000930                     
  1676                           ;src/librerias/clock.c: 14:             returnCode = ERROR_CODE_TIMEOUT;
  1677   000930  0E01               	movlw	1
  1678   000932  6E2D               	movwf	Clock_Init@returnCode^0,c
  1679   000934                     l137:
  1680                           
  1681                           ;src/librerias/clock.c: 18:     if(ERROR_CODE_OK == returnCode){
  1682   000934  502D               	movf	Clock_Init@returnCode^0,w,c
  1683   000936  A4D8               	btfss	status,2,c
  1684   000938  EFA0  F004         	goto	u641
  1685   00093C  EFA2  F004         	goto	u640
  1686   000940                     u641:
  1687   000940  EFD9  F004         	goto	l143
  1688   000944                     u640:
  1689   000944                     
  1690                           ;src/librerias/clock.c: 19:         OSCCON2bits.INTSRC = 1;
  1691   000944  8AD2               	bsf	210,5,c	;volatile
  1692   000946                     
  1693                           ;src/librerias/clock.c: 20:         OSCCONbits.IRCF = 7;
  1694   000946  0E70               	movlw	112
  1695   000948  12D3               	iorwf	211,f,c	;volatile
  1696   00094A                     l144:
  1697                           
  1698                           ;src/librerias/clock.c: 24:             bStatus = OSCCONbits.HFIOFS;
  1699   00094A  B4D3               	btfsc	211,2,c	;volatile
  1700   00094C  EFAA  F004         	goto	u651
  1701   000950  EFAD  F004         	goto	u650
  1702   000954                     u651:
  1703   000954  0E01               	movlw	1
  1704   000956  EFAE  F004         	goto	u656
  1705   00095A                     u650:
  1706   00095A  0E00               	movlw	0
  1707   00095C                     u656:
  1708   00095C  6E29               	movwf	Clock_Init@bStatus_284^0,c
  1709   00095E                     
  1710                           ;src/librerias/clock.c: 25:             s16Timeout--;
  1711   00095E  0626               	decf	Clock_Init@s16Timeout^0,f,c
  1712   000960  A0D8               	btfss	status,0,c
  1713   000962  0627               	decf	(Clock_Init@s16Timeout+1)^0,f,c
  1714   000964                     
  1715                           ;src/librerias/clock.c: 26:         }while((0 == bStatus) && ((0 < s16Timeout) || (0 == 
      +                          bItTimeEn)));
  1716   000964  5029               	movf	Clock_Init@bStatus_284^0,w,c
  1717   000966  A4D8               	btfss	status,2,c
  1718   000968  EFB8  F004         	goto	u661
  1719   00096C  EFBA  F004         	goto	u660
  1720   000970                     u661:
  1721   000970  EFCF  F004         	goto	l1406
  1722   000974                     u660:
  1723   000974  BE27               	btfsc	(Clock_Init@s16Timeout+1)^0,7,c
  1724   000976  EFC7  F004         	goto	u670
  1725   00097A  5027               	movf	(Clock_Init@s16Timeout+1)^0,w,c
  1726   00097C  E106               	bnz	u671
  1727   00097E  0426               	decf	Clock_Init@s16Timeout^0,w,c
  1728   000980  B0D8               	btfsc	status,0,c
  1729   000982  EFC5  F004         	goto	u671
  1730   000986  EFC7  F004         	goto	u670
  1731   00098A                     u671:
  1732   00098A  EFA5  F004         	goto	l144
  1733   00098E                     u670:
  1734   00098E  502C               	movf	Clock_Init@bItTimeEn^0,w,c
  1735   000990  B4D8               	btfsc	status,2,c
  1736   000992  EFCD  F004         	goto	u681
  1737   000996  EFCF  F004         	goto	u680
  1738   00099A                     u681:
  1739   00099A  EFA5  F004         	goto	l144
  1740   00099E                     u680:
  1741   00099E                     l1406:
  1742                           
  1743                           ;src/librerias/clock.c: 27:         if (0 == bStatus){
  1744   00099E  5029               	movf	Clock_Init@bStatus_284^0,w,c
  1745   0009A0  A4D8               	btfss	status,2,c
  1746   0009A2  EFD5  F004         	goto	u691
  1747   0009A6  EFD7  F004         	goto	u690
  1748   0009AA                     u691:
  1749   0009AA  EFD9  F004         	goto	l143
  1750   0009AE                     u690:
  1751   0009AE                     
  1752                           ;src/librerias/clock.c: 28:             returnCode = ERROR_CODE_TIMEOUT;
  1753   0009AE  0E01               	movlw	1
  1754   0009B0  6E2D               	movwf	Clock_Init@returnCode^0,c
  1755   0009B2                     l143:
  1756                           
  1757                           ;src/librerias/clock.c: 32:     if(ERROR_CODE_OK == returnCode){
  1758   0009B2  502D               	movf	Clock_Init@returnCode^0,w,c
  1759   0009B4  A4D8               	btfss	status,2,c
  1760   0009B6  EFDF  F004         	goto	u701
  1761   0009BA  EFE1  F004         	goto	u700
  1762   0009BE                     u701:
  1763   0009BE  EF15  F005         	goto	l149
  1764   0009C2                     u700:
  1765   0009C2                     l150:
  1766                           
  1767                           ;src/librerias/clock.c: 35:             bStatus = OSCCONbits.OSTS;
  1768   0009C2  B6D3               	btfsc	211,3,c	;volatile
  1769   0009C4  EFE6  F004         	goto	u711
  1770   0009C8  EFE9  F004         	goto	u710
  1771   0009CC                     u711:
  1772   0009CC  0E01               	movlw	1
  1773   0009CE  EFEA  F004         	goto	u716
  1774   0009D2                     u710:
  1775   0009D2  0E00               	movlw	0
  1776   0009D4                     u716:
  1777   0009D4  6E2A               	movwf	Clock_Init@bStatus_285^0,c
  1778   0009D6                     
  1779                           ;src/librerias/clock.c: 36:             s16Timeout--;
  1780   0009D6  0626               	decf	Clock_Init@s16Timeout^0,f,c
  1781   0009D8  A0D8               	btfss	status,0,c
  1782   0009DA  0627               	decf	(Clock_Init@s16Timeout+1)^0,f,c
  1783   0009DC                     
  1784                           ;src/librerias/clock.c: 37:         }while((0 == bStatus) && ((0 < s16Timeout) || (0 == 
      +                          bItTimeEn)));
  1785   0009DC  502A               	movf	Clock_Init@bStatus_285^0,w,c
  1786   0009DE  A4D8               	btfss	status,2,c
  1787   0009E0  EFF4  F004         	goto	u721
  1788   0009E4  EFF6  F004         	goto	u720
  1789   0009E8                     u721:
  1790   0009E8  EF0B  F005         	goto	l1420
  1791   0009EC                     u720:
  1792   0009EC  BE27               	btfsc	(Clock_Init@s16Timeout+1)^0,7,c
  1793   0009EE  EF03  F005         	goto	u730
  1794   0009F2  5027               	movf	(Clock_Init@s16Timeout+1)^0,w,c
  1795   0009F4  E106               	bnz	u731
  1796   0009F6  0426               	decf	Clock_Init@s16Timeout^0,w,c
  1797   0009F8  B0D8               	btfsc	status,0,c
  1798   0009FA  EF01  F005         	goto	u731
  1799   0009FE  EF03  F005         	goto	u730
  1800   000A02                     u731:
  1801   000A02  EFE1  F004         	goto	l150
  1802   000A06                     u730:
  1803   000A06  502C               	movf	Clock_Init@bItTimeEn^0,w,c
  1804   000A08  B4D8               	btfsc	status,2,c
  1805   000A0A  EF09  F005         	goto	u741
  1806   000A0E  EF0B  F005         	goto	u740
  1807   000A12                     u741:
  1808   000A12  EFE1  F004         	goto	l150
  1809   000A16                     u740:
  1810   000A16                     l1420:
  1811                           
  1812                           ;src/librerias/clock.c: 38:         if (0 == bStatus){
  1813   000A16  502A               	movf	Clock_Init@bStatus_285^0,w,c
  1814   000A18  A4D8               	btfss	status,2,c
  1815   000A1A  EF11  F005         	goto	u751
  1816   000A1E  EF13  F005         	goto	u750
  1817   000A22                     u751:
  1818   000A22  EF15  F005         	goto	l149
  1819   000A26                     u750:
  1820   000A26                     
  1821                           ;src/librerias/clock.c: 39:             returnCode = ERROR_CODE_TIMEOUT;
  1822   000A26  0E01               	movlw	1
  1823   000A28  6E2D               	movwf	Clock_Init@returnCode^0,c
  1824   000A2A                     l149:
  1825                           
  1826                           ;src/librerias/clock.c: 42:         if(ERROR_CODE_OK == returnCode){
  1827   000A2A  502D               	movf	Clock_Init@returnCode^0,w,c
  1828   000A2C  A4D8               	btfss	status,2,c
  1829   000A2E  EF1B  F005         	goto	u761
  1830   000A32  EF1D  F005         	goto	u760
  1831   000A36                     u761:
  1832   000A36  EF53  F005         	goto	l155
  1833   000A3A                     u760:
  1834   000A3A                     
  1835                           ;src/librerias/clock.c: 43:         OSCTUNEbits.SPLLMULT = 1;
  1836   000A3A  8E9B               	bsf	155,7,c	;volatile
  1837                           
  1838                           ;src/librerias/clock.c: 44:         OSCCON2bits.PLLEN = 1;
  1839   000A3C  88D2               	bsf	210,4,c	;volatile
  1840   000A3E                     l156:
  1841                           
  1842                           ;src/librerias/clock.c: 47:             bStatus = OSCCON2bits.PLLRDY;
  1843   000A3E  BED2               	btfsc	210,7,c	;volatile
  1844   000A40  EF24  F005         	goto	u771
  1845   000A44  EF27  F005         	goto	u770
  1846   000A48                     u771:
  1847   000A48  0E01               	movlw	1
  1848   000A4A  EF28  F005         	goto	u776
  1849   000A4E                     u770:
  1850   000A4E  0E00               	movlw	0
  1851   000A50                     u776:
  1852   000A50  6E2B               	movwf	Clock_Init@bStatus_288^0,c
  1853   000A52                     
  1854                           ;src/librerias/clock.c: 48:             s16Timeout--;
  1855   000A52  0626               	decf	Clock_Init@s16Timeout^0,f,c
  1856   000A54  A0D8               	btfss	status,0,c
  1857   000A56  0627               	decf	(Clock_Init@s16Timeout+1)^0,f,c
  1858   000A58                     
  1859                           ;src/librerias/clock.c: 49:         }while((0 == bStatus) && ((0 < s16Timeout) || (0 == 
      +                          bItTimeEn)));
  1860   000A58  502B               	movf	Clock_Init@bStatus_288^0,w,c
  1861   000A5A  A4D8               	btfss	status,2,c
  1862   000A5C  EF32  F005         	goto	u781
  1863   000A60  EF34  F005         	goto	u780
  1864   000A64                     u781:
  1865   000A64  EF49  F005         	goto	l1436
  1866   000A68                     u780:
  1867   000A68  BE27               	btfsc	(Clock_Init@s16Timeout+1)^0,7,c
  1868   000A6A  EF41  F005         	goto	u790
  1869   000A6E  5027               	movf	(Clock_Init@s16Timeout+1)^0,w,c
  1870   000A70  E106               	bnz	u791
  1871   000A72  0426               	decf	Clock_Init@s16Timeout^0,w,c
  1872   000A74  B0D8               	btfsc	status,0,c
  1873   000A76  EF3F  F005         	goto	u791
  1874   000A7A  EF41  F005         	goto	u790
  1875   000A7E                     u791:
  1876   000A7E  EF1F  F005         	goto	l156
  1877   000A82                     u790:
  1878   000A82  502C               	movf	Clock_Init@bItTimeEn^0,w,c
  1879   000A84  B4D8               	btfsc	status,2,c
  1880   000A86  EF47  F005         	goto	u801
  1881   000A8A  EF49  F005         	goto	u800
  1882   000A8E                     u801:
  1883   000A8E  EF1F  F005         	goto	l156
  1884   000A92                     u800:
  1885   000A92                     l1436:
  1886                           
  1887                           ;src/librerias/clock.c: 50:         if (0 == bStatus){
  1888   000A92  502B               	movf	Clock_Init@bStatus_288^0,w,c
  1889   000A94  A4D8               	btfss	status,2,c
  1890   000A96  EF4F  F005         	goto	u811
  1891   000A9A  EF51  F005         	goto	u810
  1892   000A9E                     u811:
  1893   000A9E  EF53  F005         	goto	l155
  1894   000AA2                     u810:
  1895   000AA2                     
  1896                           ;src/librerias/clock.c: 51:             returnCode = ERROR_CODE_TIMEOUT;
  1897   000AA2  0E01               	movlw	1
  1898   000AA4  6E2D               	movwf	Clock_Init@returnCode^0,c
  1899   000AA6                     l155:
  1900                           
  1901                           ;src/librerias/clock.c: 56:     if(ERROR_CODE_OK == returnCode){
  1902   000AA6  502D               	movf	Clock_Init@returnCode^0,w,c
  1903   000AA8  A4D8               	btfss	status,2,c
  1904   000AAA  EF59  F005         	goto	u821
  1905   000AAE  EF5B  F005         	goto	u820
  1906   000AB2                     u821:
  1907   000AB2  EF5E  F005         	goto	l162
  1908   000AB6                     u820:
  1909   000AB6                     
  1910                           ;src/librerias/clock.c: 57:         OSCCON2bits.PRISD = 0;
  1911   000AB6  94D2               	bcf	210,2,c	;volatile
  1912   000AB8                     
  1913                           ;src/librerias/clock.c: 58:         OSCCONbits.SCS = 0;
  1914   000AB8  0EFC               	movlw	-4
  1915   000ABA  16D3               	andwf	211,f,c	;volatile
  1916   000ABC                     l162:
  1917   000ABC  0012               	return		;funcret
  1918   000ABE                     __end_of_Clock_Init:
  1919                           	callstack 0
  1920                           
  1921                           	psect	rparam
  1922   000000                     
  1923                           	psect	config
  1924                           
  1925                           ;Config register CONFIG1L @ 0x300000
  1926                           ;	PLL Selection
  1927                           ;	PLLSEL = PLL3X, 3x clock multiplier
  1928                           ;	PLL Enable Configuration bit
  1929                           ;	CFGPLLEN = ON, PLL Enabled
  1930                           ;	CPU System Clock Postscaler
  1931                           ;	CPUDIV = NOCLKDIV, CPU uses system clock (no divide)
  1932                           ;	Low Speed USB mode with 48 MHz system clock
  1933                           ;	LS48MHZ = SYS48X8, System clock at 48 MHz, USB clock divider is set to 8
  1934   300000                     	org	3145728
  1935   300000  23                 	db	35
  1936                           
  1937                           ;Config register CONFIG1H @ 0x300001
  1938                           ;	Oscillator Selection
  1939                           ;	FOSC = INTOSCCLKO, Internal oscillator, clock output on OSC2
  1940                           ;	Primary Oscillator Shutdown
  1941                           ;	PCLKEN = OFF, Primary oscillator shutdown firmware controlled
  1942                           ;	Fail-Safe Clock Monitor
  1943                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1944                           ;	Internal/External Oscillator Switchover
  1945                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1946   300001                     	org	3145729
  1947   300001  09                 	db	9
  1948                           
  1949                           ;Config register CONFIG2L @ 0x300002
  1950                           ;	Power-up Timer Enable
  1951                           ;	nPWRTEN = OFF, Power up timer disabled
  1952                           ;	Brown-out Reset Enable
  1953                           ;	BOREN = SBORDIS, BOR enabled in hardware (SBOREN is ignored)
  1954                           ;	Brown-out Reset Voltage
  1955                           ;	BORV = 190, BOR set to 1.9V nominal
  1956                           ;	Low-Power Brown-out Reset
  1957                           ;	nLPBOR = OFF, Low-Power Brown-out Reset disabled
  1958   300002                     	org	3145730
  1959   300002  5F                 	db	95
  1960                           
  1961                           ;Config register CONFIG2H @ 0x300003
  1962                           ;	Watchdog Timer Enable bits
  1963                           ;	WDTEN = OFF, WDT disabled in hardware (SWDTEN ignored)
  1964                           ;	Watchdog Timer Postscaler
  1965                           ;	WDTPS = 32768, 1:32768
  1966   300003                     	org	3145731
  1967   300003  3C                 	db	60
  1968                           
  1969                           ; Padding undefined space
  1970   300004                     	org	3145732
  1971   300004  FF                 	db	255
  1972                           
  1973                           ;Config register CONFIG3H @ 0x300005
  1974                           ;	CCP2 MUX bit
  1975                           ;	CCP2MX = RC1, CCP2 input/output is multiplexed with RC1
  1976                           ;	PORTB A/D Enable bit
  1977                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  1978                           ;	Timer3 Clock Input MUX bit
  1979                           ;	T3CMX = RC0, T3CKI function is on RC0
  1980                           ;	SDO Output MUX bit
  1981                           ;	SDOMX = RB3, SDO function is on RB3
  1982                           ;	Master Clear Reset Pin Enable
  1983                           ;	MCLRE = ON, MCLR pin enabled; RE3 input disabled
  1984   300005                     	org	3145733
  1985   300005  D3                 	db	211
  1986                           
  1987                           ;Config register CONFIG4L @ 0x300006
  1988                           ;	Stack Full/Underflow Reset
  1989                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1990                           ;	Single-Supply ICSP Enable bit
  1991                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
  1992                           ;	Dedicated In-Circuit Debug/Programming Port Enable
  1993                           ;	ICPRT = OFF, ICPORT disabled
  1994                           ;	Extended Instruction Set Enable bit
  1995                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled
  1996                           ;	Background Debugger Enable bit
  1997                           ;	DEBUG = 0x1, unprogrammed default
  1998   300006                     	org	3145734
  1999   300006  85                 	db	133
  2000                           
  2001                           ; Padding undefined space
  2002   300007                     	org	3145735
  2003   300007  FF                 	db	255
  2004                           
  2005                           ;Config register CONFIG5L @ 0x300008
  2006                           ;	Block 0 Code Protect
  2007                           ;	CP0 = OFF, Block 0 is not code-protected
  2008                           ;	Block 1 Code Protect
  2009                           ;	CP1 = OFF, Block 1 is not code-protected
  2010                           ;	Block 2 Code Protect
  2011                           ;	CP2 = OFF, Block 2 is not code-protected
  2012                           ;	Block 3 Code Protect
  2013                           ;	CP3 = OFF, Block 3 is not code-protected
  2014   300008                     	org	3145736
  2015   300008  0F                 	db	15
  2016                           
  2017                           ;Config register CONFIG5H @ 0x300009
  2018                           ;	Boot Block Code Protect
  2019                           ;	CPB = OFF, Boot block is not code-protected
  2020                           ;	Data EEPROM Code Protect
  2021                           ;	CPD = OFF, Data EEPROM is not code-protected
  2022   300009                     	org	3145737
  2023   300009  C0                 	db	192
  2024                           
  2025                           ;Config register CONFIG6L @ 0x30000A
  2026                           ;	Block 0 Write Protect
  2027                           ;	WRT0 = OFF, Block 0 (0800-1FFFh) is not write-protected
  2028                           ;	Block 1 Write Protect
  2029                           ;	WRT1 = OFF, Block 1 (2000-3FFFh) is not write-protected
  2030                           ;	Block 2 Write Protect
  2031                           ;	WRT2 = OFF, Block 2 (04000-5FFFh) is not write-protected
  2032                           ;	Block 3 Write Protect
  2033                           ;	WRT3 = OFF, Block 3 (06000-7FFFh) is not write-protected
  2034   30000A                     	org	3145738
  2035   30000A  0F                 	db	15
  2036                           
  2037                           ;Config register CONFIG6H @ 0x30000B
  2038                           ;	Configuration Registers Write Protect
  2039                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  2040                           ;	Boot Block Write Protect
  2041                           ;	WRTB = OFF, Boot block (0000-7FFh) is not write-protected
  2042                           ;	Data EEPROM Write Protect
  2043                           ;	WRTD = OFF, Data EEPROM is not write-protected
  2044   30000B                     	org	3145739
  2045   30000B  E0                 	db	224
  2046                           
  2047                           ;Config register CONFIG7L @ 0x30000C
  2048                           ;	Block 0 Table Read Protect
  2049                           ;	EBTR0 = OFF, Block 0 is not protected from table reads executed in other blocks
  2050                           ;	Block 1 Table Read Protect
  2051                           ;	EBTR1 = OFF, Block 1 is not protected from table reads executed in other blocks
  2052                           ;	Block 2 Table Read Protect
  2053                           ;	EBTR2 = OFF, Block 2 is not protected from table reads executed in other blocks
  2054                           ;	Block 3 Table Read Protect
  2055                           ;	EBTR3 = OFF, Block 3 is not protected from table reads executed in other blocks
  2056   30000C                     	org	3145740
  2057   30000C  0F                 	db	15
  2058                           
  2059                           ;Config register CONFIG7H @ 0x30000D
  2060                           ;	Boot Block Table Read Protect
  2061                           ;	EBTRB = OFF, Boot block is not protected from table reads executed in other blocks
  2062   30000D                     	org	3145741
  2063   30000D  40                 	db	64
  2064                           tosu	equ	0xFFF
  2065                           tosh	equ	0xFFE
  2066                           tosl	equ	0xFFD
  2067                           stkptr	equ	0xFFC
  2068                           pclatu	equ	0xFFB
  2069                           pclath	equ	0xFFA
  2070                           pcl	equ	0xFF9
  2071                           tblptru	equ	0xFF8
  2072                           tblptrh	equ	0xFF7
  2073                           tblptrl	equ	0xFF6
  2074                           tablat	equ	0xFF5
  2075                           prodh	equ	0xFF4
  2076                           prodl	equ	0xFF3
  2077                           indf0	equ	0xFEF
  2078                           postinc0	equ	0xFEE
  2079                           postdec0	equ	0xFED
  2080                           preinc0	equ	0xFEC
  2081                           plusw0	equ	0xFEB
  2082                           fsr0h	equ	0xFEA
  2083                           fsr0l	equ	0xFE9
  2084                           wreg	equ	0xFE8
  2085                           indf1	equ	0xFE7
  2086                           postinc1	equ	0xFE6
  2087                           postdec1	equ	0xFE5
  2088                           preinc1	equ	0xFE4
  2089                           plusw1	equ	0xFE3
  2090                           fsr1h	equ	0xFE2
  2091                           fsr1l	equ	0xFE1
  2092                           bsr	equ	0xFE0
  2093                           indf2	equ	0xFDF
  2094                           postinc2	equ	0xFDE
  2095                           postdec2	equ	0xFDD
  2096                           preinc2	equ	0xFDC
  2097                           plusw2	equ	0xFDB
  2098                           fsr2h	equ	0xFDA
  2099                           fsr2l	equ	0xFD9
  2100                           status	equ	0xFD8

Data Sizes:
    Strings     166
    Constant    0
    Data        0
    BSS         37
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     29      66
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    printf@fmt	PTR const unsigned char  size(1) Largest target is 18
		 -> STR_1(CODE[7]), STR_10(CODE[9]), STR_11(CODE[14]), STR_12(CODE[17]), 
		 -> STR_13(CODE[10]), STR_14(CODE[14]), STR_15(CODE[17]), STR_16(CODE[11]), 
		 -> STR_17(CODE[14]), STR_18(CODE[17]), STR_2(CODE[10]), STR_3(CODE[11]), 
		 -> STR_4(CODE[18]), STR_5(CODE[18]), STR_6(CODE[11]), STR_7(CODE[9]), 
		 -> STR_8(CODE[8]), STR_9(CODE[13]), 

    S730$buffer	PTR unsigned char  size(2) Largest target is 0

    S730$source	PTR const unsigned char  size(2) Largest target is 0

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(COMRAM[1]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 18
		 -> STR_1(CODE[7]), STR_10(CODE[9]), STR_11(CODE[14]), STR_12(CODE[17]), 
		 -> STR_13(CODE[10]), STR_14(CODE[14]), STR_15(CODE[17]), STR_16(CODE[11]), 
		 -> STR_17(CODE[14]), STR_18(CODE[17]), STR_2(CODE[10]), STR_3(CODE[11]), 
		 -> STR_4(CODE[18]), STR_5(CODE[18]), STR_6(CODE[11]), STR_7(CODE[9]), 
		 -> STR_8(CODE[8]), STR_9(CODE[13]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 18
		 -> STR_1(CODE[7]), STR_10(CODE[9]), STR_11(CODE[14]), STR_12(CODE[17]), 
		 -> STR_13(CODE[10]), STR_14(CODE[14]), STR_15(CODE[17]), STR_16(CODE[11]), 
		 -> STR_17(CODE[14]), STR_18(CODE[17]), STR_2(CODE[10]), STR_3(CODE[11]), 
		 -> STR_4(CODE[18]), STR_5(CODE[18]), STR_6(CODE[11]), STR_7(CODE[9]), 
		 -> STR_8(CODE[8]), STR_9(CODE[13]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    _main->_UART_Init
    _UART_config_show->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_fputc
    _fputc->_putch
    _putch->_UART_Tx

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    3629
                                             26 COMRAM     3     3      0
                         _Clock_Init
                          _UART_Init
                            _UART_Tx
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                            4     0      4    2983
                                             22 COMRAM     4     0      4
                   _UART_config_show
                   _UART_select_baud
 ---------------------------------------------------------------------------------
 (2) _UART_select_baud                                     8     4      4      98
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _UART_config_show                                     0     0      0    2787
                             _printf
 ---------------------------------------------------------------------------------
 (3) _printf                                               4     3      1    2787
                                             20 COMRAM     2     1      1
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             5     1      4    1367
                                             15 COMRAM     5     1      4
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                            9     5      4    1020
                                             11 COMRAM     4     0      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4     660
                                              2 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0      30
                                              1 COMRAM     1     1      0
                            _UART_Tx
 ---------------------------------------------------------------------------------
 (1) _UART_Tx                                              1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Clock_Init                                           8     6      2     584
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Clock_Init
   _UART_Init
     _UART_config_show
       _printf
         _vfprintf
           _vfpfcnvrt
             _fputc
               _putch
                 _UART_Tx
     _UART_select_baud
   _UART_Tx

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      27        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     1D      42       1       69.5%
BITBIGSFRlll        48      0       0      25        0.0%
BITBIGSFRhhh        2C      0       0      20        0.0%
BITBIGSFRhhl        19      0       0      21        0.0%
BITBIGSFRlh          C      0       0      23        0.0%
BITBIGSFRhlh         7      0       0      22        0.0%
BITBIGSFRllh         2      0       0      24        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      42      26        0.0%
DATA                 0      0      42       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Wed Oct 02 15:19:40 2024

                      l80 0CD0                        l72 0C74                        l76 0CA6  
                      l68 0C4A                        l85 0CFA                        l88 0EFE  
                      u10 0F40                        u11 0F3C                       l101 0BFC  
                     l110 0F4E                       l104 0F32                       l107 0F44  
                     l150 09C2                       l143 09B2                       l144 094A  
                     l137 0934                       l162 0ABC                       l138 08CC  
                     l155 0AA6                       l156 0A3E                       l149 0A2A  
                     l843 0F18                       l872 0ED8                       l866 0E32  
                     l884 0DC4                       l894 0F32                       l896 0F40  
                     l898 0F48                       u500 0ED0                       u501 0ECC  
                     u510 0C14                       u511 0C10                       u600 08F6  
                     u520 0C36                       u601 08F2                       u521 0C32  
                     u610 0910                       u450 0D0E                       u530 0C60  
                     u611 090C                       u451 0D0A                       u531 0C5C  
                     u700 09C2                       u620 0920                       u460 0D20  
                     u540 0C92                       u701 09BE                       u621 091C  
                     u461 0D1C                       u541 0C8E                       u710 09D2  
                     u630 0930                       u470 0D48                       u550 0CBC  
                     u711 09CC                       u631 092C                       u471 0D44  
                     u551 0CB8                       u800 0A92                       u720 09EC  
                     u640 0944                       u480 0D7E                       u560 0CE6  
                     u801 0A8E                       u721 09E8                       u641 0940  
                     u481 0D7A                       u561 0CE2                       u810 0AA2  
                     u730 0A06                       u650 095A                       u570 08C8  
                     u490 0DE8                       u811 0A9E                       u731 0A02  
                     u651 0954                       u571 08C2                       u491 0DE4  
                     u820 0AB6                       u740 0A16                       u716 09D4  
                     u660 0974                       u580 08CA                       u821 0AB2  
                     u741 0A12                       u661 0970                       u750 0A26  
                     u670 098E                       u590 08DC                       u830 0E68  
                     u751 0A22                       u671 098A                       u591 08D6  
                     u831 0E64                       u760 0A3A                       u680 099E  
                     u656 095C                       u761 0A36                       u681 099A  
                     u770 0A4E                       u690 09AE                       u771 0A48  
                     u691 09AA                       u780 0A68                       u596 08DE  
                     u781 0A64                       u790 0A82                       u791 0A7E  
                     u847 0E82                       u776 0A50                       wreg 0FE8  
                    l1300 0CAE                      l1230 0D20                      l1310 0CF2  
                    l1302 0CBC                      l1400 0964                      l1232 0D2A  
                    l1240 0DC6                      l1304 0CC8                      l1320 0AE6  
                    l1312 0ABE                      l1410 09C2                      l1402 0974  
                    l1234 0D48                      l1226 0CFC                      l1242 0DE8  
                    l1306 0CD8                      l1322 0AF2                      l1314 0AC2  
                    l1420 0A16                      l1412 09D6                      l1404 098E  
                    l1236 0D7E                      l1228 0D0E                      l1244 0DF0  
                    l1252 0E0C                      l1260 0EA0                      l1308 0CE6  
                    l1324 0AFE                      l1316 0ACE                      l1332 0B22  
                    l1430 0A58                      l1422 0A26                      l1414 09DC  
                    l1406 099E                      l1246 0DFC                      l1262 0EB4  
                    l1270 0F04                      l1326 0B0A                      l1318 0ADA  
                    l1440 0AB6                      l1432 0A68                      l1424 0A3A  
                    l1416 09EC                      l1408 09AE                      l1248 0E00  
                    l1264 0ED0                      l1280 0C20                      l1520 0B84  
                    l1512 0B40                      l1328 0B16                      l1442 0AB8  
                    l1434 0A82                      l1426 0A3E                      l1418 0A06  
                    l1258 0E98                      l1290 0C60                      l1282 0C28  
                    l1274 0BFE                      l1530 0BD8                      l1514 0BCA  
                    l1522 0B92                      l1450 0EF2                      l1436 0A92  
                    l1428 0A52                      l1380 08CC                      l1268 0F00  
                    l1292 0C6C                      l1284 0C36                      l1276 0C06  
                    l1524 0BA0                      l1516 0BE6                      l1452 0EF6  
                    l1460 0E54                      l1438 0AA2                      l1390 0920  
                    l1382 08E0                      l1374 08A8                      l1294 0C84  
                    l1286 0C42                      l1278 0C14                      l1526 0BAE  
                    l1518 0B76                      l1454 0EFA                      l1446 0EDA  
                    l1470 0E78                      l1462 0E58                      l1392 0930  
                    l1384 08E6                      l1376 08AC                      l1296 0C92  
                    l1288 0C52                      l1528 0BBC                      l1448 0EEE  
                    l1464 0E68                      l1456 0E34                      l1394 0944  
                    l1386 08F6                      l1378 08CC                      l1298 0C9E  
                    l1466 0E70                      l1458 0E40                      l1396 0946  
                    l1388 0910                      l1468 0E76                      l1398 095E  
                    STR_1 08A0                      STR_2 087C                      STR_3 0867  
                    STR_4 0813                      STR_5 0801                      STR_6 0851  
                    STR_7 088F                      STR_8 0898                      STR_9 0844  
                    _CREN 7D5C                      _SPEN 7D5F                      _TRMT 7D61  
         __end_of_UART_Tx 0F46                      _dbuf 0001                      _main 0E34  
                    _prec 0023                      fsr1h 0FE2                      fsr2h 0FDA  
                    indf2 0FDF                      fsr1l 0FE1                      fsr2l 0FD9  
                    start 0000              ___param_bank 0000  UART_select_baud@baudrate 0026  
              _Clock_Init 08A8                     ?_main 0026                     STR_10 0886  
                   STR_11 0836                     STR_12 0825                     STR_13 0872  
                   STR_14 0836                     STR_15 0825                     STR_16 085C  
                   STR_17 0836                     STR_18 0825                     _BRGH1 7D62  
                   _RC1IF 7CF5                     _RCREG 0FAE         Clock_Init@bStatus 0028  
            vfpfcnvrt@fmt 0033          _UART_config_show 0BFE                     _SPBRG 0FAF  
                   _TXEN1 7D65                     _SYNC1 7D64                     _flags 0025  
                   _fputc 0CFC                     _width 0021                     _putch 0F46  
                   tablat 0FF5                     status 0FD8           __initialization 0F1A  
            __end_of_main 0E98                    ??_main 0040             __activetblptr 0002  
               ??_UART_Tx 0026                    ?_fputc 0028                    _BRG161 7DC3  
                  ?_putch 0026                    _RCREG1 0FAE                    _RCSTA1 0FAB  
                  _SPBRGH 0FB0                    _TXREG1 0FAD                    _TXSTA1 0FAC  
            vfprintf@cfmt 0039         __end_of_UART_Init 0F00               ?_Clock_Init 0026  
                  clear_0 0F20                    isa$std 0001                    _printf 0F00  
                  fputc@c 0028              __mediumconst 0000                    tblptrh 0FF7  
                  tblptrl 0FF6                    tblptru 0FF8          __end_of_vfprintf 0EDA  
              __accesstop 0060   __end_of__initialization 0F26             ___rparam_used 0001  
        _UART_select_baud 0ABE            __pcstackCOMRAM 0026             __end_of_fputc 0DC6  
           __end_of_putch 0F50                   ??_fputc 002C                   ??_putch 0027  
__end_of_UART_config_show 0CFC       Clock_Init@bItTimeEn 002C                   ?_printf 003A  
                 _UART_Tx 0F30                   __Hparam 0000                   __Lparam 0000  
               ?_vfprintf 0035              __psmallconst 0800                   __pcinit 0F1A  
                 __ramtop 0800                   __ptext0 0E34                   __ptext1 0EDA  
                 __ptext2 0ABE                   __ptext3 0BFE                   __ptext4 0F00  
                 __ptext5 0E98                   __ptext6 0DC6                   __ptext7 0CFC  
                 __ptext8 0F46                   __ptext9 0F30               UART_Tx@dato 0026  
    end_of_initialization 0F26                   fputc@fp 002A             __Lmediumconst 0000  
   Clock_Init@bStatus_284 0029     Clock_Init@bStatus_285 002A     Clock_Init@bStatus_288 002B  
       __end_of_vfpfcnvrt 0E34                 _RCSTAbits 0FAB                   postdec2 0FDD  
                 postinc0 0FEE                   postinc1 0FE6                   postinc2 0FDE  
            ??_Clock_Init 0028                ??_vfprintf 0039                 _UART_Init 0EDA  
__end_of_UART_select_baud 0BFE        __end_of_Clock_Init 0ABE               vfpfcnvrt@ap 0034  
             vfpfcnvrt@fp 0031                ?_UART_Init 003C            __end_of_printf 0F1A  
     start_initialization 0F1A      Clock_Init@s16Timeout 0026         ?_UART_config_show 0026  
             vfprintf@fmt 0037        ??_UART_config_show 003C                  ??_printf 003B  
             __pbssCOMRAM 0001                  ?_UART_Tx 0026               ??_UART_Init 0040  
             __smallconst 0800                  _BAUDCON1 0FB8                 _vfpfcnvrt 0DC6  
       UART_Init@baudrate 003C         ?_UART_select_baud 0026        ??_UART_select_baud 002A  
                __Hrparam 0000                vfprintf@ap 0038                  __Lrparam 0000  
              vfprintf@fp 0035                ?_vfpfcnvrt 0031                  __ptext10 08A8  
             _OSCCON2bits 0FD2                  isa$xinst 0000                  _vfprintf 0E98  
                main@data 0042                 printf@fmt 003A                 putch@data 0027  
             _OSCTUNEbits 0F9B                _OSCCONbits 0FD3                  printf@ap 003B  
             ??_vfpfcnvrt 0035      Clock_Init@returnCode 002D  
