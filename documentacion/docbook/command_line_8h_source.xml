<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_command_line_8h_source" xml:lang="en-US">
<title>commandLine.h</title>
<indexterm><primary>src/librerias/commandLine.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 
10 <emphasis role="preprocessor">#ifndef&#32;COMMANDLINE_H</emphasis>
11 <emphasis role="preprocessor">#define&#32;COMMANDLINE_H</emphasis>
12 
13 
14 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__u_a_r_t_8h">UART.h</link>&quot;</emphasis>
15 
16 
17 <emphasis role="preprocessor">#define&#32;BUFFLEN&#32;100&#32;</emphasis>
18 <emphasis role="preprocessor">#define&#32;DELIMITER&#32;0x20&#32;</emphasis>
19 <emphasis role="preprocessor">#define&#32;NUMPARAMS&#32;5&#32;</emphasis>
20 <emphasis role="preprocessor">#define&#32;PARAMLEN&#32;16&#32;</emphasis>
21 
23 <emphasis role="comment">//&#32;&#32;&#32;Variables&#32;para&#32;buffer&#32;&#32;&#32;//</emphasis>
25 <emphasis role="keyword">const</emphasis>&#32;uint8_t&#32;<link linkend="_command_line_8h_1a2f072df6df9d0696acb935163cf1972b">charStop</link>&#32;=&#32;0x0A;&#32;
26 
27 uint8_t&#32;<link linkend="_command_line_8h_1a584861e94011273bba5aa1dd60b18b62">buffCount</link>&#32;=&#32;0;&#32;
28 uint8_t&#32;<link linkend="_command_line_8h_1abc696dcb12b7d2f85630e3bba6cbb713">charBuff</link>[<link linkend="_command_line_8h_1a65314ede9be8799048771161a9589f2b">BUFFLEN</link>];&#32;
29 <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_command_line_8h_1abb6917a36df399c7d9c9c8b77bcd8637">commandLineEnable</link>&#32;=&#32;0;&#32;
30 <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_command_line_8h_1a4303802408628fd9e888379ee4045b4d">flagCommandReady</link>&#32;=&#32;0;&#32;
31 uint8_t&#32;<link linkend="_command_line_8h_1a3c84e45b27f785327ff247b6d8fc0675">command</link>[<link linkend="_command_line_8h_1a901c276061eeee06a506a1a9df66b6c2">PARAMLEN</link>];&#32;
32 uint8_t&#32;<link linkend="_command_line_8h_1ad4747b84edfa58246387789f97c0f43b">param</link>[<link linkend="_command_line_8h_1acfdf7bea7a8b97969917559576655291">NUMPARAMS</link>][<link linkend="_command_line_8h_1a901c276061eeee06a506a1a9df66b6c2">PARAMLEN</link>];&#32;
33 
34 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">enum</emphasis>{
35 &#32;&#32;&#32;&#32;EC_CL_OK,
36 &#32;&#32;&#32;&#32;EC_CL_BUFFOVER,
37 &#32;&#32;&#32;&#32;EC_CL_NOWORDS,
38 &#32;&#32;&#32;&#32;EC_CL_WORDOVER,
39 &#32;&#32;&#32;&#32;EC_CL_MAXNUMPARAMS,
40 &#32;&#32;&#32;&#32;EC_CL_WRONGNUMPARAMS,
41 &#32;&#32;&#32;&#32;EC_CL_WRONGCOMMAND,
42 }CL_ERROR_CODE;
43 
47 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_command_line_8h_1a932feaebabe26a26a8f2924cbc1e5e48">commandLineInit</link>();
48 
52 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_command_line_8h_1a609649d55b8396e5505f9a6ebb163d54">commandLineDeinit</link>();
53 
57 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_command_line_8h_1ad90dbb9078381cd647817382b7b23741">commandLineReset</link>();
58 
66 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_command_line_8h_1a3ba8cde82d6778724d4e4ed17b637c35">addToBuffer</link>(<emphasis role="keywordtype">char</emphasis>&#32;newchar);
67 
71 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_command_line_8h_1acf97ff06c423170a6e7e360528df9a94">clearBuff</link>();
72 
76 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_command_line_8h_1a5713e92e29fc7e6586e725b5c414480a">clearCharInLine</link>();
77 
83 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_command_line_8h_1ad46b683755e4d2790dae77c124678243">clearArray</link>(uint8_t*&#32;array,&#32;uint8_t&#32;len);
84 
89 CL_ERROR_CODE&#32;<link linkend="_command_line_8h_1a04dfd02542a769b653ddb50c49de0108">commandProcess</link>();
90 
95 uint8_t&#32;<link linkend="_command_line_8h_1afc5e796dbd318e73265dd65649f5df0e">countWords</link>(<emphasis role="keywordtype">void</emphasis>);
96 
103 <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_command_line_8h_1aa4a8a2b8c0f63010d5561dfdc72be946">getWord</link>(uint8_t&#32;wordNum,&#32;uint8_t*&#32;pWord);
104 
109 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_command_line_8h_1ae0b7bcb3acc02e6a1df0f4e08e3ac3c3">CL_ErrorHandler</link>(CL_ERROR_CODE);
110 
111 <emphasis role="preprocessor">#endif&#32;&#32;</emphasis><emphasis role="comment">/*&#32;COMMANDLINE_H&#32;*/</emphasis><emphasis role="preprocessor"></emphasis>
112 
</programlisting></section>
