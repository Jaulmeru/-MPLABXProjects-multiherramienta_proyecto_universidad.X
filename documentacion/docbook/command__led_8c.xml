<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_command__led_8c" xml:lang="en-US">
<title>examples/UART/command_led.c File Reference</title>
<indexterm><primary>examples/UART/command_led.c</primary></indexterm>
<para>

<para>Codigo de ejemplo Valida la recepcion de un caracter por UART. </para>
 
</para>
<programlisting linenumbering="unnumbered">#include &lt;xc.h&gt;<?linebreak?>#include &quot;config.h&quot;<?linebreak?>#include &quot;librerias/clock.h&quot;<?linebreak?>#include &quot;librerias/UART.h&quot;<?linebreak?></programlisting><simplesect>
    <title>Macros    </title>
        <itemizedlist>
            <listitem><para>#define <link linkend="_command__led_8c_1afc74da9605d4f56e0664f5f872018ac3">LED_ON</link>()</para>
</listitem>
            <listitem><para>#define <link linkend="_command__led_8c_1abbeb6a9eaae16d9de86df5a82bbf81b5">LED_OFF</link>()</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>int <link linkend="_command__led_8c_1a840291bc02cba5474a4cb46a9b9566fe">main</link> (void)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>Codigo de ejemplo Valida la recepcion de un caracter por UART. </para>

<para><formalpara><title>Author</title>

<para>Javier Mendoza (<link xlink:href="mailto:javierulisesmruiz@gmail.com">javierulisesmruiz@gmail.com</link>) </para>
</formalpara>
<formalpara><title>Date</title>

<para>02/10/2024 </para>
</formalpara>
<formalpara><title>Version</title>

<para>1.0 </para>
</formalpara>
</para>
</section>
<section>
<title>Macro Definition Documentation</title>
<anchor xml:id="_command__led_8c_1abbeb6a9eaae16d9de86df5a82bbf81b5"/><section>
    <title>LED_OFF</title>
<indexterm><primary>LED_OFF</primary><secondary>command_led.c</secondary></indexterm>
<indexterm><primary>command_led.c</primary><secondary>LED_OFF</secondary></indexterm>
<para><computeroutput>#define LED_OFF( )</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting linenumbering="unnumbered"><emphasis role="keywordflow">do</emphasis>&#32;{&#32;LATAbits.LATA1&#32;=&#32;0;&#32;}&#32;<emphasis role="keywordflow">while</emphasis>(0)
</programlisting></section>
<anchor xml:id="_command__led_8c_1afc74da9605d4f56e0664f5f872018ac3"/><section>
    <title>LED_ON</title>
<indexterm><primary>LED_ON</primary><secondary>command_led.c</secondary></indexterm>
<indexterm><primary>command_led.c</primary><secondary>LED_ON</secondary></indexterm>
<para><computeroutput>#define LED_ON( )</computeroutput></para><emphasis role="strong">Value:</emphasis><programlisting linenumbering="unnumbered"><emphasis role="keywordflow">do</emphasis>&#32;{&#32;LATAbits.LATA1&#32;=&#32;1;&#32;}&#32;<emphasis role="keywordflow">while</emphasis>(0)
</programlisting></section>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="_command__led_8c_1a840291bc02cba5474a4cb46a9b9566fe"/><section>
    <title>main()</title>
<indexterm><primary>main</primary><secondary>command_led.c</secondary></indexterm>
<indexterm><primary>command_led.c</primary><secondary>main</secondary></indexterm>
<para><computeroutput>int main (void )</computeroutput></para></section>
</section>
</section>
