<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__u_a_r_t_8h" xml:lang="en-US">
<title>src/librerias/UART.h File Reference</title>
<indexterm><primary>src/librerias/UART.h</primary></indexterm>
<programlisting linenumbering="unnumbered">#include &quot;UART_variables.h&quot;<?linebreak?></programlisting><simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>void <link linkend="__u_a_r_t_8h_1ae6fd997937744f54a3b2f5245e0ee6c5">UART_config_show</link> ()</para>

<para>Muestra por puerto serial la configuracion actual del modulo EUSART. </para>
</listitem>
            <listitem><para>void <link linkend="__u_a_r_t_8h_1ac7551a5df228b6c29eb13e2a83a31650">UART_Init</link> (uint32_t)</para>

<para>Configura los registros basicos para comunicacion y llama a <link linkend="__u_a_r_t_8h_1ae6fd997937744f54a3b2f5245e0ee6c5">UART_config_show()</link> </para>
</listitem>
            <listitem><para>void <link linkend="__u_a_r_t_8h_1ae7956c92520def8e4cf6046a92310184">UART_select_baud</link> (uint32_t)</para>

<para>Configura SPBRGH y SPBRG para el baudrate ingresado. </para>
</listitem>
            <listitem><para><link linkend="__u_a_r_t__variables_8h_1aca500773c32b84185c333e06093935f9">UART_ERROR_CODE</link> <link linkend="__u_a_r_t_8h_1afc34c227cd3b9153f8a1dd4c7da43f79">UART_Rx_FRAMING</link> ()</para>

<para>Revisa el registro FERR y limpia el error. </para>
</listitem>
            <listitem><para><link linkend="__u_a_r_t__variables_8h_1aca500773c32b84185c333e06093935f9">UART_ERROR_CODE</link> <link linkend="__u_a_r_t_8h_1ae9defbf2097bafc184289367f362245e">UART_Rx_OVERFLOW</link> ()</para>

<para>Revisa el registro OERR y limpia el error. </para>
</listitem>
            <listitem><para>void <link linkend="__u_a_r_t_8h_1a913b851613b566d8607917b201b96104">UART_Tx</link> (uint8_t)</para>

<para>Envia el dato si ya esta vacio TSR. </para>
</listitem>
            <listitem><para>uint8_t <link linkend="__u_a_r_t_8h_1a104e40e6d18cf161ca4ee7ebdc0e62b8">UART_Rx</link> (void)</para>

<para>Lee el ultimo dato recibido. </para>
</listitem>
            <listitem><para>bool <link linkend="__u_a_r_t_8h_1adfc83db24bb6c7d34f3a8b9160e14e87">UART_RxAvailable</link> (void)</para>

<para>Valida si esta habilitada la recepcion y si el buffer esta lleno. </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Function Documentation</title>
<anchor xml:id="__u_a_r_t_8h_1ae6fd997937744f54a3b2f5245e0ee6c5"/><section>
    <title>UART_config_show()</title>
<indexterm><primary>UART_config_show</primary><secondary>UART.h</secondary></indexterm>
<indexterm><primary>UART.h</primary><secondary>UART_config_show</secondary></indexterm>
<para><computeroutput>void UART_config_show ( )</computeroutput></para><para>

<para>Muestra por puerto serial la configuracion actual del modulo EUSART. </para>
</para>
</section>
<anchor xml:id="__u_a_r_t_8h_1ac7551a5df228b6c29eb13e2a83a31650"/><section>
    <title>UART_Init()</title>
<indexterm><primary>UART_Init</primary><secondary>UART.h</secondary></indexterm>
<indexterm><primary>UART.h</primary><secondary>UART_Init</secondary></indexterm>
<para><computeroutput>void UART_Init (uint32_t baudrate)</computeroutput></para><para>

<para>Configura los registros basicos para comunicacion y llama a <link linkend="__u_a_r_t_8h_1ae6fd997937744f54a3b2f5245e0ee6c5">UART_config_show()</link> </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>Baudrate</entry><entry>
<para>Llamando a <link linkend="__u_a_r_t_8h_1ae7956c92520def8e4cf6046a92310184">UART_select_baud()</link> </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="__u_a_r_t_8h_1a104e40e6d18cf161ca4ee7ebdc0e62b8"/><section>
    <title>UART_Rx()</title>
<indexterm><primary>UART_Rx</primary><secondary>UART.h</secondary></indexterm>
<indexterm><primary>UART.h</primary><secondary>UART_Rx</secondary></indexterm>
<para><computeroutput>uint8_t UART_Rx (void )</computeroutput></para><para>

<para>Lee el ultimo dato recibido. </para>
</para>

<para>Valida los errores Framming y Overflow <formalpara><title>Returns</title>

<para>RCREG1 </para>
</formalpara>
</para>
</section>
<anchor xml:id="__u_a_r_t_8h_1afc34c227cd3b9153f8a1dd4c7da43f79"/><section>
    <title>UART_Rx_FRAMING()</title>
<indexterm><primary>UART_Rx_FRAMING</primary><secondary>UART.h</secondary></indexterm>
<indexterm><primary>UART.h</primary><secondary>UART_Rx_FRAMING</secondary></indexterm>
<para><computeroutput><link linkend="__u_a_r_t__variables_8h_1aca500773c32b84185c333e06093935f9">UART_ERROR_CODE</link> UART_Rx_FRAMING ( )</computeroutput></para><para>

<para>Revisa el registro FERR y limpia el error. </para>
</para>

<para><formalpara><title>Returns</title>

<para>ERROR_CODE_UART_FRAMING </para>

<para>ERROR_CODE_UART_OK </para>
</formalpara>
</para>
</section>
<anchor xml:id="__u_a_r_t_8h_1ae9defbf2097bafc184289367f362245e"/><section>
    <title>UART_Rx_OVERFLOW()</title>
<indexterm><primary>UART_Rx_OVERFLOW</primary><secondary>UART.h</secondary></indexterm>
<indexterm><primary>UART.h</primary><secondary>UART_Rx_OVERFLOW</secondary></indexterm>
<para><computeroutput><link linkend="__u_a_r_t__variables_8h_1aca500773c32b84185c333e06093935f9">UART_ERROR_CODE</link> UART_Rx_OVERFLOW ( )</computeroutput></para><para>

<para>Revisa el registro OERR y limpia el error. </para>
</para>

<para><formalpara><title>Returns</title>

<para>ERROR_CODE_UART_OVERFLOW </para>

<para>ERROR_CODE_UART_OK </para>
</formalpara>
</para>
</section>
<anchor xml:id="__u_a_r_t_8h_1adfc83db24bb6c7d34f3a8b9160e14e87"/><section>
    <title>UART_RxAvailable()</title>
<indexterm><primary>UART_RxAvailable</primary><secondary>UART.h</secondary></indexterm>
<indexterm><primary>UART.h</primary><secondary>UART_RxAvailable</secondary></indexterm>
<para><computeroutput>bool UART_RxAvailable (void )</computeroutput></para><para>

<para>Valida si esta habilitada la recepcion y si el buffer esta lleno. </para>
</para>

<para><formalpara><title>Returns</title>

<para>0 No listo para leer </para>

<para>1 Listo para leer </para>
</formalpara>
</para>
</section>
<anchor xml:id="__u_a_r_t_8h_1ae7956c92520def8e4cf6046a92310184"/><section>
    <title>UART_select_baud()</title>
<indexterm><primary>UART_select_baud</primary><secondary>UART.h</secondary></indexterm>
<indexterm><primary>UART.h</primary><secondary>UART_select_baud</secondary></indexterm>
<para><computeroutput>void UART_select_baud (uint32_t baudrate)</computeroutput></para><para>

<para>Configura SPBRGH y SPBRG para el baudrate ingresado. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>Baudrate</entry><entry>
<para>Admite 300, 1200, 2400, 9600, 10417, 19200, 57600, 115200. En caso de ingresar otro valor, se configura por defecto a 9600. </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <note><title>Note</title>

<para>Se planea cambiar a una funcion que realice el calculo al momento </para>
</note>
</para>
</section>
<anchor xml:id="__u_a_r_t_8h_1a913b851613b566d8607917b201b96104"/><section>
    <title>UART_Tx()</title>
<indexterm><primary>UART_Tx</primary><secondary>UART.h</secondary></indexterm>
<indexterm><primary>UART.h</primary><secondary>UART_Tx</secondary></indexterm>
<para><computeroutput>void UART_Tx (uint8_t dato)</computeroutput></para><para>

<para>Envia el dato si ya esta vacio TSR. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>dato</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
</section>
</section>
