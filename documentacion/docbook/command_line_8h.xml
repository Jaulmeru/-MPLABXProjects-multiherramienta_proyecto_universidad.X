<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_command_line_8h" xml:lang="en-US">
<title>src/librerias/commandLine.h File Reference</title>
<indexterm><primary>src/librerias/commandLine.h</primary></indexterm>
<para>

<para>Linea de comandos lista para utilizar funciones de forma sencilla en tiempo de ejecucion. </para>
 
</para>
<programlisting linenumbering="unnumbered">#include &quot;UART.h&quot;<?linebreak?></programlisting><simplesect>
    <title>Macros    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_command_line_8h_1a65314ede9be8799048771161a9589f2b"/>#define <emphasis role="strong">BUFFLEN</emphasis>&#160;&#160;&#160;100</para>

<para>Longitud maxima del comando a recibir. </para>
</listitem>
            <listitem><para><anchor xml:id="_command_line_8h_1a23195218eef2cf21e2beae685a041783"/>#define <emphasis role="strong">DELIMITER</emphasis>&#160;&#160;&#160;0x20</para>

<para>Valor que se utilizara para separar comandos y parametros. </para>
</listitem>
            <listitem><para><anchor xml:id="_command_line_8h_1acfdf7bea7a8b97969917559576655291"/>#define <emphasis role="strong">NUMPARAMS</emphasis>&#160;&#160;&#160;5</para>

<para>Maximo de parametros que tendra un comando. </para>
</listitem>
            <listitem><para><anchor xml:id="_command_line_8h_1a901c276061eeee06a506a1a9df66b6c2"/>#define <emphasis role="strong">PARAMLEN</emphasis>&#160;&#160;&#160;16</para>

<para>Longitud maxima de los parametros. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Enumerations    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_command_line_8h_1a43c28ae9cd31d94917be577227f55ceb"/>enum <emphasis role="strong">CL_ERROR_CODE</emphasis> { <?linebreak?><emphasis role="strong">EC_CL_OK</emphasis>
, <emphasis role="strong">EC_CL_BUFFOVER</emphasis>
, <emphasis role="strong">EC_CL_NOWORDS</emphasis>
, <emphasis role="strong">EC_CL_WORDOVER</emphasis>
, <?linebreak?><emphasis role="strong">EC_CL_MAXNUMPARAMS</emphasis>
, <emphasis role="strong">EC_CL_WRONGNUMPARAMS</emphasis>
, <emphasis role="strong">EC_CL_WRONGCOMMAND</emphasis>
 }</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_command_line_8h_1a932feaebabe26a26a8f2924cbc1e5e48"/>void <emphasis role="strong">commandLineInit</emphasis> ()</para>

<para>Muestra las instrucciones y habilita la linea de comandos. </para>
</listitem>
            <listitem><para><anchor xml:id="_command_line_8h_1a609649d55b8396e5505f9a6ebb163d54"/>void <emphasis role="strong">commandLineDeinit</emphasis> ()</para>

<para>Deshabilita la linea de comandos. </para>
</listitem>
            <listitem><para><anchor xml:id="_command_line_8h_1ad90dbb9078381cd647817382b7b23741"/>void <emphasis role="strong">commandLineReset</emphasis> ()</para>

<para>Deja la linea de comando lista para volver a usarse de cero. </para>
</listitem>
            <listitem><para>void <link linkend="_command_line_8h_1a3ba8cde82d6778724d4e4ed17b637c35">addToBuffer</link> (char newchar)</para>

<para>Toma un caracter para integrarlo al buffer o arrancar una accion especial. </para>
</listitem>
            <listitem><para><anchor xml:id="_command_line_8h_1acf97ff06c423170a6e7e360528df9a94"/>void <emphasis role="strong">clearBuff</emphasis> ()</para>

<para>Deja en 0 el charBuff y el buffCount. </para>
</listitem>
            <listitem><para><anchor xml:id="_command_line_8h_1a5713e92e29fc7e6586e725b5c414480a"/>void <emphasis role="strong">clearCharInLine</emphasis> ()</para>

<para>Limpia el ultimo caracter en el buffer y en la linea de comando. </para>
</listitem>
            <listitem><para>void <link linkend="_command_line_8h_1ad46b683755e4d2790dae77c124678243">clearArray</link> (uint8_t *array, uint8_t len)</para>

<para>Deja en 0x00 len posiciones de array. </para>
</listitem>
            <listitem><para>CL_ERROR_CODE <link linkend="_command_line_8h_1a04dfd02542a769b653ddb50c49de0108">commandProcess</link> ()</para>

<para>Toma el buffer, separa el comando y los parametros y los ejecuta. </para>
</listitem>
            <listitem><para>uint8_t <link linkend="_command_line_8h_1afc5e796dbd318e73265dd65649f5df0e">countWords</link> (void)</para>

<para>Cantidad de palabras en el buffer. </para>
</listitem>
            <listitem><para>bool <link linkend="_command_line_8h_1aa4a8a2b8c0f63010d5561dfdc72be946">getWord</link> (uint8_t wordNum, uint8_t *pWord)</para>

<para>Guarda la palabra en la posicion wordNum del buffer en donde apunta pWord. </para>
</listitem>
            <listitem><para>void <link linkend="_command_line_8h_1ae0b7bcb3acc02e6a1df0f4e08e3ac3c3">CL_ErrorHandler</link> (CL_ERROR_CODE)</para>

<para>Manejador de errores de la linea de comandos. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Variables    </title>
        <itemizedlist>
            <listitem><para><anchor xml:id="_command_line_8h_1a2f072df6df9d0696acb935163cf1972b"/>const uint8_t <emphasis role="strong">charStop</emphasis> = 0x0A</para>

<para>Caracter que iniciara la ejecucion del comando 0x0D = [Enter]. </para>
</listitem>
            <listitem><para><anchor xml:id="_command_line_8h_1a584861e94011273bba5aa1dd60b18b62"/>uint8_t <emphasis role="strong">buffCount</emphasis> = 0</para>

<para>Contador de los caractares guardados en buffer. </para>
</listitem>
            <listitem><para><anchor xml:id="_command_line_8h_1abc696dcb12b7d2f85630e3bba6cbb713"/>uint8_t <emphasis role="strong">charBuff</emphasis> [<link linkend="_command_line_8h_1a65314ede9be8799048771161a9589f2b">BUFFLEN</link>]</para>

<para>Buffer de caracteres recibidos. </para>
</listitem>
            <listitem><para><anchor xml:id="_command_line_8h_1abb6917a36df399c7d9c9c8b77bcd8637"/>bool <emphasis role="strong">commandLineEnable</emphasis> = 0</para>

<para>Si no se activa este valor, los datos recibidos no se envian al buffer. </para>
</listitem>
            <listitem><para><anchor xml:id="_command_line_8h_1a4303802408628fd9e888379ee4045b4d"/>bool <emphasis role="strong">flagCommandReady</emphasis> = 0</para>

<para>Bandera que indica si el comando esta listo para ejecutarse. </para>
</listitem>
            <listitem><para><anchor xml:id="_command_line_8h_1a3c84e45b27f785327ff247b6d8fc0675"/>uint8_t <emphasis role="strong">command</emphasis> [<link linkend="_command_line_8h_1a901c276061eeee06a506a1a9df66b6c2">PARAMLEN</link>]</para>

<para>Comando extraido del buffer. </para>
</listitem>
            <listitem><para><anchor xml:id="_command_line_8h_1ad4747b84edfa58246387789f97c0f43b"/>uint8_t <emphasis role="strong">param</emphasis> [<link linkend="_command_line_8h_1acfdf7bea7a8b97969917559576655291">NUMPARAMS</link>][<link linkend="_command_line_8h_1a901c276061eeee06a506a1a9df66b6c2">PARAMLEN</link>]</para>

<para>Parametros extraidos del buffers. </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>

<para>Linea de comandos lista para utilizar funciones de forma sencilla en tiempo de ejecucion. </para>

<para><formalpara><title>Author</title>

<para>Javier Mendoza (<link xlink:href="mailto:javierulisesmruiz@gmail.com">javierulisesmruiz@gmail.com</link>) </para>
</formalpara>
<formalpara><title>Date</title>

<para>06/10/2024 </para>
</formalpara>
<formalpara><title>Version</title>

<para>1.0 </para>
</formalpara>
</para>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="_command_line_8h_1a3ba8cde82d6778724d4e4ed17b637c35"/><section>
    <title>addToBuffer()</title>
<indexterm><primary>addToBuffer</primary><secondary>commandLine.h</secondary></indexterm>
<indexterm><primary>commandLine.h</primary><secondary>addToBuffer</secondary></indexterm>
<para><computeroutput>void addToBuffer (char newchar)</computeroutput></para><para>

<para>Toma un caracter para integrarlo al buffer o arrancar una accion especial. </para>
</para>

<para>0x0D [Enter] =&gt; Termina el comando y se comienza a procesar</para>

<para>0x7F [BackSpace] =&gt; Borra el ultimo caracter</para>

<para>0x1B [Escape] =&gt; Borra todo lo escrito 
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>newchar</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_command_line_8h_1ae0b7bcb3acc02e6a1df0f4e08e3ac3c3"/><section>
    <title>CL_ErrorHandler()</title>
<indexterm><primary>CL_ErrorHandler</primary><secondary>commandLine.h</secondary></indexterm>
<indexterm><primary>commandLine.h</primary><secondary>CL_ErrorHandler</secondary></indexterm>
<para><computeroutput>void CL_ErrorHandler (CL_ERROR_CODE errorCode)</computeroutput></para><para>

<para>Manejador de errores de la linea de comandos. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>errorCode</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_command_line_8h_1ad46b683755e4d2790dae77c124678243"/><section>
    <title>clearArray()</title>
<indexterm><primary>clearArray</primary><secondary>commandLine.h</secondary></indexterm>
<indexterm><primary>commandLine.h</primary><secondary>clearArray</secondary></indexterm>
<para><computeroutput>void clearArray (uint8_t * array, uint8_t len)</computeroutput></para><para>

<para>Deja en 0x00 len posiciones de array. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>array</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>len</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
</section>
<anchor xml:id="_command_line_8h_1a04dfd02542a769b653ddb50c49de0108"/><section>
    <title>commandProcess()</title>
<indexterm><primary>commandProcess</primary><secondary>commandLine.h</secondary></indexterm>
<indexterm><primary>commandLine.h</primary><secondary>commandProcess</secondary></indexterm>
<para><computeroutput>CL_ERROR_CODE commandProcess ( )</computeroutput></para><para>

<para>Toma el buffer, separa el comando y los parametros y los ejecuta. </para>
</para>

<para><formalpara><title>Returns</title>

<para>Error </para>
</formalpara>
</para>
</section>
<anchor xml:id="_command_line_8h_1afc5e796dbd318e73265dd65649f5df0e"/><section>
    <title>countWords()</title>
<indexterm><primary>countWords</primary><secondary>commandLine.h</secondary></indexterm>
<indexterm><primary>commandLine.h</primary><secondary>countWords</secondary></indexterm>
<para><computeroutput>uint8_t countWords (void )</computeroutput></para><para>

<para>Cantidad de palabras en el buffer. </para>
</para>

<para><formalpara><title>Returns</title>

<para>palabras = comando + parametros </para>
</formalpara>
</para>
</section>
<anchor xml:id="_command_line_8h_1aa4a8a2b8c0f63010d5561dfdc72be946"/><section>
    <title>getWord()</title>
<indexterm><primary>getWord</primary><secondary>commandLine.h</secondary></indexterm>
<indexterm><primary>commandLine.h</primary><secondary>getWord</secondary></indexterm>
<para><computeroutput>bool getWord (uint8_t wordNum, uint8_t * pWord)</computeroutput></para><para>

<para>Guarda la palabra en la posicion wordNum del buffer en donde apunta pWord. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters</title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
<entry>wordNum</entry><entry>
<para></para>
</entry>
                            </row>
                            <row>
<entry>pWord</entry><entry>
<para></para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para></para>
</formalpara>
</para>
</section>
</section>
</section>
